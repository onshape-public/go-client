{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Onshape REST API",
    "description" : "## Welcome to the Onshape REST API Explorer\n\nTo use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).\n\nSee the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.\n\n**Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.\n\n## See Also\n\n* [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer.\n* [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries.\n* [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.",
    "termsOfService" : "https://www.onshape.com/legal/terms-of-use",
    "contact" : {
      "email" : "api-support@onshape.zendesk.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.194.51923-8c2ff2e03a86",
    "x-logo" : {
      "url" : "images/logo-onshape-gray-green.svg",
      "backgroundColor" : "#ffffff",
      "altText" : "Onshape",
      "href" : "images/logo-onshape-gray-green.svg"
    },
    "x-indeterministic-schemas" : [ "BTDiffInfo", "BTParameterSpecArray-2600", "BTSplineDescription-2118", "NodeModel", "BTPFunctionDeclaration-246", "BTPFunctionOrPredicateDeclaration-247", "BTPExpression-9", "SkinModel", "BTMAnnotation-4664" ],
    "x-filter-info" : "?restUserRole=PUBLIC"
  },
  "servers" : [ {
    "url" : "https://cad.onshape.com/api/v10",
    "description" : "Current"
  } ],
  "security" : [ {
    "BasicAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "APIApplication",
    "description" : "Manage application preferences."
  }, {
    "name" : "Account",
    "description" : "Manage user purchases, subscriptions, and consumables."
  }, {
    "name" : "Alias",
    "description" : "Create and manage enterprise aliases. (Enterprise admins only.)"
  }, {
    "name" : "AppAssociativeData",
    "description" : "Manage the application-specific metadata that associates application data with Onshape data."
  }, {
    "name" : "AppElement",
    "description" : "Access and modify application elements."
  }, {
    "name" : "Assembly",
    "description" : "Create and manage assemblies."
  }, {
    "name" : "Billing",
    "description" : "Get billing plan data for applications."
  }, {
    "name" : "BlobElement",
    "description" : "Create, modify, and translate blob elements."
  }, {
    "name" : "Comment",
    "description" : "Create, read, update, and delete comments."
  }, {
    "name" : "Company",
    "description" : "Access company information."
  }, {
    "name" : "Document",
    "description" : "Create and manage documents."
  }, {
    "name" : "Drawing",
    "description" : "Access, create, and translate drawings."
  }, {
    "name" : "Element",
    "description" : "Access and manage Elements. Every Element in an Onshape document is represented by a tab."
  }, {
    "name" : "ExportRule",
    "description" : "Access valid export rules."
  }, {
    "name" : "FeatureStudio",
    "description" : "Access and manage Feature Studio Elements."
  }, {
    "name" : "Folder",
    "description" : "Access and modify folder sharing permissions."
  }, {
    "name" : "Insertable",
    "description" : "Access the list of things that can be inserted into a document."
  }, {
    "name" : "Metadata",
    "description" : "Access and modify metadata."
  }, {
    "name" : "MetadataCategory",
    "description" : "Access properties associated with metadata categories."
  }, {
    "name" : "NumberingScheme",
    "description" : "Manage the set of valid Part numbers."
  }, {
    "name" : "OpenApi",
    "description" : "Get the OpenAPI specification for the Onshape API."
  }, {
    "name" : "Part",
    "description" : "Export Parts and access Part details."
  }, {
    "name" : "PartNumber",
    "description" : "Create valid part numbers."
  }, {
    "name" : "PartStudio",
    "description" : "Access and modify Part Studios."
  }, {
    "name" : "PropertiesTableTemplate",
    "description" : "Create, access, and delete templates for properties tables."
  }, {
    "name" : "Publication",
    "description" : "Access publication information."
  }, {
    "name" : "ReleasePackage",
    "description" : "Access and update Release Management workflows."
  }, {
    "name" : "Revision",
    "description" : "Access, delete, and enumerate revisions."
  }, {
    "name" : "Sketch",
    "description" : "Access sketch information."
  }, {
    "name" : "Task",
    "description" : "Create, access, and modify Tasks and Action Items."
  }, {
    "name" : "Team",
    "description" : "Access team information."
  }, {
    "name" : "Thumbnail",
    "description" : "Access, modify, and delete thumbnails."
  }, {
    "name" : "Translation",
    "description" : "Import and export Onshape surfaces, parts, Part Studios, Assemblies, and subassemblies to/from other file formats (STL, PARASOLID, SOLIDWORKS, etc)."
  }, {
    "name" : "User",
    "description" : "Access user information."
  }, {
    "name" : "Variables",
    "description" : "Create, modify, and access variables."
  }, {
    "name" : "Version",
    "description" : "Get all versions of the Onshape REST APIs."
  }, {
    "name" : "Webhook",
    "description" : "Create and manage [webhooks](https://onshape-public.github.io/docs/app-dev/webhook/)."
  }, {
    "name" : "Workflow",
    "description" : "Access and modify workflows."
  } ],
  "paths" : {
    "/accounts/plans/{planId}/purchases" : {
      "get" : {
        "tags" : [ "Account" ],
        "summary" : "Get a list of all app purchases made for the specified plan.",
        "operationId" : "getPlanPurchases",
        "parameters" : [ {
          "name" : "planId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTPurchaseInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/accounts/purchases" : {
      "get" : {
        "tags" : [ "Account" ],
        "summary" : "Get a list of all app purchases made by the current user.",
        "description" : "This API should be used within the context of an OAuth-enabled application.",
        "operationId" : "getPurchases",
        "parameters" : [ {
          "name" : "all",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "ownPurchaseOnly",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeGoDEnabledAppPurchases",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTPurchaseInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/accounts/purchases/{pid}/consume" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "Mark a purchase as consumed by the current user.",
        "operationId" : "consumePurchase",
        "parameters" : [ {
          "name" : "pid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTPurchaseIdentityParams"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTPurchaseInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Purchase" ],
          "BasicAuth" : [ "OAuth2Purchase" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/accounts/{aid}/purchases/{pid}" : {
      "delete" : {
        "tags" : [ "Account" ],
        "summary" : "Cancel a recurring subscription for the specified account ID and purchase ID.",
        "operationId" : "cancelPurchaseNew",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cancelImmediately",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Purchase" ],
          "BasicAuth" : [ "OAuth2Purchase" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/aliases" : {
      "get" : {
        "tags" : [ "Alias" ],
        "summary" : "Get a list of all aliases that exist for your enterprise.",
        "operationId" : "getAliasesInCompany",
        "parameters" : [ {
          "name" : "prefix",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "name"
          }
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "asc"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTAliasInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Alias" ],
        "summary" : "Create an alias in your enterprise.",
        "description" : "`Manage users and teams` global permission is required to call this API.",
        "operationId" : "createAlias",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAliasParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAliasInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/aliases/{aid}" : {
      "get" : {
        "tags" : [ "Alias" ],
        "summary" : "Get an alias by ID.",
        "description" : "Get the information for an alias ID.",
        "operationId" : "getAlias",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAliasInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Alias" ],
        "summary" : "Add, remove, replace, or rename entries in an alias list.",
        "description" : "`Manage users and teams` global permission is required to call this API. \n* Add new users in the `additions` array. \n* Remove existing users in the `removals` array. Attempts to remove a user that does not exist in the Alias list will have no effect.\n* Replace the entire Alias list with the `entries` array. \n* You can also update the alias' `name` and `description`. \nFor example, given an Alias with members userA and userB: \n* `additions: [userC]` results in [userA, userB, userC] \n* `removals: [userB]` results in [userA] \n* `entries: [userC, user D]` results in [userC, userD]",
        "operationId" : "updateAlias",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAliasParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAliasInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "Alias" ],
        "summary" : "Delete an alias from your enterprise.",
        "description" : "`Manage users and teams` global permission is required to call this API.",
        "operationId" : "deleteAlias",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/aliases/{aid}/members" : {
      "get" : {
        "tags" : [ "Alias" ],
        "summary" : "Get all users and teams assigned to an alias.",
        "description" : "This is a search-like endpoint that returns a subset of the member list. Use `getAlias` to return all members every time it's called.",
        "operationId" : "getAliasMembers",
        "parameters" : [ {
          "name" : "aid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "prefix",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "name"
          }
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "asc"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTAliasEntryInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/w/{wid}" : {
      "post" : {
        "tags" : [ "AppElement" ],
        "summary" : "Create a new application element.",
        "operationId" : "createElement",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAppElementParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementModifyInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/w/{wid}/bulkcreate" : {
      "post" : {
        "tags" : [ "AppElement" ],
        "summary" : "Create multiple empty application elements at once.",
        "description" : "Call this faster API instead of creating multiple app elements one at a time or in parallel.",
        "operationId" : "bulkCreateElement",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAppElementBulkCreateParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementBulkCreateInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/w/{wid}/e/{eid}/blob/{bid}" : {
      "get" : {
        "tags" : [ "AppElement" ],
        "summary" : "Download the blob element (i.e., a file) stored in an app element in a document's workspace.",
        "description" : "The downloaded file can be used to retrieve stored subelements.",
        "operationId" : "downloadBlobSubelementWorkspace",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contentDisposition",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "changeId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "File download.",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "AppElement" ],
        "summary" : "Create a new blob subelement from an uploaded file.",
        "description" : "Request body parameters are multipart fields, so you must use `\"Content-Type\":\"multipart/form-data\"` in the request header.",
        "operationId" : "uploadBlobSubelement",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "transactionId" : {
                    "type" : "string"
                  },
                  "parentChangeId" : {
                    "type" : "string"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "file" : {
                    "type" : "object",
                    "description" : "File to upload.",
                    "format" : "binary"
                  },
                  "fileContentLength" : {
                    "type" : "integer",
                    "format" : "int64",
                    "default" : -1
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementModifyInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "AppElement" ],
        "summary" : "Delete a blob subelement from an app element.",
        "operationId" : "deleteBlobSubelement",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "changeId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementModifyInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/w/{wid}/e/{eid}/copyassociativedata" : {
      "post" : {
        "tags" : [ "AppAssociativeData" ],
        "summary" : "Copy associative data from one view to another.",
        "description" : "Can only be copied between tabs in the same document. You can manage associativity with [translateIds](https://cad.onshape.com/glassworks/explorer/#/PartStudio/translateIds).",
        "operationId" : "copyAssociativeData",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAppElementParamsArrayBTCopyViewAssociativeDataParams"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppAssociativeDataArrayInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/w/{wid}/e/{eid}/transactions" : {
      "get" : {
        "tags" : [ "AppElement" ],
        "summary" : "Get a list of all transactions performed on an element.",
        "operationId" : "getElementTransactions",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementTransactionsInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "AppElement" ],
        "summary" : "Start a transaction",
        "description" : "Creates a microbranch (i.e., a branch for a new microversion).",
        "operationId" : "startTransaction",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAppElementStartTransactionParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementModifyInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/w/{wid}/e/{eid}/transactions/{tid}" : {
      "delete" : {
        "tags" : [ "AppElement" ],
        "summary" : "Abort a transaction.",
        "description" : "Deletes a microbranch (i.e., the branch with the microversion for the transaction).",
        "operationId" : "abortTransaction",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "returnError",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/w/{wid}/transactions" : {
      "post" : {
        "tags" : [ "AppElement" ],
        "summary" : "Merge multiple transactions into one microversion.",
        "description" : "If successful, all transactions will be committed to a single microversion. If the call raises an error, nothing will be committed.",
        "operationId" : "commitTransactions",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAppElementCommitTransactionParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementBulkModifyInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{vm}/{vmid}/e/{eid}/blob/{bid}" : {
      "get" : {
        "tags" : [ "AppElement" ],
        "summary" : "Download a blob subelement from the specified app element.",
        "description" : "Download a blob subelement as a file.",
        "operationId" : "downloadBlobSubelement",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contentDisposition",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "changeId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "File download.",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{wvm}/{wvmid}/e/{eid}/associativedata" : {
      "get" : {
        "tags" : [ "AppAssociativeData" ],
        "summary" : "Get the associative data for the specified app element.",
        "description" : "You can manage associativity with [translateIds](https://cad.onshape.com/glassworks/explorer/#/PartStudio/translateIds).",
        "operationId" : "getAssociativeData",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "changeId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "associativeDataId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "externalDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "elementId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "viewId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "microversionId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "documentMicroversion",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "deterministicId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "featureId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "entityId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "occurrenceId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "returnIdTags",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "referenceId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppAssociativeDataArrayInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "AppAssociativeData" ],
        "summary" : "Set the associative data for the specified app element.",
        "description" : "You can manage associativity with [translateIds](https://cad.onshape.com/glassworks/explorer/#/PartStudio/translateIds).",
        "operationId" : "postAssociativeData",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppAssociativeDataArrayInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read", "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Read", "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "AppAssociativeData" ],
        "summary" : "Delete the associative data from the specified app element.",
        "description" : "You can manage associativity with [translateIds](https://cad.onshape.com/glassworks/explorer/#/PartStudio/translateIds).",
        "operationId" : "deleteAssociativeData",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "parentChangeId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "associativeDataId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "externalDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "elementId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "viewId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "microversionId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "documentMicroversion",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "deterministicId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "featureId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "entityId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "occurrenceId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "referenceId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementBasicInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{wvm}/{wvmid}/e/{eid}/blob" : {
      "get" : {
        "tags" : [ "AppElement" ],
        "summary" : "Get a list of all blob subelement IDs for the specified workspace, version, or microversion.",
        "operationId" : "getBlobSubelementIds",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "changeId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementIdsInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{wvm}/{wvmid}/e/{eid}/compare" : {
      "get" : {
        "tags" : [ "AppElement" ],
        "summary" : "Compare app element JSON trees between workspaces/versions/microversions in a document.",
        "description" : "Specify the source workspace/version/microversion in the URL and specify the target workspace/version/microversion in the query parameters.",
        "operationId" : "compareAppElementJson",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workspaceId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "microversionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jsonDifferenceFormat",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDiffJsonResponse-2725"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{wvm}/{wvmid}/e/{eid}/content" : {
      "get" : {
        "tags" : [ "AppElement" ],
        "summary" : "Get a list of all subelement IDs in a specified workspace/version/microversion.",
        "operationId" : "getSubElementContent",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "changeId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "baseChangeId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subelementId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementContentInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "AppElement" ],
        "summary" : "Update the content for the specified app element.",
        "operationId" : "updateAppElement",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAppElementUpdateParams"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementModifyInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read", "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Read", "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{wvm}/{wvmid}/e/{eid}/content/history" : {
      "get" : {
        "tags" : [ "AppElement" ],
        "summary" : "Get the history of the specified all element.",
        "operationId" : "getAppElementHistory",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementHistoryInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{wvm}/{wvmid}/e/{eid}/content/ids" : {
      "get" : {
        "tags" : [ "AppElement" ],
        "summary" : "Get a list of all subelement IDs in a specified workspace/version/microversion.",
        "operationId" : "getSubelementIds",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "changeId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementIdsInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{wvm}/{wvmid}/e/{eid}/content/json" : {
      "get" : {
        "tags" : [ "AppElement" ],
        "summary" : "Get the full JSON tree for the specified workspace/version/microversion.",
        "operationId" : "getJson",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "description" : "The id of the transaction in which this operation should take place. Transaction ids can be generated through the AppElement startTransaction API.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "changeId",
          "in" : "query",
          "description" : "The id of the last change made to this application element. This can be retrieved from the response for any app element modification endpoint.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTGetJsonResponse-2137"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{wvm}/{wvmid}/e/{eid}/content/jsonpaths" : {
      "post" : {
        "tags" : [ "AppElement" ],
        "summary" : "Get the JSON at specified paths for an element.",
        "description" : "Use this endpoint to return the JSON at the specified path instead of returning the entire JSON for the element. This POST endpoint does not write any information.",
        "operationId" : "getJsonPaths",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "changeId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTGetJsonPaths-1697"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTGetJsonPathsResponse-1544"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{wvm}/{wvmid}/e/{eid}/content/subelements" : {
      "delete" : {
        "tags" : [ "AppElement" ],
        "summary" : "Delete multiple subelements array by document ID, workspace or version or microversion ID, tab ID, and subelement IDs.",
        "operationId" : "deleteAppElementContentBatch",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subelementIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentChangeId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementModifyInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{wvm}/{wvmid}/e/{eid}/content/subelements/{sid}" : {
      "delete" : {
        "tags" : [ "AppElement" ],
        "summary" : "Deletes the content from the specified app element.",
        "operationId" : "deleteAppElementContent",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentChangeId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementModifyInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{wvm}/{wvmid}/e/{eid}/references" : {
      "post" : {
        "tags" : [ "AppElement" ],
        "summary" : "Creates a reference to an app element.",
        "operationId" : "createReference",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAppElementReferenceParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementReferenceInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{wvm}/{wvmid}/e/{eid}/references/{rid}" : {
      "get" : {
        "tags" : [ "AppElement" ],
        "summary" : "Resolves a single reference to an app element.",
        "description" : "For single operations only. Use `resolveReferences` for bulk operations.",
        "operationId" : "resolveReference",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentChangeId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInternal",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementReferenceResolveInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "AppElement" ],
        "summary" : "Update an app element reference.",
        "operationId" : "updateReference",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAppElementReferenceParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementReferenceInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "AppElement" ],
        "summary" : "Delete an app element reference.",
        "operationId" : "deleteReference",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentChangeId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementReferenceInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{wvm}/{wvmid}/e/{eid}/resolvereferences" : {
      "get" : {
        "tags" : [ "AppElement" ],
        "summary" : "Resolves bulk app element references.",
        "description" : "For bulk operations only. Use `resolveReference` for a single operation.",
        "operationId" : "resolveReferences",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentChangeId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInternal",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "referenceIds",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppElementReferencesResolveInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/appelements/d/{did}/{wvm}/{wvmid}/resolvereferences" : {
      "get" : {
        "tags" : [ "AppElement" ],
        "summary" : "Resolves bulk app element references.",
        "description" : "Resolve all references for all workspace elements. For bulk operations  only. Use `resolveReferences` for a single element.",
        "operationId" : "resolveAllElementReferences",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "description" : "The id of the transaction in which this operation should take place. Transaction ids can be generated through the AppElement startTransaction API.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentChangeId",
          "in" : "query",
          "description" : "The id of the last change made to this application element. This can be retrieved from the response for any app element modification endpoint.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeInternal",
          "in" : "query",
          "description" : "Whether to include references that have been deleted or inactivated.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "referenceIds",
          "in" : "query",
          "description" : "Comma separated string of reference ids find.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "elementIds",
          "in" : "query",
          "description" : "Comma separated string of element ids to search for references in.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "drawingsOnly",
          "in" : "query",
          "description" : "Whether to find references for only Onshape drawing app elements.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "$ref" : "#/components/schemas/BTAppElementReferencesResolveInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/applications/clients/{cid}/settings/companies/{cpid}" : {
      "get" : {
        "tags" : [ "APIApplication" ],
        "summary" : "Get company-level preference settings for an application.",
        "description" : "This API is only usable with an OAuth token and only by the current user or admin.",
        "operationId" : "getCompanyAppSettings",
        "parameters" : [ {
          "name" : "cpid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentId",
          "in" : "query",
          "description" : "A document owned by the company. Read access to this document allows read access to its owning company's settings.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTUserAppSettingsInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "APIApplication" ],
        "summary" : "Update company preference settings for an application.",
        "description" : "This API is only usable with an OAuth token and only by the current user or admin. \n* Add or update a setting identified by key with value. \n* Operation and field may optionally be specified when updating Map type settings. \n* Field specifies the key of the setting Map to update. \n* Operation may be one of: \n    * `ADD`: Add or update an existing field of the settings Map. \n    * `UPDATE`: Update an existing field of the settings Map and return an error if the field does not exist. \n    * `REMOVE`: Remove the field from the settings Map. \n",
        "operationId" : "updateAppCompanySettings",
        "parameters" : [ {
          "name" : "cpid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTUserAppSettingsParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "APIApplication" ],
        "summary" : "Delete a company's application preference settings.",
        "description" : "This API is only usable with an OAuth token and only by the current user or admin.",
        "operationId" : "deleteCompanyAppSettings",
        "parameters" : [ {
          "name" : "cpid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/applications/clients/{cid}/settings/users/{uid}" : {
      "get" : {
        "tags" : [ "APIApplication" ],
        "summary" : "Get user-level preference settings for an application.",
        "description" : "This API is only usable with an OAuth token and only by the current user or admin.",
        "operationId" : "getUserAppSettings",
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTUserAppSettingsInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "APIApplication" ],
        "summary" : "Update a user's application preference settings.",
        "description" : "This API is only usable with an OAuth token and only by the current user or admin. \n* Add or update a setting identified by key with value. \n* Operation and field may optionally be specified when updating Map type settings. \n* Field specifies the key of the setting Map to update. \n* Operation may be one of: \n    * `ADD`: Add or update an existing field of the settings Map. \n    * `UPDATE`: Update an existing field of the settings Map and return an error if the field does not exist. \n    * `REMOVE`: Remove the field from the settings Map. \n",
        "operationId" : "updateAppSettings",
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTUserAppSettingsParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "APIApplication" ],
        "summary" : "Delete a user's application preference settings.",
        "description" : "This API is only usable with an OAuth token and only by the current user or admin.",
        "operationId" : "deleteAppSettings",
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success!"
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/applications/extensions/user/{uid}/client/{cid}" : {
      "get" : {
        "tags" : [ "APIApplication" ],
        "summary" : "Get a list of the client extensions the specified user has granted/accepted terms for.",
        "operationId" : "getApplicableExtensionsForClient",
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validPurchases",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTAPIApplicationExtensionInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2ReadPII" ],
          "BasicAuth" : [ "OAuth2ReadPII" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/e/{eid}/namedViews" : {
      "get" : {
        "tags" : [ "Assembly" ],
        "summary" : "Get the view data for all named views for the specified element.",
        "operationId" : "getNamedViews",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipPerspective",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeSectionCutViews",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTNamedViewsInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/w/{wid}" : {
      "post" : {
        "tags" : [ "Assembly" ],
        "summary" : "Create a new assembly tab in the document.",
        "operationId" : "createAssembly",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTModelElementParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDocumentElementInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/w/{wid}/e/{eid}/bomelement" : {
      "post" : {
        "tags" : [ "Assembly" ],
        "summary" : "Gets the Bill Of Materials (BOM) for the specified assembly, or creates a BOM if none exist.",
        "operationId" : "getOrCreateBillOfMaterialsElement",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDocumentElementInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/w/{wid}/e/{eid}/features/featureid/{fid}" : {
      "post" : {
        "tags" : [ "Assembly" ],
        "summary" : "Update an existing feature for an Assembly.",
        "operationId" : "updateFeature",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTFeatureDefinitionCall-1406"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTFeatureDefinitionResponse-1617"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "Assembly" ],
        "summary" : "Delete a feature from an assembly.",
        "operationId" : "deleteFeature",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success!",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTFeatureApiBase-1430"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/w/{wid}/e/{eid}/instance/nodeid/{nid}" : {
      "delete" : {
        "tags" : [ "Assembly" ],
        "summary" : "Delete an instance of an assembly.",
        "operationId" : "deleteInstance",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/w/{wid}/e/{eid}/instances" : {
      "post" : {
        "tags" : [ "Assembly" ],
        "summary" : "Insert an instance of a part, sketch, assembly, or Part Studio into an assembly.",
        "description" : "Part Studio instances may include multiple parts.",
        "operationId" : "createInstance",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAssemblyInstanceDefinitionParams"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read", "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Read", "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/w/{wid}/e/{eid}/matevalues" : {
      "get" : {
        "tags" : [ "Assembly" ],
        "summary" : "Get a list of mate values in the specified assembly.",
        "description" : "Describes the relative position of the first mate connector with respect to the second along the designated degrees of freedom (DOF) for mates in the specified assembly.",
        "operationId" : "getMateValues",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAssemblyMateValuesInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Assembly" ],
        "summary" : "Update mate values for the given mates in the specified assembly.",
        "description" : "* The input mates must support motion along the provided input degrees of freedom; otherwise, the input mate value will be ignored. \n* Values associated with multiple allowed degrees of freedom for a mate can be updated simultaneously. \n* Values associated with multiple mate features can be updated simultaneously.",
        "operationId" : "updateMateValues",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAssemblyMateValuesInfo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAssemblyMateValuesInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/w/{wid}/e/{eid}/modify" : {
      "post" : {
        "tags" : [ "Assembly" ],
        "summary" : "Modify an assembly.",
        "description" : "This endpoint can include multiple modifications to an assembly with one change. For example, it can delete/suppress/unsuppress/transform multiple instances. It creates one history entry in the document history list.",
        "operationId" : "modify",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAssemblyModificationParams"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/w/{wid}/e/{eid}/occurrencetransforms" : {
      "post" : {
        "tags" : [ "Assembly" ],
        "summary" : "Transform a list of assembly occurrences.",
        "operationId" : "transformOccurrences",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAssemblyTransformDefinitionParams"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read", "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Read", "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/w/{wid}/e/{eid}/transformedinstances" : {
      "post" : {
        "tags" : [ "Assembly" ],
        "summary" : "Create new instances with transformation.",
        "operationId" : "insertTransformedInstances",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAssemblyTransformedInstancesDefinitionParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAssemblyInsertTransformedInstancesResponse"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read", "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Read", "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/{wvm}/{wvmid}/e/{eid}" : {
      "get" : {
        "tags" : [ "Assembly" ],
        "summary" : "Get definition information for the specified assembly.",
        "description" : "All coordinates and translation matrix components are in meters (m).",
        "operationId" : "getAssemblyDefinition",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "explodedViewId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeMateFeatures",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeNonSolids",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeMateConnectors",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "excludeSuppressed",
          "in" : "query",
          "description" : "Whether or not to exclude suppressed instances/mate features in response",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAssemblyDefinitionInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/{wvm}/{wvmid}/e/{eid}/bom" : {
      "get" : {
        "tags" : [ "Assembly" ],
        "summary" : "Get the Bill Of Materials (BOM) content for the specified assembly.",
        "description" : "Returns the BOM in JSON in the Onshape BOM Standard format.",
        "operationId" : "getBillOfMaterials",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "bomColumnIds",
          "in" : "query",
          "description" : "Ids of the columns to include, or all columns if empty. BOM column ids correspond to metadata property ids.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "indented",
          "in" : "query",
          "description" : "Return the Structured BOM table with all rows collapsed, otherwise returns the Flattened BOM.",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "multiLevel",
          "in" : "query",
          "description" : "Return the Structured BOM table with all rows expanded. Ignored if indented is false.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "generateIfAbsent",
          "in" : "query",
          "description" : "Return the BOM table data even if the BOM does not exist. If this is false and the BOM does not exist, a 404 status code will be returned. This option is highly recommended.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "templateId",
          "in" : "query",
          "description" : "The id of the BOM table template to use when generating the table.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeExcluded",
          "in" : "query",
          "description" : "Include items that have been excluded from the BOM table.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "onlyVisibleColumns",
          "in" : "query",
          "description" : "Only return data for visible columns, instead of all possible columns.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "ignoreSubassemblyBomBehavior",
          "in" : "query",
          "description" : "Ignore the 'Subassembly BOM behavior' property when constructing the BOM table.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "includeItemMicroversions",
          "in" : "query",
          "description" : "Include element microversions and version metadata microversions in the JSON.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeTopLevelAssemblyRow",
          "in" : "query",
          "description" : "Include top-level assembly row when constructing the BOM table.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "thumbnail",
          "in" : "query",
          "description" : "Return thumbnail info",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTBillOfMaterialsInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/{wvm}/{wvmid}/e/{eid}/boundingboxes" : {
      "get" : {
        "tags" : [ "Assembly" ],
        "summary" : "Get bounding box information for the specified assembly.",
        "operationId" : "getAssemblyBoundingBoxes",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "explodedViewId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeHidden",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "displayStateId",
          "in" : "query",
          "description" : "Call the [getDisplayStates](https://cad.onshape.com/glassworks/explorer/#/Assembly/getDisplayStates) endpoint to get display state ID(s).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namedPositionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeSketches",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTBoundingBoxInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/{wvm}/{wvmid}/e/{eid}/displaystates" : {
      "get" : {
        "tags" : [ "Assembly" ],
        "summary" : "Get a list of display states for the specified assembly.",
        "operationId" : "getDisplayStates",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success!",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTDisplayStateInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/{wvm}/{wvmid}/e/{eid}/explodedviews" : {
      "get" : {
        "tags" : [ "Assembly" ],
        "summary" : "Get a list of exploded views for the specified assembly.",
        "operationId" : "getExplodedViews",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "explodedViewId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTViewFeatureBaseInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/{wvm}/{wvmid}/e/{eid}/features" : {
      "get" : {
        "tags" : [ "Assembly" ],
        "summary" : "Get the definitions of the specified features in an assembly.",
        "operationId" : "getFeatures",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "explodedViewId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "featureId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success!",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAssemblyFeatureListResponse-1174"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Assembly" ],
        "summary" : "Add a feature to the assembly feature list.",
        "operationId" : "addFeature",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTFeatureDefinitionCall-1406"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTFeatureDefinitionResponse-1617"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/{wvm}/{wvmid}/e/{eid}/featurespecs" : {
      "get" : {
        "tags" : [ "Assembly" ],
        "summary" : "Get the feature spec definitions for an assembly.",
        "operationId" : "getFeatureSpecs",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTFeatureSpecsResponse-664"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/{wvm}/{wvmid}/e/{eid}/massproperties" : {
      "get" : {
        "tags" : [ "Assembly" ],
        "summary" : "Get the mass properties for the assembly.",
        "description" : "The assembly must contain parts that have density. The returned schema includes the same information as in the Onshape [Mass Properties Tool](https://cad.onshape.com/help/Content/massprops-asmb.htm). \nWhen three values are returned: \n * The first is the calculated value. \n * The second is the minimum possible value, considering tolerance. \n * The third is the maximum possible value, considering tolerance.",
        "operationId" : "getAssemblyMassProperties",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTMassPropertiesInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/{wvm}/{wvmid}/e/{eid}/namedpositions" : {
      "get" : {
        "tags" : [ "Assembly" ],
        "summary" : "Get a list of all named positions for the assembly.",
        "operationId" : "getNamedPositions",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "explodedViewId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTViewFeatureBaseInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/{wvm}/{wvmid}/e/{eid}/shadedviews" : {
      "get" : {
        "tags" : [ "Assembly" ],
        "summary" : "Get an array of shaded view images for the document.",
        "operationId" : "getAssemblyShadedViews",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "explodedViewId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "viewMatrix",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "front"
          }
        }, {
          "name" : "outputHeight",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 500
          }
        }, {
          "name" : "outputWidth",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 500
          }
        }, {
          "name" : "pixelSize",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0.003
          }
        }, {
          "name" : "edges",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "show"
          }
        }, {
          "name" : "showAllParts",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeSurfaces",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "useAntiAliasing",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeWires",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "displayStateId",
          "in" : "query",
          "description" : "Call the [getDisplayStates](https://cad.onshape.com/glassworks/explorer/#/Assembly/getDisplayStates) endpoint to get display state ID(s).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namedPositionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTShadedViewsInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/assemblies/d/{did}/{wv}/{wvid}/e/{eid}/translations" : {
      "post" : {
        "tags" : [ "Assembly" ],
        "summary" : "Export the assembly to another format.",
        "description" : "* Use `formatName` in the JSON request body to specify the export file type. Use [Translations/getAllTranslatorFormats](https://cad.onshape.com/glassworks/explorer/#/Translation/getAllTranslatorFormats) to get a list of valid export file formats. Confirm that `couldBeAssembly=true.`\n* Set `storeInDocument` to `true` to export to a data file. Set to `false` to export to a blob element in the same document. \n* See [API Guide: Model Translation](https://onshape-public.github.io/docs/api-adv/translation/) for more details.",
        "operationId" : "translateFormat",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTTranslateFormatParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTTranslationRequestInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/billing/plans/client/{cid}" : {
      "get" : {
        "tags" : [ "Billing" ],
        "summary" : "Get all billing plans and their information for an application by client ID.",
        "description" : "This API should be used within the context of an OAuth-enabled application.",
        "operationId" : "getClientPlans",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success!"
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/blobelements/d/{did}/w/{wid}" : {
      "post" : {
        "tags" : [ "BlobElement" ],
        "summary" : "Upload a file and create a blob element from it.",
        "description" : "Request body parameters are multipart fields, so you must use `\"Content-Type\":\"multipart/form-data\"` in the request header.",
        "operationId" : "uploadFileCreateElement",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "object",
                    "description" : "The file to upload."
                  },
                  "allowFaultyParts" : {
                    "type" : "boolean",
                    "description" : "If true, and a part doesn't pass Onshape validation, it will be imported with faults."
                  },
                  "createComposite" : {
                    "type" : "boolean",
                    "description" : "Not supported for importing into a single part studio."
                  },
                  "createDrawingIfPossible" : {
                    "type" : "boolean"
                  },
                  "encodedFilename" : {
                    "type" : "string",
                    "description" : "If the filename contains non-ASCII characters. Use this field to store the filename."
                  },
                  "extractAssemblyHierarchy" : {
                    "type" : "boolean"
                  },
                  "flattenAssemblies" : {
                    "type" : "boolean",
                    "description" : "If the file is an assembly, or contains an assembly, setting this to True will import it as a Part Studio. In this case the assembly will be flattened to a set of parts in a Part Studio. There will be duplicate parts created whenever a part is instanced more than once. If False, it will be imported as an Assembly."
                  },
                  "formatName" : {
                    "type" : "string"
                  },
                  "joinAdjacentSurfaces" : {
                    "type" : "boolean"
                  },
                  "locationElementId" : {
                    "type" : "string"
                  },
                  "locationGroupId" : {
                    "type" : "string"
                  },
                  "locationPosition" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : -1
                  },
                  "notifyUser" : {
                    "type" : "boolean",
                    "default" : true
                  },
                  "ownerId" : {
                    "type" : "string"
                  },
                  "parentId" : {
                    "type" : "string"
                  },
                  "projectId" : {
                    "type" : "string"
                  },
                  "public" : {
                    "type" : "boolean"
                  },
                  "onePartPerDoc" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "splitAssembliesIntoMultipleDocuments" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "storeInDocument" : {
                    "type" : "boolean",
                    "default" : true
                  },
                  "translate" : {
                    "type" : "boolean",
                    "default" : true
                  },
                  "unit" : {
                    "type" : "string",
                    "default" : ""
                  },
                  "uploadId" : {
                    "type" : "string"
                  },
                  "versionString" : {
                    "type" : "string"
                  },
                  "importAppearances" : {
                    "type" : "boolean",
                    "description" : "Face appearances defined on models will be imported.",
                    "default" : true
                  },
                  "importMaterialDensity" : {
                    "type" : "boolean",
                    "description" : "Material density defined on models will be imported.",
                    "default" : false
                  },
                  "yAxisIsUp" : {
                    "type" : "boolean",
                    "description" : "If the file was created in a system that orients with Y Axis Up, the models would by default be brought into Onshape (a Z Axis Up system) with a flipped coordinate system. Toggle this value to reorient the axis system to match Onshape and display the model with the coordinates you expect."
                  },
                  "importWithinDocument" : {
                    "type" : "boolean"
                  },
                  "useIGESImportPostProcessing" : {
                    "type" : "boolean",
                    "description" : "Try getting optimized topology from IGES model.",
                    "default" : false
                  },
                  "upgradeFeatureScriptVersion" : {
                    "type" : "boolean",
                    "default" : false
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDocumentElementProcessingInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/blobelements/d/{did}/w/{wid}/e/{eid}" : {
      "get" : {
        "tags" : [ "BlobElement" ],
        "summary" : "Download a file from a blob element for the specified workspace/version/microversion.",
        "description" : "See [API Guide: Model Translation](https://onshape-public.github.io/docs/api-adv/translation/) for more details.",
        "operationId" : "downloadFileWorkspace",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contentDisposition",
          "in" : "query",
          "description" : "If \"attachment\", includes a Content-Disposition return header with the filename.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "Entity tag; an md5 checksum of the data in double quotes. If the data to download has the same checksum as this entity tag, a 304 'Not Modified' status will be returned. The entity tag is returned in the response headers as ETag.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "File download.",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "BlobElement" ],
        "summary" : "Update a blob element by uploading a file.",
        "description" : "Request body parameters are multipart fields, so you must use `\"Content-Type\":\"multipart/form-data\"` in the request header.",
        "operationId" : "uploadFileUpdateElement",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentChangeId",
          "in" : "query",
          "description" : "The id of the last change made to this application element. This can be retrieved from the response for any app element modification endpoint.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "object",
                    "description" : "The file to upload."
                  },
                  "allowFaultyParts" : {
                    "type" : "boolean",
                    "description" : "If true, and a part doesn't pass Onshape validation, it will be imported with faults."
                  },
                  "createComposite" : {
                    "type" : "boolean",
                    "description" : "Not supported for importing into a single part studio."
                  },
                  "createDrawingIfPossible" : {
                    "type" : "boolean"
                  },
                  "encodedFilename" : {
                    "type" : "string",
                    "description" : "If the filename contains non-ASCII characters. Use this field to store the filename."
                  },
                  "extractAssemblyHierarchy" : {
                    "type" : "boolean"
                  },
                  "flattenAssemblies" : {
                    "type" : "boolean",
                    "description" : "If the file is an assembly, or contains an assembly, setting this to True will import it as a Part Studio. In this case the assembly will be flattened to a set of parts in a Part Studio. There will be duplicate parts created whenever a part is instanced more than once. If False, it will be imported as an Assembly."
                  },
                  "formatName" : {
                    "type" : "string"
                  },
                  "joinAdjacentSurfaces" : {
                    "type" : "boolean"
                  },
                  "locationElementId" : {
                    "type" : "string"
                  },
                  "locationGroupId" : {
                    "type" : "string"
                  },
                  "locationPosition" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : -1
                  },
                  "notifyUser" : {
                    "type" : "boolean",
                    "default" : true
                  },
                  "ownerId" : {
                    "type" : "string"
                  },
                  "parentId" : {
                    "type" : "string"
                  },
                  "projectId" : {
                    "type" : "string"
                  },
                  "public" : {
                    "type" : "boolean"
                  },
                  "onePartPerDoc" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "splitAssembliesIntoMultipleDocuments" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "storeInDocument" : {
                    "type" : "boolean",
                    "default" : true
                  },
                  "translate" : {
                    "type" : "boolean",
                    "default" : true
                  },
                  "unit" : {
                    "type" : "string",
                    "default" : ""
                  },
                  "uploadId" : {
                    "type" : "string"
                  },
                  "versionString" : {
                    "type" : "string"
                  },
                  "importAppearances" : {
                    "type" : "boolean",
                    "description" : "Face appearances defined on models will be imported.",
                    "default" : true
                  },
                  "importMaterialDensity" : {
                    "type" : "boolean",
                    "description" : "Material density defined on models will be imported.",
                    "default" : false
                  },
                  "yAxisIsUp" : {
                    "type" : "boolean",
                    "description" : "If the file was created in a system that orients with Y Axis Up, the models would by default be brought into Onshape (a Z Axis Up system) with a flipped coordinate system. Toggle this value to reorient the axis system to match Onshape and display the model with the coordinates you expect."
                  },
                  "importWithinDocument" : {
                    "type" : "boolean"
                  },
                  "useIGESImportPostProcessing" : {
                    "type" : "boolean",
                    "description" : "Try getting optimized topology from IGES model.",
                    "default" : false
                  },
                  "upgradeFeatureScriptVersion" : {
                    "type" : "boolean",
                    "default" : false
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDocumentElementProcessingInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/blobelements/d/{did}/w/{wid}/e/{eid}/units" : {
      "post" : {
        "tags" : [ "BlobElement" ],
        "summary" : "Change the measurement units for the blob element.",
        "operationId" : "updateUnits",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTUpdateMeshUnitsParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDocumentElementProcessingInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/blobelements/d/{did}/{wv}/{wvid}/e/{eid}/translations" : {
      "post" : {
        "tags" : [ "BlobElement" ],
        "summary" : "Export a blob element to another format.",
        "description" : "* Use `formatName` in the JSON request body to specify the export file type. Use [Translations/getAllTranslatorFormats](https://cad.onshape.com/glassworks/explorer/#/Translation/getAllTranslatorFormats) to get a list of valid export file formats. \n* Set `storeInDocument` to `true` to export to a data file. Set to `false` to export to a blob element in the same document. \n* See [API Guide: Model Translation](https://onshape-public.github.io/docs/api-adv/translation/) for more details.",
        "operationId" : "createBlobTranslation",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "description" : "Indicates which of workspace (w) or version (v) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v" ]
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "description" : "The id of the workspace, version in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTTranslateFormatParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTTranslationRequestInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/comments" : {
      "get" : {
        "tags" : [ "Comment" ],
        "summary" : "Get a list of comments in a document.",
        "operationId" : "getComments",
        "parameters" : [ {
          "name" : "did",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "objectType",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 6
          }
        }, {
          "name" : "pid",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "eid",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "resolved",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "createdAt"
          }
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "asc"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "maximum" : 200,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTCommentInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Comment" ],
        "summary" : "Update a document with a new comment.",
        "operationId" : "createComment",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTCommentParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTCommentInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/comments/{cid}" : {
      "get" : {
        "tags" : [ "Comment" ],
        "summary" : "Get details for a comment.",
        "operationId" : "getComment",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTCommentInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Comment" ],
        "summary" : "Update the content of an existing comment.",
        "operationId" : "updateComment",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTCommentParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTCommentInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "Comment" ],
        "summary" : "Delete a comment from a document.",
        "operationId" : "deleteComment",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Delete" ],
          "BasicAuth" : [ "OAuth2Delete" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/comments/{cid}/attachment" : {
      "post" : {
        "tags" : [ "Comment" ],
        "summary" : "Add an attachment to a comment.",
        "operationId" : "addAttachment",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "file" ],
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "object",
                    "description" : "The file to upload."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTCommentInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "Comment" ],
        "summary" : "Delete all attachments from a comment.",
        "operationId" : "deleteAttachments",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Delete" ],
          "BasicAuth" : [ "OAuth2Delete" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/comments/{cid}/attachment/{fdid}.{ext}" : {
      "get" : {
        "tags" : [ "Comment" ],
        "summary" : "Get the attachment with the specified file extension that is associated with the specified comment.",
        "description" : "Returns only a single attachment.",
        "operationId" : "getAttachment",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fdid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ext",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "image/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/comments/{cid}/reopen" : {
      "post" : {
        "tags" : [ "Comment" ],
        "summary" : "Reopen a resolved comment.",
        "operationId" : "reopen",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTCommentInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/comments/{cid}/resolve" : {
      "post" : {
        "tags" : [ "Comment" ],
        "summary" : "Resolve a comment.",
        "operationId" : "resolve",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTCommentInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/companies" : {
      "get" : {
        "tags" : [ "Company" ],
        "summary" : "Get all companies to which the specified user belongs.",
        "description" : "If no user is specified, will return all companies associated with the current user.",
        "operationId" : "findCompany",
        "parameters" : [ {
          "name" : "uid",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activeOnly",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeAll",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTCompanyInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/companies/{cid}" : {
      "get" : {
        "tags" : [ "Company" ],
        "summary" : "Get company information by company ID.",
        "operationId" : "getCompany",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTCompanyInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/companies/{cid}/documentsbyname" : {
      "get" : {
        "tags" : [ "Company" ],
        "summary" : "Get document by exact document name.",
        "description" : "This API can only be called by company admins. Use the `name` field for the exact document name string.",
        "operationId" : "getDocumentsByName",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTDocumentSummaryInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/companies/{cid}/users" : {
      "post" : {
        "tags" : [ "Company" ],
        "summary" : "Add a user to a company.",
        "description" : "Returns the company user info.",
        "operationId" : "addUserToCompany",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTCompanyUserParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTCompanyUserInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/companies/{cid}/users/{uid}" : {
      "post" : {
        "tags" : [ "Company" ],
        "summary" : "Update the company's information for a user.",
        "description" : "Returns updated company user info. Global permissions can only be updated by the company admin.",
        "operationId" : "updateCompanyUser",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTCompanyUserParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTCompanyUserInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "Company" ],
        "summary" : "Remove a user from a company, company teams, and all the direct shares.",
        "operationId" : "removeUserFromCompany",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "removeFromTeams",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "removeDirectShares",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Delete" ],
          "BasicAuth" : [ "OAuth2Delete" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Get a list of documents that meet the criteria you specify.",
        "operationId" : "getDocuments",
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "description" : "Search for documents that contain the given string in the name. Search is not case-sensitive.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter ID. Options are 0 (my documents), 1 (created), 2 (shared), 3 (trash), 4 (public), 5 (recent), 6 (by owner), 7 (by company), or 9 (by team).",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "owner",
          "in" : "query",
          "description" : "Document owner's ID (if the filter is 6 or 7), or Team Id (if the filter is 9) ",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "ownerType",
          "in" : "query",
          "description" : "Type of owner. Options are 0 (user), 1 (company), 2 (onshape). If the owner is a teamId, leave this unspecified.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "Column by which to sort search results. Options are name, modifiedAt, createdAt (Default), email, modifiedBy, and promotedAt.",
          "schema" : {
            "type" : "string",
            "default" : "createdAt"
          }
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "description" : "Sort order. Options are desc (descending, the default), or asc (ascending).",
          "schema" : {
            "type" : "string",
            "default" : "desc"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset. Determines where search results begin. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of results to return per page. Default value is 20 (also the maximum). Number of results returned can be less than this value. Use the `next` URL in the response to fetch the next page.",
          "schema" : {
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        }, {
          "name" : "label",
          "in" : "query",
          "description" : "Label",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "query",
          "description" : "Project",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentId",
          "in" : "query",
          "description" : "Parent Id",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success!",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTGlobalTreeNodeListResponse"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Create and upload a document.",
        "description" : "The `name` field is required in the `BTDocumentParams` schema when creating a new document.",
        "operationId" : "createDocument",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTDocumentParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDocumentInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/externaldata/{fid}" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Download external data file(s) associated with the document.",
        "description" : "* See [API Guide: Model Translation](https://onshape-public.github.io/docs/api-adv/translation/) for more details.\n* If downloading an exported file, poll the `requestState` in the translation response and wait for a result of `DONE` before attempting to download the file. \n* Use the `resultExternalDataIds` from the translation response as the foreign id (`{fid}`) in this API.",
        "operationId" : "downloadExternalData",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success!",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/versions" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Retrieve versions by document ID.",
        "operationId" : "getDocumentVersions",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "maximum" : 20,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTVersionInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Create version by document ID.",
        "operationId" : "createVersion",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTVersionOrWorkspaceParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTVersionInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/versions/{vid}" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Retrieve version by document ID and version ID.",
        "operationId" : "getVersion",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parents",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success!",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTVersionInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/w/{wid}/e/{eid}/latestdocumentreferences" : {
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Update external references to latest by document ID, workspace ID, and tab ID.",
        "operationId" : "updateExternalReferencesToLatestDocuments",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTLinkToLatestDocumentParams"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success!",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTLinkToLatestDocumentInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/w/{wid}/moveelement" : {
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Move tab by document ID and workspace ID.",
        "operationId" : "moveElementsToDocument",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTMoveElementParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTMoveElementInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/w/{wid}/revertunchangedtorevisions" : {
      "post" : {
        "tags" : [ "Document" ],
        "operationId" : "revertUnchangedToRevisions",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTRevertUnchangedParams"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTUnchangedElementInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/w/{wid}/syncAppElements" : {
      "post" : {
        "tags" : [ "Document" ],
        "operationId" : "syncAppElements",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTSyncAppElementParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/workspaces" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Retrieve workspaces by document ID.",
        "operationId" : "getDocumentWorkspaces",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTWorkspaceInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Create workspace by document ID.",
        "operationId" : "createWorkspace",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTVersionOrWorkspaceParams"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTWorkspaceInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/workspaces/{wid}" : {
      "delete" : {
        "tags" : [ "Document" ],
        "summary" : "Delete workspace by document ID and workspace ID.",
        "operationId" : "deleteWorkspace",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Delete" ],
          "BasicAuth" : [ "OAuth2Delete" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/{wm}/{wmid}/documenthistory" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Retrieve document history by document ID and workspace or microversion ID.",
        "operationId" : "getDocumentHistory",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTDocumentHistoryInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/{wvm}/{wvmid}/elements" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Retrieve tabs by document ID and workspace or version or microversion ID.",
        "operationId" : "getElementsInDocument",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "elementType",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "elementId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "withThumbnails",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success!",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTDocumentElementInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/{wvm}/{wvmid}/unitinfo" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Get the selected units and precision by document ID and workspace or version or microversion ID.",
        "operationId" : "getUnitInfo",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTUnitInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/{wv}/{wvid}/currentmicroversion" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Retrieve current microversion by document ID and workspace or version ID.",
        "operationId" : "getCurrentMicroversion",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTMicroversionInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/{wv}/{wvid}/e/{eid}/export" : {
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Export document by document ID, workspace or version ID, and tab ID.",
        "operationId" : "export2Json",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "description" : "Indicates which of workspace (w) or version (v) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v" ]
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "description" : "The id of the workspace, version in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTBExportModelParams"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/d/{did}/{wv}/{wvid}/insertables" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Retrieve insertables by document ID and workspace or version ID.",
        "operationId" : "getInsertables",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "elementId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "Id of document that links to the document being accessed. This may provide additional access rights to the document. Allowed only with version (v) path parameter.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeParts",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeSurfaces",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeSketches",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeReferenceFeatures",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeAssemblies",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeFeatureStudios",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeBlobs",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "allowedBlobMimeTypes",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "excludeNewerFSVersions",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "maxFeatureScriptVersion",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includePartStudios",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeFeatures",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeMeshes",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeWires",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeFlattenedBodies",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeApplications",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "allowedApplicationMimeTypes",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "includeCompositeParts",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeFSTables",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeFSComputedPartPropertyFunctions",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeVariables",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeVariableStudios",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "allowedBlobExtensions",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTInsertablesListResponse"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/search" : {
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Search document.",
        "description" : "This returns list of documents based on search parameters.",
        "operationId" : "search",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTDocumentSearchParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/{did}" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Retrieve document by document ID.",
        "operationId" : "getDocument",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success!",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDocumentInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Update document attributes by document ID.",
        "operationId" : "updateDocumentAttributes",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTDocumentParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDocumentSummaryInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "Document" ],
        "summary" : "Delete document by document ID.",
        "operationId" : "deleteDocument",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "forever",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Delete" ],
          "BasicAuth" : [ "OAuth2Delete" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/{did}/acl" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Retrieve access control list by document ID.",
        "operationId" : "getDocumentAcl",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAclInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/{did}/acl/anonymousAccess" : {
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Allow or deny anonymous access to a document or publication.",
        "description" : "If anonymous access is allowed, you can allow or deny anonymous users the ability to export the document or publication. If `anonymousAccessAllowed=false` and `anonymousAllowsExport=true`, the call will throw an error.",
        "operationId" : "updateAnonymousAccess",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAclParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read", "OAuth2Share" ],
          "BasicAuth" : [ "OAuth2Read", "OAuth2Share" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/{did}/acl/public" : {
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Make a document public or private.",
        "description" : " * Set `public=true` in the request body to make the document public. Set to `false` to make it private. Free users cannot make documents private. \n * The `documentId` provided in the URL must match the one provided in the request body exactly. ",
        "operationId" : "updatePublicAccess",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTAclParams"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read", "OAuth2Share" ],
          "BasicAuth" : [ "OAuth2Read", "OAuth2Share" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/{did}/permissionset" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Retrieve Document permissions by document ID.",
        "operationId" : "getDocumentPermissionSet",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success!",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/{did}/share" : {
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Share document by document ID.",
        "operationId" : "shareDocument",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTShareParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAclInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read", "OAuth2Share" ],
          "BasicAuth" : [ "OAuth2Read", "OAuth2Share" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/{did}/share/{eid}" : {
      "delete" : {
        "tags" : [ "Document" ],
        "summary" : "Remove document View permissions from a user or other entity.",
        "description" : "Specify the ID of the entity to unshare with in the `eid` field, and specify the type of entity being identified in the `entryType` field. For example, to unshare a document with a company, you would use `1` as the `entryType` value and the `companyId` as the `entityId`.",
        "operationId" : "unShareDocument",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "ID of the document to unshare.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "ID of the entity to remove permissions for. Uses `userId`, `companyId`, `teamId`, `documentId`, or `applicationId`, depending on the `entryType` value.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entryType",
          "in" : "query",
          "description" : "`0` (user) | `1` (company) | `2` (team) | `3` (document) | `4` (application)",
          "schema" : {
            "maximum" : 4,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read", "OAuth2Share" ],
          "BasicAuth" : [ "OAuth2Read", "OAuth2Share" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/{did}/shareWithSupport" : {
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Share document by document ID with Onshape support.",
        "operationId" : "shareWithSupport",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "Document" ],
        "summary" : "Unshare document with support.",
        "operationId" : "unshareFromSupport",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/{did}/w/{wid}/mergePreview" : {
      "get" : {
        "tags" : [ "Document" ],
        "summary" : "Merge preview of changes that will occur based on document ID, workspace ID and source workspace/version ID",
        "operationId" : "mergePreview",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceType",
          "in" : "query",
          "required" : true,
          "schema" : {
            "pattern" : "w|v",
            "type" : "string"
          }
        }, {
          "name" : "sourceId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "pattern" : "[a-zA-Z0-9]{24}",
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTMergePreviewInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/{did}/w/{wid}/restore/{vm}/{vmid}" : {
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Restore version or microversion to workspace by document ID, workspace ID, and version or microversion ID.",
        "operationId" : "restoreFromHistory",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTRestoreInfo"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTRestoreFromHistoryInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/{did}/workspaces/{wid}/copy" : {
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Copy workspace by document ID and workspace ID.",
        "operationId" : "copyWorkspace",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTCopyDocumentParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success!",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTCopyDocumentInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/documents/{did}/workspaces/{wid}/merge" : {
      "post" : {
        "tags" : [ "Document" ],
        "summary" : "Merge into workspace by document ID and workspace ID.",
        "operationId" : "mergeIntoWorkspace",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTVersionOrWorkspaceMergeInfo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDocumentMergeInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/drawings/d/{did}/w/{wid}/create" : {
      "post" : {
        "tags" : [ "Drawing" ],
        "summary" : "Create a new drawing in a document.",
        "description" : "This endpoint takes a JSON Schema as input. See the schema docs below for details, and see [API Guide: Drawings](https://onshape-public.github.io/docs/api-adv/drawings/) for more information.",
        "operationId" : "createDrawingAppElement",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "ID of the document in which to create the drawing.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "ID of the workspace in which to create the drawing.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTDrawingParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDocumentElementInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/drawings/d/{did}/w/{wid}/e/{eid}/modify" : {
      "post" : {
        "tags" : [ "Drawing" ],
        "summary" : "Modify a drawing via JSON payload.",
        "description" : "See [API Guide: Drawings](https://onshape-public.github.io/docs/api-adv/drawings/) for more information.",
        "operationId" : "modifyDrawing",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTDrawingModificationParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppModificationRequestInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/drawings/d/{did}/w/{wid}/e/{eid}/translationformats" : {
      "get" : {
        "tags" : [ "Drawing" ],
        "summary" : "Get a list of all valid formats the drawing can be translated (exported) to.",
        "description" : "See [API Guide: Translations](https://onshape-public.github.io/docs/api-adv/translation/#export-a-drawing-as-a-json) for more information.",
        "operationId" : "getDrawingTranslatorFormats",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTModelFormatInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/drawings/d/{did}/{wvm}/{wvmid}/e/{eid}/views" : {
      "get" : {
        "tags" : [ "Drawing" ],
        "summary" : "Get details of all drawing views.",
        "operationId" : "getDrawingViews_1",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "description" : "The id of the transaction in which this operation should take place. Transaction ids can be generated through the AppElement startTransaction API.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "changeId",
          "in" : "query",
          "description" : "The id of the last change made to this application element. This can be retrieved from the response for any app element modification endpoint.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppArrayInfoBTAppDrawingViewInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/drawings/d/{did}/{wvm}/{wvmid}/e/{eid}/views/{viewid}/jsongeometry" : {
      "get" : {
        "tags" : [ "Drawing" ],
        "summary" : "Get view geometry of a drawing view in JSON format.",
        "operationId" : "getDrawingViewJsonGeometry_1",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "viewid",
          "in" : "path",
          "description" : "The id of the view in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionId",
          "in" : "query",
          "description" : "The id of the transaction in which this operation should take place. Transaction ids can be generated through the AppElement startTransaction API.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "changeId",
          "in" : "query",
          "description" : "The id of the last change made to this application element. This can be retrieved from the response for any app element modification endpoint.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "scale",
          "in" : "query",
          "description" : "Scale for measurements.",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/drawings/d/{did}/{wv}/{wvid}/e/{eid}/translations" : {
      "post" : {
        "tags" : [ "Drawing" ],
        "summary" : "Translate (export) a drawing to a different format.",
        "description" : "Export a drawing to a different format within a document. Use `getDrawingTranslatorFormats` for a list of supported translation (i.e., import/export) formats. See [API Guide: Translations](https://onshape-public.github.io/docs/api-adv/translation/#export-a-drawing-as-a-json) for more information.",
        "operationId" : "createDrawingTranslation",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTTranslateFormatParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTTranslationRequestInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/drawings/modify/status/{mrid}" : {
      "get" : {
        "tags" : [ "Drawing" ],
        "summary" : "Get the status of a drawing modification operation.",
        "operationId" : "getModificationStatus",
        "parameters" : [ {
          "name" : "mrid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAppModificationRequestInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/elements/copyelement/{did}/workspace/{wid}" : {
      "post" : {
        "tags" : [ "Element" ],
        "summary" : "Copy an element from a source document.",
        "description" : "Specify the target document and workspace in the URL. Specify the source document, workspace, and element in the request body. \nIf `anchorElementId` is specified, the copied element will be inserted after the anchor element. If not specified, the copied element will be inserted at the end of the tab list. \n",
        "operationId" : "copyElementFromSourceDocument",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTCopyElementParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDocumentElementInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/elements/d/{did}/e/{eid}/configurationencodings" : {
      "post" : {
        "tags" : [ "Element" ],
        "summary" : "Encode a configuration option for use in other API calls.",
        "description" : "Returns a configuration string in the following form: \n`configuration=parameterId%3DparameterValue` \nThe configuration string can be used in other Onshape API calls to specify which configuration option to use. See the [Configuration API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for additional details. \n",
        "operationId" : "encodeConfigurationMap",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTConfigurationParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTEncodedConfigurationInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/elements/d/{did}/w/{wid}/e/{eid}" : {
      "delete" : {
        "tags" : [ "Element" ],
        "summary" : "Delete an element from a document.",
        "description" : "Attempting to delete the last element in a document will result in an error.",
        "operationId" : "deleteElement",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Delete" ],
          "BasicAuth" : [ "OAuth2Delete" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/elements/d/{did}/w/{wid}/e/{eid}/updatereferences" : {
      "post" : {
        "tags" : [ "Element" ],
        "summary" : "Update or replace references in an element.",
        "operationId" : "updateReferences",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTUpdateReferenceParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read", "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Read", "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/elements/d/{did}/{wvm}/{wvmid}/e/{eid}/configuration" : {
      "get" : {
        "tags" : [ "Element" ],
        "summary" : "Get the configuration definition for a Part Studio or Assembly.",
        "description" : "Use Configurations to create variations of elements. You can configure feature and parameter values, part properties, custom part properties, face and part appearances, and sketch text. Each Part Studio can have only one Configuration, but it can contain multiple Configuration inputs. \nSee the [Configuration API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for additional details. ",
        "operationId" : "getConfiguration",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTConfigurationResponse-2019"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Element" ],
        "summary" : "Update the configuration definition for a Part Studio or Assembly.",
        "description" : "See the [Configuration API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for additional details",
        "operationId" : "updateConfiguration",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTConfigurationUpdateCall-2933"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTConfigurationResponse-2019"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/elements/d/{did}/{wvm}/{wvmid}/e/{eid}/configurationencodings/{cid}" : {
      "get" : {
        "tags" : [ "Element" ],
        "summary" : "Decode a configuration string.",
        "description" : "Decode a configuration string into its original JSON form to obtain configuration parameter ID and value. See the [Configuration API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for additional details.  ",
        "operationId" : "decodeConfiguration",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeDisplay",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "configurationIsId",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTConfigurationInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/elements/translatorFormats/{did}/{wv}/{wvid}/{eid}" : {
      "get" : {
        "tags" : [ "Element" ],
        "summary" : "Gets the list of formats an element can be translated to or from.",
        "description" : "See the [Translation API Guide](https://onshape-public.github.io/docs/api-adv/translation/) for additional details. ",
        "operationId" : "getElementTranslatorFormatsByVersionOrWorkspace",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "description" : "Indicates which of workspace (w) or version (v) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v" ]
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "description" : "The id of the workspace, version in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "checkContent",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTModelFormatInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/exportrules/options/{cu}/{cuid}" : {
      "get" : {
        "tags" : [ "ExportRule" ],
        "summary" : " Get a list of valid export rule options for the user or company.",
        "description" : "Does NOT get the rules themselves; it gets the information used to create them.",
        "operationId" : "getValidRuleOptions",
        "parameters" : [ {
          "name" : "cu",
          "in" : "path",
          "description" : "Indicates which of company (c) or user (u) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "c", "u" ]
          }
        }, {
          "name" : "cuid",
          "in" : "path",
          "description" : "The id of the company or user in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTExportRuleValidOptionsInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/featurestudios/d/{did}/w/{wid}" : {
      "post" : {
        "tags" : [ "FeatureStudio" ],
        "summary" : "Create a new Feature Studio tab in a document.",
        "description" : "Specify the name for the new tab in the request body.",
        "operationId" : "createFeatureStudio",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTModelElementParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDocumentElementInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/featurestudios/d/{did}/{wvm}/{wvmid}/e/{eid}" : {
      "get" : {
        "tags" : [ "FeatureStudio" ],
        "summary" : "Get the text for a Feature Studio element.",
        "operationId" : "getFeatureStudioContents",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTFeatureStudioContents-2239"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "FeatureStudio" ],
        "summary" : "Update the text for a Feature Studio element.",
        "operationId" : "updateFeatureStudioContents",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTFeatureStudioContents-2239"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTFeatureStudioContents-2239"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/featurestudios/d/{did}/{wvm}/{wvmid}/e/{eid}/featurespecs" : {
      "get" : {
        "tags" : [ "FeatureStudio" ],
        "summary" : "Get the feature specs for a Feature Studio element.",
        "operationId" : "getFeatureStudioSpecs",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTFeatureSpecsResponse-664"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/folders/{fid}/acl" : {
      "get" : {
        "tags" : [ "Folder" ],
        "summary" : "Get the Access Control List (ACL) for a folder to view permissions.",
        "description" : "Returns the ACL of permission objects. Each object contains: \n* The type of entity  \n    * 0 (User)  \n    * 1 (Company) \n    * 2 (Team) \n    * 3 (Document) \n    * 4 (Application) \n * The ID of the entity for the specified type. \n* The permissions for that entity. \n    *  OWNER (100): All permissions, including those not listed, such as permission to transfer ownership. \n    * DELETE (90) \n    * RESHARE (80) \n    * WRITE (70) \n    * READ (60) \n    * LINK (50) \n    * COPY (30): Can copy workspace \n    * EXPORT (20): Can export geometry \n    * COMMENT (10) \n    * ANONYMOUS_ACCESS (5): Special, restricted read access",
        "operationId" : "getFolderAcl",
        "parameters" : [ {
          "name" : "fid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAclInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/folders/{fid}/share" : {
      "post" : {
        "tags" : [ "Folder" ],
        "summary" : "Share folder with an entity.",
        "description" : "* Specify the type of entity to share with using `entries.entryType`: \n    * 0 (User)  \n    * 1 (Company) \n    * 2 (Team) \n    * 3 (Document) \n    * 4 (Application) \n* Provide one of the identifiers in the `entries` object in the request body.  \n    * You can share with non-Onshape users with the `email` field when `entryType=0`.  \n * Provide the string for the permission set. Do not include the integer in parentheses: \n    * OWNER (100): Object owner. Implies all permissions including those not listed such as permission to transfer ownership. \n    * DELETE (90) \n    * RESHARE (80) \n    * WRITE (70) \n    * READ (60) \n    * LINK (50) \n    * COPY (30): Can copy workspace \n    * EXPORT (20): Can export geometry \n    * COMMENT (10) \n    * ANONYMOUS_ACCESS (5): Special, restricted read access",
        "operationId" : "share",
        "parameters" : [ {
          "name" : "fid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTShareParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAclInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read", "OAuth2Share" ],
          "BasicAuth" : [ "OAuth2Read", "OAuth2Share" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/folders/{fid}/share/{eid}" : {
      "delete" : {
        "tags" : [ "Folder" ],
        "summary" : "Remove permissions from the folder for the specified Access Control List (ACL) entry.",
        "description" : "* Provide the folder ID for the folder to unshare.  \n * Provide the `entityType` for the type of entity to remove. \n    * 0 (User)  \n    * 1 (Company) \n    * 2 (Team) \n    * 3 (Document) \n    * 4 (Application) \n* Provide the entity ID in the `eid` param.",
        "operationId" : "unShare",
        "parameters" : [ {
          "name" : "fid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entryType",
          "in" : "query",
          "schema" : {
            "maximum" : 4,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read", "OAuth2Share" ],
          "BasicAuth" : [ "OAuth2Read", "OAuth2Share" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/insertables/d/{did}/latest" : {
      "get" : {
        "tags" : [ "Insertable" ],
        "summary" : "Get a list of things in this document that can be inserted elsewhere.",
        "description" : "* Returns only the latest revision of released insertables. \n* Use the document ID (`did`) parameter to specify the source document, not the insertion target. \n* For example, you can insert a custom Feature library into another custom Feature library, insert Parts into an Assembly or a Drawing, etc.",
        "operationId" : "getLatestInDocument",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeParts",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeSurfaces",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeSketches",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeReferenceFeatures",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeAssemblies",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeFeatureStudios",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeBlobs",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "allowedBlobMimeTypes",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "excludeNewerFSVersions",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "maxFeatureScriptVersion",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includePartStudios",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeFeatures",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeMeshes",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeWires",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeFlattenedBodies",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeApplications",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "allowedApplicationMimeTypes",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "includeCompositeParts",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeFSTables",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeFSComputedPartPropertyFunctions",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeVariables",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeVariableStudios",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "allowedBlobExtensions",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTInsertableInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/metadata/d/{did}/{wvm}/{wvmid}/e" : {
      "get" : {
        "tags" : [ "Metadata" ],
        "summary" : "Get the metadata for all elements in a document.",
        "description" : "See [API Guide: Metadata](https://onshape-public.github.io/docs/api-adv/metadata/) for details. \n* You can specify the optional `depth` query parameter to get multiple levels in an assembly. Default `depth` is `1`. \n* `linkDocumentId` can be specified where applicable. Combined with `inferMetadataOwner` (default value is `false`), this is used to infer metadata owner. \n* `includeComputedProperties` can be used to include or omit computed properties. Default value is `true`. \n* `includeComputedAssemblyProperties` can be used to query computed assembly properties which are generally expensive. Default value is `false`. \n* You can also choose to include a `thumbnail`. Default value is `false`.",
        "operationId" : "getWMVEsMetadata",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inferMetadataOwner",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "depth",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "1"
          }
        }, {
          "name" : "includeComputedProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeComputedAssemblyProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "thumbnail",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTMetadataObjectListInfoBTMetadataElementInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/metadata/d/{did}/{wvm}/{wvmid}/e/{eid}" : {
      "get" : {
        "tags" : [ "Metadata" ],
        "summary" : "Get the metadata for an element.",
        "description" : "See [API Guide: Metadata](https://onshape-public.github.io/docs/api-adv/metadata/) for details. \n* `linkDocumentId` can be specified where applicable and this combined with the query param `inferMetadataOwner` (default value is `false`) will be used to infer metadata owner. \n* `configuration` optional query parameter defaults to default configuration. \n* You can specify an optional `depth` query parameter to get multiple levels in an assembly. Default `depth` is `1`. \n* `includeComputedProperties` can be used to include or omit computed properties. Default value is `true`. \n* `includeComputedAssemblyProperties` can be used to query computed assembly properties which are generally expensive. Default value is `false`. \n* You can also choose to include a `thumbnail`. Default value is `false`.",
        "operationId" : "getWMVEMetadata",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inferMetadataOwner",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "depth",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "1"
          }
        }, {
          "name" : "includeComputedProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeComputedAssemblyProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "thumbnail",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTMetadataObjectInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Metadata" ],
        "summary" : "Update the metadata for an element.",
        "description" : "See [API Guide: Metadata](https://onshape-public.github.io/docs/api-adv/metadata/) for details. \n* Microversion (`m`) in `wvm` path parameter option is not supported. \n* Specify the property metadata to update in the Request body.",
        "operationId" : "updateWVEMetadata",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/metadata/d/{did}/{wvm}/{wvmid}/e/{eid}/assembly-debug" : {
      "get" : {
        "tags" : [ "Metadata" ],
        "summary" : "Get the metadata for an assembly, including supporting metadata.",
        "description" : "See [API Guide: Metadata](https://onshape-public.github.io/docs/api-adv/metadata/) for details. \n* `linkDocumentId` can be specified where applicable and this combined with the query param `inferMetadataOwner` (default value is `false`) will be used to infer metadata owner. \n* `configuration` optional query parameter defaults to default configuration. \n* `includeComputedProperties` can be used to include or omit computed properties. Default value is `true`. \n* `includeComputedAssemblyProperties` can be used to query computed assembly properties which are generally expensive. Default value is `false`. \n* You can also choose to include a `thumbnail`. Default value is `false`.",
        "operationId" : "getFullAssemblyMetadata",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTAssemblyItemMetadataInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/metadata/d/{did}/{wvm}/{wvmid}/e/{eid}/p" : {
      "get" : {
        "tags" : [ "Metadata" ],
        "summary" : "Get the metadata for all parts in a document.",
        "description" : "See [API Guide: Metadata](https://onshape-public.github.io/docs/api-adv/metadata/) for details. \n* The `configuration` optional query parameter uses the default configuration unless otherwise specified. \n* You can specify an optional `depth` query parameter to get multiple levels in an assembly. Default `depth` is `1`. \n* `linkDocumentId` can be specified where applicable. Combined with `inferMetadataOwner` (default value is `false`), this is used to infer metadata owner. \n* `includeComputedProperties` can be used to include or omit computed properties. Default value is `true`. \n* `includeComputedAssemblyProperties` can be used to query computed assembly properties which are generally expensive. Default value is `false`. \n* You can also choose to include a `thumbnail`. Default value is `false`.",
        "operationId" : "getWMVEPsMetadata",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "inferMetadataOwner",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeComputedProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeComputedAssemblyProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "thumbnail",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTMetadataObjectListInfoBTMetadataPartInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/metadata/d/{did}/{wvm}/{wvmid}/e/{eid}/{iden}/{pid}" : {
      "get" : {
        "tags" : [ "Metadata" ],
        "summary" : "Get the metadata for a part.",
        "description" : "See [API Guide: Metadata](https://onshape-public.github.io/docs/api-adv/metadata/) for details. \n* Specify the part in the `iden` or `pid` path parameter. \n* The `configuration` optional query parameter uses the default configuration unless otherwise specified. \n* `linkDocumentId` can be specified where applicable. Combined with `inferMetadataOwner` (default value is `false`), this is used to infer metadata owner. \n* `includeComputedProperties` can be used to include or omit computed properties. Default value is `true`. \n* `includeComputedAssemblyProperties` can be used to query computed assembly properties which are generally expensive. Default value is `false`. \n* You can also choose to include a `thumbnail`. Default value is `false`.",
        "operationId" : "getWMVEPMetadata",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iden",
          "in" : "path",
          "description" : "Denotes whether the pid specified is a part id (p) or a part identity (pi).",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "p", "pi" ]
          }
        }, {
          "name" : "pid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inferMetadataOwner",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeComputedProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeComputedAssemblyProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "thumbnail",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTMetadataObjectInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Metadata" ],
        "summary" : "Update the metadata for a part.",
        "description" : "See [API Guide: Metadata](https://onshape-public.github.io/docs/api-adv/metadata/) for details. \n* Specify the part in the `iden` or `pid` path parameter. \n* The `configuration` optional query parameter uses the default configuration unless otherwise specified. \n* `linkDocumentId` can be specified where applicable. Combined with `inferMetadataOwner` (default value is `false`), this is used to infer metadata owner. \n* Specify the property metadata to update in the Request body.",
        "operationId" : "updateWVEPMetadata",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iden",
          "in" : "path",
          "description" : "Denotes whether the pid specified is a part id (p) or a part identity (pi).",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "p", "pi" ]
          }
        }, {
          "name" : "pid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/metadata/d/{did}/{wv}/{wvid}" : {
      "get" : {
        "tags" : [ "Metadata" ],
        "summary" : "Get the metadata for a workspace or version.",
        "description" : "See [API Guide: Metadata](https://onshape-public.github.io/docs/api-adv/metadata/) for details. \n* `linkDocumentId` can be specified where applicable. Combined with `inferMetadataOwner` (default value is `false`), this is used to infer metadata owner. \n* You can specify an optional `depth` query parameter to get multiple levels in an assembly. Default `depth` is `1`. \n* `includeComputedProperties` can be used to include or omit computed properties. Default value is `true`. \n* `includeComputedAssemblyProperties` can be used to query computed assembly properties which are generally expensive. Default value is `false`. \n* You can also choose to include a `thumbnail`. Default value is `false`.",
        "operationId" : "getWVMetadata",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inferMetadataOwner",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "depth",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "1"
          }
        }, {
          "name" : "includeComputedProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeComputedAssemblyProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "thumbnail",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTMetadataObjectInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Metadata" ],
        "summary" : "Update the metadata for a workspace or version.",
        "description" : "See [API Guide: Metadata](https://onshape-public.github.io/docs/api-adv/metadata/) for details.",
        "operationId" : "updateWVMetadata",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/metadata/standardcontent/d/{did}" : {
      "post" : {
        "tags" : [ "Metadata" ],
        "summary" : "Update the metadata for a standard content part.",
        "description" : "See [API Guide: Metadata](https://onshape-public.github.io/docs/api-adv/metadata/) for details. \n* Specify the document ID to update in the `did` path param. \n* Specify the document in which you have inserted the standard content part in the `linkDocumentId` query param. \n* Specify the property metadata to update in the Request body.",
        "operationId" : "updateVEOPStandardContentPartMetadata",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/metadata/standardcontent/d/{did}/v/{vid}/e/{eid}/p/{pid}" : {
      "get" : {
        "tags" : [ "Metadata" ],
        "summary" : "Get the metadata for a standard content part.",
        "description" : "See [API Guide: Metadata](https://onshape-public.github.io/docs/api-adv/metadata/) for details. \n* Specify the part in the `pid` path parameter. \n* The `configuration` and `linkDocumentId` query parameters are required. \n* `includeComputedProperties` can be used to include or omit computed properties. Default value is `true`. \n* `includeComputedAssemblyProperties` can be used to query computed assembly properties which are generally expensive. Default value is `false`. \n* You can also choose to include a `thumbnail`. Default value is `false`.",
        "operationId" : "getVEOPStandardContentMetadata",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeComputedProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeComputedAssemblyProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "thumbnail",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTMetadataObjectInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/metadatacategory/categoryproperties" : {
      "get" : {
        "tags" : [ "MetadataCategory" ],
        "summary" : "Get properties associated with the specified metadata categories.",
        "description" : "An object's category specifies its type: Part, Assembly, Drawing, etc. Available properties depend on the object's category.",
        "operationId" : "getCategoryProperties",
        "parameters" : [ {
          "name" : "ownerId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ownerType",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "documentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "categoryIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "objectType",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "strict",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeObjectTypeDefaults",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeComputedProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includePartPropertiesTableOnlyProperties",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "onlyActive",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "onlyObjectTypeDefaults",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTCategoryPropertyInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/numberingscheme/nextnumbers" : {
      "post" : {
        "tags" : [ "NumberingScheme" ],
        "summary" : "Send the items to generate numbers for, and return the next valid available part numbers.",
        "operationId" : "nextNumbers",
        "parameters" : [ {
          "name" : "cid",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "did",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTNextPartNumbersParam"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/BTNextPartNumber"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/openapi" : {
      "get" : {
        "tags" : [ "OpenApi" ],
        "summary" : "Get the OpenAPI specification for the Onshape REST API.",
        "description" : "The Onshape API OpenAPI specification is returned in the JSON format.",
        "operationId" : "getOpenApi",
        "parameters" : [ {
          "name" : "forceReload",
          "in" : "query",
          "description" : "Force reload the OpenApi definition. Only works when asking for the latest version.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "Specify a version of Onshape from which the OpenAPI is generated. If '*' is specified in any of the version fields, that indicates any version if acceptable.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionAlias",
          "in" : "query",
          "description" : "Version aliases based on the currently released version.",
          "schema" : {
            "$ref" : "#/components/schemas/VersionAlias"
          }
        }, {
          "name" : "noFilter",
          "in" : "query",
          "description" : "Do not filter the specification at all.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includedTags",
          "in" : "query",
          "description" : "Return only operations with tags included in includedTags.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "excludedTags",
          "in" : "query",
          "description" : "If an operation contains an excluded tag, it is not returned from this endpoint.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "includeDeprecated",
          "in" : "query",
          "description" : "Include deprecated endpoints.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "onlyDeprecated",
          "in" : "query",
          "description" : "Only include deprecated endpoints.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "documentationStatuses",
          "in" : "query",
          "description" : "Only return endpoints that have the specified documentation status. Default is to return all the endpoints the user should have access to.",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Status"
            }
          }
        }, {
          "name" : "restUserRole",
          "in" : "query",
          "description" : "The REST user role for which this spec is requested.",
          "schema" : {
            "$ref" : "#/components/schemas/BTRestUserRole"
          }
        }, {
          "name" : "operationIds",
          "in" : "query",
          "description" : "Only return operations with specified ids.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "excludedOperationIds",
          "in" : "query",
          "description" : "Do not return operations with specified ids.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OpenAPI"
                }
              },
              "application/yaml;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OpenAPI"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/openapi/tags" : {
      "get" : {
        "tags" : [ "OpenApi" ],
        "summary" : "Get the list of tags in the Onshape OpenAPI specification.",
        "description" : "Tags are used to group operations. For example, `Document` groups operations on documents.",
        "operationId" : "getTags",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Tag"
                  }
                }
              },
              "application/yaml;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Tag"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partnumber/nextnumbers" : {
      "post" : {
        "tags" : [ "PartNumber" ],
        "summary" : "Send the items to generate numbers for, and return the next valid available part numbers.",
        "operationId" : "updateNextNumbers",
        "parameters" : [ {
          "name" : "cid",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "did",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTNextPartNumbersParam"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/BTNextPartNumber"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/parts/d/{did}/{wvm}/{wvmid}" : {
      "get" : {
        "tags" : [ "Part" ],
        "summary" : "Get all parts in a workspace, version, or microversion.",
        "operationId" : "getPartsWMV",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "elementId",
          "in" : "query",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "withThumbnails",
          "in" : "query",
          "description" : "Whether or not to include thumbnails (not supported for microversion)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includePropertyDefaults",
          "in" : "query",
          "description" : "If true, include metadata schema property defaults in response",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeFlatParts",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTPartMetadataInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/parts/d/{did}/{wvm}/{wvmid}/e/{eid}" : {
      "get" : {
        "tags" : [ "Part" ],
        "summary" : "Get all parts in an element.",
        "operationId" : "getPartsWMVE",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "One of w or v or m corresponding to whether a workspace or version or microversion was entered.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "Workspace (w), Version (v) or Microversion (m) ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "Element ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "withThumbnails",
          "in" : "query",
          "description" : "Whether or not to include thumbnails (not supported for microversion)",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includePropertyDefaults",
          "in" : "query",
          "description" : "If true, include metadata schema property defaults in response",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeFlatParts",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "Id of document that links to the document being accessed. This may provide additional access rights to the document. Allowed only with version (v) path parameter.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTPartMetadataInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/parts/d/{did}/{wvm}/{wvmid}/e/{eid}/partid/{partid}/bodydetails" : {
      "get" : {
        "tags" : [ "Part" ],
        "summary" : "Get a part's body details.",
        "description" : "All coordinates are in meters (m).",
        "operationId" : "getBodyDetails",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeGeometricData",
          "in" : "query",
          "description" : "Whether or not geometric data should be included in the response.",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTExportModelBodiesResponse-734"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/parts/d/{did}/{wvm}/{wvmid}/e/{eid}/partid/{partid}/boundingboxes" : {
      "get" : {
        "tags" : [ "Part" ],
        "summary" : "Get a part's bounding box details.",
        "operationId" : "getBoundingBoxes",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeHidden",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTBoundingBoxInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/parts/d/{did}/{wvm}/{wvmid}/e/{eid}/partid/{partid}/gltf" : {
      "get" : {
        "tags" : [ "Part" ],
        "summary" : "Export a part as a glTF file.",
        "description" : "Returns a 307 redirect from which to download the exported file. See [API Guide: Model Translation](https://onshape-public.github.io/docs/api-adv/translation/) for more details.",
        "operationId" : "exportPartGltf",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "angleTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "chordTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "precomputedLevelOfDetail",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "outputSeparateFaceNodes",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "faceId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "outputFaceAppearances",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "maxFacetWidth",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success!",
            "content" : {
              "model/gltf+json;charset=UTF-8;qs=0.08" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GlTF"
                }
              },
              "model/gltf-binary;qs=0.08" : {
                "schema" : {
                  "type" : "string",
                  "description" : "Binary representation of glTF data",
                  "format" : "binary",
                  "example" : "data"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/parts/d/{did}/{wvm}/{wvmid}/e/{eid}/partid/{partid}/massproperties" : {
      "get" : {
        "tags" : [ "Part" ],
        "summary" : "Get a part's mass properties.",
        "description" : "Parts must have density. The returned schema includes the same information as in the Onshape [Mass Properties Tool](https://cad.onshape.com/help/Content/massprops-ps.htm). \nWhen three values are returned: \n * The first is the calculated value. \n * The second is the minimum possible value, considering tolerance. \n * The third is the maximum possible value, considering tolerance.",
        "operationId" : "getMassProperties",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "inferMetadataOwner",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "useMassPropertyOverrides",
          "in" : "query",
          "description" : "If true, use the user mass property overrides when calculated mass properties",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTMassPropertiesBulkInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/parts/d/{did}/{wvm}/{wvmid}/e/{eid}/partid/{partid}/parasolid" : {
      "get" : {
        "tags" : [ "Part" ],
        "summary" : "Export a part as a Parasolid file.",
        "description" : "Returns a 307 redirect from which to download the exported file. See [API Guide: Model Translation](https://onshape-public.github.io/docs/api-adv/translation/) for more details.",
        "operationId" : "exportPS",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "0"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "307" : {
            "description" : "A Redirect!",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/parts/d/{did}/{wvm}/{wvmid}/e/{eid}/partid/{partid}/shadedviews" : {
      "get" : {
        "tags" : [ "Part" ],
        "summary" : "Get a part's shaded views.",
        "operationId" : "getPartShadedViews",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "viewMatrix",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "front"
          }
        }, {
          "name" : "outputHeight",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 500
          }
        }, {
          "name" : "outputWidth",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 500
          }
        }, {
          "name" : "pixelSize",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0.003
          }
        }, {
          "name" : "edges",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "show"
          }
        }, {
          "name" : "useAntiAliasing",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTShadedViewsInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/parts/d/{did}/{wvm}/{wvmid}/e/{eid}/partid/{partid}/sheetmetal/bendtable" : {
      "get" : {
        "tags" : [ "Part" ],
        "summary" : "Get a part's sheet metal bend table.",
        "operationId" : "getBendTable",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTTableResponse-1546"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/parts/d/{did}/{wvm}/{wvmid}/e/{eid}/partid/{partid}/stl" : {
      "get" : {
        "tags" : [ "Part" ],
        "summary" : "Export a part as an STL file.",
        "description" : "Returns a 307 redirect from which to download the exported file. See [API Guide: Model Translation](https://onshape-public.github.io/docs/api-adv/translation/) for more details.",
        "operationId" : "exportStl",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "text"
          }
        }, {
          "name" : "grouping",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "scale",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 1.0
          }
        }, {
          "name" : "units",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "inch"
          }
        }, {
          "name" : "angleTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "chordTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "maxFacetWidth",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "minFacetWidth",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/parts/d/{did}/{wvm}/{wvmid}/e/{eid}/partid/{partid}/tessellatededges" : {
      "get" : {
        "tags" : [ "Part" ],
        "summary" : "Get a list of a part's tessellation edges.",
        "description" : "Returns the coordinates (in meters) of each edge's endpoints.",
        "operationId" : "getEdges",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "angleTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "chordTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "precomputedLevelOfDetail",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "edgeId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTExportTessellatedEdgesResponse-327"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/parts/d/{did}/{wvm}/{wvmid}/e/{eid}/partid/{partid}/tessellatedfaces" : {
      "get" : {
        "tags" : [ "Part" ],
        "summary" : "Get a list of a part's tessellation faces.",
        "description" : "Coordinates are in meters (m).",
        "operationId" : "getFaces_1",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "angleTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "chordTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "precomputedLevelOfDetail",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "faceId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "outputFaceAppearances",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "maxFacetWidth",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "outputVertexNormals",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "outputFacetNormals",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "outputTextureCoordinates",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "outputIndexTable",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "outputErrorFaces",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "combineCompositePartConstituents",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTExportTessellatedFacesResponse-898"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/e/{eid}/namedViews" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Get a list of all named views that exist in the Part Studio.",
        "description" : "Returns a map from view name to view data for the given element. See the [Part Studios API Guide](https://onshape-public.github.io/docs/api-adv/partstudios/) for details and tutorials.",
        "operationId" : "getPartStudioNamedViews",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipPerspective",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeSectionCutViews",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTNamedViewsInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/w/{wid}" : {
      "post" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Create a new Part Studio in a document.",
        "description" : "See the [Part Studios API Guide](https://onshape-public.github.io/docs/api-adv/partstudios/) for details and tutorials.",
        "operationId" : "createPartStudio",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "Workspace ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTModelElementParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDocumentElementInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/w/{wid}/e/{eid}/features/featureid/{fid}" : {
      "post" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Update the definition of a Part Studio feature.",
        "description" : "Replaces an existing feature in the location of the existing feature. See the [Features API Guide](https://onshape-public.github.io/docs/api-adv/featureaccess/) for additional information.",
        "operationId" : "updatePartStudioFeature",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "Workspace ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "Element ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fid",
          "in" : "path",
          "description" : "The id of the feature being updated. This id should be URL encoded and must match the featureId found in the serialized structure",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "feature The serialized feature definition",
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTFeatureDefinitionCall-1406"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTFeatureDefinitionResponse-1617"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Delete a Part Studio feature.",
        "description" : "See the [Features API Guide](https://onshape-public.github.io/docs/api-adv/featureaccess/) for additional information.",
        "operationId" : "deletePartStudioFeature",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "Workspace ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "Element ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fid",
          "in" : "path",
          "description" : "The id of the feature being updated. This id should be URL encoded and must match the featureId found in the serialized structure",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTFeatureApiBase-1430"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/w/{wid}/e/{eid}/features/rollback" : {
      "post" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Move the Feature List rollback bar in the Part Studio.",
        "description" : "Replace `\"string\"` in the request body with an object that specifies the new location for the rollback bar: \n `{ \"rollbackIndex\": integer }` \n\nFor example: `{ \"rollbackIndex\": 2 }` \n\nSet to `-1` to move the rollback bar to the end of the list. \n\nSee the [Part Studios API Guide](https://onshape-public.github.io/docs/api-adv/partstudios/) for details and tutorials.",
        "operationId" : "updateRollback",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "Workspace ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "Element ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The index at which the rollback index should be placed. Features\n with entry index (0-based) higher than or equal to the value are rolled back. Value of -1 is treated\n as an alias for \"end of feature list\". Otherwise the value must be in the range 0 to the number of\n entries in the feature list",
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTSetFeatureRollbackResponse-1042"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/w/{wid}/e/{eid}/features/updates" : {
      "post" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Update multiple features in a Part Studio",
        "description" : "This API accepts a list of features (that must already exist in the Part Studio) to update. This call does not fully redefine the features; it updates only the parameters supplied in the top-level feature structure, and optionally can update feature suppression attributes. \nSee the [Features API Guide](https://onshape-public.github.io/docs/api-adv/featureaccess/) for additional information.",
        "operationId" : "updateFeatures",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "Workspace ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "Element ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "feature The serialized feature definition",
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTUpdateFeaturesCall-1748"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTUpdateFeaturesResponse-1333"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/bodydetails" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Get the body details for a Part Studio.",
        "description" : "See the [Part Studios API Guide](https://onshape-public.github.io/docs/api-adv/partstudios/) for details and tutorials.",
        "operationId" : "getPartStudioBodyDetails",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partIds",
          "in" : "query",
          "description" : "If specified, the response will only include body details for the specific parts as indicated here by their corresponding Id",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "includeSurfaces",
          "in" : "query",
          "description" : "Whether or not surfaces should be included in the response.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeCompositeParts",
          "in" : "query",
          "description" : "Whether or not composite parts should be included in the response.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeGeometricData",
          "in" : "query",
          "description" : "Whether or not geometric data should be included in the response.",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTExportModelBodiesResponse-734"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/boundingboxes" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Get the bounding boxes for a Part Studio.",
        "description" : "This endpoint does not result in a tight bounding box. The values returned are meant for graphics and visualization, and are approximate. \nTo calculate a tight bounding box, see the [FeatureScript API Guide](https://onshape-public.github.io/docs/api-adv/fs/#calculate-a-tight-bounding-box). ",
        "operationId" : "getPartStudioBoundingBoxes",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "One of w or v or m corresponding to whether a workspace or version or microversion was entered.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "Workspace (w), Version (v) or Microversion (m) ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "Element ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "Whether or not to include bounding boxes for hidden parts.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeWireBodies",
          "in" : "query",
          "description" : "Whether to include wire bodies in the bounding box.",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "Id of document that links to the document being accessed. This may provide additional access rights to the document. Allowed only with version (v) path parameter.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTBoundingBoxInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/compare" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Get the differences between two Part Studios in a single document.",
        "operationId" : "comparePartStudios",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "One of w or v or m corresponding to whether a workspace or version or microversion was entered.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "Workspace (w), Version (v) or Microversion (m) ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "Element ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workspaceId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "microversionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceConfiguration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetConfiguration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTRootDiffInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/features" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Get a list of features instantiated in the Part Studio.",
        "description" : "See the [Features API Guide](https://onshape-public.github.io/docs/api-adv/featureaccess/) for additional information.",
        "operationId" : "getPartStudioFeatures",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeGeometryIds",
          "in" : "query",
          "description" : "If true, include the underlying geometry IDs in the feature definition.",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "featureId",
          "in" : "query",
          "description" : "ID of a feature; repeat query param to add more than one",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "noSketchGeometry",
          "in" : "query",
          "description" : "Whether or not to output simple sketch info without geometry",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTFeatureListResponse-2457"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Add a feature to the Part Studio's Feature List.",
        "description" : "The feature is added immediately before the rollback bar. Any geometry IDs specified in the feature must be valid at that point in the feature tree. \n \nSee the [Features API Guide](https://onshape-public.github.io/docs/api-adv/featureaccess/) for additional information.",
        "operationId" : "addPartStudioFeature",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTFeatureDefinitionCall-1406"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTFeatureDefinitionResponse-1617"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/featurescript" : {
      "post" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Evaluate the FeatureScript snippet for a Part Studio.",
        "operationId" : "evalFeatureScript",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTFeatureScriptEvalCall-2377"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTFeatureScriptEvalResponse-1859"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/featurescriptrepresentation" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Get the FeatureScript representation of a Part Studio.",
        "operationId" : "getFeatureScriptRepresentation",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTPModule-234"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/featurespecs" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Get the specs for a Part Studio feature.",
        "description" : "Returns a list of feature specs available within the Part Studio. A feature spec provides a data description of the feature's interface to a feature.",
        "operationId" : "getPartStudioFeatureSpecs",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "One of w or v or m corresponding to whether a workspace or version or microversion was entered.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "Workspace (w), Version (v) or Microversion (m) ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "Element ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTFeatureSpecsResponse-664"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/fstable" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Compute and return a FeatureScript table for a Part Studio.",
        "operationId" : "getFeatureScriptTable",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tableNamespace",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tableType",
          "in" : "query",
          "description" : "`holeTable | cutlistTable`",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tableParameters",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTApiTableList-1223"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/gltf" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Export the Part Studio as a glTF file.",
        "description" : "Returns the glTF representation. See [API Guide: Model Translation](https://onshape-public.github.io/docs/api-adv/translation/)",
        "operationId" : "exportPartStudioGltf",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "angleTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "chordTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "precomputedLevelOfDetail",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "outputSeparateFaceNodes",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "faceId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "outputFaceAppearances",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "maxFacetWidth",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success!",
            "content" : {
              "model/gltf+json;charset=UTF-8;qs=0.08" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GlTF"
                }
              },
              "model/gltf-binary;qs=0.08" : {
                "schema" : {
                  "type" : "string",
                  "description" : "Binary representation of glTF data",
                  "format" : "binary",
                  "example" : "data"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/idtranslations" : {
      "post" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Find corresponding deterministic IDs from a source document microversion at the target version.",
        "description" : "* Deterministic IDs are only valid for one microversion. \n* This maps deterministic IDs between microversions in an attempt to find the corresponding entities in each version.",
        "operationId" : "translateIds",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "One of w or v or m corresponding to whether a workspace or version or microversion was entered.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "Workspace (w), Version (v) or Microversion (m) ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "Element ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTIdTranslationParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTIdTranslationInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/massproperties" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Get the mass properties for a Part Studio.",
        "description" : "Parts must have density. The returned schema includes the same information as in the Onshape [Mass Properties Tool](https://cad.onshape.com/help/Content/massprops-ps.htm). \n \nWhen three values are returned: \n * The first is the calculated value. \n * The second is the minimum possible value, considering tolerance. \n * The third is the maximum possible value, considering tolerance. \n \n See the [Part Studios API Guide](https://onshape-public.github.io/docs/api-adv/partstudios/) for details and tutorials.",
        "operationId" : "getPartStudioMassProperties",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "massAsGroup",
          "in" : "query",
          "description" : "If true, specified parts will be evaluated as a single object instead of individually",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "useMassPropertyOverrides",
          "in" : "query",
          "description" : "If true, use the user mass property overrides when calculated mass properties",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTMassPropertiesBulkInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/parasolid" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Export the Part Studio as a Parasolid file.",
        "description" : "Returns a 307 redirect from which to download the exported file. See [API Guide: Model Translation](https://onshape-public.github.io/docs/api-adv/translation/) for more details.",
        "operationId" : "exportParasolid",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "One of w or v or m corresponding to whether a workspace or version or microversion was entered.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "Workspace (w), Version (v) or Microversion (m) ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "Element ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partIds",
          "in" : "query",
          "description" : "IDs of the parts to retrieve. Use comma-separated IDs for multiple parts (example: partIds=JHK,JHD).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "Parasolid version",
          "schema" : {
            "type" : "string",
            "default" : "0"
          }
        }, {
          "name" : "includeExportIds",
          "in" : "query",
          "description" : "Whether topology ids should be exported as parasolid attributes",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "Id of document that links to the document being accessed. This may provide additional access rights to the document. Allowed only with version (v) path parameter.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "binaryExport",
          "in" : "query",
          "description" : "Whether to use binary parasolid format instead of text",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "307" : {
            "description" : "A Redirect!"
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/shadedviews" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Get a list of shaded views for a Part Studio.",
        "operationId" : "getPartStudioShadedViews",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "One of w or v or m corresponding to whether a workspace or version or microversion was entered.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "Workspace (w), Version (v) or Microversion (m) ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "Element ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "viewMatrix",
          "in" : "query",
          "description" : "12-number view matrix (comma-separated), or one of the following named views:\ntop, bottom, front, back, left, right\nThe 12 entries in the view matrix form three rows and four columns, which is a linear transformation applied to the model itself.\nThe matrix's first three columns maps the coordinate axes of the model to the coordinate axes of the view, and the fourth column translates the origin (in meters).\nThe view coordinates have x pointing right, y pointing up, and z pointing towards the viewer, while a front view of the model has x pointing right, y pointing away from the viewer, and z pointing up.\nFor example, the identity matrix viewMatrix=1,0,0,0,0,1,0,0,0,0,1,0 corresponds to the top view, and viewMatrix=0.612,0.612,0,0,-0.354,0.354,0.707,0,0.707,-0.707,0.707,0 corresponds (approximately) to the isometric view.\nThe first three columns of the view matrix should be orthonormal and have a positive determinant.  If this is not the case, view behavior may be undefined.",
          "schema" : {
            "type" : "string",
            "default" : "front"
          }
        }, {
          "name" : "outputHeight",
          "in" : "query",
          "description" : "Output image height (in pixels)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 500
          }
        }, {
          "name" : "outputWidth",
          "in" : "query",
          "description" : "Output image width (in pixels)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 500
          }
        }, {
          "name" : "pixelSize",
          "in" : "query",
          "description" : "Height and width represented by each pixel (in meters). If the value is 0, the display will be sized to fit the output image dimensions.",
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0.003
          }
        }, {
          "name" : "edges",
          "in" : "query",
          "description" : "The treatment to be applied to edges in the display. Options are show: show visible edges, hide: hide visible edges.",
          "schema" : {
            "type" : "string",
            "default" : "show"
          }
        }, {
          "name" : "showAllParts",
          "in" : "query",
          "description" : "Whether or not all parts should be shown in the element,\nregardless of user setting. If false, the visibility setting made by the user will be reflected in the\nimage. If true, all parts will be shown.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeSurfaces",
          "in" : "query",
          "description" : "Whether or not surfaces should be shown in the element.\nIt is applicable only when showAllParts is true. If false, surfaces will be excluded.\nIf true, all surfaces will be shown.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "useAntiAliasing",
          "in" : "query",
          "description" : "If true, an anti-aliasing factor will be used to smooth\nmodel boundaries in the final image result. If false, the image will be rasterized at the given\nresolution. Setting to true can have negative performance implications with respect to rendering time\nand memory usage. If a high-resolution image is requested and anti-aliasing is turned on, the server\nmay not be able to fulfill the request.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeWires",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "Id of document that links to the document being accessed. This may provide additional access rights to the document. Allowed only with version (v) path parameter.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTShadedViewsInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/sketches" : {
      "get" : {
        "tags" : [ "Sketch" ],
        "summary" : "Get information for all sketches in Part Studio.",
        "operationId" : "getSketchInfo",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sketchId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "output3D",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "curvePoints",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeGeometry",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "Id of document that links to the document being accessed. This may provide additional access rights to the document. Allowed only with version (v) path parameter.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/sketches/{sid}/boundingboxes" : {
      "get" : {
        "tags" : [ "Sketch" ],
        "summary" : "Get all bounding boxes for a sketch.",
        "operationId" : "getSketchBoundingBoxes",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTBoundingBoxInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/sketches/{sid}/tessellatedentities" : {
      "get" : {
        "tags" : [ "Sketch" ],
        "summary" : "Get the tessellations of a sketch in a Part Studio.",
        "description" : "The accuracy of the tessellation to exact geometry is controlled by the `angleTolerance` and `chordTolerance` parameters. The tessellation points are computed closely enough so that neither the angle tolerance nor the chord tolerance are exceeded. For most parts, the angular tolerance is the most restrictive of the two default tolerances.",
        "operationId" : "getTessellatedEntities",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "angleTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "chordTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/stl" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Export the Part Studio as an STL file.",
        "description" : "Returns a 307 redirect from which to download the exported file. See [API Guide: Model Translation](https://onshape-public.github.io/docs/api-adv/translation/)",
        "operationId" : "exportPartStudioStl",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "One of w or v or m corresponding to whether a workspace or version or microversion was entered.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "Workspace (w), Version (v) or Microversion (m) ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "Element ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partIds",
          "in" : "query",
          "description" : "IDs of the parts to retrieve. Use comma-separated IDs for multiple parts (example: partIds=JHK,JHD).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mode",
          "in" : "query",
          "description" : "Type of file: text, binary",
          "schema" : {
            "type" : "string",
            "default" : "text"
          }
        }, {
          "name" : "grouping",
          "in" : "query",
          "description" : "Whether parts should be exported as a group or individually in a .zip file",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "scale",
          "in" : "query",
          "description" : "Scale for measurements.",
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 1.0
          }
        }, {
          "name" : "units",
          "in" : "query",
          "description" : "Units for the element: `METER` | `CENTIMETER` | `MILLIMETER` | `INCH` | `FOOT` | `YARD`",
          "schema" : {
            "type" : "string",
            "default" : "inch"
          }
        }, {
          "name" : "angleTolerance",
          "in" : "query",
          "description" : "Angle tolerance (in radians). This specifies the limit on the sum of the angular deviations of a tessellation chord from the tangent vectors at two chord endpoints. The specified value must be less than PI/2. This parameter currently has a default value chosen based on the complexity of the parts being tessellated.",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "chordTolerance",
          "in" : "query",
          "description" : "Chord tolerance (in meters). This specifies the limit on the maximum deviation of a tessellation chord from the true surface/edge. This parameter currently has a default value chosen based on the size and complexity of the parts being tessellated.",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "maxFacetWidth",
          "in" : "query",
          "description" : "Max facet width. This specifies the limit on the size of any side of a tessellation facet.",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "minFacetWidth",
          "in" : "query",
          "description" : "Max facet width. This specifies the limit on the size of any side of a tessellation facet.",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "Id of document that links to the document being accessed. This may provide additional access rights to the document. Allowed only with version (v) path parameter.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "307" : {
            "description" : "A Redirect!"
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/tessellatededges" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Get a list of all edges in a Part Studio.",
        "description" : "Returns the edges as tessellated data and includes display data. \nCoordinates are in meters (m).",
        "operationId" : "getPartStudioEdges",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "angleTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "chordTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "precomputedLevelOfDetail",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "edgeId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTExportTessellatedEdgesResponse-327"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wvm}/{wvmid}/e/{eid}/tessellatedfaces" : {
      "get" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Get a list of all faces in a Part Studio.",
        "description" : "Coordinates are in meters (m).",
        "operationId" : "getPartStudioFaces",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wvm",
          "in" : "path",
          "description" : "Indicates which of workspace (w), version (v), or document microversion (m) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v", "m" ]
          }
        }, {
          "name" : "wvmid",
          "in" : "path",
          "description" : "The id of the workspace, version or document microversion in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "rollbackBarIndex",
          "in" : "query",
          "description" : "Index specifying the location of the rollback bar when the call is evaluated. A -1 indicates that it should be at the end of the featurelist.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : -1
          }
        }, {
          "name" : "elementMicroversionId",
          "in" : "query",
          "description" : "A specific element microversion in which to evaluate the request.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "partId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "angleTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "chordTolerance",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "precomputedLevelOfDetail",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "faceId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "outputFaceAppearances",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "maxFacetWidth",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "outputVertexNormals",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "outputFacetNormals",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "outputTextureCoordinates",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "outputIndexTable",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "outputErrorFaces",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "combineCompositePartConstituents",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTExportTessellatedFacesResponse-898"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/partstudios/d/{did}/{wv}/{wvid}/e/{eid}/translations" : {
      "post" : {
        "tags" : [ "PartStudio" ],
        "summary" : "Export a Part Studio to another format.",
        "description" : "* Use `formatName` in the JSON request body to specify the export file type. Use [Translations/getAllTranslatorFormats](https://cad.onshape.com/glassworks/explorer/#/Translation/getAllTranslatorFormats) to get a list of valid export file formats. `\n* Set `storeInDocument` to `true` to export to a data file. Set to `false` to export to a blob element in the same document. \n* See [API Guide: Model Translation](https://onshape-public.github.io/docs/api-adv/translation/) for more details.",
        "operationId" : "createPartStudioTranslation",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "Document ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "description" : "One of w or v corresponding to whether a workspace or version was specified.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "description" : "Workspace (w) or Version (v) ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "Element ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTTranslateFormatParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTTranslationRequestInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/publications" : {
      "post" : {
        "tags" : [ "Publication" ],
        "summary" : "Create a new publication.",
        "operationId" : "createPublication",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTPublicationParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTPublicationInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/publications/{pid}" : {
      "post" : {
        "tags" : [ "Publication" ],
        "summary" : "Update publication's attributes name, description, and notes.",
        "operationId" : "updatePublicationAttributes",
        "parameters" : [ {
          "name" : "pid",
          "in" : "path",
          "description" : "Publication ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTPublicationParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "Publication" ],
        "summary" : "Delete a publication.",
        "operationId" : "deletePublication",
        "parameters" : [ {
          "name" : "pid",
          "in" : "path",
          "description" : "Publication ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "forever",
          "in" : "query",
          "description" : "If true, publication is deleted forever.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Delete" ],
          "BasicAuth" : [ "OAuth2Delete" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/publications/{pid}/item" : {
      "post" : {
        "tags" : [ "Publication" ],
        "summary" : "Add an item in a publication.",
        "operationId" : "addItemToPublication",
        "parameters" : [ {
          "name" : "pid",
          "in" : "path",
          "description" : "Publication ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTPublicationItemParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTPublicationInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/publications/{pid}/item/{iid}" : {
      "delete" : {
        "tags" : [ "Publication" ],
        "summary" : "Remove an item from a publication.",
        "operationId" : "deletePublicationItem",
        "parameters" : [ {
          "name" : "pid",
          "in" : "path",
          "description" : "Publication ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "iid",
          "in" : "path",
          "description" : "Publication item ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/publications/{pid}/items" : {
      "get" : {
        "tags" : [ "Publication" ],
        "summary" : "Get all items in a publication.",
        "operationId" : "getPublicationItems",
        "parameters" : [ {
          "name" : "pid",
          "in" : "path",
          "description" : "Publication ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTPublicationInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Publication" ],
        "summary" : "Add publication items in bulk.",
        "operationId" : "addItemsToPublication",
        "parameters" : [ {
          "name" : "pid",
          "in" : "path",
          "description" : "Publication ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTPublicationBulkItemParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTPublicationInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/releasepackages/companyreleaseworkflow" : {
      "get" : {
        "tags" : [ "ReleasePackage" ],
        "summary" : "Get information about the release/obsoletion workflow for a company-owned document.",
        "operationId" : "getCompanyReleaseWorkflow",
        "parameters" : [ {
          "name" : "documentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTActiveWorkflowInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/releasepackages/obsoletion/{wfid}" : {
      "post" : {
        "tags" : [ "ReleasePackage" ],
        "summary" : "Create an obsoletion package to make an existing revision obsolete.",
        "operationId" : "createObsoletionPackage",
        "parameters" : [ {
          "name" : "wfid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revisionId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "debugMode",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/releasepackages/release/{wfid}" : {
      "post" : {
        "tags" : [ "ReleasePackage" ],
        "summary" : "Create a new release package for one or more items.",
        "description" : "All revisionable items must be from the same document. Once a release package is successfully created, use `updateReleasePackage` to update all desired item/package properties, and transition it to the desired state.",
        "operationId" : "createReleasePackage",
        "parameters" : [ {
          "name" : "wfid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "debugMode",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTReleasePackageParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/releasepackages/{rpid}" : {
      "get" : {
        "tags" : [ "ReleasePackage" ],
        "summary" : "Get details about the specified release package.",
        "operationId" : "getReleasePackage",
        "parameters" : [ {
          "name" : "rpid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "detailed",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTReleasePackageInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "ReleasePackage" ],
        "summary" : "Update the release/obsoletion package/item properties.",
        "description" : "Use the `wfaction` query param to also perform a workflow transition.",
        "operationId" : "updateReleasePackage",
        "parameters" : [ {
          "name" : "rpid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "UPDATE"
          }
        }, {
          "name" : "wfaction",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTUpdateReleasePackageParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTReleasePackageInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/revisions/c/{cid}/partnumber/{pnum}" : {
      "get" : {
        "tags" : [ "Revision" ],
        "summary" : "Get a list of revisions by part number.",
        "operationId" : "getRevisionByPartNumber",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "description" : "Company id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pnum",
          "in" : "path",
          "description" : "Part Number",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revision",
          "in" : "query",
          "description" : "Revision",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "elementType",
          "in" : "query",
          "description" : "0: Part Studio, 1: Assembly, 2: Drawing. 4: Blob",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTRevisionInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/revisions/companies/{cid}" : {
      "get" : {
        "tags" : [ "Revision" ],
        "summary" : "Enumerate all of a company's revisions.",
        "description" : "* Returns a slice of all revisions per API call. \n* To get the next set of results, use the `next` URL from the response body. \n* This API can only be called by company admins.",
        "operationId" : "enumerateRevisions",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "description" : "The company or enterprise ID that owns the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "elementType",
          "in" : "query",
          "description" : "0: Part Studio, 1: Assembly, 2: Drawing. 4: Blob",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of items to return in a single API call",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        }, {
          "name" : "latestOnly",
          "in" : "query",
          "description" : "Whether to limit search to only latest revisions.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The earliest creation date of the revision to find.",
          "schema" : {
            "type" : "string",
            "format" : "date-time",
            "default" : "2000-01-01T00:00:00Z"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTRevisionInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/revisions/companies/{cid}/d/{did}/{wv}/{wvid}/e/{eid}" : {
      "get" : {
        "tags" : [ "Revision" ],
        "summary" : "Get a list of all revisions for an element in a company-owned document.",
        "operationId" : "getRevisionHistoryInCompanyByElementId",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "description" : "Indicates which of workspace (w) or version (v) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v" ]
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "description" : "The id of the workspace, version in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "elementType",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fillApprovers",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "fillExportPermission",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "supportChangeType",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTRevisionListResponse"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/revisions/companies/{cid}/d/{did}/{wv}/{wvid}/e/{eid}/p/{pid}" : {
      "get" : {
        "tags" : [ "Revision" ],
        "summary" : "Get a list of all revisions for a part in a company-owned document by part ID.",
        "operationId" : "getRevisionHistoryInCompanyByPartId",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fillApprovers",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "fillExportPermission",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "supportChangeType",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTRevisionListResponse"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/revisions/companies/{cid}/partnumber/{pnum}" : {
      "get" : {
        "tags" : [ "Revision" ],
        "summary" : "Get a list of all revisions for a part or element in a company-owned document by part number.",
        "description" : "You can also request `elementType` in addition to `partNumber` since companies may or may not allow drawings to share part numbers with their parts/assemblies. To perform search without `elementType`, use `elementType` = -1 | UNKNOWN. Available element types are: -1: Unknown, 0: Part Studio, 1: Assembly, 2: Drawing, 4: Blob, 5: Application, 8: Variable Studio 10: Unknown",
        "operationId" : "getRevisionHistoryInCompanyByPartNumber",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pnum",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "elementType",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fillApprovers",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "fillExportPermission",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "supportChangeType",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTRevisionListResponse"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/revisions/companies/{cid}/partnumber/{pnum}/elementType/{et}" : {
      "delete" : {
        "tags" : [ "Revision" ],
        "summary" : "Delete all revisions for a part number.",
        "description" : "Only company admins can call this API. All documents that contain or use the part number must be deleted first. This operation cannot be undone.",
        "operationId" : "deleteRevisionHistory",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pnum",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "et",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ignoreLinkedDocuments",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Delete" ],
          "BasicAuth" : [ "OAuth2Delete" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/revisions/d/{did}" : {
      "get" : {
        "tags" : [ "Revision" ],
        "summary" : "Get all revisions for the specified document.",
        "description" : "Retrieve a list of all revisions that exist in a document and are owned by the document's owning company.",
        "operationId" : "getAllInDocument",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTRevisionInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/revisions/d/{did}/v/{vid}" : {
      "get" : {
        "tags" : [ "Revision" ],
        "summary" : "Get all revisions for a version.",
        "description" : "Retrieve a list of all revisions that exist in a document version and are owned by the document's owning company.",
        "operationId" : "getAllInDocumentVersion",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTRevisionInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/revisions/{cd}/{cdid}/p/{pnum}/latest" : {
      "get" : {
        "tags" : [ "Revision" ],
        "summary" : "Get the latest revision for a part number in a document or company.",
        "description" : "Returns 204 if no revisions are found.",
        "operationId" : "getLatestInDocumentOrCompany",
        "parameters" : [ {
          "name" : "cd",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cdid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pnum",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "et",
          "in" : "query",
          "description" : "0: Part Studio, 1: Assembly, 2: Drawing. 4: Blob",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTRevisionInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/tabletemplates" : {
      "post" : {
        "tags" : [ "PropertiesTableTemplate" ],
        "summary" : "Create a new properties table template.",
        "operationId" : "createTableTemplate",
        "parameters" : [ {
          "name" : "templateGroupId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTPropertiesTableTemplateParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTPropertiesTableTemplateInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/tabletemplates/companies/{cid}" : {
      "get" : {
        "tags" : [ "PropertiesTableTemplate" ],
        "summary" : "Get all properties table templates available for a company.",
        "operationId" : "getByCompanyId",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "description" : "The id of the company in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "templateType",
          "in" : "query",
          "description" : "Indicates filter for table templates: 0 (BOM) or 1 (Revision Table).",
          "schema" : {
            "$ref" : "#/components/schemas/BTPropertiesTableTemplateType"
          }
        }, {
          "name" : "onlyActive",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "includeDefaults",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTPropertiesTableTemplateInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/tabletemplates/d/{did}" : {
      "get" : {
        "tags" : [ "PropertiesTableTemplate" ],
        "summary" : "Get all table templates that are available to use on the provided document.",
        "operationId" : "getByDocumentId",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "templateType",
          "in" : "query",
          "description" : "Indicates filter for table templates: 0 (BOM) or 1 (Revision Table).",
          "schema" : {
            "$ref" : "#/components/schemas/BTPropertiesTableTemplateType"
          }
        }, {
          "name" : "onlyActive",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeDefaults",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTPropertiesTableTemplateInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/tabletemplates/{tid}" : {
      "get" : {
        "tags" : [ "PropertiesTableTemplate" ],
        "summary" : "Get a properties table template by template ID.",
        "operationId" : "getTableTemplate",
        "parameters" : [ {
          "name" : "tid",
          "in" : "path",
          "description" : "The id of the template in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTPropertiesTableTemplateInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "PropertiesTableTemplate" ],
        "summary" : "Delete a properties table template.",
        "operationId" : "deleteTableTemplate",
        "parameters" : [ {
          "name" : "tid",
          "in" : "path",
          "description" : "The id of the template in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Delete" ],
          "BasicAuth" : [ "OAuth2Delete" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/tasks" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Lists tasks assigned to the specified user",
        "description" : "Returns a list of tasks assigneed to the userId specified in the request. Only company admins can view tasks that were not created by them and are not assigned to them.",
        "operationId" : "getActionItems",
        "parameters" : [ {
          "name" : "userId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 2
          }
        }, {
          "name" : "role",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "order",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "documentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTTaskListResponse"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Create a new task in a draft state.",
        "operationId" : "createTask",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTCreateTaskParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTTaskInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/tasks/{tid}" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Get a task by id.",
        "operationId" : "getTask",
        "parameters" : [ {
          "name" : "tid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTTaskInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Update the task and its properties.",
        "operationId" : "updateTask",
        "parameters" : [ {
          "name" : "tid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTUpdateTaskParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTTaskInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/tasks/{tid}/{transition}" : {
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Execute a workflow transition.",
        "operationId" : "transitionTask",
        "parameters" : [ {
          "name" : "tid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transition",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTTaskInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/teams" : {
      "get" : {
        "tags" : [ "Team" ],
        "summary" : "Get a list of all teams the current user belongs to.",
        "operationId" : "find",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "uid",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "asc"
          }
        }, {
          "name" : "includeCompanyOwnedTeams",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTGlobalTreeNodeListResponseBTTeamInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/teams/{tid}" : {
      "get" : {
        "tags" : [ "Team" ],
        "summary" : "Get team information by team ID.",
        "operationId" : "getTeam",
        "parameters" : [ {
          "name" : "tid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTTeamInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/teams/{tid}/members" : {
      "get" : {
        "tags" : [ "Team" ],
        "summary" : "Get a list of a team's members.",
        "description" : "Returns a maximum of 20 per page.",
        "operationId" : "getMembers",
        "parameters" : [ {
          "name" : "tid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "asc"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        }, {
          "name" : "q",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTTeamMemberInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/thumbnails/d/{did}" : {
      "get" : {
        "tags" : [ "Thumbnail" ],
        "summary" : "Get the thumbnail info for a document in the default workspace.",
        "description" : "* By default, returns thumbnail info for the element with the most-recently generated image. If you pinned an element for the document thumbnail, that element will always be used for the document-level thumbnail, if it exists in the workspace.\n* The default workspace may vary by user; the image served depends on the signed-in user.\n* See also: [Tech tip on how to change a document thumbnail in onshape](https://www.onshape.com/en/resource-center/tech-tips/tech-tip-how-to-change-a-document-thumbnail-in-onshape)",
        "operationId" : "getThumbnailForDocument",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTThumbnailInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/thumbnails/d/{did}/v/{vid}" : {
      "get" : {
        "tags" : [ "Thumbnail" ],
        "summary" : "Get the thumbnail info for a version of a document.",
        "description" : "* By default, returns thumbnail info for the element with the most-recently generated image. If you pinned an element for the document thumbnail, that element will always be used for the document-level thumbnail, if it exists in the workspace.\n* See also: [Tech tip on how to change a document thumbnail in onshape](https://www.onshape.com/en/resource-center/tech-tips/tech-tip-how-to-change-a-document-thumbnail-in-onshape)",
        "operationId" : "getThumbnailForDocumentAndVersion",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTThumbnailInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/thumbnails/d/{did}/w/{wid}" : {
      "get" : {
        "tags" : [ "Thumbnail" ],
        "summary" : "Get the thumbnail info for a workspace.",
        "description" : "* By default, returns thumbnail info for the element with the most-recently generated image. If you pinned an element for the document thumbnail, that element will always be used for the document-level thumbnail, if it exists in the workspace.\n* See also: [Tech tip on how to change a document thumbnail in onshape](https://www.onshape.com/en/resource-center/tech-tips/tech-tip-how-to-change-a-document-thumbnail-in-onshape)",
        "operationId" : "getDocumentThumbnail",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTThumbnailInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/thumbnails/d/{did}/w/{wid}/e/{eid}/ac/{cid}/s/{sz}" : {
      "get" : {
        "tags" : [ "Thumbnail" ],
        "summary" : "Get the thumbnail image with the given configuration for an element.",
        "description" : "Returns the thumbnail image for an element at a specified version, with the given configuration.",
        "operationId" : "getElementThumbnailWithApiConfiguration",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sz",
          "in" : "path",
          "description" : "the generated thumbnail size in pixels, widthxheigth",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "300x300"
        }, {
          "name" : "t",
          "in" : "query",
          "description" : "Cache Control key. If specified, the response header returned will tell the client to use cached thumbnails.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipDefaultImage",
          "in" : "query",
          "description" : "Controls the return of the default image, if thumbnail is not available",
          "schema" : {
            "type" : "string",
            "default" : ""
          },
          "examples" : {
            "By default return the default thumbnail, if the thumbnail is not found or generated" : {
              "summary" : "Get the default image, if the thumbnail is not found",
              "description" : "By default return the default thumbnail, if the thumbnail is not found or generated"
            },
            "Setting skipDefaultImage=true, returns a 404 if the thumbnail is not found" : {
              "summary" : "Skip the default image, if the thumbnail does not exist.",
              "description" : "Setting skipDefaultImage=true, returns a 404 if the thumbnail is not found",
              "value" : true
            }
          }
        }, {
          "name" : "rejectEmpty",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "requireConfigMatch",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "image/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/thumbnails/d/{did}/w/{wid}/s/{sz}" : {
      "get" : {
        "tags" : [ "Thumbnail" ],
        "summary" : "Get the thumbnail image with the given size for a document.",
        "description" : "* By default, returns thumbnail image for the element with the most-recently generated image. If you pinned an element for the document thumbnail, that element will always be used for the document-level thumbnail, if it exists in the workspace.\n* See also: [Tech tip on how to change a document thumbnail in onshape](https://www.onshape.com/en/resource-center/tech-tips/tech-tip-how-to-change-a-document-thumbnail-in-onshape)",
        "operationId" : "getDocumentThumbnailWithSize",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sz",
          "in" : "path",
          "description" : "the generated thumbnail size in pixels, widthxheigth",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "300x300"
        }, {
          "name" : "t",
          "in" : "query",
          "description" : "Cache Control key. If specified, the response header returned will tell the client to use cached thumbnails.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipDefaultImage",
          "in" : "query",
          "description" : "Controls the return of the default image, if thumbnail is not available",
          "schema" : {
            "type" : "string",
            "default" : ""
          },
          "examples" : {
            "By default return the default thumbnail, if the thumbnail is not found or generated" : {
              "summary" : "Get the default image, if the thumbnail is not found",
              "description" : "By default return the default thumbnail, if the thumbnail is not found or generated"
            },
            "Setting skipDefaultImage=true, returns a 404 if the thumbnail is not found" : {
              "summary" : "Skip the default image, if the thumbnail does not exist.",
              "description" : "Setting skipDefaultImage=true, returns a 404 if the thumbnail is not found",
              "value" : true
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "image/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/thumbnails/d/{did}/{wv}/{wvid}/e/{eid}" : {
      "get" : {
        "tags" : [ "Thumbnail" ],
        "summary" : "Get the thumbnail info structure for an element.",
        "description" : "Returns thumbnail info for the given document, workspace or version, and element.",
        "operationId" : "getElementThumbnail",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "description" : "Indicates which of workspace (w) or version (v) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v" ]
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "description" : "The id of the workspace, version in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTThumbnailInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Thumbnail" ],
        "summary" : "Set the thumbnail image for an application element.",
        "description" : "* Allows 3rd-party applications to set thumbnails for their elements. \n* Application elements can have both primary and secondary thumbnails. A primary thumbnail represents the top-level of the element. A secondary thumbnail can represent sub-components of the element (e.g., a drawing sheet).\n* To update one or more thumbnails, you must set the overwrite query param to `true` and supply the entire set of thumbnails. All previous thumbnails will be deleted prior to updating the element with the latest images.",
        "operationId" : "setApplicationElementThumbnail",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "description" : "Indicates which of workspace (w) or version (v) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v" ]
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "description" : "The id of the workspace, version in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "overwrite",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTApplicationElementThumbnailParamsArray"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "Thumbnail" ],
        "summary" : "Delete an element's thumbnail.",
        "description" : "Deletes an application element's thumbnail and images for the given document, workspace or version, and element combination.",
        "operationId" : "deleteApplicationThumbnails",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "description" : "Indicates which of workspace (w) or version (v) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v" ]
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "description" : "The id of the workspace, version in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/thumbnails/d/{did}/{wv}/{wvid}/e/{eid}/s/{sz}" : {
      "get" : {
        "tags" : [ "Thumbnail" ],
        "summary" : "Get the thumbnail image with the given size for an element.",
        "operationId" : "getElementThumbnailWithSize",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "description" : "Indicates which of workspace (w) or version (v) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v" ]
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "description" : "The id of the workspace, version in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sz",
          "in" : "path",
          "description" : "the generated thumbnail size in pixels, widthxheigth",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "300x300"
        }, {
          "name" : "t",
          "in" : "query",
          "description" : "Cache Control key. If specified, the response header returned will tell the client to use cached thumbnails.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipDefaultImage",
          "in" : "query",
          "description" : "Controls the return of the default image, if thumbnail is not available",
          "schema" : {
            "type" : "string",
            "default" : ""
          },
          "examples" : {
            "By default return the default thumbnail, if the thumbnail is not found or generated" : {
              "summary" : "Get the default image, if the thumbnail is not found",
              "description" : "By default return the default thumbnail, if the thumbnail is not found or generated"
            },
            "Setting skipDefaultImage=true, returns a 404 if the thumbnail is not found" : {
              "summary" : "Skip the default image, if the thumbnail does not exist.",
              "description" : "Setting skipDefaultImage=true, returns a 404 if the thumbnail is not found",
              "value" : true
            }
          }
        }, {
          "name" : "rejectEmpty",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "image/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/thumbnails/document/{did}" : {
      "get" : {
        "tags" : [ "Thumbnail" ],
        "summary" : "This endpoint will be deprecated soon. Use `getThumbnailForDocument` instead.",
        "description" : "This API exists for historical reasons. It uses `/document/` in the path, rather than the standard `/d/` to specify the document.",
        "operationId" : "getThumbnailForDocumentOld",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTThumbnailInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/thumbnails/document/{did}/version/{vid}" : {
      "get" : {
        "tags" : [ "Thumbnail" ],
        "summary" : "This endpoint will be deprecated soon. Use `getThumbnailForDocumentAndVersion` instead.",
        "description" : "This API exists for historical reasons. It uses `/document/` in the path, rather than the standard `/d/` to specify the document.",
        "operationId" : "getThumbnailForDocumentAndVersionOld",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTThumbnailInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/translations/d/{did}" : {
      "get" : {
        "tags" : [ "Translation" ],
        "summary" : "Get information on an in-progress or completed translation by document ID.",
        "operationId" : "getDocumentTranslations",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTTranslationRequestInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/translations/d/{did}/w/{wid}" : {
      "post" : {
        "tags" : [ "Translation" ],
        "summary" : "Upload a foreign file into Onshape and translate the data into parts, Part Studios, assemblies, and subassemblies.",
        "description" : "The API call may complete before the translation is finished. If `requestState = ACTIVE`, the translation can be polled until the state is either `DONE` or `FAILED`. Alternatively, a webhook callback can be registered for notification of translation completion (requires `Write` scope if `storeInDocument` is `true`). See [API Guide: Model Translation](https://onshape-public.github.io/docs/api-adv/translation/) for more details.",
        "operationId" : "createTranslation",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "object",
                    "description" : "The file to upload."
                  },
                  "allowFaultyParts" : {
                    "type" : "boolean",
                    "description" : "If true, and a part doesn't pass Onshape validation, it will be imported with faults."
                  },
                  "createComposite" : {
                    "type" : "boolean",
                    "description" : "Not supported for importing into a single part studio."
                  },
                  "createDrawingIfPossible" : {
                    "type" : "boolean"
                  },
                  "encodedFilename" : {
                    "type" : "string",
                    "description" : "If the filename contains non-ASCII characters. Use this field to store the filename."
                  },
                  "extractAssemblyHierarchy" : {
                    "type" : "boolean"
                  },
                  "flattenAssemblies" : {
                    "type" : "boolean",
                    "description" : "If the file is an assembly, or contains an assembly, setting this to True will import it as a Part Studio. In this case the assembly will be flattened to a set of parts in a Part Studio. There will be duplicate parts created whenever a part is instanced more than once. If False, it will be imported as an Assembly."
                  },
                  "formatName" : {
                    "type" : "string"
                  },
                  "joinAdjacentSurfaces" : {
                    "type" : "boolean"
                  },
                  "locationElementId" : {
                    "type" : "string"
                  },
                  "locationGroupId" : {
                    "type" : "string"
                  },
                  "locationPosition" : {
                    "type" : "integer",
                    "format" : "int32",
                    "default" : -1
                  },
                  "notifyUser" : {
                    "type" : "boolean",
                    "default" : true
                  },
                  "ownerId" : {
                    "type" : "string"
                  },
                  "parentId" : {
                    "type" : "string"
                  },
                  "projectId" : {
                    "type" : "string"
                  },
                  "public" : {
                    "type" : "boolean"
                  },
                  "onePartPerDoc" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "splitAssembliesIntoMultipleDocuments" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "storeInDocument" : {
                    "type" : "boolean",
                    "default" : true
                  },
                  "translate" : {
                    "type" : "boolean",
                    "default" : true
                  },
                  "unit" : {
                    "type" : "string",
                    "default" : ""
                  },
                  "uploadId" : {
                    "type" : "string"
                  },
                  "versionString" : {
                    "type" : "string"
                  },
                  "importAppearances" : {
                    "type" : "boolean",
                    "description" : "Face appearances defined on models will be imported.",
                    "default" : true
                  },
                  "importMaterialDensity" : {
                    "type" : "boolean",
                    "description" : "Material density defined on models will be imported.",
                    "default" : false
                  },
                  "yAxisIsUp" : {
                    "type" : "boolean",
                    "description" : "If the file was created in a system that orients with Y Axis Up, the models would by default be brought into Onshape (a Z Axis Up system) with a flipped coordinate system. Toggle this value to reorient the axis system to match Onshape and display the model with the coordinates you expect."
                  },
                  "importWithinDocument" : {
                    "type" : "boolean"
                  },
                  "useIGESImportPostProcessing" : {
                    "type" : "boolean",
                    "description" : "Try getting optimized topology from IGES model.",
                    "default" : false
                  },
                  "upgradeFeatureScriptVersion" : {
                    "type" : "boolean",
                    "default" : false
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTTranslationRequestInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/translations/translationformats" : {
      "get" : {
        "tags" : [ "Translation" ],
        "summary" : "Get a list of formats this translation can use.",
        "description" : "Note that we don't necessarily support both import and export for any given format. See [API Guide: Model Translation](https://onshape-public.github.io/docs/api-adv/translation/) for more details.",
        "operationId" : "getAllTranslatorFormats",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTModelFormatFullInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/translations/{tid}" : {
      "get" : {
        "tags" : [ "Translation" ],
        "summary" : "Get information on an in-progress or completed translation by translation ID.",
        "description" : "When the translation is complete, `requestState` changes from `ACTIVE` to `DONE` or `FAILED`. See [API Guide: Model Translation](https://onshape-public.github.io/docs/api-adv/translation/) for more details.",
        "operationId" : "getTranslation",
        "parameters" : [ {
          "name" : "tid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTTranslationRequestInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "Translation" ],
        "summary" : "Delete a translation request.",
        "operationId" : "deleteTranslation",
        "parameters" : [ {
          "name" : "tid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/users/session" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Authenticate a user's Onshape credentials, and create a session.",
        "description" : "Returned information depends on caller's `OAuth2ReadPll` scope.",
        "operationId" : "session",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTLoginParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/users/sessioninfo" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get the session information for an authenticated (signed-in) user.",
        "description" : "Returned information depends on caller's `OAuth2ReadPll` scope.",
        "operationId" : "sessionInfo",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTUserOAuth2SummaryInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/users/settings" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get the user settings for the signed-in user (i.e., you) for the current session.",
        "description" : "* Non-admins can call this API for their own user ID. \n* Mouse button settings are contained in `reverseScrollWheelZoomDirection` and `viewManipulationMouseKeyMapping`. \n* For each action in `viewManipulationMouseKeyMapping`, an array of modifier key/mouse combos is provided that performs that action. \n* Possible modifier keys include `SHIFT` and `CTRL`. \n* Possible mouse buttons include `MMB` (middle mouse button), `RMB` (right mouse button), and `SCROLLWHEEL`. \n* Scrolling forward zooms in, unless `reverseScrollWheelZoomDirection` is set to `true`.",
        "operationId" : "getUserSettingsCurrentLoggedInUser",
        "parameters" : [ {
          "name" : "includematerials",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTUserSettingsInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/users/{uid}/settings" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get the user settings for any user in your organization (admins only).",
        "description" : "* Mouse button settings are contained in `reverseScrollWheelZoomDirection` and `viewManipulationMouseKeyMapping`. \n* For each action in `viewManipulationMouseKeyMapping`, an array of modifier key/mouse combos is provided that performs that action. \n* Possible modifier keys include `SHIFT` and `CTRL`. \n* Possible mouse buttons include `MMB` (middle mouse button), `RMB` (right mouse button), and `SCROLLWHEEL`. \n* Scrolling forward zooms in, unless `reverseScrollWheelZoomDirection` is set to `true`.",
        "operationId" : "getUserSettings",
        "parameters" : [ {
          "name" : "uid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includematerials",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTUserSettingsInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/variables/d/{did}/w/{wid}/e/{eid}/variables" : {
      "post" : {
        "tags" : [ "Variables" ],
        "summary" : "Assign variables to a Variable Studio",
        "operationId" : "setVariables",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/BTVariableParams"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/variables/d/{did}/w/{wid}/e/{eid}/variablestudioreferences" : {
      "post" : {
        "tags" : [ "Variables" ],
        "summary" : "Set the Variable Studio references for an element.",
        "operationId" : "setVariableStudioReferences",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTVariableStudioReferenceListInfo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/variables/d/{did}/w/{wid}/e/{eid}/variablestudioscope" : {
      "post" : {
        "tags" : [ "Variables" ],
        "summary" : "Set the scope the Variable Studio.",
        "operationId" : "setVariableStudioScope",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTVariableStudioScopeInfo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/variables/d/{did}/w/{wid}/variablestudio" : {
      "post" : {
        "tags" : [ "Variables" ],
        "summary" : "Create a new Variable Studio in a document and workspace.",
        "operationId" : "createVariableStudio",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wid",
          "in" : "path",
          "description" : "The id of the workspace in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTModelElementParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTDocumentElementInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Write" ],
          "BasicAuth" : [ "OAuth2Write" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/variables/d/{did}/{wv}/{wvid}/e/{eid}/variables" : {
      "get" : {
        "tags" : [ "Variables" ],
        "summary" : "Get the contents of all variable tables in an element.",
        "operationId" : "getVariables",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "description" : "Indicates which of workspace (w) or version (v) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v" ]
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "description" : "The id of the workspace, version in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configuration",
          "in" : "query",
          "description" : "URL-encoded string of configuration values (separated by `;`). See the [Configurations API Guide](https://onshape-public.github.io/docs/api-adv/configs/) for details.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "includeValuesAndReferencedVariables",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BTVariableTableInfo"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/variables/d/{did}/{wv}/{wvid}/e/{eid}/variablestudioreferences" : {
      "get" : {
        "tags" : [ "Variables" ],
        "summary" : "Get the Variable Studio references for an element.",
        "operationId" : "getVariableStudioReferences",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "description" : "Indicates which of workspace (w) or version (v) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v" ]
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "description" : "The id of the workspace, version in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTVariableStudioReferenceListInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/variables/d/{did}/{wv}/{wvid}/e/{eid}/variablestudioscope" : {
      "get" : {
        "tags" : [ "Variables" ],
        "summary" : "Get the scope of a Variable Studio.",
        "operationId" : "getVariableStudioScope",
        "parameters" : [ {
          "name" : "did",
          "in" : "path",
          "description" : "The id of the document in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkDocumentId",
          "in" : "query",
          "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "wv",
          "in" : "path",
          "description" : "Indicates which of workspace (w) or version (v) id is specified below.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "w", "v" ]
          }
        }, {
          "name" : "wvid",
          "in" : "path",
          "description" : "The id of the workspace, version in which the operation should be performed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eid",
          "in" : "path",
          "description" : "The id of the element in which to perform the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTVariableStudioScopeInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/versions" : {
      "get" : {
        "tags" : [ "Version" ],
        "summary" : "Get all versions of the Onshape REST APIs.",
        "operationId" : "getAllVersions",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Versions"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/webhooks" : {
      "get" : {
        "tags" : [ "Webhook" ],
        "summary" : "Get a list of all webhooks registered by a user or company.",
        "description" : "See [API Guide: Webhooks](https://onshape-public.github.io/docs/app-dev/webhook/) for implementation details.",
        "operationId" : "getWebhooks",
        "parameters" : [ {
          "name" : "company",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "user",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTWebhookInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Webhook" ],
        "summary" : "Create a new webhook.",
        "description" : "Click **Callbacks** below for a list of events your app can subscribe to. See [API Guide: Webhooks](https://onshape-public.github.io/docs/app-dev/webhook/) for implementation details.",
        "operationId" : "createWebhook",
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTWebhookParams"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTWebhookInfo"
                }
              }
            }
          }
        },
        "callbacks" : {
          "onshape.user.lifecycle.updateappsettings" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when user application settings are modified.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTUserAppMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.model.lifecycle.changed" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when a change to a model has been made.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTDocumentMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.model.translation.complete" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when a translation request is completed.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTDocumentMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.model.lifecycle.metadata" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when part or element metadata is modified.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTDocumentMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.model.lifecycle.createversion" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when a new version of a document is created.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTDocumentMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.model.lifecycle.createworkspace" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when a new workspace is created.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTWorkspaceMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.model.lifecycle.deleteworkspace" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when a workspace is deleted.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTWorkspaceMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.model.lifecycle.mergeworkspace" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when a version or workspace is merged.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTWorkspaceMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.model.lifecycle.restoreworkspace" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when a workspace is restored to a previous version or microversion.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTWorkspaceMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.model.lifecycle.updateworkspaceunits" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when workspace units or precisions are changed.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTWorkspaceMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.model.lifecycle.createelement" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when a new element is created.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTDocumentMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.model.lifecycle.deleteelement" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when an element is deleted.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTDocumentMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.document.lifecycle.statechange" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when an document changes state.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTDocumentMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.model.lifecycle.changed.externalreferences" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when an external reference changes.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTDocumentMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.model.lifecycle.changed.namedviews" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when the element's named views change.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTDocumentMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.document.lifecycle.created" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when a document is created.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTDocumentMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.revision.created" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occursˇ when a revision is created.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTRevisionMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.comment.create" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when a comment is created in a document.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTDocumentMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.comment.update" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when a comment is updated in a document.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTDocumentMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.comment.delete" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when a comment is deleted in a document.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTDocumentMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "onshape.workflow.transition" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs when a revision or release package transitions through workflow states.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTWorkflowMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "webhook.ping" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs either in response to a request by an application to call a registered webhook, or as a post-registration validation initiated by Onshape.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTWebhookLifecycleMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "webhook.register" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs in response to a notification registration API call.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTWebhookLifecycleMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          },
          "webhook.unregister" : {
            "{$request.body#/url}" : {
              "get" : {
                "summary" : "Occurs in response to a notification deregistation API call.",
                "requestBody" : {
                  "content" : {
                    "application/json" : {
                      "schema" : {
                        "$ref" : "#/components/schemas/BTWebhookLifecycleMessageBody"
                      }
                    }
                  }
                },
                "responses" : {
                  "200" : {
                    "description" : "OK"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/webhooks/{webhookid}" : {
      "get" : {
        "tags" : [ "Webhook" ],
        "summary" : "Get webhook info by webhook ID.",
        "description" : "See [API Guide: Webhooks](https://onshape-public.github.io/docs/app-dev/webhook/) for implementation details.",
        "operationId" : "getWebhook",
        "parameters" : [ {
          "name" : "webhookid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTWebhookInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "post" : {
        "tags" : [ "Webhook" ],
        "summary" : "Update a webhook.",
        "description" : "See [API Guide: Webhooks](https://onshape-public.github.io/docs/app-dev/webhook/) for implementation details.",
        "operationId" : "updateWebhook",
        "parameters" : [ {
          "name" : "webhookid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8; qs=0.09" : {
              "schema" : {
                "$ref" : "#/components/schemas/BTWebhookParams"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTWebhookInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      },
      "delete" : {
        "tags" : [ "Webhook" ],
        "summary" : "Unregister a webhook.",
        "description" : "See [API Guide: Webhooks](https://onshape-public.github.io/docs/app-dev/webhook/) for implementation details.",
        "operationId" : "unregisterWebhook",
        "parameters" : [ {
          "name" : "webhookid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "blockNotification",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/webhooks/{webhookid}/ping" : {
      "post" : {
        "tags" : [ "Webhook" ],
        "summary" : "Ping a webhook.",
        "description" : "See [API Guide: Webhooks](https://onshape-public.github.io/docs/app-dev/webhook/) for implementation details.",
        "operationId" : "pingWebhook",
        "parameters" : [ {
          "name" : "webhookid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/workflow/active" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "summary" : "Get all active workflows for the currently logged in user's company.",
        "description" : "Optionally takes a document ID to return all workflows for that document's owning company.",
        "operationId" : "getActiveWorkflows",
        "parameters" : [ {
          "name" : "documentId",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTActiveWorkflowInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/workflow/c/{companyId}/approvers" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "summary" : "Get all identities allowed to be approvers on a workflow object.",
        "description" : "* Identities can be users and/or teams. \n* For Enterprise accounts, also includes roles and any aliases that contain allowed users/teams. \n* Not object- or property-specific. \n* Used for delegation and company settings.",
        "operationId" : "getAllowedApprovers",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "expandTeams",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "includeSelf",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTWorkflowObserverOptionInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/workflow/companies/{cid}/objects" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "summary" : "Enumerate all of a company's workflowable objects.",
        "description" : "* For example, you can enumerate RELEASES, TASKS, etc in a company by last modified time. \n* Caller must be a company admin. \n* Specify `modifiedAfter` and use the `next` URI for complete enumeration.",
        "operationId" : "enumerateObjectWorkflows",
        "parameters" : [ {
          "name" : "cid",
          "in" : "path",
          "description" : "The company or enterprise ID that owns the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objectTypes",
          "in" : "query",
          "description" : "Optionally filter for specific workflowable types. Defaults to RELEASE and OBSOLETION",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAPIWorkflowableType"
            }
          }
        }, {
          "name" : "states",
          "in" : "query",
          "description" : "Optionally filter for specific workflow states like PENDING, RELEASED",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of items to return in a single API call",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        }, {
          "name" : "modifiedAfter",
          "in" : "query",
          "description" : "The earliest modification date of workflowable object to find.",
          "schema" : {
            "type" : "string",
            "format" : "date-time",
            "default" : "2000-01-01T00:00:00Z"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTListResponseBTObjectWorkflowInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    },
    "/workflow/obj/{objectId}/auditlog" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "summary" : "Get all audit log entries for a workflowable object.",
        "description" : "Get identities (users and/or teams) allowed to be approvers on a workflow object for the company. Not object- or property-specific; used for delegation and company settings",
        "operationId" : "getAuditLog",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json;charset=UTF-8; qs=0.09" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BTWorkflowAuditLogInfo"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ {
          "OAuth2" : [ "OAuth2Read" ],
          "BasicAuth" : [ "OAuth2Read" ]
        } ],
        "x-BTVisibility" : "PRODUCTION"
      }
    }
  },
  "components" : {
    "schemas" : {
      "Accessor" : {
        "type" : "object",
        "properties" : {
          "bufferView" : {
            "type" : "integer",
            "format" : "int32"
          },
          "byteOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "componentType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "max" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "min" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "name" : {
            "type" : "string"
          },
          "normalized" : {
            "type" : "boolean"
          },
          "sparse" : {
            "$ref" : "#/components/schemas/AccessorSparse"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "AccessorData" : {
        "type" : "object",
        "properties" : {
          "numComponentsPerElement" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalNumComponents" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AccessorModel" : {
        "type" : "object",
        "properties" : {
          "accessorData" : {
            "$ref" : "#/components/schemas/AccessorData"
          },
          "bufferViewModel" : {
            "$ref" : "#/components/schemas/BufferViewModel"
          },
          "byteOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "byteStride" : {
            "type" : "integer",
            "format" : "int32"
          },
          "componentSizeInBytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "componentType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "elementSizeInBytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "elementType" : {
            "$ref" : "#/components/schemas/ElementType"
          },
          "max" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "min" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "AccessorSparse" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "indices" : {
            "$ref" : "#/components/schemas/AccessorSparseIndices"
          },
          "values" : {
            "$ref" : "#/components/schemas/AccessorSparseValues"
          }
        }
      },
      "AccessorSparseIndices" : {
        "type" : "object",
        "properties" : {
          "bufferView" : {
            "type" : "integer",
            "format" : "int32"
          },
          "byteOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "componentType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          }
        }
      },
      "AccessorSparseValues" : {
        "type" : "object",
        "properties" : {
          "bufferView" : {
            "type" : "integer",
            "format" : "int32"
          },
          "byteOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          }
        }
      },
      "Animation" : {
        "type" : "object",
        "properties" : {
          "channels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnimationChannel"
            }
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "name" : {
            "type" : "string"
          },
          "samplers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnimationSampler"
            }
          }
        }
      },
      "AnimationChannel" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "sampler" : {
            "type" : "integer",
            "format" : "int32"
          },
          "target" : {
            "$ref" : "#/components/schemas/AnimationChannelTarget"
          }
        }
      },
      "AnimationChannelTarget" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "node" : {
            "type" : "integer",
            "format" : "int32"
          },
          "path" : {
            "type" : "string"
          }
        }
      },
      "AnimationSampler" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "input" : {
            "type" : "integer",
            "format" : "int32"
          },
          "interpolation" : {
            "type" : "string"
          },
          "output" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ApiResponse" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MediaType"
            }
          },
          "description" : {
            "type" : "string"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "get$ref" : {
            "type" : "string"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Header"
            }
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Link"
            }
          }
        }
      },
      "Asset" : {
        "type" : "object",
        "properties" : {
          "copyright" : {
            "type" : "string"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "generator" : {
            "type" : "string"
          },
          "minVersion" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          }
        }
      },
      "BTAPIApplicationExtensionInfo" : {
        "type" : "object",
        "properties" : {
          "actionBody" : {
            "type" : "string"
          },
          "actionType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "actionUrl" : {
            "type" : "string"
          },
          "applicationId" : {
            "type" : "string"
          },
          "clientId" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "extensionContext" : {
            "type" : "integer",
            "format" : "int64"
          },
          "extensionLocation" : {
            "type" : "integer",
            "format" : "int64"
          },
          "hasIcon" : {
            "type" : "boolean"
          },
          "hasPendingIcon" : {
            "type" : "boolean"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "iconUrl" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "parentAppPrimaryFormat" : {
            "type" : "string"
          },
          "showResponse" : {
            "type" : "boolean"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "visibilityRule" : {
            "type" : "string"
          }
        }
      },
      "BTAPIApplicationSummaryInfo" : {
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "state" : {
            "type" : "integer",
            "format" : "int32"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTAPIWorkflowableType" : {
        "type" : "string",
        "description" : "All workflowable types that can be enumerated.",
        "enum" : [ "RELEASE", "TASK", "ASSIGNMENT", "OBSOLETION" ]
      },
      "BTAclEntryInfo" : {
        "type" : "object",
        "properties" : {
          "acceptOwnerTransfer" : {
            "type" : "boolean"
          },
          "companyName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "enterpriseMember" : {
            "type" : "boolean"
          },
          "entryId" : {
            "type" : "string"
          },
          "entryState" : {
            "$ref" : "#/components/schemas/BTUserState"
          },
          "entryType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "image" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "objectId" : {
            "type" : "string"
          },
          "pendingOwnerTransfer" : {
            "type" : "boolean"
          },
          "permission" : {
            "type" : "integer",
            "format" : "int64"
          },
          "permissionSet" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "proCompanySubtype" : {
            "type" : "integer",
            "format" : "int32"
          },
          "teamName" : {
            "type" : "string"
          }
        }
      },
      "BTAclInfo" : {
        "type" : "object",
        "properties" : {
          "admin" : {
            "type" : "boolean"
          },
          "entries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAclEntryInfo"
            }
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "inheritedAcls" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTInheritedAclInfo"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "objectId" : {
            "type" : "string"
          },
          "objectType" : {
            "type" : "integer",
            "format" : "int64"
          },
          "owner" : {
            "$ref" : "#/components/schemas/BTOwnerInfo"
          },
          "public" : {
            "type" : "boolean"
          },
          "sharedWithSupport" : {
            "type" : "boolean"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "visibility" : {
            "type" : "string"
          }
        }
      },
      "BTAclParams" : {
        "type" : "object",
        "properties" : {
          "anonymousAccessAllowed" : {
            "type" : "boolean"
          },
          "anonymousAllowsExport" : {
            "type" : "boolean"
          },
          "docStateParams" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "public" : {
            "type" : "boolean"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTActiveSheetMetalFilter-2944" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isFromActiveSheetMetal" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTActiveWorkflowInfo" : {
        "type" : "object",
        "properties" : {
          "allowReleaseItemsFromOtherDocuments" : {
            "type" : "boolean"
          },
          "canCurrentUserCreateReleases" : {
            "type" : "boolean"
          },
          "canCurrentUserEditStandardContent" : {
            "type" : "boolean"
          },
          "canCurrentUserManageWorkflows" : {
            "type" : "boolean"
          },
          "canCurrentUserSeeArenaItemLink" : {
            "type" : "boolean"
          },
          "canCurrentUserSyncBomToArena" : {
            "type" : "boolean"
          },
          "canCurrentUserSyncRevisionsToArena" : {
            "type" : "boolean"
          },
          "canCurrentUserSyncStandardContentToArena" : {
            "type" : "boolean"
          },
          "canCurrentUserSyncToArena" : {
            "type" : "boolean"
          },
          "companyId" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "drawingCanDuplicatePartNumber" : {
            "type" : "boolean"
          },
          "enabledActiveMultipleWorkflows" : {
            "type" : "boolean"
          },
          "hasInactiveCustomWorkflows" : {
            "type" : "boolean"
          },
          "obsoletionWorkflow" : {
            "$ref" : "#/components/schemas/BTPublishedWorkflowInfo"
          },
          "obsoletionWorkflowId" : {
            "type" : "string"
          },
          "osCategoryIdToArenaNumberFormatId" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "partNumberingSchemeId" : {
            "type" : "string"
          },
          "pickableWorkflows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTPublishedWorkflowInfo"
            }
          },
          "releaseWorkflow" : {
            "$ref" : "#/components/schemas/BTPublishedWorkflowInfo"
          },
          "releaseWorkflowId" : {
            "type" : "string"
          },
          "releaseableApplications" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "standardContentNumberingSchemeId" : {
            "type" : "string"
          },
          "standardContentUsingAutoNumbering" : {
            "type" : "boolean"
          },
          "standardContentUsingThirdPartyPartNumbering" : {
            "type" : "boolean"
          },
          "usingAutoPartNumbering" : {
            "type" : "boolean"
          },
          "usingManagedWorkflow" : {
            "type" : "boolean"
          },
          "usingThirdPartyPartNumbering" : {
            "type" : "boolean"
          }
        }
      },
      "BTAddressInfo" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "countryCode" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "stateCode" : {
            "type" : "string"
          },
          "zip" : {
            "type" : "string"
          }
        }
      },
      "BTAliasEntryInfo" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "identity" : {
            "$ref" : "#/components/schemas/BTIdentityInfo"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTAliasEntryParams" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "teamId" : {
            "type" : "string"
          },
          "userId" : {
            "type" : "string"
          }
        }
      },
      "BTAliasInfo" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "entries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAliasEntryInfo"
            }
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "identities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTIdentityInfo"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTAliasParams" : {
        "type" : "object",
        "properties" : {
          "additions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAliasEntryParams"
            }
          },
          "description" : {
            "type" : "string"
          },
          "entries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAliasEntryParams"
            }
          },
          "name" : {
            "type" : "string"
          },
          "removals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAliasEntryParams"
            }
          }
        }
      },
      "BTAllowEdgePointFilter-2371" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "allowsEdgePoint" : {
              "type" : "boolean"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTAllowFlattenedGeometryFilter-2140" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "allowsFlattenedGeometry" : {
              "type" : "boolean"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTAllowMeshGeometryFilter-1026" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "allowsMeshGeometry" : {
              "type" : "boolean"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTAllowedMateTypeFilter-1511" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMateFilter-162"
        }, {
          "type" : "object",
          "properties" : {
            "allowedMateTypes" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/GBTMateType"
              }
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTAndFilter-110" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "operand1" : {
              "$ref" : "#/components/schemas/BTQueryFilter-183"
            },
            "operand2" : {
              "$ref" : "#/components/schemas/BTQueryFilter-183"
            }
          }
        } ]
      },
      "BTAngularDimensionDisplayData-320" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTArcLengthDimensionDisplayData-1018" : "#/components/schemas/BTArcLengthDimensionDisplayData-1018"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDimensionDisplayData-323"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "clockwise" : {
              "type" : "boolean"
            },
            "positionR" : {
              "type" : "number",
              "format" : "double"
            },
            "positionT" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessEndPoint0r" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessEndPoint0t" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessEndPoint1r" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessEndPoint1t" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessMaxPoint0r" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessMaxPoint1r" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessMinPoint0r" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessMinPoint1r" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTAnnotationDisplayData-3225" : {
        "type" : "object",
        "properties" : {
          "annotationPlane" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          },
          "baseNormal" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          },
          "basePoint" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "deterministicId" : {
            "type" : "string"
          },
          "dxdySegments" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          },
          "numberOfLeaderSegements" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTAnnotationGTolDisplayData-4887" : "#/components/schemas/BTAnnotationGTolDisplayData-4887",
            "BTAnnotationWeldDisplayData-4919" : "#/components/schemas/BTAnnotationWeldDisplayData-4919",
            "BTDatumDisplayData-3408" : "#/components/schemas/BTDatumDisplayData-3408"
          }
        }
      },
      "BTAnnotationElementDisplayData-894" : {
        "type" : "object",
        "properties" : {
          "annotationIdToDisplayObject" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTAnnotationDisplayData-3225"
            }
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        }
      },
      "BTAnnotationGTolDisplayData-4887" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTAnnotationDisplayData-3225"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "rows" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTAnnotationGTolRowDisplayData-4397"
              }
            }
          }
        } ]
      },
      "BTAnnotationGTolRowDisplayData-4397" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "constraintType" : {
            "$ref" : "#/components/schemas/GBTGTolConstraintType"
          },
          "references" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tolerance" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "BTAnnotationWeldDisplayData-4919" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTAnnotationDisplayData-3225"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "jointType" : {
              "$ref" : "#/components/schemas/GBTWeldJointType"
            },
            "lowerGroove" : {
              "type" : "number",
              "format" : "double"
            },
            "lowerRootOpening" : {
              "type" : "number",
              "format" : "double"
            },
            "lowerValueFour" : {
              "type" : "number",
              "format" : "double"
            },
            "lowerValueOne" : {
              "type" : "number",
              "format" : "double"
            },
            "lowerValueThree" : {
              "type" : "number",
              "format" : "double"
            },
            "lowerValueTwo" : {
              "type" : "number",
              "format" : "double"
            },
            "lowerWeldType" : {
              "$ref" : "#/components/schemas/GBTWeldType"
            },
            "reference" : {
              "type" : "string"
            },
            "upperGroove" : {
              "type" : "number",
              "format" : "double"
            },
            "upperRootOpening" : {
              "type" : "number",
              "format" : "double"
            },
            "upperValueFour" : {
              "type" : "number",
              "format" : "double"
            },
            "upperValueOne" : {
              "type" : "number",
              "format" : "double"
            },
            "upperValueThree" : {
              "type" : "number",
              "format" : "double"
            },
            "upperValueTwo" : {
              "type" : "number",
              "format" : "double"
            },
            "upperWeldType" : {
              "$ref" : "#/components/schemas/GBTWeldType"
            }
          }
        } ]
      },
      "BTApiConfiguration" : {
        "type" : "object",
        "properties" : {
          "current" : {
            "type" : "boolean"
          },
          "default" : {
            "type" : "boolean"
          },
          "null" : {
            "type" : "boolean"
          },
          "parameterMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "standardContent" : {
            "type" : "boolean"
          },
          "standardContentParametersId" : {
            "type" : "string"
          }
        }
      },
      "BTApiTable-2300" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "columns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTApiTableColumn-3141"
            }
          },
          "entityIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "rows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTApiTableRow-2915"
            }
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "BTApiTableColumn-3141" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "header" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "textAlignment" : {
            "$ref" : "#/components/schemas/GBTTableTextAlignment"
          }
        }
      },
      "BTApiTableList-1223" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "tables" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTApiTable-2300"
            }
          }
        }
      },
      "BTApiTableRow-2915" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "callout" : {
            "type" : "string"
          },
          "columnIdToValue" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "entityIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTApiVersion" : {
        "type" : "string",
        "enum" : [ "UNDEFINED", "V1_START", "V2_SERIALIZATION_UNIFICATION", "V3_NEW_BOM_FORMAT", "V4_TRANSACTIONS_NO_NEW", "V5_BODY_DETAILS_COMPOSITE_REFERENCE", "V6_JSON_EDIT_RESPONSE_BUGFIX", "V7_SKETCH_ENDPOINT_INCLUDES_SOLVE_STATUS", "V8_RESTORE_NOOP_NO_NEW_MICROVERSION", "V9_INCLUDE_DETERMINISTIC_IDS_TO_QUERY_RESPONSES", "V10_VALIDATE_VISIBILTY_CONDITIONS_FOR_PS_CONFIG_PARAMS" ]
      },
      "BTAppArrayInfoBTAppDrawingViewInfo" : {
        "type" : "object",
        "properties" : {
          "changeId" : {
            "type" : "string"
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "`0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`",
            "format" : "int32"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "A human-readable value for the error that occurred, if one occurred."
          },
          "errorValue" : {
            "$ref" : "#/components/schemas/BTAppElementErrorCode"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAppDrawingViewInfo"
            }
          },
          "parentChangeId" : {
            "type" : "string"
          }
        }
      },
      "BTAppAssociativeDataArrayInfo" : {
        "type" : "object",
        "properties" : {
          "changeId" : {
            "type" : "string"
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "`0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`",
            "format" : "int32"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "A human-readable value for the error that occurred, if one occurred."
          },
          "errorValue" : {
            "$ref" : "#/components/schemas/BTAppElementErrorCode"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAssociativeDataInfo"
            }
          },
          "parentChangeId" : {
            "type" : "string"
          }
        }
      },
      "BTAppDrawingViewInfo" : {
        "type" : "object",
        "properties" : {
          "associativityChangeId" : {
            "type" : "string"
          },
          "bomReferenceId" : {
            "type" : "string"
          },
          "brokenOutBBoxes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTBoundingBox-1052"
            }
          },
          "brokenOutEndConditions" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTBrokenOutEndCondition-1107"
            }
          },
          "brokenOutPointNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "changeId" : {
            "type" : "string"
          },
          "computeIntersection" : {
            "type" : "boolean"
          },
          "cutPoint" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "depthSectionEndCondition" : {
            "$ref" : "#/components/schemas/BTBrokenOutEndCondition-1107"
          },
          "displayStateId" : {
            "type" : "string"
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "`0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`",
            "format" : "int32"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "A human-readable value for the error that occurred, if one occurred."
          },
          "errorValue" : {
            "$ref" : "#/components/schemas/BTAppElementErrorCode"
          },
          "explodedViewId" : {
            "type" : "string"
          },
          "hasSecondaryViewDefinition" : {
            "type" : "boolean"
          },
          "hiddenLines" : {
            "type" : "string"
          },
          "ignoreFaultyParts" : {
            "type" : "boolean"
          },
          "includeHiddenInstances" : {
            "type" : "boolean"
          },
          "includeSurfaces" : {
            "type" : "boolean"
          },
          "includeWires" : {
            "type" : "boolean"
          },
          "isAlignedSection" : {
            "type" : "boolean"
          },
          "isBrokenOutSection" : {
            "type" : "boolean"
          },
          "isCopiedView" : {
            "type" : "boolean"
          },
          "isCropView" : {
            "type" : "boolean"
          },
          "isPartialSection" : {
            "type" : "boolean"
          },
          "isSectionOfAlignedSection" : {
            "type" : "boolean"
          },
          "isSectionOfSectionOnBase" : {
            "type" : "boolean"
          },
          "isSurface" : {
            "type" : "boolean"
          },
          "modelReferenceId" : {
            "type" : "string"
          },
          "modificationId" : {
            "type" : "string"
          },
          "namedPositionId" : {
            "type" : "string"
          },
          "occurrenceOrQueryToGeometryProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTAppElementViewGeometryProperties-1100"
            }
          },
          "offsetSectionPoints" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "parentChangeId" : {
            "type" : "string"
          },
          "parentViewId" : {
            "type" : "string"
          },
          "perspective" : {
            "type" : "boolean"
          },
          "projectionAngle" : {
            "type" : "string"
          },
          "qualityOption" : {
            "type" : "integer",
            "format" : "int32"
          },
          "renderSketches" : {
            "type" : "boolean"
          },
          "sectionId" : {
            "type" : "string"
          },
          "showAutoCenterlines" : {
            "type" : "boolean"
          },
          "showAutoCentermarks" : {
            "type" : "boolean"
          },
          "showCutGeomOnly" : {
            "type" : "boolean"
          },
          "showTangentLines" : {
            "type" : "boolean"
          },
          "showThreads" : {
            "type" : "boolean"
          },
          "showViewingPlane" : {
            "type" : "boolean"
          },
          "simplificationOption" : {
            "type" : "integer",
            "format" : "int32"
          },
          "simplificationThreshold" : {
            "type" : "number",
            "format" : "double"
          },
          "useParentViewSectionData" : {
            "type" : "boolean"
          },
          "viewDirection" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "viewId" : {
            "type" : "string"
          },
          "viewMatrix" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "viewVersion" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BTAppElementBasicInfo" : {
        "type" : "object",
        "properties" : {
          "changeId" : {
            "type" : "string"
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "`0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`",
            "format" : "int32"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "A human-readable value for the error that occurred, if one occurred."
          },
          "errorValue" : {
            "$ref" : "#/components/schemas/BTAppElementErrorCode"
          },
          "parentChangeId" : {
            "type" : "string"
          }
        }
      },
      "BTAppElementBulkCreateInfo" : {
        "required" : [ "documentMicroversionId" ],
        "type" : "object",
        "properties" : {
          "documentMicroversionId" : {
            "type" : "string",
            "description" : "The latest document microversion, after the edit was committed."
          },
          "elementIds" : {
            "type" : "array",
            "description" : "The ids of the created elements.",
            "items" : {
              "type" : "string",
              "description" : "The ids of the created elements."
            }
          },
          "elementMicroversions" : {
            "type" : "array",
            "description" : "The microversion ids of the created elements, at creation time.",
            "items" : {
              "type" : "string",
              "description" : "The microversion ids of the created elements, at creation time."
            }
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "`0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`",
            "format" : "int32"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "A human-readable value for the error that occurred, if one occurred."
          },
          "errorValue" : {
            "$ref" : "#/components/schemas/BTAppElementErrorCode"
          }
        }
      },
      "BTAppElementBulkCreateParams" : {
        "required" : [ "formatId" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The label that will appear in the document's edit history for this operation. If blank, a value will be auto-generated."
          },
          "formatId" : {
            "type" : "string",
            "description" : "The data type of the application. This string allows an application to distinguish their elements from elements of another application."
          },
          "location" : {
            "$ref" : "#/components/schemas/BTElementLocationParams"
          },
          "names" : {
            "type" : "array",
            "description" : "The name of the element being created. If blank, a name will be auto-generated.",
            "items" : {
              "type" : "string",
              "description" : "The name of the element being created. If blank, a name will be auto-generated."
            }
          }
        }
      },
      "BTAppElementBulkModifyInfo" : {
        "type" : "object",
        "properties" : {
          "changeId" : {
            "type" : "string",
            "description" : "The latest change id for the element, after the edit was committed. Deprecated in favor of elementChangeResults.",
            "deprecated" : true
          },
          "documentMicroversionId" : {
            "type" : "string",
            "description" : "The latest change id for the document, after the edit was committed."
          },
          "elementChangeResults" : {
            "type" : "array",
            "description" : "The results of editing each element affected by the edit.",
            "items" : {
              "$ref" : "#/components/schemas/BTAppElementModifyInfo"
            }
          },
          "elementId" : {
            "type" : "string",
            "description" : "The id of the edited element, if a single element was edited. Deprecated in favor of elementChangeResults.",
            "deprecated" : true
          },
          "elementIds" : {
            "type" : "array",
            "description" : "The ids of the edited elements. Deprecated in favor of elementChangeResults.",
            "deprecated" : true,
            "items" : {
              "type" : "string"
            }
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "`0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`",
            "format" : "int32"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "A human-readable value for the error that occurred, if one occurred."
          },
          "errorValue" : {
            "$ref" : "#/components/schemas/BTAppElementErrorCode"
          },
          "parentChangeId" : {
            "type" : "string",
            "description" : "The latest change id for the element, before the edit was made. Deprecated in favor of elementChangeResults.",
            "deprecated" : true
          },
          "parentDocumentMicroversionId" : {
            "type" : "string",
            "description" : "The latest change id for the document, before the edit was made."
          },
          "propertyEditsMerged" : {
            "type" : "boolean",
            "description" : "Whether the properties of any edited application element were changed after the transaction was created. Deprecated in favor of elementChangeResults.",
            "deprecated" : true
          },
          "transactionId" : {
            "type" : "string",
            "description" : "The id of the transaction in which the edit was applied. Deprecated in favor of elementChangeResults.",
            "deprecated" : true
          }
        }
      },
      "BTAppElementChangeParams" : {
        "required" : [ "subelementId" ],
        "type" : "object",
        "properties" : {
          "baseContent" : {
            "type" : "string",
            "description" : "This base64-encoded data is treated as a full representation of the sub-element's data and all deltas previously added will no longer be returned.",
            "format" : "byte"
          },
          "delta" : {
            "type" : "string",
            "description" : "This base64-encoded data is a delta which the application can apply to the last added baseContent data.",
            "format" : "byte"
          },
          "subelementId" : {
            "type" : "string",
            "description" : "The id of the subelement to edit. The value is determined by the application."
          }
        }
      },
      "BTAppElementCommitTransactionParams" : {
        "type" : "object",
        "properties" : {
          "allowMerge" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string",
            "description" : "The label that will appear in the document's edit history for this operation. If blank, a value will be auto-generated."
          },
          "returnError" : {
            "type" : "boolean"
          },
          "transactionIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTAppElementContentDeltaInfo" : {
        "type" : "object",
        "properties" : {
          "delta" : {
            "type" : "string"
          }
        }
      },
      "BTAppElementContentEntryInfo" : {
        "type" : "object",
        "properties" : {
          "baseContent" : {
            "type" : "string"
          },
          "deltas" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAppElementContentDeltaInfo"
            }
          },
          "subelementId" : {
            "type" : "string"
          }
        }
      },
      "BTAppElementContentInfo" : {
        "type" : "object",
        "properties" : {
          "changeId" : {
            "type" : "string"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAppElementContentEntryInfo"
            }
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "`0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`",
            "format" : "int32"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "A human-readable value for the error that occurred, if one occurred."
          },
          "errorValue" : {
            "$ref" : "#/components/schemas/BTAppElementErrorCode"
          }
        }
      },
      "BTAppElementErrorCode" : {
        "type" : "string",
        "enum" : [ "OK", "TRANSACTION_CONFLICT", "NOT_FOUND", "INCONSISTENT_CHANGES" ]
      },
      "BTAppElementHistoryEntryInfo" : {
        "type" : "object",
        "properties" : {
          "changeId" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "BTAppElementHistoryInfo" : {
        "type" : "object",
        "properties" : {
          "changes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAppElementHistoryEntryInfo"
            }
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "`0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`",
            "format" : "int32"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "A human-readable value for the error that occurred, if one occurred."
          },
          "errorValue" : {
            "$ref" : "#/components/schemas/BTAppElementErrorCode"
          }
        }
      },
      "BTAppElementIdsInfo" : {
        "type" : "object",
        "properties" : {
          "changeId" : {
            "type" : "string"
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "`0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`",
            "format" : "int32"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "A human-readable value for the error that occurred, if one occurred."
          },
          "errorValue" : {
            "$ref" : "#/components/schemas/BTAppElementErrorCode"
          },
          "subelementIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTAppElementModifyInfo" : {
        "required" : [ "changeId" ],
        "type" : "object",
        "properties" : {
          "changeId" : {
            "type" : "string",
            "description" : "The latest change id for the element, after the edit was committed."
          },
          "elementId" : {
            "type" : "string",
            "description" : "The id of the edited element."
          },
          "elementIds" : {
            "type" : "array",
            "description" : "The ids of the edited elements, if multiple elements were edited.",
            "items" : {
              "type" : "string"
            }
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "`0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`",
            "format" : "int32"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "A human-readable value for the error that occurred, if one occurred."
          },
          "errorValue" : {
            "$ref" : "#/components/schemas/BTAppElementErrorCode"
          },
          "jsonDifference" : {
            "$ref" : "#/components/schemas/BTDiffJsonResponse-2725"
          },
          "parentChangeId" : {
            "type" : "string",
            "description" : "The latest change id for the element, before the edit was made."
          },
          "propertyEditsMerged" : {
            "type" : "boolean",
            "description" : "When committing a transaction, this field indicates if the properties of the application element were changed after the transaction was created."
          },
          "transactionId" : {
            "type" : "string",
            "description" : "The id of the transaction in which the edit was applied."
          }
        }
      },
      "BTAppElementParams" : {
        "required" : [ "formatId" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The label that will appear in the document's edit history for this operation. If blank, a value will be auto-generated."
          },
          "formatId" : {
            "type" : "string",
            "description" : "The data type of the application. This string allows an application to distinguish their elements from elements of another application."
          },
          "jsonTree" : {
            "type" : "object",
            "description" : "Initialization data for the new element's json tree.",
            "example" : "{ 'stringKey': 'bar', 'arrayKey': [ 1, 2, 3 ], 'objectKey': { 'subKey': false } }"
          },
          "location" : {
            "$ref" : "#/components/schemas/BTElementLocationParams"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the element being created. If blank, a name will be auto-generated."
          },
          "subelements" : {
            "type" : "array",
            "description" : "Initialization data for the new element's subelements.",
            "items" : {
              "$ref" : "#/components/schemas/BTAppElementChangeParams"
            }
          }
        }
      },
      "BTAppElementParamsArrayBTCopyViewAssociativeDataParams" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTCopyViewAssociativeDataParams"
            }
          },
          "parentChangeId" : {
            "type" : "string"
          },
          "transactionId" : {
            "type" : "string"
          }
        }
      },
      "BTAppElementReferenceInfo" : {
        "required" : [ "changeId" ],
        "type" : "object",
        "properties" : {
          "changeId" : {
            "type" : "string",
            "description" : "The latest change id for the element, after the edit was committed."
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "`0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`",
            "format" : "int32"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "A human-readable value for the error that occurred, if one occurred."
          },
          "errorValue" : {
            "$ref" : "#/components/schemas/BTAppElementErrorCode"
          },
          "parentChangeId" : {
            "type" : "string",
            "description" : "The latest change id for the element, before the edit was made."
          },
          "referenceId" : {
            "type" : "string"
          },
          "transactionId" : {
            "type" : "string",
            "description" : "The id of the transaction in which the edit was applied."
          }
        }
      },
      "BTAppElementReferenceParams" : {
        "type" : "object",
        "properties" : {
          "hasDocumentMicroversions" : {
            "type" : "boolean"
          },
          "idTag" : {
            "type" : "string"
          },
          "idTagMicroversionId" : {
            "type" : "string"
          },
          "isLocked" : {
            "type" : "boolean"
          },
          "isSketchOnly" : {
            "type" : "boolean"
          },
          "parentChangeId" : {
            "type" : "string"
          },
          "parentViewId" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "pureSketch" : {
            "type" : "boolean"
          },
          "referenceType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "returnError" : {
            "type" : "boolean"
          },
          "revision" : {
            "type" : "string"
          },
          "sketchIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "targetConfiguration" : {
            "type" : "string"
          },
          "targetDocumentId" : {
            "type" : "string"
          },
          "targetElementId" : {
            "type" : "string"
          },
          "targetMicroversionId" : {
            "type" : "string"
          },
          "targetVersionId" : {
            "type" : "string"
          },
          "trackNewVersions" : {
            "type" : "boolean"
          },
          "transactionId" : {
            "type" : "string"
          },
          "updateSketchInfo" : {
            "type" : "boolean"
          }
        }
      },
      "BTAppElementReferenceResolveInfo" : {
        "type" : "object",
        "properties" : {
          "changeId" : {
            "type" : "string"
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "`0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`",
            "format" : "int32"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "A human-readable value for the error that occurred, if one occurred."
          },
          "errorValue" : {
            "$ref" : "#/components/schemas/BTAppElementErrorCode"
          },
          "idTag" : {
            "type" : "string"
          },
          "idTagIsValid" : {
            "type" : "boolean"
          },
          "isConfigurable" : {
            "type" : "boolean"
          },
          "isFlattenedPart" : {
            "type" : "boolean"
          },
          "isLocked" : {
            "type" : "boolean"
          },
          "isSketchOnly" : {
            "type" : "boolean"
          },
          "isSurface" : {
            "type" : "boolean"
          },
          "latestElementMicroversionId" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "referenceId" : {
            "type" : "string"
          },
          "referenceType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "resolvedDocumentMicroversionId" : {
            "type" : "string"
          },
          "resolvedElementMicroversionId" : {
            "type" : "string"
          },
          "revision" : {
            "type" : "string"
          },
          "sketchIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sourceElementId" : {
            "type" : "string"
          },
          "targetConfiguration" : {
            "type" : "string"
          },
          "targetDocumentId" : {
            "type" : "string"
          },
          "targetDocumentMicroversionId" : {
            "type" : "string"
          },
          "targetElementId" : {
            "type" : "string"
          },
          "targetElementMicroversionId" : {
            "type" : "string"
          },
          "targetVersionId" : {
            "type" : "string",
            "description" : "Reference to a part or assembly in a version; `NULL` when reference is in a workspace."
          },
          "trackNewVersions" : {
            "type" : "boolean"
          }
        }
      },
      "BTAppElementReferencesResolveInfo" : {
        "type" : "object",
        "properties" : {
          "resolvedReferences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAppElementReferenceResolveInfo"
            }
          },
          "unresolvedReferenceIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTAppElementStartTransactionParams" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The label that will appear in the document's edit history for this operation. If blank, a value will be auto-generated."
          },
          "parentChangeId" : {
            "type" : "string"
          },
          "returnError" : {
            "type" : "boolean"
          }
        }
      },
      "BTAppElementTransactionsInfo" : {
        "type" : "object",
        "properties" : {
          "elementTransactions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTElementTransaction"
            }
          },
          "errorCode" : {
            "type" : "integer",
            "description" : "`0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`",
            "format" : "int32"
          },
          "errorDescription" : {
            "type" : "string",
            "description" : "A human-readable value for the error that occurred, if one occurred."
          },
          "errorValue" : {
            "$ref" : "#/components/schemas/BTAppElementErrorCode"
          }
        }
      },
      "BTAppElementUpdateParams" : {
        "type" : "object",
        "properties" : {
          "changes" : {
            "type" : "array",
            "description" : "Edits to be applied to the element's subelement data.",
            "items" : {
              "$ref" : "#/components/schemas/BTAppElementChangeParams"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "The label that will appear in the document's edit history for this operation. If blank, a value will be auto-generated."
          },
          "jsonPatch" : {
            "type" : "string",
            "description" : "A json patch that will be applied to the application element's json data."
          },
          "jsonTreeEdit" : {
            "$ref" : "#/components/schemas/BTJEdit-3734"
          },
          "parentChangeId" : {
            "type" : "string",
            "description" : "The id of the last change made to this application element. This can be retrieved from the response for any app element modification endpoint."
          },
          "propertyUpdates" : {
            "type" : "array",
            "description" : "Edits to be applied to the element's metadata.",
            "items" : {
              "$ref" : "#/components/schemas/BTMetadataPropertyUpdateParams"
            }
          },
          "returnError" : {
            "type" : "boolean",
            "description" : "If true, errors in request processing will be returned in a 200 response with a meaningful description. Otherwise, errors will result in a relevant HTTP error response."
          },
          "returnJsonDifferenceFormat" : {
            "type" : "string",
            "description" : "If specified, and jsonTreeEdit is non-empty, the json difference will be returned in this format, otherwise no json difference will be returned.",
            "enum" : [ "default", "full_path", "json_patch" ]
          },
          "transactionId" : {
            "type" : "string",
            "description" : "The id of the transaction in which this operation should take place. Transaction ids can be generated through the AppElement startTransaction API."
          }
        }
      },
      "BTAppElementViewGeometryProperties-1100" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "propertyToValue" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "BTAppModificationRequestInfo" : {
        "type" : "object",
        "properties" : {
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "failureReason" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "output" : {
            "type" : "string"
          },
          "outputStatusCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parentDocumentMicroversionId" : {
            "type" : "string"
          },
          "parentElementMicroversionId" : {
            "type" : "string"
          },
          "requestState" : {
            "$ref" : "#/components/schemas/BTAppModificationRequestState"
          },
          "resultDocumentMicroversionId" : {
            "type" : "string"
          },
          "resultElementMicroversionId" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTAppModificationRequestState" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "DONE", "FAILED" ]
      },
      "BTAppearanceOverride-2517" : {
        "type" : "object",
        "properties" : {
          "appearance" : {
            "$ref" : "#/components/schemas/BTGraphicsAppearance-1152"
          },
          "appearanceReset" : {
            "type" : "boolean"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "copyWithoutEntities" : {
            "$ref" : "#/components/schemas/BTAppearanceOverride-2517"
          },
          "entityDeterministicIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "isDeletion" : {
            "type" : "boolean"
          }
        }
      },
      "BTApplicationElementThumbnailParams" : {
        "type" : "object",
        "properties" : {
          "base64EncodedImage" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "imageHeight" : {
            "type" : "integer",
            "format" : "int32"
          },
          "imageWidth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isPrimary" : {
            "type" : "boolean"
          },
          "uniqueId" : {
            "type" : "string"
          }
        }
      },
      "BTApplicationElementThumbnailParamsArray" : {
        "type" : "object",
        "properties" : {
          "thumbnails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTApplicationElementThumbnailParams"
            }
          }
        }
      },
      "BTApplicationSettingsType" : {
        "type" : "string",
        "enum" : [ "USER", "COMPANY", "TEAM" ]
      },
      "BTApplicationTargetInfo" : {
        "type" : "object",
        "properties" : {
          "baseHref" : {
            "type" : "string",
            "format" : "uri"
          },
          "clientId" : {
            "type" : "string"
          },
          "supportsCollaboration" : {
            "type" : "boolean"
          },
          "tabIconHref" : {
            "type" : "string",
            "format" : "uri"
          }
        }
      },
      "BTArcLengthDimensionDisplayData-1018" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTAngularDimensionDisplayData-320"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTAssemblyDefinitionInfo" : {
        "type" : "object",
        "properties" : {
          "partStudioFeatures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyPsFeatureInfo"
            }
          },
          "parts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyPartInfo"
            }
          },
          "rootAssembly" : {
            "$ref" : "#/components/schemas/BTRootAssemblyInfo"
          },
          "subAssemblies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTSubAssemblyInfo"
            }
          }
        }
      },
      "BTAssemblyFeatureDataInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "BTAssemblyFeatureInfo" : {
        "type" : "object",
        "properties" : {
          "featureData" : {
            "$ref" : "#/components/schemas/BTAssemblyFeatureDataInfo"
          },
          "featureType" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "suppressed" : {
            "type" : "boolean"
          }
        },
        "description" : "List of Assembly features including those are created by replicates."
      },
      "BTAssemblyFeatureListResponse-1174" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFeatureApiBase-1430"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "featureStates" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BTFeatureState-1688"
              }
            },
            "features" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
              }
            },
            "isComplete" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTAssemblyInsertTransformedInstancesResponse" : {
        "type" : "object",
        "properties" : {
          "insertInstanceResponses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyInstanceOccurrenceInfo"
            }
          },
          "insertResponses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyOccurrenceInfo"
            }
          }
        }
      },
      "BTAssemblyInstance-947" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTInstance-642"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTAssemblyInstanceDefinitionParams" : {
        "required" : [ "documentId" ],
        "type" : "object",
        "properties" : {
          "configuration" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "featureId" : {
            "type" : "string"
          },
          "includePartTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GBTInsertableType"
            }
          },
          "isAssembly" : {
            "type" : "boolean"
          },
          "isHidden" : {
            "type" : "boolean"
          },
          "isSuppressed" : {
            "type" : "boolean"
          },
          "isWholePartStudio" : {
            "type" : "boolean"
          },
          "microversionId" : {
            "type" : "string"
          },
          "partId" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "revision" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          }
        }
      },
      "BTAssemblyInstanceInfo" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "documentMicroversion" : {
            "type" : "string"
          },
          "documentVersion" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "featureId" : {
            "type" : "string"
          },
          "fullConfiguration" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "isStandardContent" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "partId" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "revision" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/BTAssemblyInstanceStatus"
          },
          "suppressed" : {
            "type" : "boolean"
          },
          "type" : {
            "$ref" : "#/components/schemas/BTAssemblyInstanceType"
          }
        },
        "description" : "List of instances including those created by patterns and replicates."
      },
      "BTAssemblyInstanceOccurrenceInfo" : {
        "type" : "object",
        "properties" : {
          "occurrences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyOccurrenceInfo"
            }
          }
        }
      },
      "BTAssemblyInstanceStatus" : {
        "type" : "string",
        "enum" : [ "DeletedElement" ]
      },
      "BTAssemblyInstanceType" : {
        "type" : "string",
        "enum" : [ "Assembly", "Feature", "Part", "Unknown" ]
      },
      "BTAssemblyItemMetadataInfo" : {
        "type" : "object",
        "properties" : {
          "children" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyItemMetadataInfo"
            }
          },
          "propertyIdToError" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "propertyIdToEvalInfo" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "propertyIdToOverrideStatus" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "propertyIdToSourceType" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "propertyIdToValue" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "requestInfo" : {
            "$ref" : "#/components/schemas/BTAssemblyItemMetadataRequestInfo"
          }
        }
      },
      "BTAssemblyItemMetadataRequestInfo" : {
        "type" : "object",
        "properties" : {
          "apiConfig" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "itemId" : {
            "type" : "string"
          },
          "linkedDocumentId" : {
            "type" : "string"
          },
          "partId" : {
            "type" : "string"
          },
          "wvmId" : {
            "type" : "string"
          },
          "wvmType" : {
            "type" : "string"
          }
        }
      },
      "BTAssemblyMateConnectorInfo" : {
        "type" : "object",
        "properties" : {
          "featureId" : {
            "type" : "string"
          },
          "mateConnectorCS" : {
            "$ref" : "#/components/schemas/BTMateConnectorCSInfo"
          }
        }
      },
      "BTAssemblyMateValueInfo" : {
        "required" : [ "jsonType" ],
        "type" : "object",
        "properties" : {
          "featureId" : {
            "type" : "string",
            "description" : "The ID of the assembly mate feature."
          },
          "jsonType" : {
            "type" : "string"
          },
          "mateName" : {
            "type" : "string",
            "description" : "The name of the assembly mate feature."
          }
        },
        "description" : "Quantities for length are specified in meters, and quantities for angles are specified in radians.",
        "discriminator" : {
          "propertyName" : "jsonType"
        }
      },
      "BTAssemblyMateValuesInfo" : {
        "type" : "object",
        "properties" : {
          "mateValues" : {
            "type" : "array",
            "description" : "Describes the relative position of the first mate connector with respect to the second along the designated degrees of freedom (DOF) for mates in the specified assembly.",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyMateValueInfo"
            }
          }
        },
        "description" : "Get a list of mate values for all the mates of a specified assembly."
      },
      "BTAssemblyMirror-2996" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParametricInstance-2641"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "mirrorFeature" : {
              "$ref" : "#/components/schemas/BTMAssemblyMirrorFeature-3037"
            }
          }
        } ]
      },
      "BTAssemblyModificationParams" : {
        "type" : "object",
        "properties" : {
          "deleteInstances" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "editDescription" : {
            "type" : "string"
          },
          "suppressInstances" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "transformDefinitions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyTransformDefinitionParams"
            }
          },
          "unsuppressInstances" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTAssemblyOccurrenceInfo" : {
        "type" : "object",
        "properties" : {
          "fixed" : {
            "type" : "boolean"
          },
          "hidden" : {
            "type" : "boolean"
          },
          "path" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "transform" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }
      },
      "BTAssemblyPartBodyType" : {
        "type" : "string",
        "enum" : [ "solid", "sheet", "composite" ]
      },
      "BTAssemblyPartInfo" : {
        "type" : "object",
        "properties" : {
          "bodyType" : {
            "$ref" : "#/components/schemas/BTAssemblyPartBodyType"
          },
          "configuration" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "documentMicroversion" : {
            "type" : "string"
          },
          "documentVersion" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "fullConfiguration" : {
            "type" : "string"
          },
          "isStandardContent" : {
            "type" : "boolean"
          },
          "mateConnectors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyMateConnectorInfo"
            }
          },
          "partId" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "revision" : {
            "type" : "string"
          }
        }
      },
      "BTAssemblyPattern-1974" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParametricInstance-2641"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "patternFeature" : {
              "$ref" : "#/components/schemas/BTMAssemblyPatternFeature-2241"
            }
          }
        } ]
      },
      "BTAssemblyPatternInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of the pattern."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the pattern."
          },
          "seedToPatternInstances" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Mapping of seed to pattern instance ids.",
              "items" : {
                "type" : "string",
                "description" : "Mapping of seed to pattern instance ids."
              }
            },
            "description" : "Mapping of seed to pattern instance ids."
          },
          "suppressed" : {
            "type" : "boolean",
            "description" : "If pattern is suppressed."
          },
          "type" : {
            "$ref" : "#/components/schemas/GBTPatternType"
          }
        },
        "description" : "Pattern description."
      },
      "BTAssemblyPsFeatureInfo" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "documentMicroversion" : {
            "type" : "string"
          },
          "documentVersion" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "featureId" : {
            "type" : "string"
          },
          "featureType" : {
            "type" : "string"
          },
          "fullConfiguration" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "revision" : {
            "type" : "string"
          }
        }
      },
      "BTAssemblyReferencesDisplayData-1562" : {
        "type" : "object",
        "properties" : {
          "annotationsForElement" : {
            "$ref" : "#/components/schemas/BTAnnotationElementDisplayData-894"
          },
          "assemblyReferences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTSingleReferenceDisplayData-1943"
            }
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "elementId" : {
            "type" : "string"
          },
          "fromFullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "fullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "incremental" : {
            "type" : "boolean"
          },
          "instanceCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "keepFromMicroversion" : {
            "type" : "boolean"
          },
          "microversionId" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          },
          "microversionIdAndConfigurationInterval" : {
            "$ref" : "#/components/schemas/BTMicroversionIdAndConfigurationInterval-2364"
          },
          "microversionInterval" : {
            "$ref" : "#/components/schemas/BTMicroversionIdInterval-367"
          },
          "versionForRasterization" : {
            "$ref" : "#/components/schemas/BTElementDisplayData-326"
          }
        }
      },
      "BTAssemblyReplicate-2774" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParametricInstance-2641"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "replicateFeature" : {
              "$ref" : "#/components/schemas/BTMAssemblyReplicateFeature-1351"
            }
          }
        } ]
      },
      "BTAssemblySimulation-2246" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "inertialRelief" : {
              "type" : "boolean"
            },
            "modal" : {
              "type" : "boolean"
            },
            "numberOfModes" : {
              "type" : "number",
              "format" : "double"
            },
            "type" : {
              "$ref" : "#/components/schemas/GBTAssemblySimulationType"
            }
          }
        } ]
      },
      "BTAssemblySimulationData-978" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "contactBehavior" : {
              "$ref" : "#/components/schemas/GBTSimulationContactBehavior"
            },
            "loads" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMLoad-3538"
              }
            },
            "loadsByNodeId" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BTMLoad-3538"
              }
            },
            "simulations" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTAssemblySimulation-2246"
              }
            },
            "structuralLoads" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMLoad-3538"
              }
            }
          }
        } ]
      },
      "BTAssemblySimulationStructuralLoadsTable-3867" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTable-1825"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTAssemblySimulationTable-3236" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTable-1825"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTAssemblyTransformDefinitionParams" : {
        "type" : "object",
        "properties" : {
          "isRelative" : {
            "type" : "boolean"
          },
          "occurrences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTOccurrence-74"
            }
          },
          "transform" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }
      },
      "BTAssemblyTransformedInstancesDefinitionParams" : {
        "type" : "object",
        "properties" : {
          "transformGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransformGroup"
            }
          }
        }
      },
      "BTAssociativeDataInfo" : {
        "type" : "object",
        "properties" : {
          "associativeDataId" : {
            "type" : "string"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTNameValuePair"
            }
          },
          "documentId" : {
            "type" : "string"
          },
          "documentMicroversion" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "error" : {
            "type" : "string"
          },
          "idTag" : {
            "type" : "string"
          },
          "microversionId" : {
            "type" : "string"
          },
          "occurrenceId" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/GBTAppElementAssociativeDataType"
          },
          "versionId" : {
            "type" : "string"
          }
        }
      },
      "BTBDrawingOperationParams" : {
        "required" : [ "formatVersion", "messageName" ],
        "type" : "object",
        "properties" : {
          "formatVersion" : {
            "type" : "string",
            "description" : "Version of drawing entity format.",
            "example" : "2021-01-01"
          },
          "messageName" : {
            "type" : "string",
            "description" : "Type of drawing modification operation: `onshapeCreateAnnotations` | `onshapeEditAnnotations`",
            "example" : "onshapeCreateAnnotations"
          }
        },
        "description" : "A single drawing entity creation or modification definition"
      },
      "BTBExportModelParams" : {
        "required" : [ "documentId", "format" ],
        "type" : "object",
        "properties" : {
          "angleTolerance" : {
            "type" : "number",
            "format" : "double"
          },
          "batchAllFlatPatterns" : {
            "type" : "boolean"
          },
          "batchFlatPatterns" : {
            "type" : "boolean"
          },
          "chordTolerance" : {
            "type" : "number",
            "format" : "double"
          },
          "cloudObjectId" : {
            "type" : "string"
          },
          "cloudStorageAccountId" : {
            "type" : "string"
          },
          "configuration" : {
            "type" : "string"
          },
          "destinationName" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "documentVersionId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementIds" : {
            "type" : "string"
          },
          "emailLink" : {
            "type" : "boolean"
          },
          "emailMessage" : {
            "type" : "string"
          },
          "emailSubject" : {
            "type" : "string"
          },
          "emailTo" : {
            "type" : "string",
            "description" : "Base64-encoded email address. When sending an email, the `fromUserId` parameter is also required."
          },
          "excludeHiddenEntities" : {
            "type" : "boolean",
            "description" : "If `true`, the exported file won't have any parts and assemblies marked as hidden"
          },
          "featureIds" : {
            "type" : "string"
          },
          "flatten" : {
            "type" : "boolean"
          },
          "format" : {
            "type" : "string"
          },
          "fromUserId" : {
            "type" : "string",
            "description" : "Your user ID. Required when providing the `emailTo` parameter."
          },
          "grouping" : {
            "type" : "string"
          },
          "ignoreExportRulesForContents" : {
            "type" : "boolean"
          },
          "includeBendCenterlines" : {
            "type" : "boolean"
          },
          "includeBendLines" : {
            "type" : "boolean"
          },
          "includeCboreCsink" : {
            "type" : "boolean"
          },
          "includeExportIds" : {
            "type" : "boolean"
          },
          "includeFormedCentermarks" : {
            "type" : "boolean"
          },
          "includeFormedOutlines" : {
            "type" : "boolean"
          },
          "includeSketches" : {
            "type" : "boolean"
          },
          "isPartingOut" : {
            "type" : "boolean"
          },
          "linkDocumentId" : {
            "type" : "string"
          },
          "linkDocumentWorkspaceId" : {
            "type" : "string"
          },
          "maxFacetWidth" : {
            "type" : "number",
            "format" : "double"
          },
          "microversion" : {
            "type" : "string"
          },
          "minFacetWidth" : {
            "type" : "number",
            "format" : "double"
          },
          "mode" : {
            "type" : "string"
          },
          "occurrencesToExport" : {
            "type" : "string"
          },
          "partIds" : {
            "type" : "string"
          },
          "partQuery" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "passwordRequired" : {
            "type" : "boolean"
          },
          "resolution" : {
            "type" : "string"
          },
          "scale" : {
            "type" : "number",
            "format" : "double"
          },
          "sendCopyToMe" : {
            "type" : "boolean"
          },
          "sheetMetalFlat" : {
            "type" : "boolean"
          },
          "splinesAsPolylines" : {
            "type" : "boolean"
          },
          "storeInDocument" : {
            "type" : "boolean"
          },
          "triggerAutoDownload" : {
            "type" : "boolean"
          },
          "units" : {
            "type" : "string"
          },
          "useYAxisAsUp" : {
            "type" : "boolean",
            "description" : "If `true`, the exported file will have all the parts and assemblies reoriented such that the Z-axis within Onshape becomes the Y-axis in the exported file."
          },
          "userId" : {
            "type" : "string"
          },
          "validForDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "version" : {
            "type" : "string"
          },
          "view" : {
            "type" : "string"
          },
          "workspaceId" : {
            "type" : "string"
          },
          "zipSingleFileOutput" : {
            "type" : "boolean"
          }
        },
        "description" : "Onshape document export schema"
      },
      "BTBSMatrix-386" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "fullTransformation" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "isNormalized" : {
            "type" : "boolean"
          },
          "m00" : {
            "type" : "number",
            "format" : "double"
          },
          "m01" : {
            "type" : "number",
            "format" : "double"
          },
          "m02" : {
            "type" : "number",
            "format" : "double"
          },
          "m03" : {
            "type" : "number",
            "format" : "double"
          },
          "m10" : {
            "type" : "number",
            "format" : "double"
          },
          "m11" : {
            "type" : "number",
            "format" : "double"
          },
          "m12" : {
            "type" : "number",
            "format" : "double"
          },
          "m13" : {
            "type" : "number",
            "format" : "double"
          },
          "m20" : {
            "type" : "number",
            "format" : "double"
          },
          "m21" : {
            "type" : "number",
            "format" : "double"
          },
          "m22" : {
            "type" : "number",
            "format" : "double"
          },
          "m23" : {
            "type" : "number",
            "format" : "double"
          },
          "rigid" : {
            "type" : "boolean"
          },
          "rigidWithinTransformTolerance" : {
            "type" : "boolean"
          },
          "translation" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          }
        }
      },
      "BTBaseEntityAppearanceEntry-3607" : {
        "type" : "object",
        "properties" : {
          "affectedDeterministicIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "appearance" : {
            "$ref" : "#/components/schemas/BTGraphicsAppearance-1152"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "source" : {
            "$ref" : "#/components/schemas/BTPartMetadataSource-2895"
          }
        }
      },
      "BTBaseEntityAppearanceSettings-1391" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "colorIdToBaseEntityAppearanceEntry" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTBaseEntityAppearanceEntry-3607"
            }
          },
          "isNoop" : {
            "type" : "boolean"
          }
        }
      },
      "BTBaseEntityData-33" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "constructionPlane" : {
            "type" : "boolean"
          },
          "copyWithoutGeometry" : {
            "$ref" : "#/components/schemas/BTBaseEntityData-33"
          },
          "decompressed" : {
            "$ref" : "#/components/schemas/BTBaseEntityData-33"
          },
          "deletion" : {
            "type" : "boolean"
          },
          "featureIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fromSketch" : {
            "type" : "boolean"
          },
          "geometries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTEntityGeometry-35"
            }
          },
          "origin" : {
            "type" : "boolean"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTEntityDeletion-24" : "#/components/schemas/BTEntityDeletion-24",
            "BTFeatureEntity-34" : "#/components/schemas/BTFeatureEntity-34"
          }
        }
      },
      "BTBaseInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTBasePartColorCycle-2614" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTSystemPartColorCycle-1580" : "#/components/schemas/BTSystemPartColorCycle-1580"
          }
        }
      },
      "BTBaseSMJointTableRowMetadata-2232" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTSMBendTableRowMetadata-1705" : "#/components/schemas/BTSMBendTableRowMetadata-1705",
            "BTSMOtherJointTableRowMetadata-2640" : "#/components/schemas/BTSMOtherJointTableRowMetadata-2640"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableBaseRowMetadata-3181"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "crossHighlightData" : {
              "$ref" : "#/components/schemas/BTTableCrossHighlightData-1753"
            },
            "crossHighlightDataIfAny" : {
              "$ref" : "#/components/schemas/BTTableCrossHighlightData-1753"
            }
          }
        } ]
      },
      "BTBezierDegreeDimensionDisplayData-2597" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDimensionDisplayData-323"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "positionX" : {
              "type" : "number",
              "format" : "double"
            },
            "positionY" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTBillOfMaterialsElementInfo" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "type" : "string"
          },
          "headerIdToValue" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTBillOfMaterialsHeaderInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "propertyName" : {
            "type" : "string"
          },
          "valueType" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "visible" : {
            "type" : "boolean"
          }
        }
      },
      "BTBillOfMaterialsInfo" : {
        "type" : "object",
        "properties" : {
          "bomSource" : {
            "$ref" : "#/components/schemas/BTBillOfMaterialsSourceInfo"
          },
          "createdAt" : {
            "type" : "string"
          },
          "formatVersion" : {
            "type" : "string"
          },
          "headers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTBillOfMaterialsHeaderInfo"
            }
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "rows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTBillOfMaterialsRowInfo"
            }
          },
          "templateId" : {
            "type" : "string"
          },
          "topLevelAssemblyRow" : {
            "$ref" : "#/components/schemas/BTBillOfMaterialsRowInfo"
          },
          "type" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTBillOfMaterialsItemSourceInfo" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "fullConfiguration" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          },
          "isStandardContent" : {
            "type" : "boolean"
          },
          "nonGeometricItemId" : {
            "type" : "string"
          },
          "partId" : {
            "type" : "string"
          },
          "sourceElementMicroversionId" : {
            "type" : "string"
          },
          "thumbnailInfo" : {
            "$ref" : "#/components/schemas/BTThumbnailInfo"
          },
          "versionMetadataWorkspaceMicroversionId" : {
            "type" : "string"
          },
          "viewHref" : {
            "type" : "string"
          },
          "wvmId" : {
            "type" : "string"
          },
          "wvmType" : {
            "type" : "string"
          }
        }
      },
      "BTBillOfMaterialsObjectWithPropertiesInfo" : {
        "type" : "object",
        "properties" : {
          "headerIdToValue" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTBillOfMaterialsRowInfo" : {
        "type" : "object",
        "properties" : {
          "headerIdToValue" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "indentLevel" : {
            "type" : "integer",
            "format" : "int32"
          },
          "itemSource" : {
            "$ref" : "#/components/schemas/BTBillOfMaterialsItemSourceInfo"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "relatedOccurrences" : {
            "type" : "array",
            "description" : "Occurrence IDs in the assembly that refer to the part described by this BOM row.",
            "items" : {
              "type" : "string",
              "description" : "Occurrence IDs in the assembly that refer to the part described by this BOM row."
            }
          },
          "rowId" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTBillOfMaterialsSourceInfo" : {
        "type" : "object",
        "properties" : {
          "document" : {
            "$ref" : "#/components/schemas/BTBillOfMaterialsObjectWithPropertiesInfo"
          },
          "documentMicroversion" : {
            "$ref" : "#/components/schemas/BTBillOfMaterialsObjectWithPropertiesInfo"
          },
          "element" : {
            "$ref" : "#/components/schemas/BTBillOfMaterialsElementInfo"
          },
          "href" : {
            "type" : "string"
          },
          "thumbnailInfo" : {
            "$ref" : "#/components/schemas/BTThumbnailInfo"
          },
          "version" : {
            "$ref" : "#/components/schemas/BTBillOfMaterialsObjectWithPropertiesInfo"
          },
          "viewHref" : {
            "type" : "string"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/BTBillOfMaterialsObjectWithPropertiesInfo"
          }
        }
      },
      "BTBillOfMaterialsTable-1073" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTable-1825"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "failedMetadataRepresentativeOccurrences" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "indented" : {
              "type" : "boolean"
            },
            "isShowingTopLevelAssemblyRow" : {
              "type" : "boolean"
            },
            "partNumber" : {
              "type" : "string"
            },
            "revision" : {
              "type" : "string"
            },
            "showingExcluded" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTBillOfMaterialsTableRow-1425" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableRow-1054"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "excludeIsEditable" : {
              "type" : "boolean"
            },
            "exclusionStatus" : {
              "$ref" : "#/components/schemas/GBTBillOfMaterialsExclusionStatus"
            },
            "expansionStatus" : {
              "$ref" : "#/components/schemas/GBTBillOfMaterialsExpansionStatus"
            },
            "indentLevel" : {
              "type" : "integer",
              "format" : "int32"
            },
            "isComponentsOnly" : {
              "type" : "boolean"
            },
            "isSuppressed" : {
              "type" : "boolean"
            },
            "metadataObjectType" : {
              "type" : "integer",
              "format" : "int32"
            },
            "metadataUpdateHref" : {
              "type" : "string"
            },
            "name" : {
              "type" : "string"
            },
            "relatedOccurrencePaths" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "suppressionStatus" : {
              "$ref" : "#/components/schemas/GBTBillOfMaterialsSuppressionStatus"
            },
            "uniqueItemId" : {
              "$ref" : "#/components/schemas/BTBillOfMaterialsUniqueItemId-2029"
            }
          }
        } ]
      },
      "BTBillOfMaterialsTableRowMetadata-1300" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableBaseRowMetadata-3181"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "crossHighlightData" : {
              "$ref" : "#/components/schemas/BTTableAssemblyCrossHighlightData-2675"
            },
            "crossHighlightDataIfAny" : {
              "$ref" : "#/components/schemas/BTTableAssemblyCrossHighlightData-2675"
            }
          }
        } ]
      },
      "BTBillOfMaterialsUniqueItemId-2029" : {
        "type" : "object",
        "properties" : {
          "apiConfiguration" : {
            "type" : "string"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "isStandardContent" : {
            "type" : "boolean"
          },
          "itemDefinitionId" : {
            "type" : "string"
          },
          "metadataObjectType" : {
            "$ref" : "#/components/schemas/BTMetadataObjectType"
          },
          "partId" : {
            "type" : "string"
          },
          "partIdentity" : {
            "$ref" : "#/components/schemas/BTPSOIdentity-2741"
          },
          "sourceElement" : {
            "$ref" : "#/components/schemas/BTElementReference-725"
          },
          "versionMetadataWorkspaceId" : {
            "type" : "string"
          },
          "versionMetadataWorkspaceMicroversionId" : {
            "type" : "string"
          }
        }
      },
      "BTBillingPlanInfo" : {
        "type" : "object",
        "properties" : {
          "amountCents" : {
            "type" : "integer",
            "format" : "int32"
          },
          "applicationId" : {
            "type" : "string"
          },
          "clientId" : {
            "type" : "string"
          },
          "companyPlan" : {
            "type" : "boolean"
          },
          "consumableQuantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deprecated" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "discountInfo" : {
            "$ref" : "#/components/schemas/BTDiscountInfo"
          },
          "group" : {
            "type" : "string"
          },
          "hidden" : {
            "type" : "boolean"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "interval" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "onshapePlan" : {
            "type" : "boolean"
          },
          "planType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "trialPeriodDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTBodyEntity-26" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFeatureEntity-34"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "doesNotUseLevelsOfDetail" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTBodyTypeFilter-112" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "bodyType" : {
              "$ref" : "#/components/schemas/GBTBodyType"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTBoundingBox-1052" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "maxCorner" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "minCorner" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "valid" : {
            "type" : "boolean"
          }
        },
        "description" : "An axis-aligned bounding box indicated by two opposite corners.",
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTNonAlignedBoundingBox-4180" : "#/components/schemas/BTNonAlignedBoundingBox-4180"
          }
        }
      },
      "BTBoundingBoxInfo" : {
        "type" : "object",
        "properties" : {
          "highX" : {
            "type" : "number",
            "format" : "double"
          },
          "highY" : {
            "type" : "number",
            "format" : "double"
          },
          "highZ" : {
            "type" : "number",
            "format" : "double"
          },
          "lowX" : {
            "type" : "number",
            "format" : "double"
          },
          "lowY" : {
            "type" : "number",
            "format" : "double"
          },
          "lowZ" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "BTBrokenOutEndCondition-1107" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "hasOffset" : {
            "type" : "boolean"
          },
          "hasUptoPoint" : {
            "type" : "boolean"
          },
          "offsetDistance" : {
            "type" : "number",
            "format" : "double"
          },
          "offsetOppositeDirection" : {
            "type" : "boolean"
          },
          "uptoPoint" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "uptoPoint3d" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          }
        }
      },
      "BTCacheDataPath-191" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "immutableContextVersion" : {
            "type" : "string"
          },
          "immutablePathContentsShouldExist" : {
            "type" : "boolean"
          },
          "isImmutableContextPath" : {
            "type" : "boolean"
          },
          "key" : {
            "type" : "string"
          },
          "keyContainsConfiguration" : {
            "type" : "boolean"
          },
          "region" : {
            "type" : "string"
          },
          "useLocalFileCache" : {
            "type" : "boolean"
          }
        }
      },
      "BTCardInfo" : {
        "type" : "object",
        "properties" : {
          "billingAddress" : {
            "$ref" : "#/components/schemas/BTAddressInfo"
          },
          "expMonth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "expYear" : {
            "type" : "integer",
            "format" : "int32"
          },
          "last4" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "BTCategoryParam" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "BTCategoryPropertyConfigInfo" : {
        "type" : "object",
        "properties" : {
          "computedAssemblyPropertyAggregatedPropertyId" : {
            "type" : "string"
          },
          "computedAssemblyPropertyAggregationOperator" : {
            "type" : "integer",
            "format" : "int32"
          },
          "computedAssemblyPropertyConfig" : {
            "$ref" : "#/components/schemas/BTComputedAssemblyPropertyConfig"
          },
          "computedAssemblyPropertyErrorValuePolicy" : {
            "type" : "integer",
            "format" : "int32"
          },
          "computedAssemblyPropertyFilterInverted" : {
            "type" : "boolean"
          },
          "computedAssemblyPropertyFilterPropertyId" : {
            "type" : "string"
          },
          "computedAssemblyPropertyMissingValuePolicy" : {
            "type" : "integer",
            "format" : "int32"
          },
          "computedAssemblyPropertySecondaryPropertyId" : {
            "type" : "string"
          },
          "computedPartPropertyConfig" : {
            "$ref" : "#/components/schemas/BTComputedPartPropertyConfig"
          },
          "computedPropertyFunctionName" : {
            "type" : "string"
          },
          "computedPropertyFunctionNamespace" : {
            "type" : "string"
          },
          "computedPropertyFunctionURL" : {
            "type" : "string"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "enumValues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMetadataEnumValue"
            }
          },
          "maxCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "maxLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxValue" : {
            "type" : "number",
            "format" : "double"
          },
          "minCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "minLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minValue" : {
            "type" : "number",
            "format" : "double"
          },
          "multiline" : {
            "type" : "boolean"
          },
          "multivalued" : {
            "type" : "boolean"
          },
          "pattern" : {
            "type" : "string"
          },
          "publishState" : {
            "type" : "integer",
            "format" : "int32"
          },
          "quantityType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "required" : {
            "type" : "boolean"
          }
        }
      },
      "BTCategoryPropertyInfo" : {
        "type" : "object",
        "properties" : {
          "array" : {
            "type" : "boolean"
          },
          "assignable" : {
            "type" : "boolean"
          },
          "blobMimeType" : {
            "type" : "string"
          },
          "categoryPropertyConfigInfo" : {
            "$ref" : "#/components/schemas/BTCategoryPropertyConfigInfo"
          },
          "categorySummaryInfoList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMetadataCategorySummaryInfo"
            }
          },
          "description" : {
            "type" : "string"
          },
          "editableInMicroversion" : {
            "type" : "boolean"
          },
          "editableInVersion" : {
            "type" : "boolean"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "objectDefName" : {
            "type" : "string"
          },
          "ownerId" : {
            "type" : "string"
          },
          "ownerType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "uiReadonlyInMicroversion" : {
            "type" : "boolean"
          },
          "uiReadonlyInVersion" : {
            "type" : "boolean"
          },
          "valueType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTCenterlineDimensionDisplayData-1798" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTLinearDimensionDisplayData-330"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTCircleDescription-1145" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTCurveDescription-1583"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "normal" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            },
            "radius" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTClassroomInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTGlobalTreeNodeInfo"
        }, {
          "type" : "object",
          "properties" : {
            "assignmentsWithErrors" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "educator" : {
              "type" : "boolean"
            },
            "numberOfAssignments" : {
              "type" : "integer",
              "format" : "int64"
            },
            "numberOfMembers" : {
              "type" : "integer",
              "format" : "int64"
            },
            "state" : {
              "type" : "integer",
              "format" : "int32"
            },
            "stateName" : {
              "type" : "string"
            },
            "title" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTClonedInstance-2505" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParametricOutputInstance-2288"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "seedOccurrence" : {
              "$ref" : "#/components/schemas/BTOccurrence-74"
            }
          }
        } ]
      },
      "BTClosedConstituentPartData-2911" : {
        "type" : "object",
        "properties" : {
          "bodyType" : {
            "$ref" : "#/components/schemas/GBTBodyType"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "isActiveSheetMetal" : {
            "type" : "boolean"
          },
          "isMesh" : {
            "type" : "boolean"
          },
          "meshState" : {
            "$ref" : "#/components/schemas/GBTMeshState"
          }
        }
      },
      "BTClosedCurveFilter-1206" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isClosed" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTCloudStorageAccountInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTGlobalTreeNodeInfo"
        }, {
          "type" : "object",
          "properties" : {
            "cloudStorageAccountId" : {
              "type" : "string"
            },
            "cloudStorageProvider" : {
              "type" : "integer",
              "format" : "int32"
            },
            "enabled" : {
              "type" : "boolean"
            },
            "exportFolder" : {
              "$ref" : "#/components/schemas/BTCloudStorageObjectInfo"
            },
            "importFolder" : {
              "$ref" : "#/components/schemas/BTCloudStorageObjectInfo"
            },
            "lastAuthenticated" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        } ]
      },
      "BTCloudStorageObjectInfo" : {
        "type" : "object",
        "properties" : {
          "canMove" : {
            "type" : "boolean"
          },
          "cloudStorageAccountId" : {
            "type" : "string"
          },
          "cloudStorageObjectId" : {
            "type" : "string"
          },
          "cloudStorageProvider" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "createdById" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "iconLink" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "isContainer" : {
            "type" : "boolean"
          },
          "isEnterpriseOwned" : {
            "type" : "boolean"
          },
          "isMutable" : {
            "type" : "boolean"
          },
          "mimeType" : {
            "type" : "string"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedBy" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "modifiedById" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "owner" : {
            "$ref" : "#/components/schemas/BTOwnerInfo"
          },
          "parentId" : {
            "type" : "string"
          },
          "projectId" : {
            "type" : "string"
          },
          "resourceType" : {
            "type" : "string"
          },
          "sizeBytes" : {
            "type" : "integer",
            "format" : "int64"
          },
          "thumbnailInfo" : {
            "$ref" : "#/components/schemas/BTThumbnailInfo"
          },
          "treeHref" : {
            "type" : "string"
          },
          "unparentHref" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "webViewLink" : {
            "type" : "string"
          }
        }
      },
      "BTColorInfo" : {
        "type" : "object",
        "properties" : {
          "blue" : {
            "type" : "integer",
            "format" : "int32"
          },
          "green" : {
            "type" : "integer",
            "format" : "int32"
          },
          "red" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BTCommentAttachmentInfo" : {
        "type" : "object",
        "properties" : {
          "fileName" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "mimeType" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "thumbnailFor" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTCommentInfo" : {
        "type" : "object",
        "properties" : {
          "assemblyFeatures" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "assignedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "assignee" : {
            "$ref" : "#/components/schemas/BTUserSummaryInfo"
          },
          "attachment" : {
            "$ref" : "#/components/schemas/BTCommentAttachmentInfo"
          },
          "canDelete" : {
            "type" : "boolean"
          },
          "canResolveOrReopen" : {
            "type" : "boolean"
          },
          "coordinates" : {
            "$ref" : "#/components/schemas/CoordinatesInfo"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementFeature" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementOccurrences" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "elementQuery" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "message" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "objectId" : {
            "type" : "string"
          },
          "objectType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parentId" : {
            "type" : "string"
          },
          "releasePackageId" : {
            "type" : "string"
          },
          "reopenedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reopenedBy" : {
            "$ref" : "#/components/schemas/BTUserSummaryInfo"
          },
          "replyCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "resolvedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "resolvedBy" : {
            "$ref" : "#/components/schemas/BTUserSummaryInfo"
          },
          "state" : {
            "type" : "integer",
            "format" : "int32"
          },
          "thumbnail" : {
            "$ref" : "#/components/schemas/BTCommentAttachmentInfo"
          },
          "topLevel" : {
            "type" : "boolean"
          },
          "user" : {
            "$ref" : "#/components/schemas/BTUserSummaryInfo"
          },
          "versionId" : {
            "type" : "string"
          },
          "viewData" : {
            "$ref" : "#/components/schemas/BTViewDataInfo"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTCommentParams" : {
        "type" : "object",
        "properties" : {
          "assemblyFeature" : {
            "type" : "string"
          },
          "assignee" : {
            "type" : "string",
            "description" : "Assign the comment during creation. Comments cannot be reassigned during an update at this time."
          },
          "coordinates" : {
            "$ref" : "#/components/schemas/CoordinatesParams"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementFeature" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementOccurrence" : {
            "type" : "string"
          },
          "elementQuery" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "objectId" : {
            "type" : "string"
          },
          "objectType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parentId" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          },
          "viewData" : {
            "$ref" : "#/components/schemas/BTViewDataParams"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTCommonUnitInfo" : {
        "type" : "object",
        "properties" : {
          "abbreviation" : {
            "type" : "string"
          },
          "unit" : {
            "type" : "string"
          },
          "unitName" : {
            "type" : "string"
          },
          "unitType" : {
            "type" : "string"
          },
          "valueInBaseUnits" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "BTCommonUnitsInfo" : {
        "type" : "object",
        "properties" : {
          "quantityTypeToBaseUnits" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          },
          "units" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTCommonUnitInfo"
            }
          }
        }
      },
      "BTCompanyInfo" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/BTAddressInfo"
          },
          "admin" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "domainPrefix" : {
            "type" : "string"
          },
          "enterpriseBaseUrl" : {
            "type" : "string"
          },
          "enterpriseSubtype" : {
            "type" : "integer",
            "format" : "int32"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "image" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "noPublicDocuments" : {
            "type" : "boolean"
          },
          "ownerId" : {
            "type" : "string"
          },
          "purchase" : {
            "$ref" : "#/components/schemas/BTPurchaseInfo"
          },
          "secondaryDomainPrefixes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "state" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTCompanySummaryInfo" : {
        "type" : "object",
        "properties" : {
          "admin" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "domainPrefix" : {
            "type" : "string"
          },
          "enterpriseBaseUrl" : {
            "type" : "string"
          },
          "enterpriseSubtype" : {
            "type" : "integer",
            "format" : "int32"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "image" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "noPublicDocuments" : {
            "type" : "boolean"
          },
          "ownerId" : {
            "type" : "string"
          },
          "secondaryDomainPrefixes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "state" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTCompanyUserInfo" : {
        "type" : "object",
        "properties" : {
          "admin" : {
            "type" : "boolean"
          },
          "company" : {
            "$ref" : "#/components/schemas/BTCompanySummaryInfo"
          },
          "documentationNameOverride" : {
            "type" : "string"
          },
          "guest" : {
            "type" : "boolean"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "lastLoginTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "light" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "state" : {
            "type" : "integer",
            "format" : "int32"
          },
          "user" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTCompanyUserParams" : {
        "type" : "object",
        "properties" : {
          "admin" : {
            "type" : "boolean",
            "description" : "Indicates the user is an admin if true."
          },
          "companyId" : {
            "type" : "string",
            "description" : "Company ID of the user."
          },
          "documentationNameOverride" : {
            "type" : "string",
            "description" : "String to override documentation name."
          },
          "email" : {
            "type" : "string",
            "description" : "Email ID of the company user."
          },
          "globalPermissions" : {
            "type" : "array",
            "description" : "List of global permissions to grant.",
            "items" : {
              "type" : "integer",
              "description" : "List of global permissions to grant.",
              "format" : "int32"
            }
          },
          "guest" : {
            "type" : "boolean",
            "description" : "Indicates the user is a guest user if true."
          },
          "light" : {
            "type" : "boolean",
            "description" : "Indicates the user is a light user if true."
          }
        }
      },
      "BTCompanyUserSummaryAdminInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTCompanyUserSummaryInfo"
        }, {
          "type" : "object",
          "properties" : {
            "totpEnabled" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTCompanyUserSummaryInfo" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "jsonType",
          "mapping" : {
            "companyuser" : "#/components/schemas/BTCompanyUserSummaryInfo",
            "companyuseradmin" : "#/components/schemas/BTCompanyUserSummaryAdminInfo"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTUserSummaryInfo"
        }, {
          "type" : "object",
          "properties" : {
            "admin" : {
              "type" : "boolean"
            },
            "cls" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTComputedAssemblyPropertyAggregationOperator" : {
        "type" : "string",
        "enum" : [ "SUM", "MINIMUM", "MAXIMUM", "AVERAGE", "WEIGHTED_SUM", "WEIGHTED_AVERAGE", "ANY", "ALL", "NOT_ANY", "NOT_ALL" ]
      },
      "BTComputedAssemblyPropertyConfig" : {
        "type" : "object",
        "properties" : {
          "aggregatedPropertyId" : {
            "type" : "string"
          },
          "aggregationOperator" : {
            "$ref" : "#/components/schemas/BTComputedAssemblyPropertyAggregationOperator"
          },
          "errorValuePolicy" : {
            "$ref" : "#/components/schemas/BTComputedAssemblyPropertyErrorPolicy"
          },
          "filterPropertyId" : {
            "type" : "string"
          },
          "isFilterPropertyInverted" : {
            "type" : "boolean"
          },
          "missingValuePolicy" : {
            "$ref" : "#/components/schemas/BTComputedAssemblyPropertyErrorPolicy"
          },
          "secondaryPropertyId" : {
            "type" : "string"
          }
        }
      },
      "BTComputedAssemblyPropertyErrorPolicy" : {
        "type" : "string",
        "enum" : [ "ExcludeFromComputation", "TreatAsZero", "TreatAsTrue", "TreatAsFalse", "PropagateError" ]
      },
      "BTComputedConfigurationInputSpec-2525" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "inputId" : {
            "type" : "string"
          }
        }
      },
      "BTComputedPartPropertyConfig" : {
        "type" : "object",
        "properties" : {
          "computedPartPropertySpecFunction" : {
            "type" : "string"
          },
          "computedPartPropertySpecNamespace" : {
            "type" : "string"
          },
          "computedPropertyFunctionReturnType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "propertyFunctionDocumentId" : {
            "type" : "string"
          }
        }
      },
      "BTComputedPartPropertySpec-1746" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFeatureSpec-129"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "computedPartPropertySpecId" : {
              "type" : "string"
            },
            "propertyFunctionReturnType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTConeDescription-860" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSurfaceDescription-1564"
        }, {
          "type" : "object",
          "properties" : {
            "axis" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            },
            "btType" : {
              "type" : "string"
            },
            "halfAngle" : {
              "type" : "number",
              "format" : "double"
            },
            "radius" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTConfigurableTreeNode" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMParameter-1"
            }
          },
          "suppressed" : {
            "type" : "boolean"
          }
        }
      },
      "BTConfigurationInfo" : {
        "type" : "object",
        "properties" : {
          "isStandardContent" : {
            "type" : "boolean"
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ConfigurationInfoEntry"
            }
          }
        }
      },
      "BTConfigurationParams" : {
        "type" : "object",
        "properties" : {
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ConfigurationEntry"
            }
          },
          "standardContentParametersId" : {
            "type" : "string"
          }
        }
      },
      "BTConfigurationResponse-2019" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "configurationParameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMConfigurationParameter-819"
            }
          },
          "currentConfiguration" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMParameter-1"
            }
          },
          "libraryVersion" : {
            "type" : "integer",
            "description" : "FeatureScript version used in the Part Studio. Do not modify.",
            "format" : "int32"
          },
          "microversionSkew" : {
            "type" : "boolean",
            "description" : "On output, `true` indicates a microversion mismatch was encountered."
          },
          "rejectMicroversionSkew" : {
            "type" : "boolean",
            "description" : "If `true`, the call will refuse to make the addition if the current microversion for the document does not match the source microversion. If `false`, a best-effort attempt is made to re-interpret the feature addition in the context of a newer document microversion."
          },
          "serializationVersion" : {
            "type" : "string",
            "description" : "Version of the structure serialization rules used to encode the output. This enables incompatibility detection during software updates."
          },
          "sourceMicroversion" : {
            "type" : "string",
            "description" : "The state from which the result was extracted. Geometry ID interpretation is dependent on this document microversion."
          }
        }
      },
      "BTConfigurationUpdateCall-2933" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "configurationParameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMConfigurationParameter-819"
            }
          },
          "currentConfiguration" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMParameter-1"
            }
          },
          "libraryVersion" : {
            "type" : "integer",
            "description" : "FeatureScript version used in the Part Studio. Do not modify.",
            "format" : "int32"
          },
          "microversionSkew" : {
            "type" : "boolean",
            "description" : "On output, `true` indicates a microversion mismatch was encountered."
          },
          "rejectMicroversionSkew" : {
            "type" : "boolean",
            "description" : "If `true`, the call will refuse to make the addition if the current microversion for the document does not match the source microversion. If `false`, a best-effort attempt is made to re-interpret the feature addition in the context of a newer document microversion."
          },
          "serializationVersion" : {
            "type" : "string",
            "description" : "Version of the structure serialization rules used to encode the output. This enables incompatibility detection during software updates."
          },
          "sourceMicroversion" : {
            "type" : "string",
            "description" : "The state from which the result was extracted. Geometry ID interpretation is dependent on this document microversion."
          }
        }
      },
      "BTConfiguredDimensionColumnInfo-2168" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTConfiguredValuesColumnInfo-1025"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "dimensionId" : {
              "type" : "string"
            },
            "parameterId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTConfiguredFeatureColumnInfo-1014" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTConfiguredValuesColumnInfo-1025"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTConfiguredParameterColumnInfo-2900" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTConfiguredValuesColumnInfo-1025"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "innerParameterLocation" : {
              "$ref" : "#/components/schemas/BTInnerParameterLocation-1715"
            },
            "parameterId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTConfiguredPartProperties-2645" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "nodeId" : {
            "type" : "string"
          },
          "parts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTPartWithConfiguredProperties-2163"
            }
          },
          "propertyIdToConfiguredTable" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTPartWithConfiguredProperties-2163"
            }
          },
          "synchronizeToSingleEnumInput" : {
            "type" : "boolean"
          }
        }
      },
      "BTConfiguredPartPropertiesTable-2740" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTable-1825"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "partDeterministicId" : {
              "type" : "string"
            },
            "partDeterministicIds" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "propertyNodeId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTConfiguredSuppressionColumnInfo-2498" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTConfiguredValuesColumnInfo-1025"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTConfiguredValuesColumnInfo-1025" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTConfiguredDimensionColumnInfo-2168" : "#/components/schemas/BTConfiguredDimensionColumnInfo-2168",
            "BTConfiguredFeatureColumnInfo-1014" : "#/components/schemas/BTConfiguredFeatureColumnInfo-1014",
            "BTConfiguredParameterColumnInfo-2900" : "#/components/schemas/BTConfiguredParameterColumnInfo-2900",
            "BTConfiguredSuppressionColumnInfo-2498" : "#/components/schemas/BTConfiguredSuppressionColumnInfo-2498"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableColumnInfo-1222"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "parentId" : {
              "type" : "string"
            },
            "parentName" : {
              "type" : "string"
            },
            "parentType" : {
              "$ref" : "#/components/schemas/GBTConfiguredParentType"
            }
          }
        } ]
      },
      "BTConstructionObjectFilter-113" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isConstruction" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTConstructionPlaneEntity-27" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFeatureEntity-34"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isDefault" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTCoordinateSystem-387" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "matrix" : {
            "$ref" : "#/components/schemas/BTBSMatrix-386"
          },
          "origin" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "xAxis" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "yAxis" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "zAxis" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          }
        }
      },
      "BTCopyDocumentInfo" : {
        "type" : "object",
        "properties" : {
          "newDocumentId" : {
            "type" : "string"
          },
          "newDocumentName" : {
            "type" : "string"
          },
          "newOwner" : {
            "$ref" : "#/components/schemas/BTOwnerInfo"
          },
          "newParentId" : {
            "type" : "string"
          },
          "newProjectId" : {
            "type" : "string"
          },
          "newWorkspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTCopyDocumentParams" : {
        "type" : "object",
        "properties" : {
          "isPublic" : {
            "type" : "boolean"
          },
          "newName" : {
            "type" : "string"
          },
          "ownerId" : {
            "type" : "string"
          },
          "ownerTypeIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parentId" : {
            "type" : "string"
          },
          "projectId" : {
            "type" : "string"
          }
        }
      },
      "BTCopyElementParams" : {
        "type" : "object",
        "properties" : {
          "anchorElementId" : {
            "type" : "string"
          },
          "documentIdSource" : {
            "type" : "string"
          },
          "elementIdSource" : {
            "type" : "string"
          },
          "isGroupAnchor" : {
            "type" : "boolean"
          },
          "workspaceIdSource" : {
            "type" : "string"
          }
        }
      },
      "BTCopyViewAssociativeDataParams" : {
        "type" : "object",
        "properties" : {
          "associativeDataIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "destinationViewId" : {
            "type" : "string"
          },
          "sourceElementId" : {
            "type" : "string"
          },
          "sourceViewId" : {
            "type" : "string"
          }
        }
      },
      "BTCosmeticThreadMetadata-3248" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDomainSpecificMetadata-961"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "cylinderRadius" : {
              "type" : "number",
              "format" : "double"
            },
            "cylinderSystem" : {
              "$ref" : "#/components/schemas/BTCoordinateSystem-387"
            },
            "pitch" : {
              "type" : "number",
              "format" : "double"
            },
            "threadLength" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTCountDimensionDisplayData-1778" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDimensionDisplayData-323"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "positionX" : {
              "type" : "number",
              "format" : "double"
            },
            "positionY" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTCreateTaskParams" : {
        "required" : [ "companyId" ],
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string",
            "description" : "Id of the company that owns the task."
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the task."
          },
          "descriptionParamValue" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string",
            "description" : "Id of a document to associate the task to."
          },
          "itemParams" : {
            "type" : "array",
            "description" : "References to include in the task.",
            "items" : {
              "$ref" : "#/components/schemas/BTTaskItemParams"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the task."
          },
          "nameParamValue" : {
            "type" : "string"
          },
          "propertyValues" : {
            "type" : "array",
            "description" : "Set Task metadata properties.",
            "items" : {
              "$ref" : "#/components/schemas/BTPropertyValueParam"
            }
          }
        },
        "x-BTVisibility-properties" : {
          "workflowId" : "INTERNAL"
        }
      },
      "BTCurveDescription-1583" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "direction" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "directionOrientedWithFace" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "origin" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "type" : {
            "$ref" : "#/components/schemas/GBTCurveTypeEnum"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTCircleDescription-1145" : "#/components/schemas/BTCircleDescription-1145",
            "BTEllipseDescription-866" : "#/components/schemas/BTEllipseDescription-866",
            "BTLineDescription-1559" : "#/components/schemas/BTLineDescription-1559",
            "BTSplineDescription-2118" : "#/components/schemas/BTSplineDescription-2118"
          }
        }
      },
      "BTCurveLengthDimensionDisplayData-322" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDimensionDisplayData-323"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "positionX" : {
              "type" : "number",
              "format" : "double"
            },
            "positionY" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTCylinderDescription-686" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSurfaceDescription-1564"
        }, {
          "type" : "object",
          "properties" : {
            "axis" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            },
            "btType" : {
              "type" : "string"
            },
            "radius" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTCylindricalImageMapping-1640" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTImageMapping-3821"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "cylinderSystem" : {
              "$ref" : "#/components/schemas/BTCoordinateSystem-387"
            },
            "radius" : {
              "type" : "number",
              "format" : "float"
            }
          }
        } ]
      },
      "BTDatumDisplayData-3408" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTAnnotationDisplayData-3225"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "name" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTDatumTableRowMetadata-3060" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableBaseRowMetadata-3181"
        }, {
          "type" : "object",
          "properties" : {
            "annotationId" : {
              "type" : "string"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTDebugGeometry-2059" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTEntityGeometry-35"
        }, {
          "type" : "object",
          "properties" : {
            "appearance" : {
              "$ref" : "#/components/schemas/BTGraphicsAppearance-1152"
            },
            "belongsToFlattenedSheetMetalBody" : {
              "type" : "boolean"
            },
            "bodyId" : {
              "type" : "string"
            },
            "btType" : {
              "type" : "string"
            },
            "color" : {
              "$ref" : "#/components/schemas/GBTDebugEntityColor"
            },
            "deterministicId" : {
              "type" : "string"
            },
            "sheetMetalModelId" : {
              "type" : "string"
            },
            "style" : {
              "$ref" : "#/components/schemas/GBTDebugEntityStyle"
            },
            "tessellation" : {
              "$ref" : "#/components/schemas/BTTessellatedGeometry-2576"
            }
          }
        } ]
      },
      "BTDecal-2404" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "imageSourceId" : {
            "type" : "string"
          },
          "mappings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTImageMapping-3821"
            }
          }
        }
      },
      "BTDefaultFeatures-119" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "children" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          }
        }
      },
      "BTDefaultUnitInfo" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "The quantity type."
          },
          "value" : {
            "type" : "string",
            "description" : "The unit that should be used."
          }
        },
        "description" : "Specifies which unit should be used for each supported quantity type."
      },
      "BTDefaultUnitsInfo" : {
        "type" : "object",
        "properties" : {
          "nodeId" : {
            "type" : "string"
          },
          "units" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTDefaultUnitInfo"
            }
          }
        }
      },
      "BTDerivedAssemblyMirror-4204" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParametricInstance-2641"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "configuration" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMParameter-1"
              }
            },
            "documentId" : {
              "type" : "string"
            },
            "elementId" : {
              "type" : "string"
            },
            "elementReference" : {
              "$ref" : "#/components/schemas/BTElementReference-725"
            },
            "externalDocumentWithVersion" : {
              "$ref" : "#/components/schemas/BTDocumentWithVersionId"
            },
            "externalDocumentWithVersionAndElementId" : {
              "$ref" : "#/components/schemas/BTDocumentWithVersionAndElementId"
            },
            "lockedState" : {
              "$ref" : "#/components/schemas/BTInstanceWithReference"
            },
            "microversionId" : {
              "$ref" : "#/components/schemas/BTMicroversionId-366"
            },
            "mirrorFeature" : {
              "$ref" : "#/components/schemas/BTMDerivedAssemblyMirrorFeature-5094"
            },
            "referenceParameter" : {
              "$ref" : "#/components/schemas/BTMParameterReferenceWithConfiguration-3028"
            },
            "versionId" : {
              "type" : "string"
            },
            "versionIdIfExternal" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTDeviceLoginSecretInfo" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "randomToken" : {
            "type" : "string"
          }
        }
      },
      "BTDiffInfo" : {
        "type" : "object",
        "properties" : {
          "changes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTDiffInfo"
            }
          },
          "entityType" : {
            "$ref" : "#/components/schemas/BTDiffInfoCollectionType"
          },
          "geometryChangeMessages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sourceId" : {
            "type" : "string"
          },
          "sourceValue" : {
            "type" : "string"
          },
          "targetId" : {
            "type" : "string"
          },
          "targetValue" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/GBTNodeChange"
          }
        }
      },
      "BTDiffInfoCollectionType" : {
        "type" : "string",
        "enum" : [ "parts", "sketches", "points", "mateConnectors", "planes", "curves", "surfaces" ]
      },
      "BTDiffJsonResponse-2725" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "change" : {
            "$ref" : "#/components/schemas/BTJEdit-3734"
          },
          "patch" : {
            "type" : "object",
            "properties" : {
              "btType" : {
                "type" : "string"
              }
            }
          },
          "sourceChangeId" : {
            "type" : "string"
          },
          "targetChangeId" : {
            "type" : "string"
          }
        }
      },
      "BTDimensionDisplayData-323" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "coordinateSystem" : {
            "$ref" : "#/components/schemas/BTMatrix3x3-340"
          },
          "featureId" : {
            "type" : "string"
          },
          "fitClass" : {
            "type" : "string"
          },
          "hasMaximumLimit" : {
            "type" : "boolean"
          },
          "hasMinimumLimit" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "string"
          },
          "isAnnotationDimension" : {
            "type" : "boolean"
          },
          "isAssociatedWithFlat" : {
            "type" : "boolean"
          },
          "isDriven" : {
            "type" : "boolean"
          },
          "isOverDefined" : {
            "type" : "boolean"
          },
          "lowerTolerance" : {
            "type" : "number",
            "format" : "double"
          },
          "maximumLimit" : {
            "type" : "number",
            "format" : "double"
          },
          "minimumLimit" : {
            "type" : "number",
            "format" : "double"
          },
          "parameterId" : {
            "type" : "string"
          },
          "partId" : {
            "type" : "string"
          },
          "planeMatrix" : {
            "$ref" : "#/components/schemas/BTBSMatrix-386"
          },
          "precision" : {
            "$ref" : "#/components/schemas/GBTTolerancePrecision"
          },
          "toleranceType" : {
            "$ref" : "#/components/schemas/GBTToleranceType"
          },
          "upperTolerance" : {
            "type" : "number",
            "format" : "double"
          },
          "value" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTAngularDimensionDisplayData-320" : "#/components/schemas/BTAngularDimensionDisplayData-320",
            "BTBezierDegreeDimensionDisplayData-2597" : "#/components/schemas/BTBezierDegreeDimensionDisplayData-2597",
            "BTCountDimensionDisplayData-1778" : "#/components/schemas/BTCountDimensionDisplayData-1778",
            "BTCurveLengthDimensionDisplayData-322" : "#/components/schemas/BTCurveLengthDimensionDisplayData-322",
            "BTLinearDimensionDisplayData-330" : "#/components/schemas/BTLinearDimensionDisplayData-330",
            "BTRadialDimensionDisplayData-348" : "#/components/schemas/BTRadialDimensionDisplayData-348",
            "BTRhoDimensionDisplayData-2892" : "#/components/schemas/BTRhoDimensionDisplayData-2892"
          }
        }
      },
      "BTDiscount" : {
        "type" : "object",
        "properties" : {
          "accountBalance" : {
            "type" : "integer",
            "format" : "int32"
          },
          "amountOff" : {
            "type" : "integer",
            "format" : "int32"
          },
          "amountOffCurrency" : {
            "type" : "string"
          },
          "couponType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "couponValidMonths" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "expiresAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "$ref" : "#/components/schemas/BTDiscountOwnerIdPlanId"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "new" : {
            "type" : "boolean"
          },
          "percentOff" : {
            "type" : "integer",
            "format" : "int32"
          },
          "trialEndDate" : {
            "type" : "string"
          },
          "usedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "BTDiscountInfo" : {
        "type" : "object",
        "properties" : {
          "accountBalance" : {
            "type" : "integer",
            "format" : "int32"
          },
          "amountOff" : {
            "type" : "integer",
            "format" : "int32"
          },
          "couponType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "couponValidMonths" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/BTUserSummaryInfo"
          },
          "expiresAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "ownerId" : {
            "type" : "string"
          },
          "percentOff" : {
            "type" : "integer",
            "format" : "int32"
          },
          "planId" : {
            "type" : "string"
          },
          "trialEndDate" : {
            "type" : "string"
          },
          "usedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTDiscountOwnerIdPlanId" : {
        "type" : "object",
        "properties" : {
          "ownerId" : {
            "type" : "string"
          },
          "planId" : {
            "type" : "string"
          }
        }
      },
      "BTDisplayStateInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the view feature."
          },
          "isOnshapeDefault" : {
            "type" : "boolean",
            "description" : "`True` if this display state is in all assemblies by default; `false` if the display state is user-created."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the view feature."
          }
        },
        "description" : "Describes a display state."
      },
      "BTDocumentElementCreationDescriptor" : {
        "type" : "object",
        "properties" : {
          "elementParams" : {
            "$ref" : "#/components/schemas/BTAppElementParams"
          },
          "elementType" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "List of element IDs to include in the document."
      },
      "BTDocumentElementInfo" : {
        "type" : "object",
        "properties" : {
          "accelerationUnits" : {
            "type" : "string"
          },
          "angleUnits" : {
            "type" : "string"
          },
          "angularVelocityUnits" : {
            "type" : "string"
          },
          "applicationTarget" : {
            "$ref" : "#/components/schemas/BTApplicationTargetInfo"
          },
          "areaUnits" : {
            "type" : "string"
          },
          "dataType" : {
            "type" : "string"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "elementType" : {
            "$ref" : "#/components/schemas/GBTElementType"
          },
          "energyUnits" : {
            "type" : "string"
          },
          "filename" : {
            "type" : "string"
          },
          "forceUnits" : {
            "type" : "string"
          },
          "foreignDataId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "lengthUnits" : {
            "type" : "string"
          },
          "massUnits" : {
            "type" : "string"
          },
          "microversionId" : {
            "type" : "string"
          },
          "momentUnits" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "pressureUnits" : {
            "type" : "string"
          },
          "prettyType" : {
            "type" : "string"
          },
          "safeToShow" : {
            "type" : "boolean"
          },
          "specifiedUnit" : {
            "type" : "string"
          },
          "thumbnailInfo" : {
            "$ref" : "#/components/schemas/BTThumbnailInfo"
          },
          "thumbnails" : {
            "type" : "string",
            "format" : "uri"
          },
          "timeUnits" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "unupdatable" : {
            "type" : "boolean"
          },
          "volumeUnits" : {
            "type" : "string"
          },
          "zip" : {
            "$ref" : "#/components/schemas/BTZipFileInfo"
          }
        }
      },
      "BTDocumentElementProcessingInfo" : {
        "type" : "object",
        "properties" : {
          "accelerationUnits" : {
            "type" : "string"
          },
          "angleUnits" : {
            "type" : "string"
          },
          "angularVelocityUnits" : {
            "type" : "string"
          },
          "applicationTarget" : {
            "$ref" : "#/components/schemas/BTApplicationTargetInfo"
          },
          "areaUnits" : {
            "type" : "string"
          },
          "dataType" : {
            "type" : "string"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "elementType" : {
            "$ref" : "#/components/schemas/GBTElementType"
          },
          "energyUnits" : {
            "type" : "string"
          },
          "filename" : {
            "type" : "string"
          },
          "forceUnits" : {
            "type" : "string"
          },
          "foreignDataId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "lengthUnits" : {
            "type" : "string"
          },
          "massUnits" : {
            "type" : "string"
          },
          "microversionId" : {
            "type" : "string"
          },
          "momentUnits" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "pressureUnits" : {
            "type" : "string"
          },
          "prettyType" : {
            "type" : "string"
          },
          "safeToShow" : {
            "type" : "boolean"
          },
          "specifiedUnit" : {
            "type" : "string"
          },
          "thumbnailInfo" : {
            "$ref" : "#/components/schemas/BTThumbnailInfo"
          },
          "thumbnails" : {
            "type" : "string",
            "format" : "uri"
          },
          "timeUnits" : {
            "type" : "string"
          },
          "translationEventKey" : {
            "type" : "string"
          },
          "translationId" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "unupdatable" : {
            "type" : "boolean"
          },
          "volumeUnits" : {
            "type" : "string"
          },
          "zip" : {
            "$ref" : "#/components/schemas/BTZipFileInfo"
          }
        }
      },
      "BTDocumentHistoryInfo" : {
        "type" : "object",
        "properties" : {
          "canBeRestored" : {
            "type" : "boolean"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "microversionId" : {
            "type" : "string"
          },
          "nextMicroversionId" : {
            "type" : "string"
          },
          "restoreId" : {
            "type" : "string",
            "description" : "If this microversion is the result of a restore from another microversion, the restoreId will be the microversion Id of the original microversion that was restored. Otherwise this id will not be included within the response."
          },
          "userId" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          }
        }
      },
      "BTDocumentInfo" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "jsonType",
          "mapping" : {
            "document" : "#/components/schemas/BTDocumentInfo",
            "document-processing" : "#/components/schemas/BTDocumentProcessingInfo"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDocumentSummaryInfo"
        }, {
          "type" : "object",
          "properties" : {
            "anonymousAccessAllowed" : {
              "type" : "boolean"
            },
            "anonymousAllowsExport" : {
              "type" : "boolean"
            },
            "canMove" : {
              "type" : "boolean"
            },
            "canUnshare" : {
              "type" : "boolean"
            },
            "createdAt" : {
              "type" : "string",
              "format" : "date-time"
            },
            "createdBy" : {
              "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
            },
            "createdWithEducationPlan" : {
              "type" : "boolean"
            },
            "defaultElementId" : {
              "type" : "string"
            },
            "defaultVersionGraphMode" : {
              "$ref" : "#/components/schemas/BTVersionGraphMode"
            },
            "defaultVersionGraphShowAutoVersions" : {
              "type" : "boolean"
            },
            "defaultVersionGraphShowMerges" : {
              "type" : "boolean"
            },
            "defaultWorkspace" : {
              "$ref" : "#/components/schemas/BTWorkspaceInfo"
            },
            "description" : {
              "type" : "string"
            },
            "documentLabels" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTDocumentLabelInfo"
              }
            },
            "documentThumbnailElementId" : {
              "type" : "string"
            },
            "documentType" : {
              "type" : "integer",
              "format" : "int32"
            },
            "duplicateNameViolationError" : {
              "type" : "string"
            },
            "forceExportRules" : {
              "type" : "boolean"
            },
            "hasReleaseRevisionableObjects" : {
              "type" : "boolean"
            },
            "hasRelevantInsertables" : {
              "type" : "boolean"
            },
            "href" : {
              "type" : "string",
              "description" : "URI to fetch complete information of the resource.",
              "format" : "uri"
            },
            "id" : {
              "type" : "string",
              "description" : "Id of the resource."
            },
            "isContainer" : {
              "type" : "boolean"
            },
            "isEnterpriseOwned" : {
              "type" : "boolean"
            },
            "isMutable" : {
              "type" : "boolean"
            },
            "isOrphaned" : {
              "type" : "boolean"
            },
            "isUpgradedToLatestVersion" : {
              "type" : "boolean"
            },
            "isUsingManagedWorkflow" : {
              "type" : "boolean"
            },
            "likedByCurrentUser" : {
              "type" : "boolean"
            },
            "likes" : {
              "type" : "integer",
              "format" : "int64"
            },
            "modifiedAt" : {
              "type" : "string",
              "format" : "date-time"
            },
            "modifiedBy" : {
              "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
            },
            "name" : {
              "type" : "string",
              "description" : "Name of the resource."
            },
            "notRevisionManaged" : {
              "type" : "boolean"
            },
            "notes" : {
              "type" : "string"
            },
            "numberOfTimesCopied" : {
              "type" : "integer",
              "format" : "int64"
            },
            "numberOfTimesReferenced" : {
              "type" : "integer",
              "format" : "int64"
            },
            "owner" : {
              "$ref" : "#/components/schemas/BTOwnerInfo"
            },
            "parentId" : {
              "type" : "string"
            },
            "permission" : {
              "$ref" : "#/components/schemas/BTOldPermission"
            },
            "permissionSet" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "projectId" : {
              "type" : "string"
            },
            "public" : {
              "type" : "boolean"
            },
            "publishedVersionId" : {
              "type" : "string"
            },
            "recentVersion" : {
              "$ref" : "#/components/schemas/BTBaseInfo"
            },
            "resourceType" : {
              "type" : "string"
            },
            "sequence" : {
              "type" : "string"
            },
            "supportTeamUserAndShared" : {
              "type" : "boolean"
            },
            "tags" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "thumbnail" : {
              "$ref" : "#/components/schemas/BTThumbnailInfo"
            },
            "totalWorkspacesScheduledForUpdate" : {
              "type" : "integer",
              "format" : "int32"
            },
            "totalWorkspacesUpdating" : {
              "type" : "integer",
              "format" : "int32"
            },
            "tracingEnabled" : {
              "type" : "boolean"
            },
            "trash" : {
              "type" : "boolean"
            },
            "trashedAt" : {
              "type" : "string",
              "format" : "date-time"
            },
            "treeHref" : {
              "type" : "string"
            },
            "unparentHref" : {
              "type" : "string"
            },
            "userAccountLimitsBreached" : {
              "type" : "boolean"
            },
            "viewRef" : {
              "type" : "string",
              "description" : "URI to visualize the resource in a webclient if applicable.",
              "format" : "uri"
            }
          }
        } ],
        "x-BTVisibility-properties" : {
          "totalWorkspacesUpdating" : "INTERNAL",
          "defaultVersionGraphMode" : "INTERNAL",
          "totalWorkspacesScheduledForUpdate" : "INTERNAL",
          "isOrphaned" : "INTERNAL",
          "defaultVersionGraphShowAutoVersions" : "INTERNAL",
          "defaultVersionGraphShowMerges" : "INTERNAL",
          "tracingEnabled" : "INTERNAL"
        }
      },
      "BTDocumentLabelInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTGlobalTreeNodeInfo"
        }, {
          "type" : "object",
          "properties" : {
            "parentLabelId" : {
              "type" : "string"
            },
            "path" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTDocumentMergeInfo" : {
        "type" : "object",
        "properties" : {
          "libraryVersionMismatch" : {
            "type" : "boolean"
          },
          "overwrittenElements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTDocumentElementInfo"
            }
          },
          "parentDocumentMicroversionId" : {
            "type" : "string"
          },
          "resultDocumentMicroversionId" : {
            "type" : "string"
          },
          "sourceDocumentMicroversionId" : {
            "type" : "string"
          }
        }
      },
      "BTDocumentMessageBody" : {
        "type" : "object",
        "properties" : {
          "appElementSessionId" : {
            "type" : "string"
          },
          "commentId" : {
            "type" : "string"
          },
          "data" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "documentState" : {
            "type" : "string"
          },
          "documentType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "elementId" : {
            "type" : "string"
          },
          "event" : {
            "type" : "string"
          },
          "messageId" : {
            "type" : "string"
          },
          "metadataObjectType" : {
            "type" : "string"
          },
          "partId" : {
            "type" : "string"
          },
          "partIdentity" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "translatationId" : {
            "type" : "string",
            "writeOnly" : true
          },
          "translationId" : {
            "type" : "string"
          },
          "userId" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          },
          "webhookId" : {
            "type" : "string"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTDocumentParams" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Document description."
          },
          "elements" : {
            "type" : "array",
            "description" : "List of element IDs to include in the document.",
            "items" : {
              "$ref" : "#/components/schemas/BTDocumentElementCreationDescriptor"
            }
          },
          "forceExportRules" : {
            "type" : "boolean",
            "description" : "`true` if the current user can toggle the Force Export Rule flag on a document."
          },
          "generateUnknownMessages" : {
            "type" : "boolean",
            "description" : "Set to `true` for debugging."
          },
          "isEmptyContent" : {
            "type" : "boolean",
            "description" : "Set to `true` to generate an empty document."
          },
          "isPublic" : {
            "type" : "boolean",
            "description" : "Set to `true` to make the document public."
          },
          "name" : {
            "type" : "string",
            "description" : "Document name."
          },
          "notRevisionManaged" : {
            "type" : "boolean",
            "description" : "Set to `true` to indicate that revisions are not managed for this document."
          },
          "ownerEmail" : {
            "type" : "string",
            "description" : "The document owner's email address."
          },
          "ownerId" : {
            "type" : "string",
            "description" : "If `ownerType=USER`, this is the user ID. If `ownerType=COMPANY`, this is the company ID."
          },
          "ownerType" : {
            "type" : "integer",
            "description" : "The document's owner type. `USER=0` | `COMPANY=1` | `ONSHAPE=2`",
            "format" : "int32",
            "default" : 0
          },
          "parentId" : {
            "type" : "string",
            "description" : "Document ID of this document's parent."
          },
          "projectId" : {
            "type" : "string",
            "description" : "ID of the project this document belongs to."
          },
          "tags" : {
            "type" : "array",
            "description" : "Array of strings to set as tags for the document.",
            "items" : {
              "type" : "string",
              "description" : "Array of strings to set as tags for the document."
            }
          }
        },
        "description" : "Parameters for creating and updating documents."
      },
      "BTDocumentProcessingInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDocumentInfo"
        }, {
          "type" : "object",
          "properties" : {
            "translationEventKey" : {
              "type" : "string"
            },
            "translationId" : {
              "type" : "string"
            }
          }
        } ],
        "x-BTVisibility-properties" : {
          "totalWorkspacesUpdating" : "INTERNAL",
          "defaultVersionGraphMode" : "INTERNAL",
          "totalWorkspacesScheduledForUpdate" : "INTERNAL",
          "isOrphaned" : "INTERNAL",
          "defaultVersionGraphShowAutoVersions" : "INTERNAL",
          "defaultVersionGraphShowMerges" : "INTERNAL",
          "tracingEnabled" : "INTERNAL"
        }
      },
      "BTDocumentSearchHitInfo" : {
        "type" : "object",
        "properties" : {
          "documentId" : {
            "type" : "string"
          },
          "elementName" : {
            "type" : "string"
          },
          "highlightedFields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "hit" : {
            "$ref" : "#/components/schemas/BTLegacySearchHit"
          },
          "hitId" : {
            "type" : "string"
          },
          "meshState" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "projectId" : {
            "type" : "string"
          },
          "sourceMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "type" : {
            "$ref" : "#/components/schemas/BTSearchEntityType"
          },
          "versionOrWorkspaceName" : {
            "type" : "string"
          }
        }
      },
      "BTDocumentSearchParams" : {
        "type" : "object",
        "properties" : {
          "documentFilter" : {
            "type" : "integer",
            "description" : "Filter ID. Options are 0 (my documents), 1 (created), 2 (shared), 3 (trash), 4 (public), 5 (recent), 6 (by owner), 7 (by company), or 9 (by team).",
            "format" : "int32"
          },
          "foundIn" : {
            "$ref" : "#/components/schemas/BTESVersionWorkspaceChoice"
          },
          "limit" : {
            "maximum" : 20,
            "type" : "integer",
            "description" : "Number of results to return per page.",
            "format" : "int32",
            "example" : 1,
            "default" : 20
          },
          "offset" : {
            "type" : "integer",
            "description" : "Offset. Determines where search results begin.",
            "format" : "int32",
            "default" : 0
          },
          "ownerId" : {
            "type" : "string",
            "description" : "Document owner's ID (if the filter is 6 or 7), or Team Id (if the filter is 9) "
          },
          "parentId" : {
            "type" : "string",
            "description" : "Search document parent Id ",
            "example" : "ALL"
          },
          "rawQuery" : {
            "type" : "string",
            "description" : "Search for documents that contain the given string in the name. Search is not case-sensitive."
          },
          "sortColumn" : {
            "type" : "string",
            "description" : "Column by which to sort search results. `name | modifiedAt | createdAt | email | modifiedBy | promotedAt`",
            "default" : "createdAt"
          },
          "sortOrder" : {
            "type" : "string",
            "description" : "Sort order. `desc (descending) | asc (ascending)`",
            "default" : "desc"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of owner. Options are 0 (user), 1 (company), 2 (onshape). If the owner is a teamId, leave this unspecified."
          },
          "when" : {
            "$ref" : "#/components/schemas/BTESResultsFilter"
          }
        },
        "x-BTVisibility-properties" : {
          "luceneSyntax" : "INTERNAL",
          "dochitsOnly" : "INTERNAL"
        }
      },
      "BTDocumentSelectorInfo" : {
        "type" : "object",
        "properties" : {
          "parameters" : {
            "$ref" : "#/components/schemas/BTDocumentSelectorParametersInfo"
          },
          "selectorId" : {
            "type" : "string"
          }
        }
      },
      "BTDocumentSelectorParametersInfo" : {
        "required" : [ "jsonType" ],
        "type" : "object",
        "properties" : {
          "jsonType" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "jsonType",
          "mapping" : {
            "other-documents" : "#/components/schemas/BTOtherDocumentSelectorParametersInfo"
          }
        }
      },
      "BTDocumentSummaryInfo" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "jsonType",
          "mapping" : {
            "document" : "#/components/schemas/BTDocumentInfo",
            "document-summary" : "#/components/schemas/BTDocumentSummaryInfo",
            "document-summary-search" : "#/components/schemas/BTDocumentSummarySearchInfo"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTGlobalTreeNodeInfo"
        }, {
          "type" : "object",
          "properties" : {
            "anonymousAccessAllowed" : {
              "type" : "boolean"
            },
            "anonymousAllowsExport" : {
              "type" : "boolean"
            },
            "canUnshare" : {
              "type" : "boolean"
            },
            "createdWithEducationPlan" : {
              "type" : "boolean"
            },
            "defaultElementId" : {
              "type" : "string"
            },
            "defaultVersionGraphMode" : {
              "$ref" : "#/components/schemas/BTVersionGraphMode"
            },
            "defaultVersionGraphShowAutoVersions" : {
              "type" : "boolean"
            },
            "defaultVersionGraphShowMerges" : {
              "type" : "boolean"
            },
            "defaultWorkspace" : {
              "$ref" : "#/components/schemas/BTWorkspaceInfo"
            },
            "documentLabels" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTDocumentLabelInfo"
              }
            },
            "documentType" : {
              "type" : "integer",
              "format" : "int32"
            },
            "forceExportRules" : {
              "type" : "boolean"
            },
            "hasReleaseRevisionableObjects" : {
              "type" : "boolean"
            },
            "hasRelevantInsertables" : {
              "type" : "boolean"
            },
            "isOrphaned" : {
              "type" : "boolean"
            },
            "isUsingManagedWorkflow" : {
              "type" : "boolean"
            },
            "likedByCurrentUser" : {
              "type" : "boolean"
            },
            "likes" : {
              "type" : "integer",
              "format" : "int64"
            },
            "notRevisionManaged" : {
              "type" : "boolean"
            },
            "notes" : {
              "type" : "string"
            },
            "numberOfTimesCopied" : {
              "type" : "integer",
              "format" : "int64"
            },
            "numberOfTimesReferenced" : {
              "type" : "integer",
              "format" : "int64"
            },
            "parentId" : {
              "type" : "string"
            },
            "permission" : {
              "$ref" : "#/components/schemas/BTOldPermission"
            },
            "permissionSet" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "public" : {
              "type" : "boolean"
            },
            "publishedVersionId" : {
              "type" : "string"
            },
            "recentVersion" : {
              "$ref" : "#/components/schemas/BTBaseInfo"
            },
            "sequence" : {
              "type" : "string"
            },
            "supportTeamUserAndShared" : {
              "type" : "boolean"
            },
            "tags" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "thumbnail" : {
              "$ref" : "#/components/schemas/BTThumbnailInfo"
            },
            "totalWorkspacesScheduledForUpdate" : {
              "type" : "integer",
              "format" : "int32"
            },
            "totalWorkspacesUpdating" : {
              "type" : "integer",
              "format" : "int32"
            },
            "trash" : {
              "type" : "boolean"
            },
            "trashedAt" : {
              "type" : "string",
              "format" : "date-time"
            },
            "userAccountLimitsBreached" : {
              "type" : "boolean"
            }
          }
        } ],
        "x-BTVisibility-properties" : {
          "totalWorkspacesUpdating" : "INTERNAL",
          "defaultVersionGraphMode" : "INTERNAL",
          "totalWorkspacesScheduledForUpdate" : "INTERNAL",
          "isOrphaned" : "INTERNAL",
          "defaultVersionGraphShowAutoVersions" : "INTERNAL",
          "defaultVersionGraphShowMerges" : "INTERNAL"
        }
      },
      "BTDocumentSummarySearchInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDocumentSummaryInfo"
        }, {
          "type" : "object",
          "properties" : {
            "searchHits" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTDocumentSearchHitInfo"
              }
            }
          }
        } ],
        "x-BTVisibility-properties" : {
          "totalWorkspacesUpdating" : "INTERNAL",
          "defaultVersionGraphMode" : "INTERNAL",
          "totalWorkspacesScheduledForUpdate" : "INTERNAL",
          "isOrphaned" : "INTERNAL",
          "defaultVersionGraphShowAutoVersions" : "INTERNAL",
          "defaultVersionGraphShowMerges" : "INTERNAL"
        }
      },
      "BTDocumentVersionElementIds-1897" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          }
        }
      },
      "BTDocumentWithVersionAndElementId" : {
        "type" : "object",
        "properties" : {
          "documentId" : {
            "type" : "string"
          },
          "documentVersionId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementLibraryId" : {
            "$ref" : "#/components/schemas/ObjectId"
          },
          "elementLibraryVersion" : {
            "$ref" : "#/components/schemas/ObjectId"
          },
          "partNumber" : {
            "type" : "string"
          },
          "revision" : {
            "type" : "string"
          },
          "uniqueVersionId" : {
            "type" : "string"
          },
          "validElementLibraryReference" : {
            "type" : "boolean"
          },
          "validRevisionReference" : {
            "type" : "boolean"
          }
        }
      },
      "BTDocumentWithVersionId" : {
        "type" : "object",
        "properties" : {
          "documentId" : {
            "type" : "string"
          },
          "documentVersionId" : {
            "type" : "string"
          }
        }
      },
      "BTDomainSpecificMetadata-961" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTCosmeticThreadMetadata-3248" : "#/components/schemas/BTCosmeticThreadMetadata-3248",
            "BTSMSpecificMetadata-1315" : "#/components/schemas/BTSMSpecificMetadata-1315"
          }
        }
      },
      "BTDrawingHiddenLineOption" : {
        "type" : "string",
        "enum" : [ "drafting", "excluded", "marked" ]
      },
      "BTDrawingModificationParams" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The label that will appear in the document's edit history for this operation. If blank, a value will be auto-generated."
          },
          "jsonRequests" : {
            "type" : "array",
            "description" : "Array of drawing modification operations.",
            "items" : {
              "$ref" : "#/components/schemas/BTBDrawingOperationParams"
            }
          }
        }
      },
      "BTDrawingParams" : {
        "type" : "object",
        "properties" : {
          "border" : {
            "type" : "boolean",
            "description" : "Set to `true` to include a border in the drawing.",
            "default" : false
          },
          "computeIntersection" : {
            "type" : "boolean",
            "description" : "Set to `true` to compute and display virtual edges (curves drawn where parts intersect). Leave as `false` to improve performance.",
            "default" : false
          },
          "decimalSeparator" : {
            "type" : "string",
            "description" : "`PERIOD` | `COMMA`",
            "default" : "PERIOD"
          },
          "displayStateId" : {
            "type" : "string",
            "description" : "Apply this display state's properties to the drawing."
          },
          "documentId" : {
            "type" : "string",
            "description" : "The document in which to create the drawing. If used, this value must match the document ID (`did`) value provided in the URL."
          },
          "documentMicroversionId" : {
            "type" : "string",
            "description" : "Create a drawing of a part or assembly from this microversion."
          },
          "drawingName" : {
            "type" : "string",
            "description" : "Provide a name for the drawing."
          },
          "elementConfiguration" : {
            "type" : "string",
            "description" : "Apply this configuration from the source element to the drawing."
          },
          "elementId" : {
            "type" : "string",
            "description" : "The id of the element in which to perform the operation."
          },
          "elementMicroversionId" : {
            "type" : "string",
            "description" : "The id of the element microversion in which to perform the operation."
          },
          "explosionId" : {
            "type" : "string",
            "description" : "Apply this exploded view to the drawing."
          },
          "externalDocumentId" : {
            "type" : "string",
            "description" : "Create a drawing of an element from this external document."
          },
          "externalDocumentVersionId" : {
            "type" : "string",
            "description" : "Create a drawing of an element from this external document version."
          },
          "hiddenLines" : {
            "$ref" : "#/components/schemas/BTDrawingHiddenLineOption"
          },
          "includeSurfaces" : {
            "type" : "boolean",
            "description" : "Set to `true` to include surfaces in the drawing.",
            "default" : false
          },
          "includeWires" : {
            "type" : "boolean",
            "description" : "Set to `true` to include wires in the drawing.",
            "default" : false
          },
          "isFlattenedPart" : {
            "type" : "boolean",
            "description" : "Set to `true` if creating a drawing from a flattened part.",
            "default" : false
          },
          "isSketchOnly" : {
            "type" : "boolean",
            "description" : "Set to `true` if creating a drawing of a sketch.",
            "default" : false
          },
          "isSurface" : {
            "type" : "boolean",
            "description" : "Set to `true` if creating a drawing from a surface.",
            "default" : false
          },
          "language" : {
            "type" : "string",
            "description" : "Set the language for the drawing. Accepts any ISO 639-1 standard language code.",
            "default" : "en-us"
          },
          "location" : {
            "$ref" : "#/components/schemas/BTElementLocationParams"
          },
          "modelType" : {
            "type" : "string",
            "description" : "The type of model to include in the drawing: `partstudio` | `assembly`"
          },
          "namedPositionId" : {
            "type" : "string",
            "description" : "Apply this named view to the drawing."
          },
          "numberHorizontalZones" : {
            "type" : "integer",
            "description" : "The number of horizontal zones to include in the drawing's graphics area.",
            "format" : "int32",
            "example" : 2,
            "default" : 0
          },
          "numberVerticalZones" : {
            "type" : "integer",
            "description" : "The number of vertical zones to include in the drawing's graphics area.",
            "format" : "int32",
            "example" : 2,
            "default" : 0
          },
          "partId" : {
            "type" : "string",
            "description" : "Include this part in the drawing."
          },
          "partNumber" : {
            "type" : "string",
            "description" : "Include this part in the drawing."
          },
          "partQuery" : {
            "type" : "string",
            "description" : "Include all parts found by the query in the drawing."
          },
          "projection" : {
            "type" : "string",
            "description" : "Apply this projection to the drawing."
          },
          "pureSketch" : {
            "type" : "boolean",
            "description" : "Set to `true` if creating the drawing of an empty sketch.",
            "default" : false
          },
          "qualityOption" : {
            "type" : "string",
            "description" : "`BEST_PERFORMANCE` | `BEST_QUALITY` | `BALANCED` | `ADAPTIVE`"
          },
          "referenceType" : {
            "type" : "integer",
            "description" : "Specify the type of element to create the drawing from. `0: UNKNOWN` | `1: PARTSTUDIO` | `2: ASSEMBLY` | `3: PART` | `4: FLATTENED_PART` | `5: COMPOSITE_PART` | `6: MESH_PART` | `7: SURFACE` | `8: SKETCH` | `9: CURVE`",
            "format" : "int32"
          },
          "referenceTypeEnum" : {
            "$ref" : "#/components/schemas/GBTAppElementReferenceType"
          },
          "revision" : {
            "type" : "string",
            "description" : "Create the drawing from this specific revision."
          },
          "showCutGeomOnly" : {
            "type" : "boolean",
            "description" : "Set to `true` to show only cut geometry in the drawing.",
            "default" : false
          },
          "simplificationOption" : {
            "type" : "string",
            "description" : "`NONE` | `ABSOLUTE` | `RATIO_TO_MODEL` | `RATIO_TO_BODY` | `AUTOMATIC`"
          },
          "simplificationThreshold" : {
            "type" : "number",
            "description" : "`NONE` | `UNKNOWN` | `SMOOTH` | `DRAFTING`",
            "format" : "double"
          },
          "size" : {
            "type" : "string",
            "description" : "Provide a size for the drawing."
          },
          "sketchIds" : {
            "type" : "array",
            "description" : "Include these sketches in the drawing.",
            "items" : {
              "type" : "string",
              "description" : "Include these sketches in the drawing."
            }
          },
          "standard" : {
            "type" : "string",
            "description" : "Provide the Standard to use in the drawing.",
            "example" : "ANSI"
          },
          "startZones" : {
            "type" : "string",
            "description" : "The zone in which to start the drawing.",
            "example" : "A1"
          },
          "templateArgs" : {
            "type" : "array",
            "description" : "Provide any additional arguments for the template being used for this drawing.",
            "items" : {
              "type" : "string",
              "description" : "Provide any additional arguments for the template being used for this drawing."
            }
          },
          "templateDocumentId" : {
            "type" : "string",
            "description" : "Apply the template from this document to the drawing."
          },
          "templateElementId" : {
            "type" : "string",
            "description" : "Apply the template from this element to the drawing."
          },
          "templateName" : {
            "type" : "string",
            "description" : "Apply this template to the drawing."
          },
          "templateVersionId" : {
            "type" : "string",
            "description" : "Apply the template from this version to the drawing."
          },
          "templateWorkspaceId" : {
            "type" : "string",
            "description" : "Apply the template from this workspace to the drawing."
          },
          "titleblock" : {
            "type" : "boolean",
            "description" : "Set to `true` to include a title block in the drawing.",
            "default" : false
          },
          "units" : {
            "type" : "string",
            "description" : "Units for the element: `METER` | `CENTIMETER` | `MILLIMETER` | `INCH` | `FOOT` | `YARD`"
          },
          "views" : {
            "type" : "string",
            "description" : "Add these views to the drawing."
          },
          "workspaceId" : {
            "type" : "string",
            "description" : "Create a drawing of a part or assembly from this workspace."
          }
        },
        "description" : "JSON schema for creating or updating a drawing."
      },
      "BTESResultsFilter" : {
        "type" : "string",
        "description" : "Search result when",
        "example" : "ALL",
        "enum" : [ "ALL", "LATEST", "LATEST_PER_HIT" ]
      },
      "BTESVersionWorkspaceChoice" : {
        "type" : "string",
        "description" : "Search result found in",
        "example" : "ALL",
        "enum" : [ "ALL", "WORKSPACES", "VERSIONS" ]
      },
      "BTEdgeTopologyFilter-122" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "edgeTopology" : {
              "$ref" : "#/components/schemas/GBTEdgeTopology"
            },
            "isInternalEdge" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTEditingLogic-2350" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "functionName" : {
            "type" : "string"
          },
          "wantsClickedButton" : {
            "type" : "boolean"
          },
          "wantsHiddenBodies" : {
            "type" : "boolean"
          },
          "wantsIsCreating" : {
            "type" : "boolean"
          },
          "wantsSpecifiedParameters" : {
            "type" : "boolean"
          }
        }
      },
      "BTElementDisplayData-326" : {
        "type" : "object",
        "properties" : {
          "annotationsForElement" : {
            "$ref" : "#/components/schemas/BTAnnotationElementDisplayData-894"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "elementId" : {
            "type" : "string"
          },
          "fromFullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "fullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "incremental" : {
            "type" : "boolean"
          },
          "instanceCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "keepFromMicroversion" : {
            "type" : "boolean"
          },
          "microversionId" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          },
          "microversionIdAndConfigurationInterval" : {
            "$ref" : "#/components/schemas/BTMicroversionIdAndConfigurationInterval-2364"
          },
          "microversionInterval" : {
            "$ref" : "#/components/schemas/BTMicroversionIdInterval-367"
          },
          "versionForRasterization" : {
            "$ref" : "#/components/schemas/BTElementDisplayData-326"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTAssemblyReferencesDisplayData-1562" : "#/components/schemas/BTAssemblyReferencesDisplayData-1562",
            "BTPartStudioDisplayDataBase-2751" : "#/components/schemas/BTPartStudioDisplayDataBase-2751",
            "BTRootAssemblyDisplayData-96" : "#/components/schemas/BTRootAssemblyDisplayData-96"
          }
        }
      },
      "BTElementLibraryPurpose-3353" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        }
      },
      "BTElementLibraryReferenceData-3133" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "elementLibraryId" : {
            "type" : "string"
          },
          "elementLibraryIdRaw" : {
            "$ref" : "#/components/schemas/BTObjectId"
          },
          "elementLibrarySelectionPath" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTObjectId"
            }
          },
          "elementLibraryVersion" : {
            "type" : "string"
          },
          "elementLibraryVersionRaw" : {
            "$ref" : "#/components/schemas/BTObjectId"
          }
        }
      },
      "BTElementLibrarySummaryInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "libraryDefinitionId" : {
            "type" : "string",
            "description" : "The ID of the definition of the element library."
          },
          "libraryId" : {
            "pattern" : "[0-9a-fA-F]{24}",
            "type" : "string",
            "description" : "The Id of the library -- unique across Onshape."
          },
          "libraryVersion" : {
            "pattern" : "[0-9a-fA-F]{24}",
            "type" : "string",
            "description" : "The current version Id of the library."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "ownerId" : {
            "pattern" : "[0-9a-fA-F]{24}",
            "type" : "string",
            "description" : "The owner Id of an element library (either Onshape, company, or user)."
          },
          "ownerType" : {
            "type" : "integer",
            "description" : "The type of library owner, Onshape, user, or company",
            "format" : "int32"
          },
          "sourceFolderId" : {
            "type" : "string",
            "description" : "The id of the root folder of the library"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        },
        "description" : "Element library metadata"
      },
      "BTElementLocationParams" : {
        "type" : "object",
        "properties" : {
          "elementId" : {
            "type" : "string",
            "description" : "The id of an element which provides context for the position value specified."
          },
          "position" : {
            "type" : "integer",
            "description" : "An indicator for the relative placement of the new element. If elementId is specified, a negative number indicates insertion prior to the element and a non-negative number indicates insertion following the element. If no elementId is specified, a negative value indicates insertion at the end of the element list and a non-negative number indicates insertion at the start of the element list.",
            "format" : "int32"
          }
        },
        "description" : "The location at which the new element should be inserted."
      },
      "BTElementMergeInfo" : {
        "type" : "object",
        "properties" : {
          "branchPointElementName" : {
            "type" : "string"
          },
          "branchPointElementPath" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "dependentElementMergeInfo" : {
            "$ref" : "#/components/schemas/BTElementMergeInfo"
          },
          "elementDataType" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementType" : {
            "$ref" : "#/components/schemas/GBTElementType"
          },
          "mergeable" : {
            "type" : "boolean"
          },
          "sourceElementName" : {
            "type" : "string"
          },
          "sourceElementPath" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sourceElementStatus" : {
            "$ref" : "#/components/schemas/GBTElementBranchStatus"
          },
          "sourceLibraryVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sourceModifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "sourceModifiedBy" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "sourceOutOfDate" : {
            "type" : "boolean"
          },
          "targetElementName" : {
            "type" : "string"
          },
          "targetElementPath" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "targetElementStatus" : {
            "$ref" : "#/components/schemas/GBTElementBranchStatus"
          },
          "targetLibraryVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "targetModifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "targetModifiedBy" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "targetOutOfDate" : {
            "type" : "boolean"
          },
          "versionCompatible" : {
            "type" : "boolean"
          }
        }
      },
      "BTElementReference-725" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "configured" : {
            "type" : "boolean"
          },
          "documentVersionId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "externalDocumentWithVersion" : {
            "$ref" : "#/components/schemas/BTDocumentWithVersionId"
          },
          "externalDocumentWithVersionAndElementId" : {
            "$ref" : "#/components/schemas/BTDocumentWithVersionAndElementId"
          },
          "externalReference" : {
            "type" : "boolean"
          },
          "fullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "microversionIdAndConfiguration" : {
            "$ref" : "#/components/schemas/BTMicroversionIdAndConfiguration-2338"
          },
          "nodeId" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTExternalReference-1936" : "#/components/schemas/BTExternalReference-1936"
          }
        }
      },
      "BTElementTransaction" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "microbranchId" : {
            "type" : "string"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTEllipseDescription-866" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTCurveDescription-1583"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "majorAxis" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            },
            "majorRadius" : {
              "type" : "number",
              "format" : "double"
            },
            "minorRadius" : {
              "type" : "number",
              "format" : "double"
            },
            "normal" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            }
          }
        } ]
      },
      "BTEllipseDiameterDimensionDisplayData-1301" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTLinearDimensionDisplayData-330"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTEncodedConfigurationInfo" : {
        "type" : "object",
        "properties" : {
          "encodedId" : {
            "type" : "string"
          },
          "queryParam" : {
            "type" : "string"
          }
        }
      },
      "BTEntityDegenerateEdge-1129" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTessellatedGeometry-2576"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "point" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "float"
              }
            }
          }
        } ]
      },
      "BTEntityDeletion-24" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTBaseEntityData-33"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTEntityEdge-30" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTessellatedGeometry-2576"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "compressedPoints" : {
              "$ref" : "#/components/schemas/BTImmutableByteArray"
            },
            "edgeSmoothnessStatus" : {
              "$ref" : "#/components/schemas/GBTEntityEdgeSmoothnessStatus"
            },
            "edgeType" : {
              "$ref" : "#/components/schemas/GBTEdgeType"
            },
            "isClosed" : {
              "type" : "boolean"
            },
            "isInternalEdge" : {
              "type" : "boolean"
            },
            "points" : {
              "$ref" : "#/components/schemas/BTImmutableFloatArray"
            }
          }
        } ]
      },
      "BTEntityFace-31" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTSimulationFace-2147" : "#/components/schemas/BTSimulationFace-2147"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTessellatedGeometry-2576"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "compressedUvs" : {
              "$ref" : "#/components/schemas/BTImmutableByteArray"
            },
            "flipComputedNormals" : {
              "type" : "boolean"
            },
            "indices" : {
              "$ref" : "#/components/schemas/BTImmutableIntArray"
            },
            "indicesStoredAsDifferences" : {
              "type" : "boolean"
            },
            "isPlanar" : {
              "type" : "boolean"
            },
            "maxPrincipleCurvatureMagnitudes" : {
              "$ref" : "#/components/schemas/BTImmutableFloatArray"
            },
            "minPrincipleCurvatureMagnitudes" : {
              "$ref" : "#/components/schemas/BTImmutableFloatArray"
            },
            "normals" : {
              "$ref" : "#/components/schemas/BTImmutableFloatArray"
            },
            "points" : {
              "$ref" : "#/components/schemas/BTImmutableFloatArray"
            },
            "surfaceParameters" : {
              "$ref" : "#/components/schemas/BTImmutableDoubleArray"
            },
            "surfaceType" : {
              "$ref" : "#/components/schemas/GBTSurfaceType"
            },
            "textureCoordinates" : {
              "$ref" : "#/components/schemas/BTImmutableFloatArray"
            },
            "triangleCount" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTEntityGeometry-35" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "compressed" : {
            "type" : "boolean"
          },
          "decompressed" : {
            "$ref" : "#/components/schemas/BTEntityGeometry-35"
          },
          "errorCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "estimatedMemoryUsageInBytes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hasTessellationError" : {
            "type" : "boolean"
          },
          "settingIndex" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTDebugGeometry-2059" : "#/components/schemas/BTDebugGeometry-2059",
            "BTTessellatedGeometry-2576" : "#/components/schemas/BTTessellatedGeometry-2576"
          }
        }
      },
      "BTEntityPoint-29" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTessellatedGeometry-2576"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "point" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "float"
              }
            }
          }
        } ]
      },
      "BTEntityTypeFilter-124" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "entityType" : {
              "$ref" : "#/components/schemas/GBTEntityType"
            }
          }
        } ]
      },
      "BTExplosion-2754" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "explodeSteps" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTExplosionStepFeature-3008"
              }
            },
            "startingPositionId" : {
              "$ref" : "#/components/schemas/BTMicroversionIdAndConfiguration-2338"
            }
          }
        } ]
      },
      "BTExplosionStepFeature-3008" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTExportBodyProperties-3559" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTExportModelProperties-3216"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "material" : {
              "$ref" : "#/components/schemas/BTPartMaterial-1445"
            },
            "visibility" : {
              "$ref" : "#/components/schemas/GBTPartVisibility"
            }
          }
        } ]
      },
      "BTExportModelArcEdgeGeometry-1257" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTExportModelEdgeGeometry-1125"
        }, {
          "type" : "object",
          "properties" : {
            "arcIsClockwise" : {
              "type" : "boolean"
            },
            "arcSweep" : {
              "type" : "number",
              "format" : "double"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTExportModelBodiesResponse-734" : {
        "type" : "object",
        "properties" : {
          "bodies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTExportModelBody-1272"
            }
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "errorEnum" : {
            "$ref" : "#/components/schemas/GBTErrorStringEnum"
          },
          "microversionId" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          },
          "nodeIdToReferencedProperty" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTExportModelProperties-3216"
            }
          }
        }
      },
      "BTExportModelBody-1272" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "closed" : {
            "type" : "boolean",
            "description" : "If type == COMPOSITE, indicates whether it is open or closed."
          },
          "constituentBodyIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "If type == COMPOSITE, this is the id of a constituent that can be found in the 'bodies' array."
            }
          },
          "consumedByComposite" : {
            "type" : "boolean",
            "description" : "Indicates if there is a closed composite that consumes this body."
          },
          "edges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTExportModelEdge-1782"
            }
          },
          "faces" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTExportModelFace-1363"
            }
          },
          "id" : {
            "type" : "string"
          },
          "properties" : {
            "$ref" : "#/components/schemas/BTExportBodyProperties-3559"
          },
          "type" : {
            "$ref" : "#/components/schemas/GBTBodyType"
          },
          "vertices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTExportModelVertex-858"
            }
          }
        }
      },
      "BTExportModelCoedge-1342" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "edgeId" : {
            "type" : "string"
          },
          "orientation" : {
            "type" : "boolean"
          }
        }
      },
      "BTExportModelEdge-1782" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "curve" : {
            "$ref" : "#/components/schemas/BTCurveDescription-1583"
          },
          "geometry" : {
            "$ref" : "#/components/schemas/BTExportModelEdgeGeometry-1125"
          },
          "id" : {
            "type" : "string"
          },
          "vertices" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTExportModelEdgeGeometry-1125" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "endPoint" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "endVector" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "length" : {
            "type" : "number",
            "format" : "double"
          },
          "midPoint" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "quarterPoint" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "startPoint" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "startVector" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTExportModelArcEdgeGeometry-1257" : "#/components/schemas/BTExportModelArcEdgeGeometry-1257"
          }
        }
      },
      "BTExportModelFace-1363" : {
        "type" : "object",
        "properties" : {
          "appearancePropertyNodeId" : {
            "type" : "string",
            "description" : "Identifies the application of the appearance. Faces that share a value were assigned an appearance together."
          },
          "area" : {
            "type" : "number",
            "format" : "double"
          },
          "box" : {
            "$ref" : "#/components/schemas/BTBoundingBox-1052"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "decalIdToDecal" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTDecal-2404"
            }
          },
          "faceProperties" : {
            "$ref" : "#/components/schemas/BTExportModelProperties-3216"
          },
          "id" : {
            "type" : "string"
          },
          "loops" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTExportModelLoop-1182"
            }
          },
          "orientation" : {
            "type" : "boolean"
          },
          "surface" : {
            "$ref" : "#/components/schemas/BTSurfaceDescription-1564"
          }
        }
      },
      "BTExportModelLoop-1182" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "coedges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTExportModelCoedge-1342"
            }
          },
          "isInner" : {
            "type" : "boolean"
          },
          "isOuter" : {
            "type" : "boolean"
          }
        }
      },
      "BTExportModelProperties-3216" : {
        "type" : "object",
        "properties" : {
          "appearance" : {
            "$ref" : "#/components/schemas/BTGraphicsAppearance-1152"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "name" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTExportBodyProperties-3559" : "#/components/schemas/BTExportBodyProperties-3559"
          }
        }
      },
      "BTExportModelVertex-858" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "id" : {
            "type" : "string"
          },
          "point" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          }
        }
      },
      "BTExportRuleHardcodedPropertyInfo" : {
        "type" : "object",
        "properties" : {
          "context" : {
            "type" : "integer",
            "format" : "int32"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "objectTypes" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      },
      "BTExportRuleValidOptionsInfo" : {
        "type" : "object",
        "properties" : {
          "conventionPlaceholder" : {
            "type" : "string"
          },
          "hardcodedProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTExportRuleHardcodedPropertyInfo"
            }
          },
          "propertyContextDisplayMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "validObjectTypes" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      },
      "BTExportTessellatedBody-3398" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "constituents" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTExportTessellatedEdgesBody-890" : "#/components/schemas/BTExportTessellatedEdgesBody-890",
            "BTExportTessellatedFacesBody-1321" : "#/components/schemas/BTExportTessellatedFacesBody-1321"
          }
        }
      },
      "BTExportTessellatedEdgesBody-890" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTExportTessellatedBody-3398"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "edges" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTExportTessellatedEdgesEdge-1364"
              }
            }
          }
        } ]
      },
      "BTExportTessellatedEdgesEdge-1364" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "id" : {
            "type" : "string"
          },
          "vertices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            }
          }
        }
      },
      "BTExportTessellatedEdgesResponse-327" : {
        "type" : "object",
        "properties" : {
          "bodies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTExportTessellatedBody-3398"
            }
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "errorEnum" : {
            "$ref" : "#/components/schemas/GBTErrorStringEnum"
          }
        }
      },
      "BTExportTessellatedFacesBody-1321" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTExportTessellatedBody-3398"
        }, {
          "type" : "object",
          "properties" : {
            "appearance" : {
              "$ref" : "#/components/schemas/BTGraphicsAppearance-1152"
            },
            "bodyType" : {
              "$ref" : "#/components/schemas/GBTBodyType"
            },
            "btType" : {
              "type" : "string"
            },
            "faces" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTExportTessellatedFacesFace-1192"
              }
            },
            "facetPoints" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTVector3d-389"
              }
            }
          }
        } ]
      },
      "BTExportTessellatedFacesFace-1192" : {
        "type" : "object",
        "properties" : {
          "appearance" : {
            "$ref" : "#/components/schemas/BTGraphicsAppearance-1152"
          },
          "appearanceSourceId" : {
            "type" : "string"
          },
          "appearanceSourceName" : {
            "type" : "string"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "errorMessage" : {
            "type" : "string"
          },
          "facets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTExportTessellatedFacesFacet-1417"
            }
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "BTExportTessellatedFacesFacet-1417" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "indices" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "normal" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "normals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            }
          },
          "textureCoordinates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTVector2d-1812"
            }
          },
          "vertices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            }
          }
        }
      },
      "BTExportTessellatedFacesResponse-898" : {
        "type" : "object",
        "properties" : {
          "bodies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTExportTessellatedBody-3398"
            }
          },
          "bodiesInfo" : {
            "$ref" : "#/components/schemas/BTExportModelBodiesResponse-734"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "combineCompositePartConstituents" : {
            "type" : "boolean"
          },
          "displayData" : {
            "$ref" : "#/components/schemas/BTPartStudioDisplayData-346"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "errorEnum" : {
            "$ref" : "#/components/schemas/GBTErrorStringEnum"
          },
          "facetPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            }
          },
          "fullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "outputFaceAppearances" : {
            "type" : "boolean"
          },
          "outputSeparateFaceNodes" : {
            "type" : "boolean"
          }
        }
      },
      "BTExternalConnectionInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTGlobalTreeNodeInfo"
        }, {
          "type" : "object",
          "properties" : {
            "approvedBy" : {
              "$ref" : "#/components/schemas/BTUserSummaryInfo"
            },
            "contactUser" : {
              "$ref" : "#/components/schemas/BTUserSummaryInfo"
            },
            "icon" : {
              "type" : "string"
            },
            "invitedCompany" : {
              "$ref" : "#/components/schemas/BTCompanySummaryInfo"
            },
            "member" : {
              "type" : "boolean"
            },
            "numberOfMembers" : {
              "type" : "integer",
              "format" : "int64"
            },
            "state" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTExternalElementReferenceInfo" : {
        "type" : "object",
        "properties" : {
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementMicroversionId" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          }
        }
      },
      "BTExternalReference-1936" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTElementReference-725"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTFSTable-953" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTable-1825"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "crossHighlightData" : {
              "$ref" : "#/components/schemas/BTTableBaseCrossHighlightData-2609"
            },
            "hiddenColumnIdsToNames" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "individualTableProperties" : {
              "$ref" : "#/components/schemas/BTIndividualTableProperties-3760"
            }
          }
        } ]
      },
      "BTFSTableColumnInfo-623" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableColumnInfo-1222"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "crossHighlightData" : {
              "$ref" : "#/components/schemas/BTTableBaseCrossHighlightData-2609"
            }
          }
        } ]
      },
      "BTFSTableRowMetadata-2262" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableBaseRowMetadata-3181"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "callout" : {
              "type" : "string"
            },
            "crossHighlightData" : {
              "$ref" : "#/components/schemas/BTTableBaseCrossHighlightData-2609"
            }
          }
        } ]
      },
      "BTFSValue-1888" : {
        "required" : [ "btType" ],
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "typeTag" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTFSValueArray-1499" : "#/components/schemas/BTFSValueArray-1499",
            "BTFSValueBoolean-1195" : "#/components/schemas/BTFSValueBoolean-1195",
            "BTFSValueMap-2062" : "#/components/schemas/BTFSValueMap-2062",
            "BTFSValueNumber-772" : "#/components/schemas/BTFSValueNumber-772",
            "BTFSValueOther-1124" : "#/components/schemas/BTFSValueOther-1124",
            "BTFSValueString-1422" : "#/components/schemas/BTFSValueString-1422",
            "BTFSValueTooBig-1247" : "#/components/schemas/BTFSValueTooBig-1247",
            "BTFSValueUndefined-2003" : "#/components/schemas/BTFSValueUndefined-2003",
            "BTFSValueWithUnits-1817" : "#/components/schemas/BTFSValueWithUnits-1817"
          }
        }
      },
      "BTFSValueArray-1499" : {
        "required" : [ "btType" ],
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFSValue-1888"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "value" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTFSValue-1888"
              }
            }
          }
        } ]
      },
      "BTFSValueBoolean-1195" : {
        "required" : [ "btType" ],
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFSValue-1888"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "value" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTFSValueMap-2062" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "typeTag" : {
            "type" : "string"
          },
          "value" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTFSValueMapEntry-2077"
            }
          }
        }
      },
      "BTFSValueMapEntry-2077" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "key" : {
            "$ref" : "#/components/schemas/BTFSValue-1888"
          },
          "value" : {
            "$ref" : "#/components/schemas/BTFSValue-1888"
          }
        }
      },
      "BTFSValueNumber-772" : {
        "required" : [ "btType" ],
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFSValue-1888"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "value" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTFSValueOther-1124" : {
        "required" : [ "btType" ],
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFSValue-1888"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "type" : {
              "$ref" : "#/components/schemas/GBTPType"
            }
          }
        } ]
      },
      "BTFSValueString-1422" : {
        "required" : [ "btType" ],
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFSValue-1888"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "value" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTFSValueTooBig-1247" : {
        "required" : [ "btType" ],
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFSValue-1888"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTFSValueUndefined-2003" : {
        "required" : [ "btType" ],
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFSValue-1888"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTFSValueWithUnits-1817" : {
        "required" : [ "btType" ],
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFSValue-1888"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "unitToPower" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32"
              }
            },
            "value" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTFeatureApiBase-1430" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "libraryVersion" : {
            "type" : "integer",
            "description" : "FeatureScript version used in the Part Studio. Do not modify.",
            "format" : "int32"
          },
          "microversionSkew" : {
            "type" : "boolean",
            "description" : "On output, `true` indicates a microversion mismatch was encountered."
          },
          "rejectMicroversionSkew" : {
            "type" : "boolean",
            "description" : "If `true`, the call will refuse to make the addition if the current microversion for the document does not match the source microversion. If `false`, a best-effort attempt is made to re-interpret the feature addition in the context of a newer document microversion."
          },
          "serializationVersion" : {
            "type" : "string",
            "description" : "Version of the structure serialization rules used to encode the output. This enables incompatibility detection during software updates."
          },
          "sourceMicroversion" : {
            "type" : "string",
            "description" : "The state from which the result was extracted. Geometry ID interpretation is dependent on this document microversion."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTAssemblyFeatureListResponse-1174" : "#/components/schemas/BTAssemblyFeatureListResponse-1174",
            "BTConfigurationResponse-2019" : "#/components/schemas/BTConfigurationResponse-2019",
            "BTConfigurationUpdateCall-2933" : "#/components/schemas/BTConfigurationUpdateCall-2933",
            "BTFeatureDefinitionCall-1406" : "#/components/schemas/BTFeatureDefinitionCall-1406",
            "BTFeatureDefinitionResponse-1617" : "#/components/schemas/BTFeatureDefinitionResponse-1617",
            "BTFeatureListResponse-2457" : "#/components/schemas/BTFeatureListResponse-2457",
            "BTFeatureScriptEvalCall-2377" : "#/components/schemas/BTFeatureScriptEvalCall-2377",
            "BTFeatureScriptEvalResponse-1859" : "#/components/schemas/BTFeatureScriptEvalResponse-1859",
            "BTFeatureSpecsResponse-664" : "#/components/schemas/BTFeatureSpecsResponse-664",
            "BTFeatureStudioContents-2239" : "#/components/schemas/BTFeatureStudioContents-2239",
            "BTSetFeatureRollbackCall-1899" : "#/components/schemas/BTSetFeatureRollbackCall-1899",
            "BTSetFeatureRollbackResponse-1042" : "#/components/schemas/BTSetFeatureRollbackResponse-1042",
            "BTUpdateFeaturesCall-1748" : "#/components/schemas/BTUpdateFeaturesCall-1748",
            "BTUpdateFeaturesResponse-1333" : "#/components/schemas/BTUpdateFeaturesResponse-1333"
          }
        }
      },
      "BTFeatureDefinitionCall-1406" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "feature" : {
            "$ref" : "#/components/schemas/BTMFeature-134"
          },
          "libraryVersion" : {
            "type" : "integer",
            "description" : "FeatureScript version used in the Part Studio. Do not modify.",
            "format" : "int32"
          },
          "microversionSkew" : {
            "type" : "boolean",
            "description" : "On output, `true` indicates a microversion mismatch was encountered."
          },
          "rejectMicroversionSkew" : {
            "type" : "boolean",
            "description" : "If `true`, the call will refuse to make the addition if the current microversion for the document does not match the source microversion. If `false`, a best-effort attempt is made to re-interpret the feature addition in the context of a newer document microversion."
          },
          "serializationVersion" : {
            "type" : "string",
            "description" : "Version of the structure serialization rules used to encode the output. This enables incompatibility detection during software updates."
          },
          "sourceMicroversion" : {
            "type" : "string",
            "description" : "The state from which the result was extracted. Geometry ID interpretation is dependent on this document microversion."
          }
        }
      },
      "BTFeatureDefinitionResponse-1617" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "feature" : {
            "$ref" : "#/components/schemas/BTMFeature-134"
          },
          "featureState" : {
            "$ref" : "#/components/schemas/BTFeatureState-1688"
          },
          "libraryVersion" : {
            "type" : "integer",
            "description" : "FeatureScript version used in the Part Studio. Do not modify.",
            "format" : "int32"
          },
          "microversionSkew" : {
            "type" : "boolean",
            "description" : "On output, `true` indicates a microversion mismatch was encountered."
          },
          "rejectMicroversionSkew" : {
            "type" : "boolean",
            "description" : "If `true`, the call will refuse to make the addition if the current microversion for the document does not match the source microversion. If `false`, a best-effort attempt is made to re-interpret the feature addition in the context of a newer document microversion."
          },
          "serializationVersion" : {
            "type" : "string",
            "description" : "Version of the structure serialization rules used to encode the output. This enables incompatibility detection during software updates."
          },
          "sourceMicroversion" : {
            "type" : "string",
            "description" : "The state from which the result was extracted. Geometry ID interpretation is dependent on this document microversion."
          }
        }
      },
      "BTFeatureEntity-34" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTBodyEntity-26" : "#/components/schemas/BTBodyEntity-26",
            "BTConstructionPlaneEntity-27" : "#/components/schemas/BTConstructionPlaneEntity-27",
            "BTMateConnectorEntity-28" : "#/components/schemas/BTMateConnectorEntity-28",
            "BTOriginEntity-935" : "#/components/schemas/BTOriginEntity-935",
            "BTPointEntity-1439" : "#/components/schemas/BTPointEntity-1439",
            "BTSketchEntity-25" : "#/components/schemas/BTSketchEntity-25"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTBaseEntityData-33"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "domainSpecificMetadata" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTDomainSpecificMetadata-961"
              }
            },
            "firstGeometry" : {
              "$ref" : "#/components/schemas/BTEntityGeometry-35"
            }
          }
        } ]
      },
      "BTFeatureFilter-127" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "exclusion" : {
              "$ref" : "#/components/schemas/GBTFeatureFilterExclusion"
            },
            "featureId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTFeatureListResponse-2457" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "defaultFeatures" : {
            "type" : "array",
            "description" : "List of Onshape-defined features instantiated within the Part Studio.",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "featureStates" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTFeatureState-1688"
            },
            "description" : "State of each feature, indicating if the feature is valid. Incorrectly defined features will still appear in the Feature list."
          },
          "features" : {
            "type" : "array",
            "description" : "List of user-defined features instantiated within the Part Studio.",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "imports" : {
            "type" : "array",
            "description" : "Internal only. Do not modify.",
            "items" : {
              "$ref" : "#/components/schemas/BTMImport-136"
            }
          },
          "isComplete" : {
            "type" : "boolean",
            "description" : "`true` if the features represent the entire part studio or `false` for a filtered subset."
          },
          "libraryVersion" : {
            "type" : "integer",
            "description" : "FeatureScript version used in the Part Studio. Do not modify.",
            "format" : "int32"
          },
          "microversionSkew" : {
            "type" : "boolean",
            "description" : "On output, `true` indicates a microversion mismatch was encountered."
          },
          "rejectMicroversionSkew" : {
            "type" : "boolean",
            "description" : "If `true`, the call will refuse to make the addition if the current microversion for the document does not match the source microversion. If `false`, a best-effort attempt is made to re-interpret the feature addition in the context of a newer document microversion."
          },
          "rollbackIndex" : {
            "type" : "integer",
            "description" : "Index of the rollback bar location. `-1` indicates the bar is at the end of the Feature List.",
            "format" : "int32"
          },
          "serializationVersion" : {
            "type" : "string",
            "description" : "Version of the structure serialization rules used to encode the output. This enables incompatibility detection during software updates."
          },
          "sourceMicroversion" : {
            "type" : "string",
            "description" : "The document microversion from which the result was extracted. Part, face, edge, and vertex IDs are only valid for the same microversion."
          }
        },
        "description" : "List of features instantiated within the Part Studio."
      },
      "BTFeatureOccurrenceData-775" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "visibility" : {
            "$ref" : "#/components/schemas/GBTBSFeatureVisibility"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMateOccurrenceData-1671" : "#/components/schemas/BTMateOccurrenceData-1671"
          }
        }
      },
      "BTFeatureScriptEvalCall-2377" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "libraryVersion" : {
            "type" : "integer",
            "description" : "FeatureScript version used in the Part Studio. Do not modify.",
            "format" : "int32"
          },
          "microversionSkew" : {
            "type" : "boolean",
            "description" : "On output, `true` indicates a microversion mismatch was encountered."
          },
          "queries" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "rejectMicroversionSkew" : {
            "type" : "boolean",
            "description" : "If `true`, the call will refuse to make the addition if the current microversion for the document does not match the source microversion. If `false`, a best-effort attempt is made to re-interpret the feature addition in the context of a newer document microversion."
          },
          "script" : {
            "type" : "string"
          },
          "serializationVersion" : {
            "type" : "string",
            "description" : "Version of the structure serialization rules used to encode the output. This enables incompatibility detection during software updates."
          },
          "sourceMicroversion" : {
            "type" : "string",
            "description" : "The state from which the result was extracted. Geometry ID interpretation is dependent on this document microversion."
          }
        }
      },
      "BTFeatureScriptEvalResponse-1859" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "console" : {
            "type" : "string"
          },
          "libraryVersion" : {
            "type" : "integer",
            "description" : "FeatureScript version used in the Part Studio. Do not modify.",
            "format" : "int32"
          },
          "microversionSkew" : {
            "type" : "boolean",
            "description" : "On output, `true` indicates a microversion mismatch was encountered."
          },
          "notices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTNotice-227"
            }
          },
          "rejectMicroversionSkew" : {
            "type" : "boolean",
            "description" : "If `true`, the call will refuse to make the addition if the current microversion for the document does not match the source microversion. If `false`, a best-effort attempt is made to re-interpret the feature addition in the context of a newer document microversion."
          },
          "result" : {
            "$ref" : "#/components/schemas/BTFSValue-1888"
          },
          "serializationVersion" : {
            "type" : "string",
            "description" : "Version of the structure serialization rules used to encode the output. This enables incompatibility detection during software updates."
          },
          "sourceMicroversion" : {
            "type" : "string",
            "description" : "The state from which the result was extracted. Geometry ID interpretation is dependent on this document microversion."
          }
        }
      },
      "BTFeatureSpec-129" : {
        "type" : "object",
        "properties" : {
          "additionalLocalizedStrings" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          },
          "allParameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTParameterSpec-6"
            }
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "computedPartPropertySpec" : {
            "type" : "boolean"
          },
          "descriptionImageUri" : {
            "type" : "string"
          },
          "editingLogic" : {
            "$ref" : "#/components/schemas/BTEditingLogic-2350"
          },
          "featureNameTemplate" : {
            "type" : "string"
          },
          "featureType" : {
            "type" : "string"
          },
          "featureTypeDescription" : {
            "type" : "string"
          },
          "featureTypeName" : {
            "type" : "string"
          },
          "filterSelectors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fullFeatureType" : {
            "type" : "string"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTParameterGroupSpec-3469"
            }
          },
          "iconUri" : {
            "type" : "string"
          },
          "languageVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "linkedLocationName" : {
            "type" : "string"
          },
          "localizableName" : {
            "type" : "string"
          },
          "localizedName" : {
            "type" : "string",
            "writeOnly" : true
          },
          "locationInfos" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTLocationInfo-226"
            }
          },
          "manipulatorChangeFunction" : {
            "type" : "string"
          },
          "namespace" : {
            "type" : "string"
          },
          "namespaceIncludingEnums" : {
            "type" : "string",
            "writeOnly" : true
          },
          "namespaceTheSource" : {
            "type" : "boolean"
          },
          "parameterIdToSpec" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTParameterSpec-6"
            }
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTParameterSpec-6"
            }
          },
          "signature" : {
            "type" : "string"
          },
          "sourceLocation" : {
            "$ref" : "#/components/schemas/BTLocationInfo-226"
          },
          "sourceMicroversionId" : {
            "type" : "string"
          },
          "stringsToLocalize" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tableSpec" : {
            "type" : "boolean"
          },
          "toleranceSpec" : {
            "type" : "boolean"
          },
          "tooltipTemplate" : {
            "type" : "string"
          },
          "uiHints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GBTUIHint"
            }
          },
          "variableStudioReferenceSpec" : {
            "type" : "boolean"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTComputedPartPropertySpec-1746" : "#/components/schemas/BTComputedPartPropertySpec-1746",
            "BTTableSpec-915" : "#/components/schemas/BTTableSpec-915",
            "BTToleranceSpec-3441" : "#/components/schemas/BTToleranceSpec-3441",
            "BTVariableStudioReferenceSpec-5278" : "#/components/schemas/BTVariableStudioReferenceSpec-5278"
          }
        }
      },
      "BTFeatureSpecsResponse-664" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "featureSpecs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTFeatureSpec-129"
            }
          },
          "libraryVersion" : {
            "type" : "integer",
            "description" : "FeatureScript version used in the Part Studio. Do not modify.",
            "format" : "int32"
          },
          "microversionSkew" : {
            "type" : "boolean",
            "description" : "On output, `true` indicates a microversion mismatch was encountered."
          },
          "rejectMicroversionSkew" : {
            "type" : "boolean",
            "description" : "If `true`, the call will refuse to make the addition if the current microversion for the document does not match the source microversion. If `false`, a best-effort attempt is made to re-interpret the feature addition in the context of a newer document microversion."
          },
          "serializationVersion" : {
            "type" : "string",
            "description" : "Version of the structure serialization rules used to encode the output. This enables incompatibility detection during software updates."
          },
          "sourceMicroversion" : {
            "type" : "string",
            "description" : "The state from which the result was extracted. Geometry ID interpretation is dependent on this document microversion."
          }
        }
      },
      "BTFeatureState-1688" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "featureStatus" : {
            "$ref" : "#/components/schemas/GBTNodeStatusType"
          },
          "inactive" : {
            "type" : "boolean"
          }
        }
      },
      "BTFeatureStudioContents-2239" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFeatureApiBase-1430"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "contents" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTFeatureTypeFilter-962" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "featureType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTFlatSheetMetalFilter-3018" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "allows" : {
              "$ref" : "#/components/schemas/GBTFilterFlattenedGeometryOptions"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTFolderInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTGlobalTreeNodeInfo"
        }, {
          "type" : "object",
          "properties" : {
            "active" : {
              "type" : "boolean"
            },
            "canUnshare" : {
              "type" : "boolean"
            },
            "elementLibrarySummaryInfo" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTElementLibrarySummaryInfo"
              }
            },
            "isOrphaned" : {
              "type" : "boolean"
            },
            "parentId" : {
              "type" : "string"
            },
            "permissionSet" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "trash" : {
              "type" : "boolean"
            },
            "trashedAt" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        } ]
      },
      "BTFolderStateInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "treeHref" : {
            "type" : "string"
          }
        }
      },
      "BTForeignDataResponse-1070" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "bucketName" : {
            "type" : "string"
          },
          "bucketPath" : {
            "type" : "string"
          },
          "cacheChunkList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "dataId" : {
            "type" : "string"
          },
          "format" : {
            "$ref" : "#/components/schemas/GBTDataItemFormat"
          },
          "name" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "storageType" : {
            "type" : "string"
          },
          "useLocalStorage" : {
            "type" : "boolean"
          }
        }
      },
      "BTFullElementId-756" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "configured" : {
            "type" : "boolean"
          },
          "elementId" : {
            "type" : "string"
          },
          "microversionId" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          },
          "microversionIdAndConfiguration" : {
            "$ref" : "#/components/schemas/BTMicroversionIdAndConfiguration-2338"
          },
          "target" : {
            "$ref" : "#/components/schemas/BTMicroversionIdAndConfiguration-2338"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTFullElementIdWithDocument-1729" : "#/components/schemas/BTFullElementIdWithDocument-1729"
          }
        }
      },
      "BTFullElementIdAndPartId-643" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFullElementIdWithDocument-1729"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "partId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTFullElementIdWithDocument-1729" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "configured" : {
            "type" : "boolean"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "microversionId" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          },
          "microversionIdAndConfiguration" : {
            "$ref" : "#/components/schemas/BTMicroversionIdAndConfiguration-2338"
          },
          "target" : {
            "$ref" : "#/components/schemas/BTMicroversionIdAndConfiguration-2338"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTFullElementIdAndPartId-643" : "#/components/schemas/BTFullElementIdAndPartId-643"
          }
        }
      },
      "BTGeneratedGraphicsAppearance-4159" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTGraphicsAppearance-1152"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTGeometryFilter-130" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "geometryType" : {
              "$ref" : "#/components/schemas/GBTGeometryType"
            }
          }
        } ]
      },
      "BTGeometryMateDisplayData-1050" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "firstDeterministicId" : {
            "type" : "string"
          },
          "firstOccurrence" : {
            "$ref" : "#/components/schemas/BTOccurrence-74"
          },
          "hidden" : {
            "type" : "boolean"
          },
          "isDerivedFeature" : {
            "type" : "boolean"
          },
          "location" : {
            "$ref" : "#/components/schemas/BTCoordinateSystem-387"
          },
          "nodeId" : {
            "type" : "string"
          },
          "ownerOccurrence" : {
            "$ref" : "#/components/schemas/BTOccurrence-74"
          },
          "secondDeterministicId" : {
            "type" : "string"
          },
          "secondOccurrence" : {
            "$ref" : "#/components/schemas/BTOccurrence-74"
          },
          "status" : {
            "$ref" : "#/components/schemas/GBTAssemblyFeatureDisplayStatus"
          }
        }
      },
      "BTGetJsonPaths-1697" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "paths" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTGetJsonPathsResponse-1544" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "changeId" : {
            "type" : "string"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTJsonMatch-2290"
              }
            }
          }
        }
      },
      "BTGetJsonResponse-2137" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "changeId" : {
            "type" : "string"
          },
          "tree" : {
            "type" : "object",
            "properties" : {
              "btType" : {
                "type" : "string"
              }
            },
            "additionalProperties" : {
              "type" : "object",
              "properties" : {
                "btType" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "BTGlobalTreeMagicNodeInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTGlobalTreeNodeInfo"
        }, {
          "type" : "object",
          "properties" : {
            "subType" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTGlobalTreeNodeInfo" : {
        "required" : [ "jsonType" ],
        "type" : "object",
        "properties" : {
          "canMove" : {
            "type" : "boolean"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "description" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "isContainer" : {
            "type" : "boolean"
          },
          "isEnterpriseOwned" : {
            "type" : "boolean"
          },
          "isMutable" : {
            "type" : "boolean"
          },
          "jsonType" : {
            "type" : "string"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedBy" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "owner" : {
            "$ref" : "#/components/schemas/BTOwnerInfo"
          },
          "projectId" : {
            "type" : "string"
          },
          "resourceType" : {
            "type" : "string"
          },
          "treeHref" : {
            "type" : "string"
          },
          "unparentHref" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        },
        "discriminator" : {
          "propertyName" : "jsonType",
          "mapping" : {
            "document-summary" : "#/components/schemas/BTDocumentSummaryInfo",
            "folder" : "#/components/schemas/BTFolderInfo",
            "magic" : "#/components/schemas/BTGlobalTreeMagicNodeInfo",
            "project" : "#/components/schemas/BTProjectInfo",
            "label" : "#/components/schemas/BTDocumentLabelInfo",
            "team-summary" : "#/components/schemas/BTTeamSummaryInfo",
            "cloudstorageaccount" : "#/components/schemas/BTCloudStorageAccountInfo",
            "classroom" : "#/components/schemas/BTClassroomInfo",
            "resource-owner" : "#/components/schemas/BTResourceOwnerInfo",
            "external-connection" : "#/components/schemas/BTExternalConnectionInfo"
          }
        }
      },
      "BTGlobalTreeNodeListResponse" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "Requested Document URL",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              },
              "first" : {
                "$ref" : "#/components/schemas/BTGlobalTreeNodeInfo"
              },
              "last" : {
                "$ref" : "#/components/schemas/BTGlobalTreeNodeInfo"
              }
            },
            "description" : "Document Items array. Array entries are the same as that returned from \"/api/documents/{did}\".",
            "items" : {
              "$ref" : "#/components/schemas/BTGlobalTreeNodeInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "The URL for the next page of items. Responses are limited to 20 items per page.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "The URL for the previous page of items. Responses are limited to 20 items per page.",
            "format" : "uri"
          }
        }
      },
      "BTGlobalTreeNodeListResponseBTTeamInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "Requested Document URL",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              },
              "first" : {
                "$ref" : "#/components/schemas/BTTeamInfo"
              },
              "last" : {
                "$ref" : "#/components/schemas/BTTeamInfo"
              }
            },
            "description" : "Document Items array. Array entries are the same as that returned from \"/api/documents/{did}\".",
            "items" : {
              "$ref" : "#/components/schemas/BTTeamInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "The URL for the next page of items. Responses are limited to 20 items per page.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "The URL for the previous page of items. Responses are limited to 20 items per page.",
            "format" : "uri"
          }
        }
      },
      "BTGraphicsAppearance-1152" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "color" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          },
          "nonTrivial" : {
            "type" : "boolean"
          },
          "opacity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "reset" : {
            "type" : "boolean"
          },
          "rgbaColor" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          },
          "type" : {
            "$ref" : "#/components/schemas/GBTAppearanceType"
          },
          "usableAppearance" : {
            "type" : "boolean"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTGeneratedGraphicsAppearance-4159" : "#/components/schemas/BTGeneratedGraphicsAppearance-4159"
          }
        }
      },
      "BTGraphicsBuffer-2668" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "bufferData" : {
            "$ref" : "#/components/schemas/BTImmutableByteArray"
          },
          "mapGraphicsAttributeToComponentCount" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "target" : {
            "$ref" : "#/components/schemas/GBTGraphicsBufferTarget"
          }
        }
      },
      "BTGraphicsSectionPlaneData-1429" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "center" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "normal" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "tangent" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          }
        }
      },
      "BTGraphicsSectionViewStateData-4379" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "elementId" : {
            "type" : "string"
          },
          "isExcluding" : {
            "type" : "boolean"
          },
          "sectionPlanes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTGraphicsSectionPlaneData-1429"
            }
          },
          "selectionsToExclude" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTUiSelection-1185"
            }
          },
          "selectionsToInclude" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTUiSelection-1185"
            }
          }
        }
      },
      "BTIdTranslationInfo" : {
        "type" : "object",
        "properties" : {
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "ids" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTIdTranslationResultInfo"
            }
          },
          "sourceDocumentMicroversion" : {
            "type" : "string"
          },
          "targetDocumentMicroversion" : {
            "type" : "string"
          }
        }
      },
      "BTIdTranslationParams" : {
        "type" : "object",
        "properties" : {
          "ids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "linkDocumentId" : {
            "type" : "string"
          },
          "sourceConfiguration" : {
            "type" : "string"
          },
          "sourceDocumentMicroversion" : {
            "type" : "string"
          },
          "targetConfiguration" : {
            "type" : "string"
          }
        }
      },
      "BTIdTranslationResultInfo" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "target" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTIdentityInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "identityType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "team" : {
            "$ref" : "#/components/schemas/BTTeamSummaryInfo"
          },
          "user" : {
            "$ref" : "#/components/schemas/BTUserSummaryInfo"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTImageFilter-853" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isImage" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTImageMapping-3821" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "deterministicIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "uvTransform" : {
            "$ref" : "#/components/schemas/BTMatrix3x3-340"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTCylindricalImageMapping-1640" : "#/components/schemas/BTCylindricalImageMapping-1640",
            "BTPlanarImageMapping-4398" : "#/components/schemas/BTPlanarImageMapping-4398"
          }
        }
      },
      "BTImmutableByteArray" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "BTImmutableDoubleArray" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "BTImmutableFloatArray" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "BTImmutableIntArray" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "BTImport" : {
        "type" : "object",
        "properties" : {
          "forExport" : {
            "type" : "boolean"
          },
          "importMicroversion" : {
            "type" : "string",
            "description" : "Element microversion that is being imported.",
            "writeOnly" : true
          }
        }
      },
      "BTInContextObjectFilter-3810" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isInContext" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTIndividualTableProperties-3760" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "hiddenColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTStringNodeWrapper-4224"
            }
          },
          "nodeId" : {
            "type" : "string"
          },
          "order" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTStringNodeWrapper-4224"
            }
          },
          "tableNodeId" : {
            "type" : "string"
          }
        }
      },
      "BTInheritedAclInfo" : {
        "type" : "object",
        "properties" : {
          "entries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAclEntryInfo"
            }
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "objectId" : {
            "type" : "string"
          },
          "objectName" : {
            "type" : "string"
          },
          "objectType" : {
            "type" : "integer",
            "format" : "int64"
          },
          "owner" : {
            "$ref" : "#/components/schemas/BTOwnerInfo"
          },
          "public" : {
            "type" : "boolean"
          },
          "sharedWithSupport" : {
            "type" : "boolean"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "visibility" : {
            "type" : "string"
          }
        }
      },
      "BTInnerArrayParameterLocation-2368" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTInnerParameterLocation-1715"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "index" : {
              "type" : "integer",
              "format" : "int32"
            },
            "outerParameterId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTInnerDerivedParameterLocation-591" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTInnerParameterLocation-1715"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "outerParameterId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTInnerParameterLocation-1715" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTInnerArrayParameterLocation-2368" : "#/components/schemas/BTInnerArrayParameterLocation-2368",
            "BTInnerDerivedParameterLocation-591" : "#/components/schemas/BTInnerDerivedParameterLocation-591"
          }
        }
      },
      "BTInsertableDisplayData-2405" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "fullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "graphicsBuffers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BTGraphicsBuffer-2668"
              }
            }
          },
          "id" : {
            "type" : "string"
          },
          "part" : {
            "type" : "boolean"
          },
          "sketchFeature" : {
            "type" : "boolean"
          },
          "tessellationSettingIndex" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTInsertablePartDisplayData-3103" : "#/components/schemas/BTInsertablePartDisplayData-3103",
            "BTInsertableSketchDisplayData-3775" : "#/components/schemas/BTInsertableSketchDisplayData-3775"
          }
        }
      },
      "BTInsertableInfo" : {
        "type" : "object",
        "properties" : {
          "bodyType" : {
            "$ref" : "#/components/schemas/GBTBodyType"
          },
          "classType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "configuration" : {
            "type" : "string"
          },
          "configurationParameterValues" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          },
          "configurationParameters" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          },
          "dataType" : {
            "type" : "string"
          },
          "deterministicId" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementName" : {
            "type" : "string"
          },
          "elementType" : {
            "$ref" : "#/components/schemas/GBTElementType"
          },
          "featureId" : {
            "type" : "string"
          },
          "featureName" : {
            "type" : "string"
          },
          "featureSpec" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          },
          "featureType" : {
            "type" : "string"
          },
          "fsComputedPartPropertySpec" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          },
          "fsTableSpec" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          },
          "hasFaults" : {
            "type" : "boolean"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "insertableQuery" : {
            "type" : "string"
          },
          "isFlattenedBody" : {
            "type" : "boolean"
          },
          "isMesh" : {
            "type" : "boolean"
          },
          "meshState" : {
            "$ref" : "#/components/schemas/GBTMeshState"
          },
          "microversionId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "parentId" : {
            "type" : "string"
          },
          "partIdentity" : {
            "type" : "string"
          },
          "partName" : {
            "type" : "string"
          },
          "predictableThumbnailId" : {
            "type" : "string"
          },
          "sourceFileExtension" : {
            "type" : "string"
          },
          "thumbnailUri" : {
            "type" : "string"
          },
          "unflattenedPartDeterministicId" : {
            "type" : "string"
          },
          "variableName" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          },
          "versionName" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "workspaceId" : {
            "type" : "string"
          },
          "workspaceName" : {
            "type" : "string"
          }
        },
        "description" : "Array of items in the current page."
      },
      "BTInsertablePartDisplayData-3103" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTInsertableDisplayData-2405"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "partData" : {
              "$ref" : "#/components/schemas/BTPartData-16"
            },
            "partDisplayData" : {
              "$ref" : "#/components/schemas/BTPartDisplayData-17"
            },
            "partId" : {
              "type" : "string"
            },
            "tessellationSetting" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTInsertableSketchDisplayData-3775" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTInsertableDisplayData-2405"
        }, {
          "type" : "object",
          "properties" : {
            "bodyIdToPartData" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BTPartData-16"
              }
            },
            "btType" : {
              "type" : "string"
            },
            "sketchFeatureId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTInsertablesListResponse" : {
        "type" : "object",
        "properties" : {
          "canSaveVersion" : {
            "type" : "boolean"
          },
          "changesSinceVersionSave" : {
            "type" : "integer",
            "format" : "int32"
          },
          "configuration" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTFSValue-1888"
            }
          },
          "configurationKey" : {
            "type" : "string"
          },
          "hasMultipleVersions" : {
            "type" : "boolean"
          },
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTInsertableInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          },
          "updatedThumbnailUri" : {
            "type" : "string"
          }
        }
      },
      "BTInspectionTableRowMetadata-2485" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableBaseRowMetadata-3181"
        }, {
          "type" : "object",
          "properties" : {
            "annotationId" : {
              "type" : "string"
            },
            "btType" : {
              "type" : "string"
            },
            "constraintId" : {
              "type" : "string"
            },
            "crossHighlightData" : {
              "$ref" : "#/components/schemas/BTTableCrossHighlightData-1753"
            },
            "crossHighlightDataIfAny" : {
              "$ref" : "#/components/schemas/BTTableCrossHighlightData-1753"
            },
            "featureId" : {
              "type" : "string"
            },
            "parameterId" : {
              "type" : "string"
            },
            "partId" : {
              "type" : "string"
            },
            "precision" : {
              "$ref" : "#/components/schemas/GBTTolerancePrecision"
            }
          }
        } ]
      },
      "BTInstance-642" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTAssemblyInstance-947" : "#/components/schemas/BTAssemblyInstance-947",
            "BTPartInstance-81" : "#/components/schemas/BTPartInstance-81"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTInstanceBase-2263"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "configuration" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMParameter-1"
              }
            },
            "configured" : {
              "type" : "boolean"
            },
            "documentId" : {
              "type" : "string"
            },
            "elementId" : {
              "type" : "string"
            },
            "elementReference" : {
              "$ref" : "#/components/schemas/BTElementReference-725"
            },
            "externalDocumentWithVersion" : {
              "$ref" : "#/components/schemas/BTDocumentWithVersionId"
            },
            "externalDocumentWithVersionAndElementId" : {
              "$ref" : "#/components/schemas/BTDocumentWithVersionAndElementId"
            },
            "lockedState" : {
              "$ref" : "#/components/schemas/BTMParameter-1"
            },
            "microversionId" : {
              "$ref" : "#/components/schemas/BTMicroversionId-366"
            },
            "name" : {
              "type" : "string"
            },
            "parameters" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMParameter-1"
              }
            },
            "referenceParameter" : {
              "$ref" : "#/components/schemas/BTMParameterReferenceWithConfiguration-3028"
            },
            "versionId" : {
              "type" : "string"
            },
            "versionIdIfExternal" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTInstanceBase-2263" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTInstance-642" : "#/components/schemas/BTInstance-642",
            "BTInstanceFolder-3627" : "#/components/schemas/BTInstanceFolder-3627",
            "BTParametricInstance-2641" : "#/components/schemas/BTParametricInstance-2641",
            "BTParametricOutputInstance-2288" : "#/components/schemas/BTParametricOutputInstance-2288"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "assemblyInstance" : {
              "type" : "boolean"
            },
            "assemblyMirror" : {
              "type" : "boolean"
            },
            "assemblyPattern" : {
              "type" : "boolean"
            },
            "assemblyReplicate" : {
              "type" : "boolean"
            },
            "btType" : {
              "type" : "string"
            },
            "clonedInstance" : {
              "type" : "boolean"
            },
            "customData" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BTReferenceCustomData-1551"
              }
            },
            "derivedAssemblyMirror" : {
              "type" : "boolean"
            },
            "instanceFolder" : {
              "type" : "boolean"
            },
            "instanceName" : {
              "type" : "string"
            },
            "isFlattenedPart" : {
              "type" : "boolean"
            },
            "locked" : {
              "type" : "boolean"
            },
            "parametricInstance" : {
              "type" : "boolean"
            },
            "parametricOutputInstance" : {
              "type" : "boolean"
            },
            "parametricPartStudioChildInstance" : {
              "type" : "boolean"
            },
            "parametricPartStudioInstance" : {
              "type" : "boolean"
            },
            "partInstance" : {
              "type" : "boolean"
            },
            "releasable" : {
              "type" : "boolean"
            },
            "revisionCustomData" : {
              "$ref" : "#/components/schemas/BTRevisionCustomData-2090"
            },
            "standardContent" : {
              "type" : "boolean"
            },
            "standardContentParametersId" : {
              "type" : "string"
            },
            "suppressed" : {
              "type" : "boolean"
            },
            "suppressedFieldIndex" : {
              "type" : "integer",
              "format" : "int32"
            },
            "suppressionConfigured" : {
              "type" : "boolean",
              "description" : "`true` if the suppression is configured in the Part Studio."
            },
            "suppressionState" : {
              "$ref" : "#/components/schemas/BTMSuppressionState-1924"
            },
            "validRevisionReference" : {
              "type" : "boolean"
            },
            "version" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTInstanceControlNode-750" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "suppressed" : {
              "type" : "boolean"
            },
            "suppressedFieldIndex" : {
              "type" : "integer",
              "format" : "int32"
            },
            "suppressionConfigured" : {
              "type" : "boolean",
              "description" : "`true` if the suppression is configured in the Part Studio."
            },
            "suppressionState" : {
              "$ref" : "#/components/schemas/BTMSuppressionState-1924"
            }
          }
        } ]
      },
      "BTInstanceFolder-3627" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTInstanceBase-2263"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "featureFolder" : {
              "type" : "boolean"
            },
            "folderEnd" : {
              "type" : "boolean"
            },
            "folderStart" : {
              "type" : "boolean"
            },
            "name" : {
              "type" : "string"
            },
            "parameters" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMParameter-1"
              }
            },
            "startNodeId" : {
              "type" : "string"
            },
            "startNodeIdRaw" : {
              "$ref" : "#/components/schemas/BTObjectId"
            }
          }
        } ]
      },
      "BTInstanceStandardContentData-2081" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTReferenceCustomData-1551"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "parametersId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTInstanceWithReference" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMParameter-1"
            }
          },
          "customData" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTReferenceCustomData-1551"
            }
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementReference" : {
            "$ref" : "#/components/schemas/BTElementReference-725"
          },
          "externalDocumentWithVersion" : {
            "$ref" : "#/components/schemas/BTDocumentWithVersionId"
          },
          "externalDocumentWithVersionAndElementId" : {
            "$ref" : "#/components/schemas/BTDocumentWithVersionAndElementId"
          },
          "locked" : {
            "type" : "boolean"
          },
          "lockedState" : {
            "$ref" : "#/components/schemas/BTInstanceWithReference"
          },
          "microversionId" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          },
          "nodeId" : {
            "type" : "string"
          },
          "referenceParameter" : {
            "$ref" : "#/components/schemas/BTMParameterReferenceWithConfiguration-3028"
          },
          "standardContent" : {
            "type" : "boolean"
          },
          "standardContentParametersId" : {
            "type" : "string"
          },
          "validRevisionReference" : {
            "type" : "boolean"
          },
          "versionId" : {
            "type" : "string"
          },
          "versionIdIfExternal" : {
            "type" : "string"
          }
        }
      },
      "BTJEdit-3734" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "description" : "An edit that will be applied to the application element's json data.",
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTJEditChange-2636" : "#/components/schemas/BTJEditChange-2636",
            "BTJEditDelete-1992" : "#/components/schemas/BTJEditDelete-1992",
            "BTJEditInsert-2523" : "#/components/schemas/BTJEditInsert-2523",
            "BTJEditList-2707" : "#/components/schemas/BTJEditList-2707",
            "BTJEditMove-3245" : "#/components/schemas/BTJEditMove-3245"
          }
        }
      },
      "BTJEditChange-2636" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "description" : "Change the value of a node.",
        "example" : "In the structure { 'stringKey': 'bar', 'arrayKey': [ 1, 2, 3 ], 'objectKey': { 'subKey': false } } to change 'bar' to 'baz', specify { 'btType': 'BTJEditChange-2636', 'path': { 'btType': 'BTJPath-3073', 'startNode': '', 'path': [ { 'btType': 'BTJPathKey-3221', 'key': 'stringKey' } ] }, 'value': 'baz' }",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTJEdit-3734"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "path" : {
              "$ref" : "#/components/schemas/BTJPath-3073"
            },
            "value" : {
              "type" : "object",
              "properties" : {
                "btType" : {
                  "type" : "string"
                }
              }
            }
          }
        } ]
      },
      "BTJEditDelete-1992" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "description" : "Deletes the specified node.",
        "example" : "In the structure { 'stringKey': 'bar', 'arrayKey': [ 1, 2, 3 ], 'objectKey': { 'subKey': false } } to delete the 'stringKey' node, specify { 'btType' : 'BTJEditDelete-1992', 'path': { 'btType': 'BTJPath-3073', 'startNode': '', 'path': [ { 'btType': 'BTJPathKey-3221', 'key': 'stringKey' } ] } }",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTJEdit-3734"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "path" : {
              "$ref" : "#/components/schemas/BTJPath-3073"
            }
          }
        } ]
      },
      "BTJEditInsert-2523" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "description" : "Inserts a value using the specified path.",
        "example" : "In the structure { 'stringKey': 'bar', 'arrayKey': [ 1, 2, 3 ], 'objectKey': { 'subKey': false } } to insert 4 at the end of 'arrayKey', specify { 'btType': 'BTJEditInsert-2523', 'path': { 'btType': 'BTJPath-3073', 'startNode': '', 'path': [ { 'btType': 'BTJPathKey-3221', 'key': 'arrayKey' }, { 'btType': 'BTJPathIndex-1871', 'index': -1 } ] }, 'value': 4 }",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTJEdit-3734"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "path" : {
              "$ref" : "#/components/schemas/BTJPath-3073"
            },
            "value" : {
              "type" : "object",
              "properties" : {
                "btType" : {
                  "type" : "string"
                }
              }
            }
          }
        } ]
      },
      "BTJEditList-2707" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "description" : "A list of edits that will be applied in order.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTJEdit-3734"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "edits" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTJEdit-3734"
              }
            }
          }
        } ]
      },
      "BTJEditMove-3245" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "description" : "Move an existing node from one path to another.",
        "example" : "In the structure { 'stringKey': 'bar', 'arrayKey': [ 1, 2, 3 ], 'objectKey': { 'subKey': false } } to move the third value out of 'arrayKey' and into its own node, specify { 'btType': 'BTJEditMove-3245', 'sourcePath': { 'btType': 'BTJPath-3073', 'startNode': '', 'path': [ { 'btType': 'BTJPathKey-3221', 'key': 'arrayKey' }, { 'btType': 'BTJPathIndex-1871', 'index': 2 } ] }, 'destinationPath': { 'btType': 'BTJPath-3073', 'startNode': '', 'path': [ { 'btType': 'BTJPathKey-3221', 'key': 'newKey' } ] } }",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTJEdit-3734"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "destinationPath" : {
              "$ref" : "#/components/schemas/BTJPath-3073"
            },
            "sourcePath" : {
              "$ref" : "#/components/schemas/BTJPath-3073"
            }
          }
        } ]
      },
      "BTJPath-3073" : {
        "required" : [ "startNode" ],
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "path" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTJPathElement-2297"
            }
          },
          "startNode" : {
            "type" : "string",
            "description" : "Either empty (root) or the nodeId of a node in the tree."
          }
        },
        "description" : "Identifies a value in the json data to be operated upon."
      },
      "BTJPathElement-2297" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "description" : "Identifies a node in the json sturcture, beginning at the specified startNode.",
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTJPathIndex-1871" : "#/components/schemas/BTJPathIndex-1871",
            "BTJPathKey-3221" : "#/components/schemas/BTJPathKey-3221"
          }
        }
      },
      "BTJPathIndex-1871" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "description" : "Identifies a value in a json array. For insert and move edit destinations, -1 can be used to indicate 'end'.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTJPathElement-2297"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "index" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTJPathKey-3221" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "description" : "Identifies a subtree of the json structure by field name.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTJPathElement-2297"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "key" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTJsonMatch-2290" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "definiteJsonPath" : {
            "type" : "string"
          },
          "node" : {
            "type" : "object",
            "properties" : {
              "btType" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "BTKeyMouseValuesInfo" : {
        "type" : "object",
        "properties" : {
          "keys" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "mouseButtons" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTLazilyParsedFeatureScript" : {
        "type" : "object",
        "properties" : {
          "checksum" : {
            "$ref" : "#/components/schemas/BTUiFeatureStudioChecksum-2438"
          },
          "languageVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lines" : {
            "$ref" : "#/components/schemas/Lines"
          },
          "model" : {
            "$ref" : "#/components/schemas/BTMModel-141"
          },
          "module" : {
            "$ref" : "#/components/schemas/BTPModule-234"
          },
          "moduleId" : {
            "$ref" : "#/components/schemas/BTPModuleId-235"
          },
          "noticeModuleIds" : {
            "$ref" : "#/components/schemas/BTPModuleId-235"
          },
          "parentLanguageVersion" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          },
          "references" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTMicroversionId-366"
            }
          },
          "source" : {
            "type" : "string"
          }
        }
      },
      "BTLegacySearchHit" : {
        "type" : "object",
        "properties" : {
          "documentId" : {
            "type" : "string"
          },
          "highlightedFields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "hitId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "projectId" : {
            "type" : "string"
          },
          "sourceMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "type" : {
            "$ref" : "#/components/schemas/BTSearchEntityType"
          }
        }
      },
      "BTLineDescription-1559" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTCurveDescription-1583"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTLinearDimensionDisplayData-330" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTCenterlineDimensionDisplayData-1798" : "#/components/schemas/BTCenterlineDimensionDisplayData-1798",
            "BTEllipseDiameterDimensionDisplayData-1301" : "#/components/schemas/BTEllipseDiameterDimensionDisplayData-1301"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDimensionDisplayData-323"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "positionX" : {
              "type" : "number",
              "format" : "double"
            },
            "positionY" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessEndPoint0X" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessEndPoint0Y" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessEndPoint1X" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessEndPoint1Y" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTLinkToLatestDocumentInfo" : {
        "type" : "object",
        "properties" : {
          "changedElements" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTLinkToLatestDocumentParams" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTListResponseBTAliasEntryInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTAliasEntryInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          }
        },
        "description" : "A list of resources that typically supports paging."
      },
      "BTListResponseBTAliasInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTAliasInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          }
        },
        "description" : "A list of resources that typically supports paging."
      },
      "BTListResponseBTCategoryPropertyInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTCategoryPropertyInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          }
        },
        "description" : "A list of resources that typically supports paging."
      },
      "BTListResponseBTCommentInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTCommentInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          }
        },
        "description" : "A list of resources that typically supports paging."
      },
      "BTListResponseBTCompanyInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTCompanyInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          }
        },
        "description" : "A list of resources that typically supports paging."
      },
      "BTListResponseBTInsertableInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTInsertableInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          }
        },
        "description" : "A list of resources that typically supports paging."
      },
      "BTListResponseBTObjectWorkflowInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTObjectWorkflowInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          }
        },
        "description" : "A list of resources that typically supports paging."
      },
      "BTListResponseBTPurchaseInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTPurchaseInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          }
        },
        "description" : "A list of resources that typically supports paging."
      },
      "BTListResponseBTRevisionInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTRevisionInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          }
        },
        "description" : "A list of resources that typically supports paging."
      },
      "BTListResponseBTTeamMemberInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTTeamMemberInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          }
        },
        "description" : "A list of resources that typically supports paging."
      },
      "BTListResponseBTTranslationRequestInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTTranslationRequestInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          }
        },
        "description" : "A list of resources that typically supports paging."
      },
      "BTListResponseBTWebhookInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTWebhookInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          }
        },
        "description" : "A list of resources that typically supports paging."
      },
      "BTListResponseBTWorkflowObserverOptionInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTWorkflowObserverOptionInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          }
        },
        "description" : "A list of resources that typically supports paging."
      },
      "BTLoadDisplayData-837" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "componentValues" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "directionMateConnectorId" : {
            "type" : "string"
          },
          "faceLoadDeterministicIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hidden" : {
            "type" : "boolean"
          },
          "isDerivedFeature" : {
            "type" : "boolean"
          },
          "isDirectionFlipped" : {
            "type" : "boolean"
          },
          "loadType" : {
            "$ref" : "#/components/schemas/GBTLoadType"
          },
          "nodeId" : {
            "type" : "string"
          },
          "occurrence" : {
            "$ref" : "#/components/schemas/BTOccurrence-74"
          },
          "ownerOccurrence" : {
            "$ref" : "#/components/schemas/BTOccurrence-74"
          },
          "status" : {
            "$ref" : "#/components/schemas/GBTAssemblyFeatureDisplayStatus"
          }
        }
      },
      "BTLocationInfo-226" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "character" : {
            "type" : "integer",
            "format" : "int32"
          },
          "column" : {
            "type" : "integer",
            "format" : "int32"
          },
          "document" : {
            "type" : "string"
          },
          "elementMicroversion" : {
            "type" : "string"
          },
          "endCharacter" : {
            "type" : "integer",
            "format" : "int32"
          },
          "endColumn" : {
            "type" : "integer",
            "format" : "int32"
          },
          "endLine" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fromNode" : {
            "$ref" : "#/components/schemas/BTPNode-7"
          },
          "fromTemplate" : {
            "$ref" : "#/components/schemas/BTLocationInfo-226"
          },
          "languageVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "line" : {
            "type" : "integer",
            "format" : "int32"
          },
          "moduleIds" : {
            "$ref" : "#/components/schemas/BTDocumentVersionElementIds-1897"
          },
          "nodeId" : {
            "type" : "string"
          },
          "parseNodeId" : {
            "type" : "string"
          },
          "parseNodeIdRaw" : {
            "$ref" : "#/components/schemas/BTObjectId"
          },
          "topLevel" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          }
        }
      },
      "BTLockedAtCurrentPosition-4006" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTLockedSubAssembly-4590"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTLockedAtNamedPosition-3201" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTLockedSubAssembly-4590"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "namedPositionId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTLockedAtSubAssemblyPosition-3885" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTLockedSubAssembly-4590"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTLockedSubAssembly-4590" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "lockType" : {
            "$ref" : "#/components/schemas/GBTSubAssemblyLockType"
          },
          "lockedSubAssemblyOutputInfo" : {
            "$ref" : "#/components/schemas/BTRigidOrLockedSubAssemblyOutputInfo-3860"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTLockedAtCurrentPosition-4006" : "#/components/schemas/BTLockedAtCurrentPosition-4006",
            "BTLockedAtNamedPosition-3201" : "#/components/schemas/BTLockedAtNamedPosition-3201",
            "BTLockedAtSubAssemblyPosition-3885" : "#/components/schemas/BTLockedAtSubAssemblyPosition-3885"
          }
        }
      },
      "BTLockedSubAssemblyOutputInfo-3511" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTRigidOrLockedSubAssemblyOutputInfo-3860"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "lockInfo" : {
              "$ref" : "#/components/schemas/BTLockedSubAssembly-4590"
            },
            "syncError" : {
              "$ref" : "#/components/schemas/GBTErrorStringEnum"
            }
          }
        } ]
      },
      "BTLoginParams" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "enableTotp" : {
            "type" : "boolean"
          },
          "isRecaptchaV3" : {
            "type" : "boolean"
          },
          "password" : {
            "type" : "string"
          },
          "randomToken" : {
            "type" : "string"
          },
          "recaptchaToken" : {
            "type" : "string"
          },
          "rememberTotp" : {
            "type" : "boolean"
          },
          "rendererPerformanceMeasurement" : {
            "$ref" : "#/components/schemas/BTWebRendererPerformanceMeasurementParams"
          },
          "totp" : {
            "type" : "string"
          },
          "webClientCapabilities" : {
            "$ref" : "#/components/schemas/BTWebClientCapabilitiesParams"
          }
        }
      },
      "BTMAnnotation-4664" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "annotationType" : {
              "$ref" : "#/components/schemas/GBTAnnotationType"
            },
            "parameters" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMParameter-1"
              }
            }
          }
        } ]
      },
      "BTMArrayParameterItem-1843" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "parameters" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMParameter-1"
              }
            }
          }
        } ]
      },
      "BTMAssemblyFeature-887" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTAssemblySimulation-2246" : "#/components/schemas/BTAssemblySimulation-2246",
            "BTExplosion-2754" : "#/components/schemas/BTExplosion-2754",
            "BTExplosionStepFeature-3008" : "#/components/schemas/BTExplosionStepFeature-3008",
            "BTMAssemblyFeature1-2218" : "#/components/schemas/BTMAssemblyFeature1-2218",
            "BTMAssemblyFeature2-1022" : "#/components/schemas/BTMAssemblyFeature2-1022",
            "BTMAssemblyFeatureFolder-2543" : "#/components/schemas/BTMAssemblyFeatureFolder-2543",
            "BTMAssemblyMirrorFeature-3037" : "#/components/schemas/BTMAssemblyMirrorFeature-3037",
            "BTMAssemblyPatternFeature-2241" : "#/components/schemas/BTMAssemblyPatternFeature-2241",
            "BTMAssemblyReplicateFeature-1351" : "#/components/schemas/BTMAssemblyReplicateFeature-1351",
            "BTMDerivedAssemblyMirrorFeature-5094" : "#/components/schemas/BTMDerivedAssemblyMirrorFeature-5094",
            "BTMGenerativeDesignFeature-3195" : "#/components/schemas/BTMGenerativeDesignFeature-3195",
            "BTMGeometryMate-1260" : "#/components/schemas/BTMGeometryMate-1260",
            "BTMLoad-3538" : "#/components/schemas/BTMLoad-3538",
            "BTMMate-64" : "#/components/schemas/BTMMate-64",
            "BTMMateConnector-66" : "#/components/schemas/BTMMateConnector-66",
            "BTMMateGroup-65" : "#/components/schemas/BTMMateGroup-65",
            "BTMMateRelation-1412" : "#/components/schemas/BTMMateRelation-1412",
            "BTMNonGeometricItem-1864" : "#/components/schemas/BTMNonGeometricItem-1864",
            "BTMParametricPartStudioFeature-3883" : "#/components/schemas/BTMParametricPartStudioFeature-3883",
            "BTMWidthMate-1011" : "#/components/schemas/BTMWidthMate-1011"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMFeature-134"
        }, {
          "type" : "object",
          "properties" : {
            "auxiliaryTreeFeature" : {
              "type" : "boolean"
            },
            "btType" : {
              "type" : "string"
            },
            "featureFolder" : {
              "type" : "boolean"
            },
            "featureListFieldIndex" : {
              "type" : "integer",
              "format" : "int32"
            },
            "fieldIndexForOwnedMateConnectors" : {
              "type" : "integer",
              "format" : "int32"
            },
            "occurrenceQueriesFromAllConfigurations" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMIndividualQueryWithOccurrenceBase-904"
              }
            },
            "parametricInstanceFeature" : {
              "type" : "boolean"
            },
            "version" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTMAssemblyFeature1-2218" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMAssemblyFeature2-1022" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMAssemblyFeatureFolder-2543" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "folderEnd" : {
              "type" : "boolean"
            },
            "folderStart" : {
              "type" : "boolean"
            },
            "startNodeId" : {
              "type" : "string"
            },
            "startNodeIdRaw" : {
              "$ref" : "#/components/schemas/BTObjectId"
            }
          }
        } ]
      },
      "BTMAssemblyMirrorFeature-3037" : {
        "type" : "object",
        "properties" : {
          "auxiliaryTreeFeature" : {
            "type" : "boolean"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "featureFolder" : {
            "type" : "boolean"
          },
          "featureId" : {
            "type" : "string",
            "description" : "Unique ID of the feature instance within this Part Studio."
          },
          "featureListFieldIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "featureType" : {
            "type" : "string",
            "description" : "The name of the feature spec that this feature instantiates."
          },
          "fieldIndexForOwnedMateConnectors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "importMicroversion" : {
            "type" : "string",
            "description" : "Element microversion that is being imported.",
            "writeOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "User-visible name of the feature."
          },
          "namespace" : {
            "type" : "string",
            "description" : "Indicates where the feature definition lives. Features in the FeatureScript standard library have a namespace value of `\"\"`. Custom features identify the Feature Studio that contains the definition."
          },
          "nodeId" : {
            "type" : "string",
            "description" : "ID for the feature node."
          },
          "occurrenceQueriesFromAllConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMIndividualQueryWithOccurrenceBase-904"
            }
          },
          "parametricInstanceFeature" : {
            "type" : "boolean"
          },
          "returnAfterSubfeatures" : {
            "type" : "boolean",
            "description" : "For internal use only. Should always be `false`."
          },
          "subFeatures" : {
            "type" : "array",
            "description" : "List of subfeatures belonging to the feature.",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "subFeaturesNotUsedInQuery" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "suppressed" : {
            "type" : "boolean",
            "description" : "If `true`, the feature is suppressed. It will skip regeneration, denoted by a line through the name in the Feature list."
          },
          "suppressionConfigured" : {
            "type" : "boolean",
            "description" : "`true` if the suppression is configured in the Part Studio."
          },
          "variableStudioReference" : {
            "type" : "boolean",
            "description" : "If `true`, the feature references a Variable Studio."
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BTMAssemblyPatternFeature-2241" : {
        "type" : "object",
        "properties" : {
          "auxiliaryTreeFeature" : {
            "type" : "boolean"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "featureFolder" : {
            "type" : "boolean"
          },
          "featureId" : {
            "type" : "string",
            "description" : "Unique ID of the feature instance within this Part Studio."
          },
          "featureListFieldIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "featureType" : {
            "type" : "string",
            "description" : "The name of the feature spec that this feature instantiates."
          },
          "fieldIndexForOwnedMateConnectors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "importMicroversion" : {
            "type" : "string",
            "description" : "Element microversion that is being imported.",
            "writeOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "User-visible name of the feature."
          },
          "namespace" : {
            "type" : "string",
            "description" : "Indicates where the feature definition lives. Features in the FeatureScript standard library have a namespace value of `\"\"`. Custom features identify the Feature Studio that contains the definition."
          },
          "nodeId" : {
            "type" : "string",
            "description" : "ID for the feature node."
          },
          "occurrenceQueriesFromAllConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMIndividualQueryWithOccurrenceBase-904"
            }
          },
          "parametricInstanceFeature" : {
            "type" : "boolean"
          },
          "patternType" : {
            "$ref" : "#/components/schemas/GBTPatternType"
          },
          "returnAfterSubfeatures" : {
            "type" : "boolean",
            "description" : "For internal use only. Should always be `false`."
          },
          "subFeatures" : {
            "type" : "array",
            "description" : "List of subfeatures belonging to the feature.",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "subFeaturesNotUsedInQuery" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "suppressed" : {
            "type" : "boolean",
            "description" : "If `true`, the feature is suppressed. It will skip regeneration, denoted by a line through the name in the Feature list."
          },
          "suppressionConfigured" : {
            "type" : "boolean",
            "description" : "`true` if the suppression is configured in the Part Studio."
          },
          "variableStudioReference" : {
            "type" : "boolean",
            "description" : "If `true`, the feature references a Variable Studio."
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BTMAssemblyReplicateFeature-1351" : {
        "type" : "object",
        "properties" : {
          "auxiliaryTreeFeature" : {
            "type" : "boolean"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "featureFolder" : {
            "type" : "boolean"
          },
          "featureId" : {
            "type" : "string",
            "description" : "Unique ID of the feature instance within this Part Studio."
          },
          "featureListFieldIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "featureType" : {
            "type" : "string",
            "description" : "The name of the feature spec that this feature instantiates."
          },
          "fieldIndexForOwnedMateConnectors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "importMicroversion" : {
            "type" : "string",
            "description" : "Element microversion that is being imported.",
            "writeOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "User-visible name of the feature."
          },
          "namespace" : {
            "type" : "string",
            "description" : "Indicates where the feature definition lives. Features in the FeatureScript standard library have a namespace value of `\"\"`. Custom features identify the Feature Studio that contains the definition."
          },
          "nodeId" : {
            "type" : "string",
            "description" : "ID for the feature node."
          },
          "occurrenceQueriesFromAllConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMIndividualQueryWithOccurrenceBase-904"
            }
          },
          "parametricInstanceFeature" : {
            "type" : "boolean"
          },
          "returnAfterSubfeatures" : {
            "type" : "boolean",
            "description" : "For internal use only. Should always be `false`."
          },
          "subFeatures" : {
            "type" : "array",
            "description" : "List of subfeatures belonging to the feature.",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "subFeaturesNotUsedInQuery" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "suppressed" : {
            "type" : "boolean",
            "description" : "If `true`, the feature is suppressed. It will skip regeneration, denoted by a line through the name in the Feature list."
          },
          "suppressionConfigured" : {
            "type" : "boolean",
            "description" : "`true` if the suppression is configured in the Part Studio."
          },
          "variableStudioReference" : {
            "type" : "boolean",
            "description" : "If `true`, the feature references a Variable Studio."
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BTMConfigurationData-1560" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "configurationParameters" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMConfigurationParameter-819"
              }
            },
            "cosmeticParameterIds" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "currentConfiguration" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMParameter-1"
              }
            },
            "currentFSValues" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BTFSValue-1888"
              }
            },
            "defaultConfigurationValues" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BTFSValue-1888"
              }
            }
          }
        } ]
      },
      "BTMConfigurationParameter-819" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMConfigurationParameterBoolean-2550" : "#/components/schemas/BTMConfigurationParameterBoolean-2550",
            "BTMConfigurationParameterEnum-105" : "#/components/schemas/BTMConfigurationParameterEnum-105",
            "BTMConfigurationParameterQuantity-1826" : "#/components/schemas/BTMConfigurationParameterQuantity-1826",
            "BTMConfigurationParameterString-872" : "#/components/schemas/BTMConfigurationParameterString-872"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "generatedParameterId" : {
              "$ref" : "#/components/schemas/BTTreeNode-20"
            },
            "isCosmetic" : {
              "type" : "boolean"
            },
            "parameterId" : {
              "type" : "string"
            },
            "parameterName" : {
              "type" : "string"
            },
            "parameterType" : {
              "$ref" : "#/components/schemas/GBTConfigurationParameterType"
            },
            "valid" : {
              "type" : "boolean"
            },
            "visibilityCondition" : {
              "$ref" : "#/components/schemas/BTParameterVisibilityCondition-177"
            }
          }
        } ]
      },
      "BTMConfigurationParameterBoolean-2550" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMConfigurationParameter-819"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "defaultValue" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTMConfigurationParameterEnum-105" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMConfigurationParameter-819"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "defaultValue" : {
              "type" : "string"
            },
            "enumName" : {
              "type" : "string"
            },
            "namespace" : {
              "type" : "string"
            },
            "optionIds" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "options" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMEnumOption-592"
              }
            }
          }
        } ]
      },
      "BTMConfigurationParameterList-5548" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMConfigurationParameterQuantity-1826" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMConfigurationParameter-819"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "quantityType" : {
              "$ref" : "#/components/schemas/GBTQuantityType"
            },
            "rangeAndDefault" : {
              "$ref" : "#/components/schemas/BTQuantityRange-181"
            }
          }
        } ]
      },
      "BTMConfigurationParameterString-872" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMConfigurationParameter-819"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "defaultValue" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMConfiguredValue-1341" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMConfiguredValueByBoolean-1501" : "#/components/schemas/BTMConfiguredValueByBoolean-1501",
            "BTMConfiguredValueByEnum-1923" : "#/components/schemas/BTMConfiguredValueByEnum-1923"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "configurationValueString" : {
              "type" : "string"
            },
            "value" : {
              "$ref" : "#/components/schemas/BTMParameter-1"
            }
          }
        } ]
      },
      "BTMConfiguredValueByBoolean-1501" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMConfiguredValue-1341"
        }, {
          "type" : "object",
          "properties" : {
            "booleanValue" : {
              "type" : "boolean"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMConfiguredValueByEnum-1923" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMConfiguredValue-1341"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "enumName" : {
              "type" : "string"
            },
            "enumValue" : {
              "type" : "string"
            },
            "importMicroversion" : {
              "type" : "string",
              "description" : "Element microversion that is being imported.",
              "writeOnly" : true
            },
            "namespace" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMDatabaseParameter-2229" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "databaseId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMDerivedAssemblyMirrorFeature-5094" : {
        "type" : "object",
        "properties" : {
          "auxiliaryTreeFeature" : {
            "type" : "boolean"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "featureFolder" : {
            "type" : "boolean"
          },
          "featureId" : {
            "type" : "string",
            "description" : "Unique ID of the feature instance within this Part Studio."
          },
          "featureListFieldIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "featureType" : {
            "type" : "string",
            "description" : "The name of the feature spec that this feature instantiates."
          },
          "fieldIndexForOwnedMateConnectors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "importMicroversion" : {
            "type" : "string",
            "description" : "Element microversion that is being imported.",
            "writeOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "User-visible name of the feature."
          },
          "namespace" : {
            "type" : "string",
            "description" : "Indicates where the feature definition lives. Features in the FeatureScript standard library have a namespace value of `\"\"`. Custom features identify the Feature Studio that contains the definition."
          },
          "nodeId" : {
            "type" : "string",
            "description" : "ID for the feature node."
          },
          "occurrenceQueriesFromAllConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMIndividualQueryWithOccurrenceBase-904"
            }
          },
          "parametricInstanceFeature" : {
            "type" : "boolean"
          },
          "referenceParameter" : {
            "$ref" : "#/components/schemas/BTMParameterReferenceWithConfiguration-3028"
          },
          "returnAfterSubfeatures" : {
            "type" : "boolean",
            "description" : "For internal use only. Should always be `false`."
          },
          "subFeatures" : {
            "type" : "array",
            "description" : "List of subfeatures belonging to the feature.",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "subFeaturesNotUsedInQuery" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "suppressed" : {
            "type" : "boolean",
            "description" : "If `true`, the feature is suppressed. It will skip regeneration, denoted by a line through the name in the Feature list."
          },
          "suppressionConfigured" : {
            "type" : "boolean",
            "description" : "`true` if the suppression is configured in the Part Studio."
          },
          "variableStudioReference" : {
            "type" : "boolean",
            "description" : "If `true`, the feature references a Variable Studio."
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BTMEnumOption-592" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "option" : {
              "type" : "string"
            },
            "optionName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMFeature-134" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "featureId" : {
            "type" : "string",
            "description" : "Unique ID of the feature instance within this Part Studio."
          },
          "featureType" : {
            "type" : "string",
            "description" : "The name of the feature spec that this feature instantiates."
          },
          "importMicroversion" : {
            "type" : "string",
            "description" : "Element microversion that is being imported.",
            "writeOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "User-visible name of the feature."
          },
          "namespace" : {
            "type" : "string",
            "description" : "Indicates where the feature definition lives. Features in the FeatureScript standard library have a namespace value of `\"\"`. Custom features identify the Feature Studio that contains the definition."
          },
          "nodeId" : {
            "type" : "string",
            "description" : "ID for the feature node."
          },
          "parameters" : {
            "type" : "array",
            "description" : "A list of parameter values for instantiation of the feature spec. Parameters are present for all defined parameters, even if not used in a specific instantiation.",
            "items" : {
              "$ref" : "#/components/schemas/BTMParameter-1"
            }
          },
          "returnAfterSubfeatures" : {
            "type" : "boolean",
            "description" : "For internal use only. Should always be `false`."
          },
          "subFeatures" : {
            "type" : "array",
            "description" : "List of subfeatures belonging to the feature.",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "suppressed" : {
            "type" : "boolean",
            "description" : "If `true`, the feature is suppressed. It will skip regeneration, denoted by a line through the name in the Feature list."
          },
          "suppressionConfigured" : {
            "type" : "boolean",
            "description" : "`true` if the suppression is configured in the Part Studio."
          },
          "variableStudioReference" : {
            "type" : "boolean",
            "description" : "If `true`, the feature references a Variable Studio."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMAssemblyFeature-887" : "#/components/schemas/BTMAssemblyFeature-887",
            "BTMFeatureInvalid-1031" : "#/components/schemas/BTMFeatureInvalid-1031",
            "BTMSketch-151" : "#/components/schemas/BTMSketch-151",
            "BTMVariableStudioReference-2764" : "#/components/schemas/BTMVariableStudioReference-2764"
          }
        }
      },
      "BTMFeatureInvalid-1031" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMFeature-134"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMFeatureQueryWithOccurrence-157" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMPartStudioMateConnectorQuery-1324" : "#/components/schemas/BTMPartStudioMateConnectorQuery-1324"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMIndividualQueryWithOccurrenceBase-904"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "featureId" : {
              "type" : "string"
            },
            "featureIdWithOccurrence" : {
              "type" : "string"
            },
            "partStudioMateConnectorQuery" : {
              "type" : "boolean"
            },
            "queryData" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMFolder-3208" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "folderId" : {
              "type" : "string"
            },
            "isStartFolder" : {
              "type" : "boolean"
            },
            "name" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMGenerativeDesignFeature-3195" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMGeometryMate-1260" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMImport-136" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "elementImport" : {
              "type" : "boolean"
            },
            "importMicroversion" : {
              "type" : "string",
              "description" : "Element microversion that is being imported.",
              "writeOnly" : true
            },
            "importedExternalDocumentId" : {
              "type" : "string"
            },
            "namespace" : {
              "type" : "string"
            },
            "path" : {
              "type" : "string"
            },
            "version" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMInContextQuery-2254" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMIndividualQueryBase-139"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "path" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BTMIndividualCoEdgeQuery-1332" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMIndividualQuery-138"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "edgeQuery" : {
              "$ref" : "#/components/schemas/BTMIndividualQuery-138"
            },
            "faceQuery" : {
              "$ref" : "#/components/schemas/BTMIndividualQuery-138"
            }
          }
        } ]
      },
      "BTMIndividualCreatedByQuery-137" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMIndividualQuery-138"
        }, {
          "type" : "object",
          "properties" : {
            "bodyType" : {
              "$ref" : "#/components/schemas/GBTBodyType"
            },
            "btType" : {
              "type" : "string"
            },
            "entityType" : {
              "$ref" : "#/components/schemas/GBTEntityType"
            },
            "featureId" : {
              "type" : "string"
            },
            "filterConstruction" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTMIndividualOccurrenceQuery-626" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMIndividualQueryWithOccurrenceBase-904"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMIndividualQuery-138" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "deterministicIdList" : {
            "$ref" : "#/components/schemas/BTMIndividualQueryBase-139"
          },
          "deterministicIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "generateSectionEntityQuery" : {
            "type" : "boolean"
          },
          "generatedSectionQueryId" : {
            "type" : "string"
          },
          "importMicroversion" : {
            "type" : "string",
            "description" : "Microversion that resulted from the import.",
            "writeOnly" : true
          },
          "nodeId" : {
            "type" : "string"
          },
          "persistentQuery" : {
            "$ref" : "#/components/schemas/BTPStatement-269"
          },
          "query" : {
            "$ref" : "#/components/schemas/BTMIndividualQueryBase-139"
          },
          "queryStatement" : {
            "$ref" : "#/components/schemas/BTPStatement-269"
          },
          "queryString" : {
            "type" : "string"
          },
          "variableName" : {
            "$ref" : "#/components/schemas/BTMIndividualQuery-138"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMIndividualCoEdgeQuery-1332" : "#/components/schemas/BTMIndividualCoEdgeQuery-1332",
            "BTMIndividualCreatedByQuery-137" : "#/components/schemas/BTMIndividualCreatedByQuery-137",
            "BTMIndividualSketchRegionQuery-140" : "#/components/schemas/BTMIndividualSketchRegionQuery-140",
            "BTMIndividualSketchUniqueVerticesQuery-1472" : "#/components/schemas/BTMIndividualSketchUniqueVerticesQuery-1472"
          }
        }
      },
      "BTMIndividualQueryBase-139" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMInContextQuery-2254" : "#/components/schemas/BTMInContextQuery-2254",
            "BTMIndividualQuery-138" : "#/components/schemas/BTMIndividualQuery-138",
            "BTMIndividualQueryWithOccurrenceBase-904" : "#/components/schemas/BTMIndividualQueryWithOccurrenceBase-904"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "deterministicIdList" : {
              "$ref" : "#/components/schemas/BTMIndividualQueryBase-139"
            },
            "deterministicIds" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "generateSectionEntityQuery" : {
              "type" : "boolean"
            },
            "generatedSectionQueryId" : {
              "type" : "string"
            },
            "query" : {
              "$ref" : "#/components/schemas/BTMIndividualQueryBase-139"
            },
            "queryString" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMIndividualQueryWithOccurrence-811" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMInferenceQueryWithOccurrence-1083" : "#/components/schemas/BTMInferenceQueryWithOccurrence-1083"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMIndividualQueryWithOccurrenceBase-904"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "entityQuery" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMIndividualQueryWithOccurrenceBase-904" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMFeatureQueryWithOccurrence-157" : "#/components/schemas/BTMFeatureQueryWithOccurrence-157",
            "BTMIndividualOccurrenceQuery-626" : "#/components/schemas/BTMIndividualOccurrenceQuery-626",
            "BTMIndividualQueryWithOccurrence-811" : "#/components/schemas/BTMIndividualQueryWithOccurrence-811",
            "BTMMeshPointQuery-1183" : "#/components/schemas/BTMMeshPointQuery-1183"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMIndividualQueryBase-139"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "fullPathAsString" : {
              "type" : "string"
            },
            "occurrence" : {
              "$ref" : "#/components/schemas/BTOccurrence-74"
            },
            "path" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BTMIndividualSketchRegionQuery-140" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMIndividualQuery-138"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "featureId" : {
              "type" : "string"
            },
            "filterInnerLoops" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTMIndividualSketchUniqueVerticesQuery-1472" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMIndividualQuery-138"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "featureId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMInferenceQueryWithOccurrence-1083" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMIndividualQueryWithOccurrence-811"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "inferenceType" : {
              "$ref" : "#/components/schemas/GBTEntityInferenceType"
            },
            "secondDeterministicId" : {
              "type" : "string"
            },
            "secondEntityQuery" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMLoad-3538" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "definedByComponents" : {
              "type" : "boolean"
            },
            "directionFlipped" : {
              "type" : "boolean"
            },
            "fgsBaseUnits" : {
              "type" : "string"
            },
            "loadComponentParameterIds" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "loadRegionParameterId" : {
              "type" : "string"
            },
            "loadType" : {
              "$ref" : "#/components/schemas/GBTLoadType"
            },
            "magnitudeParameterId" : {
              "type" : "string"
            },
            "magnitudeQuantityType" : {
              "$ref" : "#/components/schemas/GBTQuantityType"
            },
            "structuralLoad" : {
              "type" : "boolean"
            },
            "suppressedInSimulations" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        } ]
      },
      "BTMMate-64" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "mateConnectorQueryList" : {
              "$ref" : "#/components/schemas/BTMParameterQueryWithOccurrenceList-67"
            },
            "mateConnectors" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMMateConnector-66"
              }
            },
            "mateType" : {
              "$ref" : "#/components/schemas/GBTMateType"
            }
          }
        } ]
      },
      "BTMMateConnector-66" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "implicit" : {
              "type" : "boolean"
            },
            "isAuxiliaryTreeMateConnector" : {
              "type" : "boolean"
            },
            "isHidden" : {
              "type" : "boolean"
            },
            "savedFeatureType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMMateGroup-65" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMMateRelation-1412" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMMeshPointQuery-1183" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMIndividualQueryWithOccurrenceBase-904"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "origin" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            }
          }
        } ]
      },
      "BTMModel-141" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "allFeatures" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMFeature-134"
              }
            },
            "allFeaturesAndOtherReferences" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMFeature-134"
              }
            },
            "allFeaturesAndSubFeatures" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMFeature-134"
              }
            },
            "btType" : {
              "type" : "string"
            },
            "childNodeIdToIndex" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32"
              }
            },
            "configurableTreeNodes" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTConfigurableTreeNode"
              }
            },
            "configurationData" : {
              "$ref" : "#/components/schemas/BTMConfigurationData-1560"
            },
            "configured" : {
              "type" : "boolean"
            },
            "deepImports" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/BTImport"
                }
              }
            },
            "defaultFeatures" : {
              "$ref" : "#/components/schemas/BTDefaultFeatures-119"
            },
            "defaultUnits" : {
              "$ref" : "#/components/schemas/BTMUnitsDefault-160"
            },
            "featureImports" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/BTImport"
                }
              }
            },
            "firstRollbackIndex" : {
              "type" : "integer",
              "format" : "int32"
            },
            "importSet" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPModuleId-235"
              }
            },
            "imports" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMImport-136"
              }
            },
            "isVariableStudio" : {
              "type" : "boolean"
            },
            "lastFeatureBeforeRollBack" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            },
            "modelAnnotations" : {
              "$ref" : "#/components/schemas/BTModelAnnotations-3945"
            },
            "name" : {
              "type" : "string"
            },
            "partProperties" : {
              "$ref" : "#/components/schemas/BTPartProperties-293"
            },
            "pathToCache" : {
              "$ref" : "#/components/schemas/BTCacheDataPath-191"
            },
            "properties" : {
              "$ref" : "#/components/schemas/BTModelProperties-1258"
            },
            "rollbackBar" : {
              "$ref" : "#/components/schemas/BTMRollback-150"
            },
            "rolledBackToEnd" : {
              "type" : "boolean"
            },
            "variableStudios" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMVariableStudioReference-2764"
              }
            }
          }
        } ]
      },
      "BTMNode-19" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "importMicroversion" : {
            "type" : "string",
            "description" : "Microversion that resulted from the import.",
            "writeOnly" : true
          },
          "nodeId" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTAssemblySimulationData-978" : "#/components/schemas/BTAssemblySimulationData-978",
            "BTInstanceBase-2263" : "#/components/schemas/BTInstanceBase-2263",
            "BTInstanceControlNode-750" : "#/components/schemas/BTInstanceControlNode-750",
            "BTMAnnotation-4664" : "#/components/schemas/BTMAnnotation-4664",
            "BTMArrayParameterItem-1843" : "#/components/schemas/BTMArrayParameterItem-1843",
            "BTMConfigurationData-1560" : "#/components/schemas/BTMConfigurationData-1560",
            "BTMConfigurationParameter-819" : "#/components/schemas/BTMConfigurationParameter-819",
            "BTMConfigurationParameterList-5548" : "#/components/schemas/BTMConfigurationParameterList-5548",
            "BTMConfiguredValue-1341" : "#/components/schemas/BTMConfiguredValue-1341",
            "BTMEnumOption-592" : "#/components/schemas/BTMEnumOption-592",
            "BTMFeature-134" : "#/components/schemas/BTMFeature-134",
            "BTMFolder-3208" : "#/components/schemas/BTMFolder-3208",
            "BTMImport-136" : "#/components/schemas/BTMImport-136",
            "BTMIndividualQueryBase-139" : "#/components/schemas/BTMIndividualQueryBase-139",
            "BTMModel-141" : "#/components/schemas/BTMModel-141",
            "BTMNodeInvalid-1772" : "#/components/schemas/BTMNodeInvalid-1772",
            "BTMParameter-1" : "#/components/schemas/BTMParameter-1",
            "BTMRecordMetrics-1169" : "#/components/schemas/BTMRecordMetrics-1169",
            "BTMRollback-150" : "#/components/schemas/BTMRollback-150",
            "BTMSketchEntity-3" : "#/components/schemas/BTMSketchEntity-3",
            "BTMSuppressionState-1924" : "#/components/schemas/BTMSuppressionState-1924",
            "BTMUnitsDefault-160" : "#/components/schemas/BTMUnitsDefault-160",
            "BTMUserCode-161" : "#/components/schemas/BTMUserCode-161",
            "BTModelAnnotations-3945" : "#/components/schemas/BTModelAnnotations-3945",
            "BTSimulationInstance-3093" : "#/components/schemas/BTSimulationInstance-3093",
            "BTToleranceString-3274" : "#/components/schemas/BTToleranceString-3274"
          }
        }
      },
      "BTMNodeInvalid-1772" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMNonGeometricItem-1864" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "itemDefinitionId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameter-1" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "importMicroversion" : {
            "type" : "string",
            "description" : "Microversion that resulted from the import.",
            "writeOnly" : true
          },
          "nodeId" : {
            "type" : "string",
            "description" : "ID of the parameter's node."
          },
          "parameterId" : {
            "type" : "string",
            "description" : "Unique ID of the parameter."
          }
        },
        "description" : "A list of parameter values for instantiation of the feature spec. Parameters are present for all defined parameters, even if not used in a specific instantiation.",
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMDatabaseParameter-2229" : "#/components/schemas/BTMDatabaseParameter-2229",
            "BTMParameterAppearance-627" : "#/components/schemas/BTMParameterAppearance-627",
            "BTMParameterArray-2025" : "#/components/schemas/BTMParameterArray-2025",
            "BTMParameterBlobReference-1679" : "#/components/schemas/BTMParameterBlobReference-1679",
            "BTMParameterBoolean-144" : "#/components/schemas/BTMParameterBoolean-144",
            "BTMParameterButton-5169" : "#/components/schemas/BTMParameterButton-5169",
            "BTMParameterConfigured-2222" : "#/components/schemas/BTMParameterConfigured-2222",
            "BTMParameterDerived-864" : "#/components/schemas/BTMParameterDerived-864",
            "BTMParameterEnum-145" : "#/components/schemas/BTMParameterEnum-145",
            "BTMParameterFeatureList-1749" : "#/components/schemas/BTMParameterFeatureList-1749",
            "BTMParameterForeignId-146" : "#/components/schemas/BTMParameterForeignId-146",
            "BTMParameterInvalid-1664" : "#/components/schemas/BTMParameterInvalid-1664",
            "BTMParameterLookupTablePath-1419" : "#/components/schemas/BTMParameterLookupTablePath-1419",
            "BTMParameterMaterial-1388" : "#/components/schemas/BTMParameterMaterial-1388",
            "BTMParameterMultiEnum-3411" : "#/components/schemas/BTMParameterMultiEnum-3411",
            "BTMParameterQuantity-147" : "#/components/schemas/BTMParameterQuantity-147",
            "BTMParameterQueryList-148" : "#/components/schemas/BTMParameterQueryList-148",
            "BTMParameterQueryWithOccurrenceList-67" : "#/components/schemas/BTMParameterQueryWithOccurrenceList-67",
            "BTMParameterReference-2434" : "#/components/schemas/BTMParameterReference-2434",
            "BTMParameterString-149" : "#/components/schemas/BTMParameterString-149",
            "BTMReadOnlyParameter-3800" : "#/components/schemas/BTMReadOnlyParameter-3800"
          }
        }
      },
      "BTMParameterAppearance-627" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "appearance" : {
              "$ref" : "#/components/schemas/BTGraphicsAppearance-1152"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterArray-2025" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "items" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMArrayParameterItem-1843"
              }
            }
          }
        } ]
      },
      "BTMParameterBlobReference-1679" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "blobImport" : {
              "$ref" : "#/components/schemas/BTMImport-136"
            },
            "btType" : {
              "type" : "string"
            },
            "importMicroversion" : {
              "type" : "string",
              "description" : "Element microversion that is being imported.",
              "writeOnly" : true
            },
            "namespace" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterBoolean-144" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "value" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTMParameterButton-5169" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterConfigured-2222" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "configurationParameterId" : {
              "type" : "string"
            },
            "configurationParameterIdFieldIndex" : {
              "type" : "integer",
              "format" : "int32"
            },
            "values" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMConfiguredValue-1341"
              }
            },
            "valuesFieldIndex" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTMParameterDerived-864" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "importMicroversion" : {
              "type" : "string",
              "description" : "Element microversion that is being imported.",
              "writeOnly" : true
            },
            "imports" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMImport-136"
              }
            },
            "moduleId" : {
              "$ref" : "#/components/schemas/BTPModuleId-235"
            },
            "namespace" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterEnum-145" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "enumName" : {
              "type" : "string"
            },
            "importMicroversion" : {
              "type" : "string",
              "description" : "Element microversion that is being imported.",
              "writeOnly" : true
            },
            "namespace" : {
              "type" : "string"
            },
            "value" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterFeatureList-1749" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "featureIds" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BTMParameterForeignId-146" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "foreignId" : {
              "type" : "string"
            },
            "foreignName" : {
              "type" : "string"
            },
            "locationInfo" : {
              "$ref" : "#/components/schemas/BTForeignDataResponse-1070"
            }
          }
        } ]
      },
      "BTMParameterInvalid-1664" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterLookupTablePath-1419" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "value" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BTMParameterMaterial-1388" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "material" : {
              "$ref" : "#/components/schemas/BTPartMaterial-1445"
            }
          }
        } ]
      },
      "BTMParameterMultiEnum-3411" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "enumName" : {
              "type" : "string"
            },
            "namespace" : {
              "type" : "string"
            },
            "values" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BTMParameterNullableQuantity-807" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameterQuantity-147"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isNull" : {
              "type" : "boolean"
            },
            "nullValue" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterProgress-3232" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMReadOnlyParameter-3800"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "percentDone" : {
              "type" : "number",
              "format" : "double"
            },
            "status" : {
              "$ref" : "#/components/schemas/GBTComputeStatus"
            },
            "statusMessage" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterQuantity-147" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMParameterNullableQuantity-807" : "#/components/schemas/BTMParameterNullableQuantity-807",
            "BTMParameterTolerantQuantity-2579" : "#/components/schemas/BTMParameterTolerantQuantity-2579"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "expression" : {
              "type" : "string"
            },
            "isInteger" : {
              "type" : "boolean"
            },
            "units" : {
              "type" : "string"
            },
            "value" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTMParameterQueryList-148" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "queries" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMIndividualQueryBase-139"
              }
            }
          }
        } ]
      },
      "BTMParameterQueryWithOccurrenceList-67" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "occurrences" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTOccurrence-74"
              }
            },
            "queries" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMIndividualQueryWithOccurrenceBase-904"
              }
            }
          }
        } ]
      },
      "BTMParameterReference-2434" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMParameterReferenceBlob-3281" : "#/components/schemas/BTMParameterReferenceBlob-3281",
            "BTMParameterReferenceWithConfiguration-3028" : "#/components/schemas/BTMParameterReferenceWithConfiguration-3028"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "documentId" : {
              "type" : "string"
            },
            "documentVersionId" : {
              "type" : "string"
            },
            "elementId" : {
              "type" : "string"
            },
            "elementLibraryData" : {
              "$ref" : "#/components/schemas/BTElementLibraryReferenceData-3133"
            },
            "featureScriptType" : {
              "type" : "string"
            },
            "ids" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "importMicroversion" : {
              "type" : "string",
              "description" : "Element microversion that is being imported.",
              "writeOnly" : true
            },
            "microversioId" : {
              "type" : "string"
            },
            "namespace" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterReferenceAssembly-938" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameterReferenceWithConfiguration-3028"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterReferenceBlob-3281" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMParameterReferenceCADImport-2016" : "#/components/schemas/BTMParameterReferenceCADImport-2016",
            "BTMParameterReferenceImage-2014" : "#/components/schemas/BTMParameterReferenceImage-2014",
            "BTMParameterReferenceJSON-790" : "#/components/schemas/BTMParameterReferenceJSON-790",
            "BTMParameterReferenceTable-917" : "#/components/schemas/BTMParameterReferenceTable-917",
            "BTMParameterReferenceText-2115" : "#/components/schemas/BTMParameterReferenceText-2115"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameterReference-2434"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterReferenceCADImport-2016" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameterReferenceBlob-3281"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterReferenceImage-2014" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameterReferenceBlob-3281"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterReferenceJSON-790" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameterReferenceBlob-3281"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterReferencePartStudio-3302" : {
        "type" : "object",
        "properties" : {
          "blockBuildFunctionAccess" : {
            "type" : "boolean",
            "writeOnly" : true
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "configuration" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMParameter-1"
            }
          },
          "documentId" : {
            "type" : "string"
          },
          "documentVersionId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementLibraryData" : {
            "$ref" : "#/components/schemas/BTElementLibraryReferenceData-3133"
          },
          "featureScriptType" : {
            "type" : "string"
          },
          "ids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "importMicroversion" : {
            "type" : "string",
            "description" : "Element microversion that is being imported.",
            "writeOnly" : true
          },
          "microversioId" : {
            "type" : "string"
          },
          "namespace" : {
            "type" : "string"
          },
          "nodeId" : {
            "type" : "string",
            "description" : "ID of the parameter's node."
          },
          "parameterId" : {
            "type" : "string",
            "description" : "Unique ID of the parameter."
          },
          "partIdentity" : {
            "$ref" : "#/components/schemas/BTPSOIdentity-2741"
          },
          "partQuery" : {
            "$ref" : "#/components/schemas/BTMParameterQueryList-148"
          },
          "queryDataKey" : {
            "type" : "string"
          },
          "standardContentParametersId" : {
            "type" : "string"
          }
        }
      },
      "BTMParameterReferenceTable-917" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameterReferenceBlob-3281"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterReferenceText-2115" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameterReferenceBlob-3281"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterReferenceVariableStudio-3550" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameterReferenceWithConfiguration-3028"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterReferenceWithConfiguration-3028" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "configuration" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMParameter-1"
            }
          },
          "documentId" : {
            "type" : "string"
          },
          "documentVersionId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementLibraryData" : {
            "$ref" : "#/components/schemas/BTElementLibraryReferenceData-3133"
          },
          "featureScriptType" : {
            "type" : "string"
          },
          "ids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "importMicroversion" : {
            "type" : "string",
            "description" : "Element microversion that is being imported.",
            "writeOnly" : true
          },
          "microversioId" : {
            "type" : "string"
          },
          "namespace" : {
            "type" : "string"
          },
          "nodeId" : {
            "type" : "string",
            "description" : "ID of the parameter's node."
          },
          "parameterId" : {
            "type" : "string",
            "description" : "Unique ID of the parameter."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMParameterReferenceAssembly-938" : "#/components/schemas/BTMParameterReferenceAssembly-938",
            "BTMParameterReferencePartStudio-3302" : "#/components/schemas/BTMParameterReferencePartStudio-3302",
            "BTMParameterReferenceVariableStudio-3550" : "#/components/schemas/BTMParameterReferenceVariableStudio-3550"
          }
        }
      },
      "BTMParameterString-149" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "value" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParameterStringWithTolerances-4286" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMReadOnlyParameter-3800"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "components" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTToleranceString-3274"
              }
            }
          }
        } ]
      },
      "BTMParameterTolerantQuantity-2579" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameterQuantity-147"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMParametricPartStudioFeature-3883" : {
        "type" : "object",
        "properties" : {
          "auxiliaryTreeFeature" : {
            "type" : "boolean"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "featureFolder" : {
            "type" : "boolean"
          },
          "featureId" : {
            "type" : "string",
            "description" : "Unique ID of the feature instance within this Part Studio."
          },
          "featureListFieldIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "featureType" : {
            "type" : "string",
            "description" : "The name of the feature spec that this feature instantiates."
          },
          "fieldIndexForOwnedMateConnectors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "importMicroversion" : {
            "type" : "string",
            "description" : "Element microversion that is being imported.",
            "writeOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "User-visible name of the feature."
          },
          "namespace" : {
            "type" : "string",
            "description" : "Indicates where the feature definition lives. Features in the FeatureScript standard library have a namespace value of `\"\"`. Custom features identify the Feature Studio that contains the definition."
          },
          "nodeId" : {
            "type" : "string",
            "description" : "ID for the feature node."
          },
          "occurrenceQueriesFromAllConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMIndividualQueryWithOccurrenceBase-904"
            }
          },
          "parametricInstanceFeature" : {
            "type" : "boolean"
          },
          "returnAfterSubfeatures" : {
            "type" : "boolean",
            "description" : "For internal use only. Should always be `false`."
          },
          "subFeatures" : {
            "type" : "array",
            "description" : "List of subfeatures belonging to the feature.",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "subFeaturesNotUsedInQuery" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "suppressed" : {
            "type" : "boolean",
            "description" : "If `true`, the feature is suppressed. It will skip regeneration, denoted by a line through the name in the Feature list."
          },
          "suppressionConfigured" : {
            "type" : "boolean",
            "description" : "`true` if the suppression is configured in the Part Studio."
          },
          "variableStudioReference" : {
            "type" : "boolean",
            "description" : "If `true`, the feature references a Variable Studio."
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BTMPartStudioMateConnectorQuery-1324" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMFeatureQueryWithOccurrence-157"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMReadOnlyParameter-3800" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMParameterProgress-3232" : "#/components/schemas/BTMParameterProgress-3232",
            "BTMParameterStringWithTolerances-4286" : "#/components/schemas/BTMParameterStringWithTolerances-4286"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMParameter-1"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMRecordMetrics-1169" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "doBodyValidation" : {
              "type" : "boolean"
            },
            "previousFeatureId" : {
              "type" : "string"
            },
            "references" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMIndividualQuery-138"
              }
            },
            "useLatestBehavior" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTMRollback-150" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMSketch-151" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMFeature-134"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "constraints" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMSketchConstraint-2"
              }
            },
            "entities" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMSketchGeomEntity-5"
              }
            }
          }
        } ]
      },
      "BTMSketchCompositeEntity-893" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMSketchEntity-3"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "subEntities" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMSketchEntity-3"
              }
            }
          }
        } ]
      },
      "BTMSketchConstraint-2" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMSketchEntity-3"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "constraintType" : {
              "$ref" : "#/components/schemas/GBTConstraintType"
            },
            "drivenDimension" : {
              "type" : "boolean"
            },
            "hasOffsetData1" : {
              "type" : "boolean"
            },
            "hasOffsetData2" : {
              "type" : "boolean"
            },
            "hasPierceParameter" : {
              "type" : "boolean"
            },
            "helpParameters" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double"
              }
            },
            "offsetDistance1" : {
              "type" : "number",
              "format" : "double"
            },
            "offsetDistance2" : {
              "type" : "number",
              "format" : "double"
            },
            "offsetOrientation1" : {
              "type" : "boolean"
            },
            "offsetOrientation2" : {
              "type" : "boolean"
            },
            "pierceParameter" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTMSketchCurve-4" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMSketchCurveSegment-155" : "#/components/schemas/BTMSketchCurveSegment-155"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMSketchGeomEntity-5"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "centerId" : {
              "type" : "string"
            },
            "internalIds" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BTMSketchCurveSegment-155" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMSketchCurve-4"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "endParam" : {
              "type" : "number",
              "format" : "double"
            },
            "endPointId" : {
              "type" : "string"
            },
            "offsetCurveExtensions" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double"
              }
            },
            "startParam" : {
              "type" : "number",
              "format" : "double"
            },
            "startPointId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMSketchEntity-3" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMSketchCompositeEntity-893" : "#/components/schemas/BTMSketchCompositeEntity-893",
            "BTMSketchConstraint-2" : "#/components/schemas/BTMSketchConstraint-2",
            "BTMSketchGeomEntity-5" : "#/components/schemas/BTMSketchGeomEntity-5",
            "BTMSketchInvalid-1601" : "#/components/schemas/BTMSketchInvalid-1601"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "combinedSketchEntityType" : {
              "$ref" : "#/components/schemas/CombinedSketchEntityType"
            },
            "entityId" : {
              "type" : "string"
            },
            "entityIdAndReplaceInDependentFields" : {
              "type" : "string",
              "writeOnly" : true
            },
            "importMicroversion" : {
              "type" : "string",
              "description" : "Element microversion that is being imported.",
              "writeOnly" : true
            },
            "index" : {
              "type" : "integer",
              "format" : "int32"
            },
            "namespace" : {
              "type" : "string"
            },
            "parameters" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMParameter-1"
              }
            }
          }
        } ]
      },
      "BTMSketchGeomEntity-5" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMSketchCurve-4" : "#/components/schemas/BTMSketchCurve-4",
            "BTMSketchImageEntity-763" : "#/components/schemas/BTMSketchImageEntity-763",
            "BTMSketchPoint-158" : "#/components/schemas/BTMSketchPoint-158",
            "BTMSketchTextEntity-1761" : "#/components/schemas/BTMSketchTextEntity-1761"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMSketchEntity-3"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "controlBoxIds" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "entityType" : {
              "$ref" : "#/components/schemas/GBTSketchEntityType"
            },
            "functionName" : {
              "type" : "string"
            },
            "isConstruction" : {
              "type" : "boolean"
            },
            "isFromEndpointSplineHandle" : {
              "type" : "boolean"
            },
            "isFromSplineControlPolygon" : {
              "type" : "boolean"
            },
            "isFromSplineHandle" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTMSketchImageEntity-763" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMSketchGeomEntity-5"
        }, {
          "type" : "object",
          "properties" : {
            "aspectRatio" : {
              "type" : "number",
              "format" : "double"
            },
            "btType" : {
              "type" : "string"
            },
            "originX" : {
              "type" : "number",
              "format" : "double"
            },
            "originY" : {
              "type" : "number",
              "format" : "double"
            },
            "xaxisX" : {
              "type" : "number",
              "format" : "double"
            },
            "xaxisY" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTMSketchInvalid-1601" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMSketchEntity-3"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMSketchPoint-158" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMSketchGeomEntity-5"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isUserPoint" : {
              "type" : "boolean"
            },
            "x" : {
              "type" : "number",
              "format" : "double"
            },
            "y" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTMSketchTextEntity-1761" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMSketchGeomEntity-5"
        }, {
          "type" : "object",
          "properties" : {
            "ascent" : {
              "type" : "number",
              "format" : "double"
            },
            "baselineDirectionX" : {
              "type" : "number",
              "format" : "double"
            },
            "baselineDirectionY" : {
              "type" : "number",
              "format" : "double"
            },
            "baselineStartX" : {
              "type" : "number",
              "format" : "double"
            },
            "baselineStartY" : {
              "type" : "number",
              "format" : "double"
            },
            "btType" : {
              "type" : "string"
            },
            "fontName" : {
              "type" : "string"
            },
            "text" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMSuppressionState-1924" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTMSuppressionStateConfigured-2598" : "#/components/schemas/BTMSuppressionStateConfigured-2598"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMSuppressionStateConfigured-2598" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMSuppressionState-1924"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "configurationParameterId" : {
              "type" : "string"
            },
            "configurationParameterIdFieldIndex" : {
              "type" : "integer",
              "format" : "int32"
            },
            "values" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMConfiguredValue-1341"
              }
            },
            "valuesFieldIndex" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTMUnitsDefault-160" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "units" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BTMUserCode-161" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "parsed" : {
              "$ref" : "#/components/schemas/BTPStatement-269"
            },
            "statement" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMVariableStudioReference-2764" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMFeature-134"
        }, {
          "type" : "object",
          "properties" : {
            "apiConfiguration" : {
              "$ref" : "#/components/schemas/BTApiConfiguration"
            },
            "btType" : {
              "type" : "string"
            },
            "configuration" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMParameter-1"
              }
            },
            "documentId" : {
              "type" : "string"
            },
            "elementId" : {
              "type" : "string"
            },
            "entireVariableStudio" : {
              "type" : "boolean"
            },
            "isAutomatic" : {
              "type" : "boolean"
            },
            "microversionId" : {
              "$ref" : "#/components/schemas/BTMicroversionId-366"
            },
            "partialReference" : {
              "type" : "boolean"
            },
            "referenceId" : {
              "type" : "string"
            },
            "referenceNamespace" : {
              "type" : "string"
            },
            "referenceParameter" : {
              "$ref" : "#/components/schemas/BTMParameterReferenceWithConfiguration-3028"
            },
            "unsetAutomaticEdit" : {
              "$ref" : "#/components/schemas/BTTreeEdit-13"
            },
            "validRevisionReference" : {
              "type" : "boolean"
            },
            "variableNames" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "versionId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMWidthMate-1011" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "mateConnectors" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMMateConnector-66"
              }
            },
            "tabMateConnectorQueryList" : {
              "$ref" : "#/components/schemas/BTMParameterQueryWithOccurrenceList-67"
            },
            "widthMateConnectorQueryList" : {
              "$ref" : "#/components/schemas/BTMParameterQueryWithOccurrenceList-67"
            }
          }
        } ]
      },
      "BTMassPropertiesBulkInfo" : {
        "type" : "object",
        "properties" : {
          "bodies" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTMassPropertiesInfo"
            }
          },
          "microversionId" : {
            "type" : "string"
          }
        }
      },
      "BTMassPropertiesInfo" : {
        "type" : "object",
        "properties" : {
          "centroid" : {
            "type" : "array",
            "description" : "Centroid, center of gravity, center of mass",
            "items" : {
              "type" : "number",
              "description" : "Centroid, center of gravity, center of mass",
              "format" : "double"
            }
          },
          "hasMass" : {
            "type" : "boolean",
            "description" : "`true` if the part has mass."
          },
          "inertia" : {
            "type" : "array",
            "description" : "Mass moments of inertia",
            "items" : {
              "type" : "number",
              "description" : "Mass moments of inertia",
              "format" : "double"
            }
          },
          "mass" : {
            "type" : "array",
            "description" : "Mass",
            "items" : {
              "type" : "number",
              "description" : "Mass",
              "format" : "double"
            }
          },
          "massMissingCount" : {
            "type" : "integer",
            "description" : "Number of parts without mass.",
            "format" : "int32"
          },
          "periphery" : {
            "type" : "array",
            "description" : "Surface area",
            "items" : {
              "type" : "number",
              "description" : "Surface area",
              "format" : "double"
            }
          },
          "principalAxes" : {
            "type" : "array",
            "description" : "Vector coordinates of the principal axes. Use `BTVector3d-389` as the `btType`.",
            "items" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            }
          },
          "principalInertia" : {
            "type" : "array",
            "description" : "Principal moments of inertia",
            "items" : {
              "type" : "number",
              "description" : "Principal moments of inertia",
              "format" : "double"
            }
          },
          "volume" : {
            "type" : "array",
            "description" : "Volume",
            "items" : {
              "type" : "number",
              "description" : "Volume",
              "format" : "double"
            }
          }
        },
        "description" : "Mass properties information."
      },
      "BTMateConnectorCSInfo" : {
        "type" : "object",
        "properties" : {
          "getxAxis" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "getyAxis" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "getzAxis" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "origin" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }
      },
      "BTMateConnectorDisplayData-94" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "elementId" : {
            "type" : "string"
          },
          "entityIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "hidden" : {
            "type" : "boolean"
          },
          "implicit" : {
            "type" : "boolean"
          },
          "isDerivedFeature" : {
            "type" : "boolean"
          },
          "location" : {
            "$ref" : "#/components/schemas/BTCoordinateSystem-387"
          },
          "nodeId" : {
            "type" : "string"
          },
          "occurrence" : {
            "$ref" : "#/components/schemas/BTOccurrence-74"
          },
          "ownerOccurrence" : {
            "$ref" : "#/components/schemas/BTOccurrence-74"
          },
          "partId" : {
            "type" : "string"
          }
        }
      },
      "BTMateConnectorEntity-28" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFeatureEntity-34"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "coordinateSystem" : {
              "$ref" : "#/components/schemas/BTCoordinateSystem-387"
            },
            "partId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMateConnectorFilter-163" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "allowImplicitMateConnector" : {
              "type" : "boolean"
            },
            "btType" : {
              "type" : "string"
            },
            "requiresOccurrence" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTMateDisplayData-1358" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "hidden" : {
            "type" : "boolean"
          },
          "isDerivedFeature" : {
            "type" : "boolean"
          },
          "mateConnectorIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "mateType" : {
            "$ref" : "#/components/schemas/GBTMateType"
          },
          "nodeId" : {
            "type" : "string"
          },
          "ownerOccurrence" : {
            "$ref" : "#/components/schemas/BTOccurrence-74"
          },
          "status" : {
            "$ref" : "#/components/schemas/GBTAssemblyFeatureDisplayStatus"
          }
        }
      },
      "BTMateFilter-162" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTAllowedMateTypeFilter-1511" : "#/components/schemas/BTAllowedMateTypeFilter-1511"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "requireMateQueryData" : {
              "type" : "boolean"
            },
            "topLevelMateOnly" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTMateGroupDisplayData-1990" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "hidden" : {
            "type" : "boolean"
          },
          "isDerivedFeature" : {
            "type" : "boolean"
          },
          "nodeId" : {
            "type" : "string"
          },
          "occurrenceIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ownerOccurrence" : {
            "$ref" : "#/components/schemas/BTOccurrence-74"
          },
          "status" : {
            "$ref" : "#/components/schemas/GBTAssemblyFeatureDisplayStatus"
          }
        }
      },
      "BTMateOccurrenceData-1671" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFeatureOccurrenceData-775"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "valueMap" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "number",
                "format" : "double"
              }
            },
            "values" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double"
              }
            }
          }
        } ]
      },
      "BTMaterialLibraryMetadataInfo" : {
        "type" : "object",
        "properties" : {
          "documentId" : {
            "type" : "string"
          },
          "documentName" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "isPublic" : {
            "type" : "boolean"
          },
          "libraryName" : {
            "type" : "string"
          },
          "ownerName" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTMaterialLibrarySettingsInfo" : {
        "type" : "object",
        "properties" : {
          "companyLibraries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMaterialLibraryMetadataInfo"
            }
          },
          "libraries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMaterialLibraryMetadataInfo"
            }
          }
        }
      },
      "BTMatrix3x3-340" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "m00" : {
            "type" : "number",
            "format" : "double"
          },
          "m01" : {
            "type" : "number",
            "format" : "double"
          },
          "m02" : {
            "type" : "number",
            "format" : "double"
          },
          "m10" : {
            "type" : "number",
            "format" : "double"
          },
          "m11" : {
            "type" : "number",
            "format" : "double"
          },
          "m12" : {
            "type" : "number",
            "format" : "double"
          },
          "m20" : {
            "type" : "number",
            "format" : "double"
          },
          "m21" : {
            "type" : "number",
            "format" : "double"
          },
          "m22" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "BTMergePreviewInfo" : {
        "type" : "object",
        "properties" : {
          "branchPointMicroversionId" : {
            "type" : "string"
          },
          "branchPointVersionId" : {
            "type" : "string"
          },
          "branchPointWorkspaceId" : {
            "type" : "string"
          },
          "changes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTElementMergeInfo"
            }
          },
          "isBranchPointAtStart" : {
            "type" : "boolean"
          },
          "sourceMicroversionId" : {
            "type" : "string"
          },
          "targetMicroversionId" : {
            "type" : "string"
          },
          "upgradeInfo" : {
            "$ref" : "#/components/schemas/BTMergeUpgradeInfo"
          }
        }
      },
      "BTMergeStrategy" : {
        "type" : "string",
        "enum" : [ "MERGE", "KEEP", "REPLACE" ]
      },
      "BTMergeUpgradeInfo" : {
        "type" : "object",
        "properties" : {
          "pendingSourceUpgrade" : {
            "$ref" : "#/components/schemas/BTPendingUpgradeInfo"
          },
          "pendingTargetUpgrade" : {
            "$ref" : "#/components/schemas/BTPendingUpgradeInfo"
          },
          "recommendedVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "$ref" : "#/components/schemas/BTMergeUpgradeType"
          }
        }
      },
      "BTMergeUpgradeType" : {
        "type" : "string",
        "enum" : [ "SOURCE", "TARGET", "SOURCE_AND_TARGET" ]
      },
      "BTMetadataCategorySummaryInfo" : {
        "type" : "object",
        "properties" : {
          "defaultObjectType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "objectTypes" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "ownerId" : {
            "type" : "string"
          },
          "ownerType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "publishState" : {
            "type" : "integer",
            "format" : "int32"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTMetadataElementInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMetadataObjectInfo"
        }, {
          "type" : "object",
          "properties" : {
            "elementId" : {
              "type" : "string"
            },
            "elementType" : {
              "type" : "integer",
              "format" : "int32"
            },
            "mimeType" : {
              "type" : "string"
            },
            "parts" : {
              "$ref" : "#/components/schemas/BTMetadataObjectListInfoBTMetadataPartInfo"
            }
          }
        } ]
      },
      "BTMetadataEnumValue" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "state" : {
            "type" : "integer",
            "format" : "int32"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "BTMetadataEnumValueInfo" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "state" : {
            "type" : "integer",
            "format" : "int32"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "BTMetadataObjectInfo" : {
        "required" : [ "jsonType" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "jsonType" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMetadataPropertyInfo"
            }
          },
          "thumbnail" : {
            "$ref" : "#/components/schemas/BTThumbnailInfo"
          }
        },
        "discriminator" : {
          "propertyName" : "jsonType"
        }
      },
      "BTMetadataObjectListInfoBTMetadataElementInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMetadataElementInfo"
            }
          },
          "next" : {
            "type" : "string"
          },
          "prev" : {
            "type" : "string"
          }
        }
      },
      "BTMetadataObjectListInfoBTMetadataPartInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMetadataPartInfo"
            }
          },
          "next" : {
            "type" : "string"
          },
          "prev" : {
            "type" : "string"
          }
        }
      },
      "BTMetadataObjectType" : {
        "type" : "string",
        "enum" : [ "GLOBAL", "DOCUMENT", "PART", "ASSEMBLY", "DRAWING", "PART_STUDIO", "BLOB_ELEMENT", "APP_ELEMENT", "VERSION", "WORKSPACE", "PROJECT", "ITEM", "FEATURE_STUDIO", "CHANGE_REQUEST", "TASK", "CHANGE_ORDER", "CHANGE_TASK", "VARIABLE_STUDIO", "DRAWING_ANNOTATIONS", "FOLDER" ]
      },
      "BTMetadataPartInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMetadataObjectInfo"
        }, {
          "type" : "object",
          "properties" : {
            "isFlattenedBody" : {
              "type" : "boolean"
            },
            "meshState" : {
              "type" : "integer",
              "format" : "int32"
            },
            "partId" : {
              "type" : "string"
            },
            "partIdentity" : {
              "type" : "string"
            },
            "partType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTMetadataPropertyInfo" : {
        "type" : "object",
        "properties" : {
          "aggregationSkippedFilteredOutValues" : {
            "type" : "boolean"
          },
          "computedAssemblyProperty" : {
            "type" : "boolean"
          },
          "computedProperty" : {
            "type" : "boolean"
          },
          "computedPropertyError" : {
            "type" : "string"
          },
          "computedPropertyEvalInfo" : {
            "type" : "string"
          },
          "dateFormat" : {
            "type" : "string"
          },
          "defaultValue" : {
            "type" : "object"
          },
          "dirty" : {
            "type" : "boolean"
          },
          "editable" : {
            "type" : "boolean"
          },
          "editableInUi" : {
            "type" : "boolean"
          },
          "enumValues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMetadataEnumValueInfo"
            }
          },
          "initialValue" : {
            "type" : "object"
          },
          "multivalued" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "propertyId" : {
            "type" : "string"
          },
          "propertyOverrideStatus" : {
            "type" : "integer",
            "description" : "0: Unknown | 1: Not computed | 2: Computed without override | 3: Computed with override | 4: Computed with subassembly overrides | 5: Overridden",
            "format" : "int32"
          },
          "propertySource" : {
            "type" : "integer",
            "format" : "int32"
          },
          "required" : {
            "type" : "boolean"
          },
          "schemaId" : {
            "type" : "string"
          },
          "uiHints" : {
            "$ref" : "#/components/schemas/BTMetadataPropertyUiHintsInfo"
          },
          "validator" : {
            "$ref" : "#/components/schemas/BTMetadataPropertyValidatorInfo"
          },
          "value" : {
            "type" : "object"
          },
          "valueType" : {
            "type" : "string"
          }
        }
      },
      "BTMetadataPropertyUiHintsInfo" : {
        "type" : "object",
        "properties" : {
          "multiline" : {
            "type" : "boolean"
          }
        }
      },
      "BTMetadataPropertyUpdateParams" : {
        "type" : "object",
        "properties" : {
          "propertyId" : {
            "type" : "string",
            "description" : "The id of the property that should be edited. This can be retrieved from MetadataCategory:getCategoryProperties."
          },
          "value" : {
            "type" : "object",
            "description" : "The new value for the property."
          }
        }
      },
      "BTMetadataPropertyValidatorInfo" : {
        "type" : "object",
        "properties" : {
          "max" : {
            "type" : "number"
          },
          "maxCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "maxLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "min" : {
            "type" : "number"
          },
          "minCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "minLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pattern" : {
            "type" : "string"
          },
          "quantityType" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BTMetadataStateType" : {
        "type" : "string",
        "description" : "The current state metadata values if applicable.",
        "enum" : [ "IN_PROGRESS", "PENDING", "RELEASED", "OBSOLETE", "REJECTED", "DISCARDED" ]
      },
      "BTMetadataValueType" : {
        "type" : "string",
        "enum" : [ "STRING", "BOOL", "INT", "DOUBLE", "DATE", "ENUM", "OBJECT", "BLOB", "USER", "LIST", "FOREIGN", "CATEGORY", "COMPUTED", "VALUE_WITH_UNITS" ]
      },
      "BTMicroversionId-366" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "deleted" : {
            "type" : "boolean"
          },
          "theId" : {
            "type" : "string"
          }
        }
      },
      "BTMicroversionIdAndConfiguration-2338" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "cacheKey" : {
            "type" : "string"
          },
          "configurationParameterIdToValue" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTFSValue-1888"
            }
          },
          "deleted" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "microversion" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          }
        }
      },
      "BTMicroversionIdAndConfigurationInterval-2364" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "from" : {
            "$ref" : "#/components/schemas/BTMicroversionIdAndConfiguration-2338"
          },
          "microversionIdInterval" : {
            "$ref" : "#/components/schemas/BTMicroversionIdInterval-367"
          },
          "to" : {
            "$ref" : "#/components/schemas/BTMicroversionIdAndConfiguration-2338"
          }
        }
      },
      "BTMicroversionIdInterval-367" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "from" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          },
          "to" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          },
          "trivial" : {
            "type" : "boolean"
          }
        }
      },
      "BTMicroversionInfo" : {
        "type" : "object",
        "properties" : {
          "microversion" : {
            "type" : "string"
          }
        }
      },
      "BTMirrorTableRowMetaData-5463" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableBaseRowMetadata-3181"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "occurrences" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTOccurrence-74"
              }
            }
          }
        } ]
      },
      "BTModelAnnotations-3945" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "annotations" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMAnnotation-4664"
              }
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTModelElementParams" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "BTModelFormatFullInfo" : {
        "type" : "object",
        "properties" : {
          "couldBeAssembly" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "translatorName" : {
            "type" : "string"
          },
          "validDestinationFormat" : {
            "type" : "boolean"
          },
          "validSourceFormat" : {
            "type" : "boolean"
          }
        }
      },
      "BTModelFormatInfo" : {
        "type" : "object",
        "properties" : {
          "couldBeAssembly" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "translatorName" : {
            "type" : "string"
          }
        }
      },
      "BTModelProperties-1258" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "nodeId" : {
            "type" : "string"
          },
          "subPartProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTOnePartProperties-230"
            }
          }
        }
      },
      "BTModifiableEntityOnlyFilter-1593" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "modifiableOnly" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTMoveElementInfo" : {
        "type" : "object",
        "properties" : {
          "elementOriginalToNewMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "errorMessage" : {
            "type" : "string"
          },
          "isNewDocument" : {
            "type" : "boolean"
          },
          "newDocumentId" : {
            "type" : "string"
          },
          "newDocumentName" : {
            "type" : "string"
          },
          "newDocumentVersionId" : {
            "type" : "string"
          },
          "newWorkspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTMoveElementParams" : {
        "type" : "object",
        "properties" : {
          "anchorElementId" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "elementOriginalToNewMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "elements" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "generateUnknownMessages" : {
            "type" : "boolean"
          },
          "importData" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          },
          "isCopy" : {
            "type" : "boolean"
          },
          "isDeepCopy" : {
            "type" : "boolean"
          },
          "isGroupAnchor" : {
            "type" : "boolean"
          },
          "isNewDocument" : {
            "type" : "boolean"
          },
          "isPublic" : {
            "type" : "boolean"
          },
          "isSelectivePartOut" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "needNewVersion" : {
            "type" : "boolean"
          },
          "ownerEmail" : {
            "type" : "string"
          },
          "ownerId" : {
            "type" : "string"
          },
          "ownerType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parentId" : {
            "type" : "string"
          },
          "projectId" : {
            "type" : "string"
          },
          "selectedGroupIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sourceDocumentId" : {
            "type" : "string"
          },
          "sourceVersionId" : {
            "type" : "string"
          },
          "sourceWorkspaceId" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "targetDocumentId" : {
            "type" : "string"
          },
          "targetWorkspaceId" : {
            "type" : "string"
          },
          "versionName" : {
            "type" : "string"
          }
        }
      },
      "BTNameValuePair" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "BTNamedPositionValuesColumnInfo-816" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableColumnInfo-1222"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "columnHasError" : {
              "type" : "boolean"
            },
            "parameterId" : {
              "type" : "string"
            },
            "parentId" : {
              "type" : "string"
            },
            "parentName" : {
              "type" : "string"
            },
            "tooltip" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTNamedViewInfo" : {
        "type" : "object",
        "properties" : {
          "angle" : {
            "type" : "number",
            "format" : "double"
          },
          "cameraViewport" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "perspective" : {
            "type" : "boolean"
          },
          "sectionPlanes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTSectionPlaneInfo"
            }
          },
          "sectionViewData" : {
            "$ref" : "#/components/schemas/BTGraphicsSectionViewStateData-4379"
          },
          "viewMatrix" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }
      },
      "BTNamedViewsInfo" : {
        "type" : "object",
        "properties" : {
          "namedViews" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTNamedViewInfo"
            }
          }
        }
      },
      "BTNextPartNumber" : {
        "type" : "object",
        "properties" : {
          "categories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Category"
            }
          },
          "configuration" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "mimeType" : {
            "type" : "string"
          },
          "partId" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "prefix" : {
            "type" : "string"
          },
          "resourceType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "versionId" : {
            "type" : "string"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTNextPartNumberParam" : {
        "type" : "object",
        "properties" : {
          "categories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTCategoryParam"
            }
          },
          "configuration" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "id" : {
            "type" : "string"
          },
          "mimeType" : {
            "type" : "string"
          },
          "numberSchemeResourceTypeId" : {
            "type" : "string"
          },
          "partId" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTNextPartNumbersParam" : {
        "type" : "object",
        "properties" : {
          "itemPartNumbers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTNextPartNumberParam"
            }
          },
          "skipPartNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTNodeReference-21" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "nodeId" : {
            "type" : "string"
          },
          "nodeIdRaw" : {
            "$ref" : "#/components/schemas/BTObjectId"
          }
        }
      },
      "BTNonAlignedBoundingBox-4180" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTBoundingBox-1052"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "coordinateSystem" : {
              "$ref" : "#/components/schemas/BTCoordinateSystem-387"
            }
          }
        } ]
      },
      "BTNotFilter-165" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "operand" : {
              "$ref" : "#/components/schemas/BTQueryFilter-183"
            }
          }
        } ]
      },
      "BTNotice-227" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "expressionErrorInfo" : {
            "$ref" : "#/components/schemas/BTParameterExpressionErrorInfo-2037"
          },
          "level" : {
            "$ref" : "#/components/schemas/GBTNoticeLevel"
          },
          "locationInfos" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTLocationInfo-226"
            }
          },
          "message" : {
            "type" : "string"
          },
          "nodeId" : {
            "type" : "string"
          },
          "parameterId" : {
            "type" : "string"
          },
          "stackTrace" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTLocationInfo-226"
            }
          },
          "tryNode" : {
            "$ref" : "#/components/schemas/BTNodeReference-21"
          },
          "type" : {
            "$ref" : "#/components/schemas/GBTNoticeType"
          }
        }
      },
      "BTNullableQuantityRange-1340" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQuantityRange-181"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "hasDefaultValue" : {
              "type" : "boolean"
            },
            "hasMaxValue" : {
              "type" : "boolean"
            },
            "hasMinValue" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTObjectId" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "BTObjectState" : {
        "type" : "string",
        "enum" : [ "DELETED", "TRASH", "ACTIVE", "INACTIVE" ]
      },
      "BTObjectWorkflowInfo" : {
        "type" : "object",
        "properties" : {
          "canBeDiscarded" : {
            "type" : "boolean",
            "description" : "Whether workflowable object can be discarded."
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "isDiscarded" : {
            "type" : "boolean",
            "description" : "Whether workflowable object has been discarded."
          },
          "isFrozen" : {
            "type" : "boolean",
            "description" : "Whether workflowable object has reached terminal state and is frozen."
          },
          "metadataState" : {
            "$ref" : "#/components/schemas/BTMetadataStateType"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "objectType" : {
            "$ref" : "#/components/schemas/BTAPIWorkflowableType"
          },
          "stateId" : {
            "type" : "string",
            "description" : "The current state of object like SETUP, REJECTED etc. Custom workflows can have any declared state."
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "workflowId" : {
            "type" : "string",
            "description" : "The workflow definition id that governs this object's states and transitions."
          }
        },
        "description" : "An workflowable object like Release or Task that supports states and transitions."
      },
      "BTOccurrence-74" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "fullPathAsString" : {
            "type" : "string"
          },
          "headInstanceId" : {
            "type" : "string"
          },
          "occurrenceWithoutHead" : {
            "$ref" : "#/components/schemas/BTOccurrence-74"
          },
          "occurrenceWithoutTail" : {
            "$ref" : "#/components/schemas/BTOccurrence-74"
          },
          "parent" : {
            "$ref" : "#/components/schemas/BTOccurrence-74"
          },
          "path" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "rootOccurrence" : {
            "type" : "boolean"
          },
          "tailInstanceId" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTOccurrenceWithFullPartIds-1464" : "#/components/schemas/BTOccurrenceWithFullPartIds-1464"
          }
        }
      },
      "BTOccurrenceData-75" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "featureData" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTFeatureOccurrenceData-775"
            }
          },
          "forceHighestQualityTessellation" : {
            "type" : "boolean"
          },
          "hidden" : {
            "type" : "boolean"
          },
          "isFixed" : {
            "type" : "boolean"
          },
          "isHidden" : {
            "type" : "boolean"
          },
          "lockInfo" : {
            "$ref" : "#/components/schemas/BTLockedSubAssembly-4590"
          },
          "nodeId" : {
            "type" : "string"
          },
          "occurrence" : {
            "$ref" : "#/components/schemas/BTOccurrence-74"
          },
          "transform" : {
            "$ref" : "#/components/schemas/BTBSMatrix-386"
          }
        }
      },
      "BTOccurrenceDisplayData-95" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "elementId" : {
            "type" : "string"
          },
          "forceHighestQualityTessellation" : {
            "type" : "boolean"
          },
          "fullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "isHidden" : {
            "type" : "boolean"
          },
          "isPatternDescendant" : {
            "type" : "boolean"
          },
          "occurrenceData" : {
            "$ref" : "#/components/schemas/BTOccurrenceData-75"
          },
          "partIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sketchFeatureId" : {
            "type" : "string"
          }
        }
      },
      "BTOccurrenceFilter-166" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "excludeFlattenedParts" : {
              "type" : "boolean"
            },
            "excludeParametricPartStudioChildInstance" : {
              "type" : "boolean"
            },
            "excludeParametricPartStudioInstance" : {
              "type" : "boolean"
            },
            "excludePatternInstances" : {
              "type" : "boolean"
            },
            "excludeReplicatedInstances" : {
              "type" : "boolean"
            },
            "excludeSketch" : {
              "type" : "boolean"
            },
            "excludeStandardContent" : {
              "type" : "boolean"
            },
            "excludeStudioInserts" : {
              "type" : "boolean"
            },
            "excludeSubAssemblies" : {
              "type" : "boolean"
            },
            "excludeSuppressed" : {
              "type" : "boolean"
            },
            "includeAssemblyRoot" : {
              "type" : "boolean"
            },
            "includeParametricInstance" : {
              "type" : "boolean"
            },
            "includePatternOccurrence" : {
              "type" : "boolean"
            },
            "solidOrCompositeBodyOnly" : {
              "type" : "boolean"
            },
            "topLevelOnly" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTOccurrenceWithFullPartIds-1464" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTOccurrence-74"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "fullElementId" : {
              "$ref" : "#/components/schemas/BTFullElementIdWithDocument-1729"
            },
            "partIds" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "transform" : {
              "$ref" : "#/components/schemas/BTBSMatrix-386"
            }
          }
        } ]
      },
      "BTOldPermission" : {
        "type" : "string",
        "enum" : [ "NOACCESS", "ANONYMOUS_ACCESS", "READ", "READ_COPY_EXPORT", "COMMENT", "WRITE", "RESHARE", "FULL", "OWNER" ]
      },
      "BTOneConfigurationPartProperties-1661" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "configuration" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTFSValue-1888"
            }
          },
          "merged" : {
            "$ref" : "#/components/schemas/BTOnePartProperties-230"
          },
          "nodeId" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTOnePartProperties-230"
            }
          },
          "propertyIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTOnePartProperties-230" : {
        "type" : "object",
        "properties" : {
          "appearance" : {
            "$ref" : "#/components/schemas/BTGraphicsAppearance-1152"
          },
          "appearanceForNewCell" : {
            "$ref" : "#/components/schemas/BTGraphicsAppearance-1152"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "changedPropertiesSet" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "customProperties" : {
            "$ref" : "#/components/schemas/BTPartCustomProperties-1338"
          },
          "material" : {
            "$ref" : "#/components/schemas/BTPartMaterial-1445"
          },
          "materialForNewCell" : {
            "$ref" : "#/components/schemas/BTPartMaterial-1445"
          },
          "name" : {
            "type" : "string"
          },
          "nameForNewCell" : {
            "type" : "string"
          },
          "nameIfNotNull" : {
            "$ref" : "#/components/schemas/BTOnePartProperties-230"
          },
          "nodeId" : {
            "type" : "string"
          },
          "parsedQuery" : {
            "$ref" : "#/components/schemas/BTPFunctionDeclaration-246"
          },
          "query" : {
            "type" : "string"
          },
          "queryListParameter" : {
            "$ref" : "#/components/schemas/BTMParameterQueryList-148"
          },
          "sheetMetalBendOrder" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sheetMetalBendOrderIfNotNull" : {
            "$ref" : "#/components/schemas/BTOnePartProperties-230"
          },
          "visibility" : {
            "$ref" : "#/components/schemas/GBTPartVisibility"
          }
        }
      },
      "BTOrFilter-167" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "operand1" : {
              "$ref" : "#/components/schemas/BTQueryFilter-183"
            },
            "operand2" : {
              "$ref" : "#/components/schemas/BTQueryFilter-183"
            }
          }
        } ]
      },
      "BTOriginDisplayData-934" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "hidden" : {
            "type" : "boolean"
          }
        }
      },
      "BTOriginEntity-935" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFeatureEntity-34"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTOtherDocumentSelectorParametersInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDocumentSelectorParametersInfo"
        }, {
          "type" : "object",
          "properties" : {
            "folderStatePath" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTFolderStateInfo"
              }
            },
            "selectedDocumentId" : {
              "type" : "string"
            },
            "selectedVersionId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTOwnerInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "image" : {
            "type" : "string"
          },
          "isEnterpriseOwnedResource" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "type" : {
            "type" : "integer",
            "format" : "int32"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTPAnnotation-231" : {
        "type" : "object",
        "properties" : {
          "atomic" : {
            "type" : "boolean"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "documentationType" : {
            "$ref" : "#/components/schemas/GBTPDefinitionType"
          },
          "endSourceLocation" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nodeId" : {
            "type" : "string"
          },
          "shortDescriptor" : {
            "type" : "string"
          },
          "spaceAfter" : {
            "$ref" : "#/components/schemas/BTPSpace-10"
          },
          "spaceBefore" : {
            "$ref" : "#/components/schemas/BTPSpace-10"
          },
          "spaceDefault" : {
            "type" : "boolean"
          },
          "startSourceLocation" : {
            "type" : "integer",
            "format" : "int32"
          },
          "value" : {
            "$ref" : "#/components/schemas/BTPLiteralMap-256"
          }
        }
      },
      "BTPArgumentDeclaration-232" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPNode-7"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "identifier" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            },
            "name" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            },
            "standardType" : {
              "$ref" : "#/components/schemas/GBTPType"
            },
            "type" : {
              "$ref" : "#/components/schemas/BTPTypeName-290"
            },
            "typeName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPBuiltinIdentifier-233" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPNode-7"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "identifier" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPConversionFunction-1362" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPProcedureDeclarationBase-266"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "from" : {
              "$ref" : "#/components/schemas/BTPLiteralNumber-258"
            },
            "spaceAfterType" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "to" : {
              "$ref" : "#/components/schemas/BTPLiteralNumber-258"
            },
            "typeName" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            }
          }
        } ]
      },
      "BTPExpression-9" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTPExpressionAccess-237" : "#/components/schemas/BTPExpressionAccess-237",
            "BTPExpressionAs-238" : "#/components/schemas/BTPExpressionAs-238",
            "BTPExpressionBuiltinCall-239" : "#/components/schemas/BTPExpressionBuiltinCall-239",
            "BTPExpressionCall-240" : "#/components/schemas/BTPExpressionCall-240",
            "BTPExpressionFunction-1325" : "#/components/schemas/BTPExpressionFunction-1325",
            "BTPExpressionGroup-241" : "#/components/schemas/BTPExpressionGroup-241",
            "BTPExpressionIs-242" : "#/components/schemas/BTPExpressionIs-242",
            "BTPExpressionNew-243" : "#/components/schemas/BTPExpressionNew-243",
            "BTPExpressionOperator-244" : "#/components/schemas/BTPExpressionOperator-244",
            "BTPExpressionSwitch-2632" : "#/components/schemas/BTPExpressionSwitch-2632",
            "BTPExpressionTry-1271" : "#/components/schemas/BTPExpressionTry-1271",
            "BTPExpressionVarReference-245" : "#/components/schemas/BTPExpressionVarReference-245",
            "BTPLiteral-253" : "#/components/schemas/BTPLiteral-253"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPPropertyAccessor-23"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPExpressionAccess-237" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPExpression-9"
        }, {
          "type" : "object",
          "properties" : {
            "accessor" : {
              "$ref" : "#/components/schemas/BTPPropertyAccessor-23"
            },
            "base" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            },
            "btType" : {
              "type" : "string"
            },
            "isSafeNavigation" : {
              "type" : "boolean"
            },
            "spaceInAccessor" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPExpressionAs-238" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPExpression-9"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "operand" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            },
            "typeName" : {
              "$ref" : "#/components/schemas/BTPTypeName-290"
            }
          }
        } ]
      },
      "BTPExpressionBuiltinCall-239" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPExpression-9"
        }, {
          "type" : "object",
          "properties" : {
            "arguments" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPExpression-9"
              }
            },
            "btType" : {
              "type" : "string"
            },
            "name" : {
              "$ref" : "#/components/schemas/BTPBuiltinIdentifier-233"
            },
            "spaceInEmptyList" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPExpressionCall-240" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPExpression-9"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "functionExpression" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            },
            "functionName" : {
              "$ref" : "#/components/schemas/BTPName-261"
            },
            "functionNameString" : {
              "type" : "string"
            },
            "isArrowCall" : {
              "type" : "boolean"
            },
            "spaceInEmptyList" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPExpressionFunction-1325" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPExpression-9"
        }, {
          "type" : "object",
          "properties" : {
            "arguments" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPArgumentDeclaration-232"
              }
            },
            "body" : {
              "$ref" : "#/components/schemas/BTPStatementBlock-271"
            },
            "btType" : {
              "type" : "string"
            },
            "expression" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            },
            "isLambda" : {
              "type" : "boolean"
            },
            "isLambdaWithNoParens" : {
              "type" : "boolean"
            },
            "precondition" : {
              "$ref" : "#/components/schemas/BTPStatement-269"
            },
            "returnType" : {
              "$ref" : "#/components/schemas/BTPTypeName-290"
            },
            "spaceAfterArglist" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "spaceAfterFunction" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "spaceInEmptyList" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPExpressionGroup-241" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPExpression-9"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "content" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            }
          }
        } ]
      },
      "BTPExpressionIs-242" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPExpression-9"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "operand" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            },
            "typeName" : {
              "$ref" : "#/components/schemas/BTPTypeName-290"
            }
          }
        } ]
      },
      "BTPExpressionNew-243" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPExpression-9"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "spaceAfterBox" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "spaceBetweenNewBox" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "value" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            }
          }
        } ]
      },
      "BTPExpressionOperator-244" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPExpression-9"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "forExport" : {
              "type" : "boolean"
            },
            "globalNamespace" : {
              "type" : "boolean"
            },
            "importMicroversion" : {
              "type" : "string",
              "description" : "Element microversion that is being imported.",
              "writeOnly" : true
            },
            "namespace" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPIdentifier-8"
              }
            },
            "operand1" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            },
            "operand2" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            },
            "operand3" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            },
            "operator" : {
              "$ref" : "#/components/schemas/GBTPOperator"
            },
            "spaceAfterNamespace" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "spaceAfterOperator" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "spaceBeforeOperator" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "writtenAsFunctionCall" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTPExpressionSwitch-2632" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPExpression-9"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "choices" : {
              "$ref" : "#/components/schemas/BTPLiteralMap-256"
            },
            "selector" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            },
            "spaceAfterSwitch" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPExpressionTry-1271" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPExpression-9"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "expression" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            },
            "silent" : {
              "type" : "boolean"
            },
            "spaceAfterSilent" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "spaceAfterTry" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPExpressionVarReference-245" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPExpression-9"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "name" : {
              "$ref" : "#/components/schemas/BTPName-261"
            }
          }
        } ]
      },
      "BTPFunctionDeclaration-246" : {
        "type" : "object",
        "properties" : {
          "annotation" : {
            "$ref" : "#/components/schemas/BTPAnnotation-231"
          },
          "arguments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTPArgumentDeclaration-232"
            }
          },
          "argumentsToDocument" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTPArgumentDeclaration-232"
            }
          },
          "atomic" : {
            "type" : "boolean"
          },
          "body" : {
            "$ref" : "#/components/schemas/BTPStatementBlock-271"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "deprecated" : {
            "type" : "boolean"
          },
          "deprecatedExplanation" : {
            "type" : "string"
          },
          "documentationType" : {
            "$ref" : "#/components/schemas/GBTPDefinitionType"
          },
          "endSourceLocation" : {
            "type" : "integer",
            "format" : "int32"
          },
          "forExport" : {
            "type" : "boolean"
          },
          "name" : {
            "$ref" : "#/components/schemas/BTPIdentifier-8"
          },
          "nodeId" : {
            "type" : "string"
          },
          "precondition" : {
            "$ref" : "#/components/schemas/BTPStatement-269"
          },
          "returnType" : {
            "$ref" : "#/components/schemas/BTPTypeName-290"
          },
          "shortDescriptor" : {
            "type" : "string"
          },
          "spaceAfter" : {
            "$ref" : "#/components/schemas/BTPSpace-10"
          },
          "spaceAfterArglist" : {
            "$ref" : "#/components/schemas/BTPSpace-10"
          },
          "spaceAfterExport" : {
            "$ref" : "#/components/schemas/BTPSpace-10"
          },
          "spaceBefore" : {
            "$ref" : "#/components/schemas/BTPSpace-10"
          },
          "spaceDefault" : {
            "type" : "boolean"
          },
          "spaceInEmptyList" : {
            "$ref" : "#/components/schemas/BTPSpace-10"
          },
          "startSourceLocation" : {
            "type" : "integer",
            "format" : "int32"
          },
          "symbolName" : {
            "$ref" : "#/components/schemas/BTPIdentifier-8"
          }
        }
      },
      "BTPFunctionOrPredicateDeclaration-247" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTPFunctionDeclaration-246" : "#/components/schemas/BTPFunctionDeclaration-246",
            "BTPPredicateDeclaration-265" : "#/components/schemas/BTPPredicateDeclaration-265"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPProcedureDeclarationBase-266"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "name" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            }
          }
        } ]
      },
      "BTPIdentifier-8" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPPropertyAccessor-23"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "identifier" : {
              "type" : "string"
            },
            "invalidIdentifierForTest" : {
              "type" : "string",
              "writeOnly" : true
            }
          }
        } ]
      },
      "BTPLValue-249" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTPLValueAccess-250" : "#/components/schemas/BTPLValueAccess-250",
            "BTPLValueBoxDereference-251" : "#/components/schemas/BTPLValueBoxDereference-251",
            "BTPLValueVarReference-252" : "#/components/schemas/BTPLValueVarReference-252"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPNode-7"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPLValueAccess-250" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPLValue-249"
        }, {
          "type" : "object",
          "properties" : {
            "accessor" : {
              "$ref" : "#/components/schemas/BTPPropertyAccessor-23"
            },
            "base" : {
              "$ref" : "#/components/schemas/BTPLValue-249"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPLValueBoxDereference-251" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPLValue-249"
        }, {
          "type" : "object",
          "properties" : {
            "box" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            },
            "btType" : {
              "type" : "string"
            },
            "spaceInside" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPLValueVarReference-252" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPLValue-249"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "name" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            }
          }
        } ]
      },
      "BTPLiteral-253" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTPLiteralArray-254" : "#/components/schemas/BTPLiteralArray-254",
            "BTPLiteralBoolean-255" : "#/components/schemas/BTPLiteralBoolean-255",
            "BTPLiteralMap-256" : "#/components/schemas/BTPLiteralMap-256",
            "BTPLiteralNumber-258" : "#/components/schemas/BTPLiteralNumber-258",
            "BTPLiteralString-259" : "#/components/schemas/BTPLiteralString-259",
            "BTPLiteralUndefined-260" : "#/components/schemas/BTPLiteralUndefined-260"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPExpression-9"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPLiteralArray-254" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPLiteral-253"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "spaceInEmptyList" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "trailingComma" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTPLiteralBoolean-255" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPLiteral-253"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "value" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTPLiteralMap-256" : {
        "type" : "object",
        "properties" : {
          "atomic" : {
            "type" : "boolean"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "documentationType" : {
            "$ref" : "#/components/schemas/GBTPDefinitionType"
          },
          "endSourceLocation" : {
            "type" : "integer",
            "format" : "int32"
          },
          "entries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTPLiteralMapEntry-257"
            }
          },
          "nodeId" : {
            "type" : "string"
          },
          "shortDescriptor" : {
            "type" : "string"
          },
          "spaceAfter" : {
            "$ref" : "#/components/schemas/BTPSpace-10"
          },
          "spaceBefore" : {
            "$ref" : "#/components/schemas/BTPSpace-10"
          },
          "spaceDefault" : {
            "type" : "boolean"
          },
          "spaceInEmptyList" : {
            "$ref" : "#/components/schemas/BTPSpace-10"
          },
          "startSourceLocation" : {
            "type" : "integer",
            "format" : "int32"
          },
          "trailingComma" : {
            "type" : "boolean"
          }
        }
      },
      "BTPLiteralMapEntry-257" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPNode-7"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "key" : {
              "$ref" : "#/components/schemas/BTPPropertyAccessor-23"
            },
            "value" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            }
          }
        } ]
      },
      "BTPLiteralNumber-258" : {
        "type" : "object",
        "properties" : {
          "atomic" : {
            "type" : "boolean"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "documentationType" : {
            "$ref" : "#/components/schemas/GBTPDefinitionType"
          },
          "endSourceLocation" : {
            "type" : "integer",
            "format" : "int32"
          },
          "integer" : {
            "type" : "boolean"
          },
          "nodeId" : {
            "type" : "string"
          },
          "shortDescriptor" : {
            "type" : "string"
          },
          "spaceAfter" : {
            "$ref" : "#/components/schemas/BTPSpace-10"
          },
          "spaceBefore" : {
            "$ref" : "#/components/schemas/BTPSpace-10"
          },
          "spaceDefault" : {
            "type" : "boolean"
          },
          "startSourceLocation" : {
            "type" : "integer",
            "format" : "int32"
          },
          "text" : {
            "type" : "string"
          },
          "value" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "BTPLiteralString-259" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPLiteral-253"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "text" : {
              "type" : "string"
            },
            "value" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPLiteralUndefined-260" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPLiteral-253"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPModule-234" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPNode-7"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "deepImports" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/BTImport"
                }
              }
            },
            "imports" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPTopLevelImport-285"
              }
            },
            "isBlob" : {
              "type" : "boolean"
            },
            "isInternalModule" : {
              "type" : "boolean"
            },
            "mayHaveImplicitImports" : {
              "type" : "boolean"
            },
            "pathMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BTMicroversionId-366"
              }
            },
            "toBeParsed" : {
              "$ref" : "#/components/schemas/BTLazilyParsedFeatureScript"
            },
            "topLevel" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPTopLevelNode-286"
              }
            },
            "version" : {
              "$ref" : "#/components/schemas/BTPLiteralNumber-258"
            },
            "versionNumber" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTPModuleId-235" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPNode-7"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "dbimportString" : {
              "type" : "string"
            },
            "elementImport" : {
              "type" : "boolean"
            },
            "externalDocumentWithVersion" : {
              "$ref" : "#/components/schemas/BTDocumentWithVersionId"
            },
            "externalDocumentWithVersionAndElementId" : {
              "$ref" : "#/components/schemas/BTDocumentWithVersionAndElementId"
            },
            "externalImport" : {
              "type" : "boolean"
            },
            "importedDocumentId" : {
              "type" : "string"
            },
            "importedElementId" : {
              "type" : "string"
            },
            "importedVersionId" : {
              "type" : "string"
            },
            "legacy" : {
              "type" : "boolean"
            },
            "legacyElementName" : {
              "type" : "string"
            },
            "legacyVersionNumber" : {
              "type" : "integer",
              "format" : "int32"
            },
            "microversion" : {
              "type" : "string"
            },
            "path" : {
              "$ref" : "#/components/schemas/BTPLiteralString-259"
            },
            "pathPotentiallyValid" : {
              "type" : "boolean"
            },
            "pathVersion" : {
              "type" : "string"
            },
            "potentiallyValid" : {
              "type" : "boolean"
            },
            "spaceAfterPath" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "spaceAfterVersion" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "spaceBeforePath" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "spaceBeforeVersion" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "standardLibrary" : {
              "type" : "boolean"
            },
            "standardLibraryCommon" : {
              "type" : "boolean"
            },
            "validLegacyVersion" : {
              "type" : "boolean"
            },
            "version" : {
              "$ref" : "#/components/schemas/BTPLiteralString-259"
            },
            "versionAndMicroversion" : {
              "type" : "string"
            },
            "versionPotentiallyValid" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTPName-261" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPNode-7"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "forExport" : {
              "type" : "boolean"
            },
            "globalNamespace" : {
              "type" : "boolean"
            },
            "identifier" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            },
            "importMicroversion" : {
              "type" : "string",
              "description" : "Element microversion that is being imported.",
              "writeOnly" : true
            },
            "namespace" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPIdentifier-8"
              }
            }
          }
        } ]
      },
      "BTPNode-7" : {
        "type" : "object",
        "properties" : {
          "atomic" : {
            "type" : "boolean"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "documentationType" : {
            "$ref" : "#/components/schemas/GBTPDefinitionType"
          },
          "endSourceLocation" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nodeId" : {
            "type" : "string"
          },
          "shortDescriptor" : {
            "type" : "string"
          },
          "spaceAfter" : {
            "$ref" : "#/components/schemas/BTPSpace-10"
          },
          "spaceBefore" : {
            "$ref" : "#/components/schemas/BTPSpace-10"
          },
          "spaceDefault" : {
            "type" : "boolean"
          },
          "startSourceLocation" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTPAnnotation-231" : "#/components/schemas/BTPAnnotation-231",
            "BTPArgumentDeclaration-232" : "#/components/schemas/BTPArgumentDeclaration-232",
            "BTPBuiltinIdentifier-233" : "#/components/schemas/BTPBuiltinIdentifier-233",
            "BTPLValue-249" : "#/components/schemas/BTPLValue-249",
            "BTPLiteralMapEntry-257" : "#/components/schemas/BTPLiteralMapEntry-257",
            "BTPModule-234" : "#/components/schemas/BTPModule-234",
            "BTPModuleId-235" : "#/components/schemas/BTPModuleId-235",
            "BTPName-261" : "#/components/schemas/BTPName-261",
            "BTPPropertyAccessor-23" : "#/components/schemas/BTPPropertyAccessor-23",
            "BTPStatement-269" : "#/components/schemas/BTPStatement-269",
            "BTPTopLevelNode-286" : "#/components/schemas/BTPTopLevelNode-286",
            "BTPTypeName-290" : "#/components/schemas/BTPTypeName-290"
          }
        }
      },
      "BTPOperatorDeclaration-264" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPProcedureDeclarationBase-266"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "operator" : {
              "$ref" : "#/components/schemas/GBTPOperator"
            },
            "spaceAfterOperator" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "spaceBeforeOperator" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPPredicateDeclaration-265" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPFunctionOrPredicateDeclaration-247"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPProcedureDeclarationBase-266" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTPConversionFunction-1362" : "#/components/schemas/BTPConversionFunction-1362",
            "BTPFunctionOrPredicateDeclaration-247" : "#/components/schemas/BTPFunctionOrPredicateDeclaration-247",
            "BTPOperatorDeclaration-264" : "#/components/schemas/BTPOperatorDeclaration-264"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPTopLevelNode-286"
        }, {
          "type" : "object",
          "properties" : {
            "arguments" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPArgumentDeclaration-232"
              }
            },
            "body" : {
              "$ref" : "#/components/schemas/BTPStatementBlock-271"
            },
            "btType" : {
              "type" : "string"
            },
            "precondition" : {
              "$ref" : "#/components/schemas/BTPStatement-269"
            },
            "returnType" : {
              "$ref" : "#/components/schemas/BTPTypeName-290"
            },
            "spaceAfterArglist" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "spaceInEmptyList" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPPropertyAccessor-23" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTPExpression-9" : "#/components/schemas/BTPExpression-9",
            "BTPIdentifier-8" : "#/components/schemas/BTPIdentifier-8"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPNode-7"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPSOIdentity-2741" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "theId" : {
            "type" : "string"
          }
        }
      },
      "BTPSpace-10" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "nodeId" : {
            "type" : "string"
          },
          "text" : {
            "type" : "string"
          }
        }
      },
      "BTPStatement-269" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTPStatementAssignment-270" : "#/components/schemas/BTPStatementAssignment-270",
            "BTPStatementBlock-271" : "#/components/schemas/BTPStatementBlock-271",
            "BTPStatementBreak-272" : "#/components/schemas/BTPStatementBreak-272",
            "BTPStatementCompressedQuery-1237" : "#/components/schemas/BTPStatementCompressedQuery-1237",
            "BTPStatementConstantDeclaration-273" : "#/components/schemas/BTPStatementConstantDeclaration-273",
            "BTPStatementContinue-274" : "#/components/schemas/BTPStatementContinue-274",
            "BTPStatementExpression-275" : "#/components/schemas/BTPStatementExpression-275",
            "BTPStatementIf-276" : "#/components/schemas/BTPStatementIf-276",
            "BTPStatementLoop-277" : "#/components/schemas/BTPStatementLoop-277",
            "BTPStatementReturn-281" : "#/components/schemas/BTPStatementReturn-281",
            "BTPStatementThrow-1080" : "#/components/schemas/BTPStatementThrow-1080",
            "BTPStatementTry-1523" : "#/components/schemas/BTPStatementTry-1523",
            "BTPStatementVarDeclaration-282" : "#/components/schemas/BTPStatementVarDeclaration-282"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPNode-7"
        }, {
          "type" : "object",
          "properties" : {
            "annotation" : {
              "$ref" : "#/components/schemas/BTPAnnotation-231"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPStatementAssignment-270" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatement-269"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "lvalue" : {
              "$ref" : "#/components/schemas/BTPLValue-249"
            },
            "operator" : {
              "$ref" : "#/components/schemas/GBTPOperator"
            },
            "rvalue" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            }
          }
        } ]
      },
      "BTPStatementBlock-271" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatement-269"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "spaceAfterOpen" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPStatementBreak-272" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatement-269"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "spaceAfterBreak" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPStatementCompressedQuery-1237" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatement-269"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "query" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPStatementConstantDeclaration-273" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatement-269"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "identifier" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            },
            "name" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            },
            "standardType" : {
              "$ref" : "#/components/schemas/GBTPType"
            },
            "type" : {
              "$ref" : "#/components/schemas/BTPTypeName-290"
            },
            "typeName" : {
              "type" : "string"
            },
            "value" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            }
          }
        } ]
      },
      "BTPStatementContinue-274" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatement-269"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "spaceAfterContinue" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPStatementExpression-275" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatement-269"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "expression" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            }
          }
        } ]
      },
      "BTPStatementIf-276" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatement-269"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "condition" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            },
            "elseBody" : {
              "$ref" : "#/components/schemas/BTPStatement-269"
            },
            "spaceAfterIf" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "thenBody" : {
              "$ref" : "#/components/schemas/BTPStatement-269"
            }
          }
        } ]
      },
      "BTPStatementLoop-277" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTPStatementLoopFor3-278" : "#/components/schemas/BTPStatementLoopFor3-278",
            "BTPStatementLoopForIn-279" : "#/components/schemas/BTPStatementLoopForIn-279",
            "BTPStatementLoopWhile-280" : "#/components/schemas/BTPStatementLoopWhile-280"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatement-269"
        }, {
          "type" : "object",
          "properties" : {
            "body" : {
              "$ref" : "#/components/schemas/BTPStatement-269"
            },
            "btType" : {
              "type" : "string"
            },
            "spaceAfterLoopType" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPStatementLoopFor3-278" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatementLoop-277"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "condition" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            },
            "increment" : {
              "$ref" : "#/components/schemas/BTPStatement-269"
            },
            "initialization" : {
              "$ref" : "#/components/schemas/BTPStatement-269"
            },
            "spaceAfterInitialization" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "spaceBeforeCondition" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "spaceBeforeIncrement" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPStatementLoopForIn-279" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatementLoop-277"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "container" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            },
            "identifiers" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPIdentifier-8"
              }
            },
            "isVarDeclaredHere" : {
              "type" : "boolean"
            },
            "keyVar" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            },
            "spaceBeforeVar" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "standardTypes" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/GBTPType"
              }
            },
            "typeNames" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "var" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            }
          }
        } ]
      },
      "BTPStatementLoopWhile-280" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatementLoop-277"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "condition" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            }
          }
        } ]
      },
      "BTPStatementReturn-281" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatement-269"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "spaceAfterReturn" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "value" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            }
          }
        } ]
      },
      "BTPStatementThrow-1080" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatement-269"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "value" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            }
          }
        } ]
      },
      "BTPStatementTry-1523" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatement-269"
        }, {
          "type" : "object",
          "properties" : {
            "body" : {
              "$ref" : "#/components/schemas/BTPStatementBlock-271"
            },
            "btType" : {
              "type" : "string"
            },
            "catchBlock" : {
              "$ref" : "#/components/schemas/BTPStatementBlock-271"
            },
            "catchVariable" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            },
            "identifier" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            },
            "silent" : {
              "type" : "boolean"
            },
            "spaceAfterCatch" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "spaceBeforeSilent" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "standardType" : {
              "$ref" : "#/components/schemas/GBTPType"
            },
            "typeName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPStatementVarDeclaration-282" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPStatement-269"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "identifier" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            },
            "name" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            },
            "standardType" : {
              "$ref" : "#/components/schemas/GBTPType"
            },
            "type" : {
              "$ref" : "#/components/schemas/BTPTypeName-290"
            },
            "typeName" : {
              "type" : "string"
            },
            "value" : {
              "$ref" : "#/components/schemas/BTPExpression-9"
            }
          }
        } ]
      },
      "BTPTopLevelConstantDeclaration-283" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPTopLevelNode-286"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "declaration" : {
              "$ref" : "#/components/schemas/BTPStatementConstantDeclaration-273"
            }
          }
        } ]
      },
      "BTPTopLevelEnumDeclaration-284" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPTopLevelTypeDeclaration-287"
        }, {
          "type" : "object",
          "properties" : {
            "annotations" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPAnnotation-231"
              }
            },
            "btType" : {
              "type" : "string"
            },
            "spaceInEmptyList" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "trailingComma" : {
              "type" : "boolean"
            },
            "values" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPIdentifier-8"
              }
            }
          }
        } ]
      },
      "BTPTopLevelImport-285" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPTopLevelNode-286"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "combinedNamespacePathAndVersion" : {
              "type" : "string"
            },
            "importMicroversion" : {
              "type" : "string",
              "description" : "Element microversion that is being imported.",
              "writeOnly" : true
            },
            "moduleId" : {
              "$ref" : "#/components/schemas/BTPModuleId-235"
            },
            "namespace" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPIdentifier-8"
              }
            },
            "namespaceString" : {
              "type" : "string"
            },
            "spaceBeforeImport" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            }
          }
        } ]
      },
      "BTPTopLevelNode-286" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTPProcedureDeclarationBase-266" : "#/components/schemas/BTPProcedureDeclarationBase-266",
            "BTPTopLevelConstantDeclaration-283" : "#/components/schemas/BTPTopLevelConstantDeclaration-283",
            "BTPTopLevelImport-285" : "#/components/schemas/BTPTopLevelImport-285",
            "BTPTopLevelTypeDeclaration-287" : "#/components/schemas/BTPTopLevelTypeDeclaration-287"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPNode-7"
        }, {
          "type" : "object",
          "properties" : {
            "annotation" : {
              "$ref" : "#/components/schemas/BTPAnnotation-231"
            },
            "argumentsToDocument" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPArgumentDeclaration-232"
              }
            },
            "btType" : {
              "type" : "string"
            },
            "deprecated" : {
              "type" : "boolean"
            },
            "deprecatedExplanation" : {
              "type" : "string"
            },
            "forExport" : {
              "type" : "boolean"
            },
            "spaceAfterExport" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "symbolName" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            }
          }
        } ]
      },
      "BTPTopLevelTypeDeclaration-287" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTPTopLevelEnumDeclaration-284" : "#/components/schemas/BTPTopLevelEnumDeclaration-284",
            "BTPTopLevelUserTypeDeclaration-288" : "#/components/schemas/BTPTopLevelUserTypeDeclaration-288"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPTopLevelNode-286"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "name" : {
              "$ref" : "#/components/schemas/BTPIdentifier-8"
            },
            "spaceAfterVersion" : {
              "$ref" : "#/components/schemas/BTPSpace-10"
            },
            "version" : {
              "$ref" : "#/components/schemas/BTPLiteralNumber-258"
            }
          }
        } ]
      },
      "BTPTopLevelUserTypeDeclaration-288" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPTopLevelTypeDeclaration-287"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "typecheck" : {
              "$ref" : "#/components/schemas/BTPName-261"
            }
          }
        } ]
      },
      "BTPTypeName-290" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTPTypeNameStandard-291" : "#/components/schemas/BTPTypeNameStandard-291",
            "BTPTypeNameUser-292" : "#/components/schemas/BTPTypeNameUser-292"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPNode-7"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPTypeNameStandard-291" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPTypeName-290"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "type" : {
              "$ref" : "#/components/schemas/GBTPType"
            }
          }
        } ]
      },
      "BTPTypeNameUser-292" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPTypeName-290"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "type" : {
              "$ref" : "#/components/schemas/BTPName-261"
            }
          }
        } ]
      },
      "BTParameterExpressionErrorInfo-2037" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "errorMessageIdentifier" : {
            "$ref" : "#/components/schemas/GBTErrorStringEnum"
          },
          "messageArguments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTValueAndUse-4696"
            }
          }
        }
      },
      "BTParameterGroupSpec-3469" : {
        "type" : "object",
        "properties" : {
          "additionalLocalizedStrings" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "collapsedByDefault" : {
            "type" : "boolean"
          },
          "drivingParameterId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "groupOrParameterIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "localizableName" : {
            "type" : "string"
          },
          "localizedName" : {
            "type" : "string",
            "writeOnly" : true
          },
          "stringsToLocalize" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTParameterLookupTableEntry-1667" : {
        "type" : "object",
        "properties" : {
          "additionalLocalizedStrings" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "label" : {
            "type" : "string"
          },
          "localizableName" : {
            "type" : "string"
          },
          "localizedLabel" : {
            "type" : "string"
          },
          "localizedName" : {
            "type" : "string",
            "writeOnly" : true
          },
          "stringsToLocalize" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTParameterLookupTableListEntry-1916" : "#/components/schemas/BTParameterLookupTableListEntry-1916"
          }
        }
      },
      "BTParameterLookupTableListEntry-1916" : {
        "type" : "object",
        "properties" : {
          "additionalLocalizedStrings" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "defaultIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "displayName" : {
            "type" : "string"
          },
          "entries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTParameterLookupTableEntry-1667"
            }
          },
          "label" : {
            "type" : "string"
          },
          "localizableName" : {
            "type" : "string"
          },
          "localizedLabel" : {
            "type" : "string"
          },
          "localizedName" : {
            "type" : "string",
            "writeOnly" : true
          },
          "name" : {
            "type" : "string"
          },
          "stringsToLocalize" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTParameterSpec-6" : {
        "type" : "object",
        "properties" : {
          "additionalLocalizedStrings" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "columnName" : {
            "type" : "string"
          },
          "defaultValue" : {
            "$ref" : "#/components/schemas/BTMParameter-1"
          },
          "iconUri" : {
            "type" : "string"
          },
          "localizableName" : {
            "type" : "string"
          },
          "localizedName" : {
            "type" : "string",
            "writeOnly" : true
          },
          "parameterDescription" : {
            "type" : "string"
          },
          "parameterId" : {
            "type" : "string"
          },
          "parameterName" : {
            "type" : "string"
          },
          "quantityType" : {
            "$ref" : "#/components/schemas/GBTQuantityType"
          },
          "stringsToLocalize" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "uiHint" : {
            "type" : "string"
          },
          "uiHints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GBTUIHint"
            }
          },
          "visibilityCondition" : {
            "$ref" : "#/components/schemas/BTParameterVisibilityCondition-177"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTParameterSpecAppearance-1740" : "#/components/schemas/BTParameterSpecAppearance-1740",
            "BTParameterSpecArray-2600" : "#/components/schemas/BTParameterSpecArray-2600",
            "BTParameterSpecBoolean-170" : "#/components/schemas/BTParameterSpecBoolean-170",
            "BTParameterSpecButton-4111" : "#/components/schemas/BTParameterSpecButton-4111",
            "BTParameterSpecDatabase-1071" : "#/components/schemas/BTParameterSpecDatabase-1071",
            "BTParameterSpecDerived-736" : "#/components/schemas/BTParameterSpecDerived-736",
            "BTParameterSpecEnum-171" : "#/components/schemas/BTParameterSpecEnum-171",
            "BTParameterSpecFeatureList-703" : "#/components/schemas/BTParameterSpecFeatureList-703",
            "BTParameterSpecForeignId-172" : "#/components/schemas/BTParameterSpecForeignId-172",
            "BTParameterSpecLookupTablePath-761" : "#/components/schemas/BTParameterSpecLookupTablePath-761",
            "BTParameterSpecMaterial-2700" : "#/components/schemas/BTParameterSpecMaterial-2700",
            "BTParameterSpecMultiEnum-3118" : "#/components/schemas/BTParameterSpecMultiEnum-3118",
            "BTParameterSpecNullableQuantity-715" : "#/components/schemas/BTParameterSpecNullableQuantity-715",
            "BTParameterSpecQuantity-173" : "#/components/schemas/BTParameterSpecQuantity-173",
            "BTParameterSpecQuery-174" : "#/components/schemas/BTParameterSpecQuery-174",
            "BTParameterSpecReference-2789" : "#/components/schemas/BTParameterSpecReference-2789",
            "BTParameterSpecString-175" : "#/components/schemas/BTParameterSpecString-175",
            "BTReadOnlyParameterSpec-1889" : "#/components/schemas/BTReadOnlyParameterSpec-1889"
          }
        }
      },
      "BTParameterSpecAppearance-1740" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecArray-2600" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "drivenQuery" : {
              "type" : "string"
            },
            "itemLabelTemplate" : {
              "type" : "string"
            },
            "itemName" : {
              "type" : "string"
            },
            "maxNumberOfPicks" : {
              "type" : "integer",
              "format" : "int32"
            },
            "showLabelsOnly" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTParameterSpecBoolean-170" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecButton-4111" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecCategories-4083" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpecMultiEnum-3118"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "categoryIdToMetadataTypes" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "array",
                "items" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          }
        } ]
      },
      "BTParameterSpecDatabase-1071" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecDerived-736" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecEnum-171" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "enumName" : {
              "type" : "string"
            },
            "enumValueToVisibilityCondition" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BTParameterVisibilityCondition-177"
              }
            },
            "namespace" : {
              "type" : "string"
            },
            "optionIconUris" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "optionNames" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "options" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BTParameterSpecFeatureList-703" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecForeignId-172" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecLookupTablePath-761" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "lookupTable" : {
              "$ref" : "#/components/schemas/BTParameterLookupTableListEntry-1916"
            }
          }
        } ]
      },
      "BTParameterSpecMaterial-2700" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecMultiEnum-3118" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTParameterSpecCategories-4083" : "#/components/schemas/BTParameterSpecCategories-4083"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "enumName" : {
              "type" : "string"
            },
            "enumValueToVisibilityCondition" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BTParameterVisibilityCondition-177"
              }
            },
            "multivalued" : {
              "type" : "boolean"
            },
            "namespace" : {
              "type" : "string"
            },
            "optionNames" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "options" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BTParameterSpecNullableQuantity-715" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "ranges" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTNullableQuantityRange-1340"
              }
            }
          }
        } ]
      },
      "BTParameterSpecProgress-3078" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTReadOnlyParameterSpec-1889"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecQuantity-173" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "ranges" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTQuantityRange-181"
              }
            }
          }
        } ]
      },
      "BTParameterSpecQuery-174" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "additionalBoxSelectFilter" : {
              "$ref" : "#/components/schemas/BTQueryFilter-183"
            },
            "btType" : {
              "type" : "string"
            },
            "filter" : {
              "$ref" : "#/components/schemas/BTQueryFilter-183"
            },
            "maxNumberOfPicks" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTParameterSpecReference-2789" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTParameterSpecReferenceAssembly-2821" : "#/components/schemas/BTParameterSpecReferenceAssembly-2821",
            "BTParameterSpecReferenceBlob-1367" : "#/components/schemas/BTParameterSpecReferenceBlob-1367",
            "BTParameterSpecReferencePartStudio-1256" : "#/components/schemas/BTParameterSpecReferencePartStudio-1256",
            "BTParameterSpecReferenceVariableStudio-1060" : "#/components/schemas/BTParameterSpecReferenceVariableStudio-1060",
            "BTParameterSpecReferenceWithConfiguration-2950" : "#/components/schemas/BTParameterSpecReferenceWithConfiguration-2950"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "defaultPurpose" : {
              "$ref" : "#/components/schemas/BTElementLibraryPurpose-3353"
            },
            "libraryDefinitionId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecReferenceAssembly-2821" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpecReference-2789"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecReferenceBlob-1367" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTParameterSpecReferenceCADImport-1792" : "#/components/schemas/BTParameterSpecReferenceCADImport-1792",
            "BTParameterSpecReferenceImage-1722" : "#/components/schemas/BTParameterSpecReferenceImage-1722",
            "BTParameterSpecReferenceJSON-1816" : "#/components/schemas/BTParameterSpecReferenceJSON-1816",
            "BTParameterSpecReferenceTable-1520" : "#/components/schemas/BTParameterSpecReferenceTable-1520",
            "BTParameterSpecReferenceText-4945" : "#/components/schemas/BTParameterSpecReferenceText-4945"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpecReference-2789"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecReferenceCADImport-1792" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpecReferenceBlob-1367"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecReferenceImage-1722" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpecReferenceBlob-1367"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecReferenceJSON-1816" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpecReferenceBlob-1367"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecReferencePartStudio-1256" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpecReference-2789"
        }, {
          "type" : "object",
          "properties" : {
            "allowedInsertableTypes" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/GBTPartStudioItemType"
              }
            },
            "btType" : {
              "type" : "string"
            },
            "computedConfigurationInputs" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTComputedConfigurationInputSpec-2525"
              }
            },
            "maxNumberOfPicks" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTParameterSpecReferenceTable-1520" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpecReferenceBlob-1367"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecReferenceText-4945" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpecReferenceBlob-1367"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecReferenceVariableStudio-1060" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpecReference-2789"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterSpecReferenceWithConfiguration-2950" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpecReference-2789"
        }, {
          "type" : "object",
          "properties" : {
            "allowAssemblies" : {
              "type" : "boolean"
            },
            "allowedInsertableTypes" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/GBTPartStudioItemType"
              }
            },
            "btType" : {
              "type" : "string"
            },
            "maxNumberOfPicks" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTParameterSpecString-175" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "disallowsEmptyStrings" : {
              "type" : "string",
              "writeOnly" : true
            },
            "disallowsHtml" : {
              "type" : "string",
              "writeOnly" : true
            },
            "formatConditions" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTStringFormatCondition-683"
              }
            }
          }
        } ]
      },
      "BTParameterSpecStringWithTolerances-2535" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTReadOnlyParameterSpec-1889"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterVisibilityAlwaysHidden-176" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterVisibilityCondition-177"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterVisibilityCondition-177" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTParameterVisibilityAlwaysHidden-176" : "#/components/schemas/BTParameterVisibilityAlwaysHidden-176",
            "BTParameterVisibilityLogical-178" : "#/components/schemas/BTParameterVisibilityLogical-178",
            "BTParameterVisibilityOnEqual-180" : "#/components/schemas/BTParameterVisibilityOnEqual-180"
          }
        }
      },
      "BTParameterVisibilityLogical-178" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterVisibilityCondition-177"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "children" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTParameterVisibilityCondition-177"
              }
            },
            "operation" : {
              "$ref" : "#/components/schemas/GBTParameterVisibilityLogicalOp"
            }
          }
        } ]
      },
      "BTParameterVisibilityOnEqual-180" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTParameterVisibilityOnMateDOFType-2114" : "#/components/schemas/BTParameterVisibilityOnMateDOFType-2114"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterVisibilityCondition-177"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "inArray" : {
              "type" : "boolean"
            },
            "parameterId" : {
              "type" : "string"
            },
            "value" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParameterVisibilityOnMateDOFType-2114" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterVisibilityOnEqual-180"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParametricInstance-2641" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTAssemblyMirror-2996" : "#/components/schemas/BTAssemblyMirror-2996",
            "BTAssemblyPattern-1974" : "#/components/schemas/BTAssemblyPattern-1974",
            "BTAssemblyReplicate-2774" : "#/components/schemas/BTAssemblyReplicate-2774",
            "BTDerivedAssemblyMirror-4204" : "#/components/schemas/BTDerivedAssemblyMirror-4204",
            "BTParametricPartStudioInstance-4374" : "#/components/schemas/BTParametricPartStudioInstance-4374"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTInstanceBase-2263"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "feature" : {
              "$ref" : "#/components/schemas/BTMAssemblyFeature-887"
            },
            "featureId" : {
              "type" : "string"
            },
            "instanceControlNodes" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTInstanceControlNode-750"
              }
            }
          }
        } ]
      },
      "BTParametricOutputInstance-2288" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTClonedInstance-2505" : "#/components/schemas/BTClonedInstance-2505",
            "BTParametricPartStudioChildInstance-3696" : "#/components/schemas/BTParametricPartStudioChildInstance-3696"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTInstanceBase-2263"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTParametricPartStudioChildInstance-3696" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParametricOutputInstance-2288"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "partIdentity" : {
              "$ref" : "#/components/schemas/BTPSOIdentity-2741"
            },
            "sketchFeatureId" : {
              "type" : "string"
            },
            "type" : {
              "$ref" : "#/components/schemas/GBTPartStudioInstanceType"
            }
          }
        } ]
      },
      "BTParametricPartStudioInstance-4374" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParametricInstance-2641"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "configuration" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTMParameter-1"
              }
            },
            "documentId" : {
              "type" : "string"
            },
            "elementId" : {
              "type" : "string"
            },
            "elementReference" : {
              "$ref" : "#/components/schemas/BTElementReference-725"
            },
            "externalDocumentWithVersion" : {
              "$ref" : "#/components/schemas/BTDocumentWithVersionId"
            },
            "externalDocumentWithVersionAndElementId" : {
              "$ref" : "#/components/schemas/BTDocumentWithVersionAndElementId"
            },
            "lockedState" : {
              "type" : "boolean"
            },
            "microversionId" : {
              "$ref" : "#/components/schemas/BTMicroversionId-366"
            },
            "parametricPartStudioFeature" : {
              "$ref" : "#/components/schemas/BTMParametricPartStudioFeature-3883"
            },
            "referenceParameter" : {
              "$ref" : "#/components/schemas/BTMParameterReferencePartStudio-3302"
            },
            "versionId" : {
              "type" : "string"
            },
            "versionIdIfExternal" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPartAppearanceInfo" : {
        "type" : "object",
        "properties" : {
          "color" : {
            "$ref" : "#/components/schemas/BTColorInfo"
          },
          "isGenerated" : {
            "type" : "boolean"
          },
          "opacity" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BTPartCustomProperties-1338" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "description" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "productLine" : {
            "type" : "string"
          },
          "project" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "revision" : {
            "type" : "string"
          },
          "tessellationSetting" : {
            "type" : "string"
          },
          "title1" : {
            "type" : "string"
          },
          "title2" : {
            "type" : "string"
          },
          "title3" : {
            "type" : "string"
          },
          "vendor" : {
            "type" : "string"
          }
        }
      },
      "BTPartData-16" : {
        "type" : "object",
        "properties" : {
          "bestAvailableTessellationSetting" : {
            "$ref" : "#/components/schemas/GBTTessellationSettingEnum"
          },
          "boundsDiameter" : {
            "type" : "number",
            "format" : "double"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "closedConstituentPartData" : {
            "$ref" : "#/components/schemas/BTClosedConstituentPartData-2911"
          },
          "coarsePlanarFaceTriangleCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "coarseTriangleCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "constituentBodyDeterministicIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "copyWithoutEntities" : {
            "$ref" : "#/components/schemas/BTPartData-16"
          },
          "entityDIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "entityDeterministicIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "flattenedToUnflattenedEntitiesMapping" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "flattenedToUnflattenedMapping" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "highBoxCorner" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "isACopyForTessellationSettings" : {
            "type" : "boolean"
          },
          "isAssociatedWithFlat" : {
            "type" : "boolean"
          },
          "isBendCenterLineBody" : {
            "type" : "boolean"
          },
          "isClosedComposite" : {
            "type" : "boolean"
          },
          "isComposite" : {
            "type" : "boolean"
          },
          "isDeletion" : {
            "type" : "boolean"
          },
          "isEntitylessPartData" : {
            "type" : "boolean"
          },
          "isFlattenedSheetMetalBody" : {
            "type" : "boolean"
          },
          "isOpenComposite" : {
            "type" : "boolean"
          },
          "lowBoxCorner" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "ownerFlattenedBodyId" : {
            "type" : "string"
          },
          "sheetMetalModelId" : {
            "type" : "string"
          },
          "sheetMetalOrderId" : {
            "type" : "string"
          },
          "shouldAlwaysUseHighestQualityTessellation" : {
            "type" : "boolean"
          },
          "tessellationSettings" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "totalEntityCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "userTessellationSetting" : {
            "$ref" : "#/components/schemas/GBTTessellationSettingEnum"
          }
        }
      },
      "BTPartDisplayData-17" : {
        "type" : "object",
        "properties" : {
          "appearance" : {
            "$ref" : "#/components/schemas/BTGraphicsAppearance-1152"
          },
          "appearanceForNewCell" : {
            "$ref" : "#/components/schemas/BTGraphicsAppearance-1152"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "customProperties" : {
            "$ref" : "#/components/schemas/BTPartCustomProperties-1338"
          },
          "defaultColorHash" : {
            "type" : "string"
          },
          "hasFaults" : {
            "type" : "boolean"
          },
          "hidden" : {
            "type" : "boolean"
          },
          "highBoxCorner" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "id" : {
            "type" : "string"
          },
          "isActiveSheetMetal" : {
            "type" : "boolean"
          },
          "isMesh" : {
            "type" : "boolean"
          },
          "isModifiable" : {
            "type" : "boolean"
          },
          "isSheet" : {
            "type" : "boolean"
          },
          "isSolid" : {
            "type" : "boolean"
          },
          "isWire" : {
            "type" : "boolean"
          },
          "lowBoxCorner" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "material" : {
            "$ref" : "#/components/schemas/BTPartMaterial-1445"
          },
          "materialForNewCell" : {
            "$ref" : "#/components/schemas/BTPartMaterial-1445"
          },
          "meshState" : {
            "$ref" : "#/components/schemas/GBTMeshState"
          },
          "name" : {
            "type" : "string"
          },
          "nameForNewCell" : {
            "type" : "string"
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "partId" : {
            "type" : "string"
          },
          "propertyIdToSource" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTPartMetadataSource-2895"
            }
          },
          "referencingConfiguredPartNodeIds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTObjectId"
            }
          },
          "visibility" : {
            "$ref" : "#/components/schemas/GBTPartVisibility"
          }
        }
      },
      "BTPartInstance-81" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTInstance-642"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "partIdentity" : {
              "$ref" : "#/components/schemas/BTPSOIdentity-2741"
            },
            "partQuery" : {
              "type" : "string"
            },
            "partReference" : {
              "$ref" : "#/components/schemas/BTMParameterReferencePartStudio-3302"
            },
            "type" : {
              "$ref" : "#/components/schemas/GBTPartStudioInstanceType"
            }
          }
        } ]
      },
      "BTPartMaterial-1445" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "id" : {
            "type" : "string"
          },
          "libraryName" : {
            "type" : "string"
          },
          "libraryReference" : {
            "$ref" : "#/components/schemas/BTElementReference-725"
          },
          "name" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTPartMaterialProperty-1453"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BTPartMaterialInfo" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "libraryName" : {
            "type" : "string"
          },
          "libraryReference" : {
            "$ref" : "#/components/schemas/BTExternalElementReferenceInfo"
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTPartMaterialPropertyInfo"
            }
          }
        }
      },
      "BTPartMaterialProperty-1453" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "category" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "units" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "BTPartMaterialPropertyInfo" : {
        "type" : "object",
        "properties" : {
          "category" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "units" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "BTPartMetadataInfo" : {
        "type" : "object",
        "properties" : {
          "appearance" : {
            "$ref" : "#/components/schemas/BTPartAppearanceInfo"
          },
          "bodyType" : {
            "type" : "string"
          },
          "configurationId" : {
            "type" : "string"
          },
          "customProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "defaultColorHash" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "format" : "uri"
          },
          "id" : {
            "type" : "string"
          },
          "isFlattenedBody" : {
            "type" : "boolean"
          },
          "isHidden" : {
            "type" : "boolean"
          },
          "isMesh" : {
            "type" : "boolean"
          },
          "material" : {
            "$ref" : "#/components/schemas/BTPartMaterialInfo"
          },
          "meshState" : {
            "$ref" : "#/components/schemas/GBTMeshState"
          },
          "metadataMicroversion" : {
            "type" : "string"
          },
          "microversionId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "partId" : {
            "type" : "string"
          },
          "partIdentity" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "partQuery" : {
            "type" : "string"
          },
          "productLine" : {
            "type" : "string"
          },
          "project" : {
            "type" : "string"
          },
          "propertySourceTypes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "description" : "`0: AUTOMATIC` Set automatically, like a part name | \n`1: MERGED` Merged from another Part Studio | `2: FEATURE` Custom feature | `3: UNCONFIGURED` | `4: CONFIGURED` | \n`5: STANDARD_CONTENT` | `6: DEFAULT` Applied from metadata property configuration | `7: COMPUTED` Non-overriden, non-configured, computed property | \n`8: COMPUTED_CONFIGURED` Property is computed in this configuration; may also be configured in other configurations \n`9: IMPORT` Imported properties are handled separately",
              "format" : "int32"
            },
            "description" : "`0: AUTOMATIC` Set automatically, like a part name | \n`1: MERGED` Merged from another Part Studio | `2: FEATURE` Custom feature | `3: UNCONFIGURED` | `4: CONFIGURED` | \n`5: STANDARD_CONTENT` | `6: DEFAULT` Applied from metadata property configuration | `7: COMPUTED` Non-overriden, non-configured, computed property | \n`8: COMPUTED_CONFIGURED` Property is computed in this configuration; may also be configured in other configurations \n`9: IMPORT` Imported properties are handled separately"
          },
          "referencingConfiguredPartNodeIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "revision" : {
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/BTMetadataStateType"
          },
          "thumbnailConfigurationId" : {
            "type" : "string"
          },
          "thumbnailInfo" : {
            "$ref" : "#/components/schemas/BTThumbnailInfo"
          },
          "title1" : {
            "type" : "string"
          },
          "title2" : {
            "type" : "string"
          },
          "title3" : {
            "type" : "string"
          },
          "unflattenedPartId" : {
            "type" : "string"
          },
          "vendor" : {
            "type" : "string"
          }
        }
      },
      "BTPartMetadataSource-2895" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "sourceId" : {
            "type" : "string"
          },
          "sourceType" : {
            "$ref" : "#/components/schemas/GBTMetadataSourceType"
          }
        }
      },
      "BTPartProperties-293" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "configuredParts" : {
            "$ref" : "#/components/schemas/BTConfiguredPartProperties-2645"
          },
          "identityIdToQueryIndex" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "nodeId" : {
            "type" : "string"
          },
          "parts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTOnePartProperties-230"
            }
          },
          "roughBytesEstimate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "tessellationProperties" : {
            "$ref" : "#/components/schemas/BTTessellationProperties-927"
          }
        }
      },
      "BTPartStudioDisplayData-346" : {
        "type" : "object",
        "properties" : {
          "allInsertableDisplayData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BTInsertableDisplayData-2405"
              }
            }
          },
          "annotationsForElement" : {
            "$ref" : "#/components/schemas/BTAnnotationElementDisplayData-894"
          },
          "appearanceIdToAppearanceOverride" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTAppearanceOverride-2517"
            }
          },
          "assemblyReferenceDisplayData" : {
            "$ref" : "#/components/schemas/BTAssemblyReferencesDisplayData-1562"
          },
          "bodyIdToEntityAppearanceSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTBaseEntityAppearanceSettings-1391"
            }
          },
          "bodyIdToEntityAppearanceSettingsChanged" : {
            "type" : "boolean"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "cacheablePartStudioDisplayDataVersion" : {
            "$ref" : "#/components/schemas/GBTPartStudioDisplayDataVersion"
          },
          "decalIdToDecal" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTDecal-2404"
            }
          },
          "deterministicIdToAssociatedFeatureIds" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "deterministicIdToEntity" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTBaseEntityData-33"
            }
          },
          "deterministicIdToPartDisplayData" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTPartDisplayData-17"
            }
          },
          "deterministicPartIdToData" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTPartData-16"
            }
          },
          "dimensions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTDimensionDisplayData-323"
            }
          },
          "displayStateId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "featureIdToOperationIndices" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          },
          "fromCache" : {
            "type" : "boolean"
          },
          "fromFullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "fullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "incremental" : {
            "type" : "boolean"
          },
          "instanceCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isBase" : {
            "type" : "boolean"
          },
          "isExternal" : {
            "type" : "boolean"
          },
          "isNoop" : {
            "type" : "boolean"
          },
          "keepFromMicroversion" : {
            "type" : "boolean"
          },
          "microversionId" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          },
          "microversionIdAndConfigurationInterval" : {
            "$ref" : "#/components/schemas/BTMicroversionIdAndConfigurationInterval-2364"
          },
          "microversionInterval" : {
            "$ref" : "#/components/schemas/BTMicroversionIdInterval-367"
          },
          "numberOfSketchEntities" : {
            "type" : "integer",
            "format" : "int32"
          },
          "partColorCycle" : {
            "$ref" : "#/components/schemas/BTBasePartColorCycle-2614"
          },
          "partDisplayData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTPartDisplayData-17"
            }
          },
          "partIdAndTessellationSettingToBuffers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BTInsertableDisplayData-2405"
              }
            }
          },
          "sketchFeatureIdAndTessellationSettingToBuffers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BTInsertableDisplayData-2405"
              }
            }
          },
          "sketchImages" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BTSketchImageDisplayData-1379"
              }
            }
          },
          "updatedParts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "usage" : {
            "$ref" : "#/components/schemas/GBTDisplayDataUsage"
          },
          "usesMultipleTessellationSettings" : {
            "type" : "boolean"
          },
          "versionForRasterization" : {
            "$ref" : "#/components/schemas/BTElementDisplayData-326"
          }
        }
      },
      "BTPartStudioDisplayDataBase-2751" : {
        "type" : "object",
        "properties" : {
          "annotationsForElement" : {
            "$ref" : "#/components/schemas/BTAnnotationElementDisplayData-894"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "elementId" : {
            "type" : "string"
          },
          "fromFullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "fullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "incremental" : {
            "type" : "boolean"
          },
          "instanceCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isNoop" : {
            "type" : "boolean"
          },
          "keepFromMicroversion" : {
            "type" : "boolean"
          },
          "microversionId" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          },
          "microversionIdAndConfigurationInterval" : {
            "$ref" : "#/components/schemas/BTMicroversionIdAndConfigurationInterval-2364"
          },
          "microversionInterval" : {
            "$ref" : "#/components/schemas/BTMicroversionIdInterval-367"
          },
          "numberOfSketchEntities" : {
            "type" : "integer",
            "format" : "int32"
          },
          "versionForRasterization" : {
            "$ref" : "#/components/schemas/BTElementDisplayData-326"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTPartStudioDisplayData-346" : "#/components/schemas/BTPartStudioDisplayData-346",
            "BTPartStudioDisplayDataReference-4360" : "#/components/schemas/BTPartStudioDisplayDataReference-4360"
          }
        }
      },
      "BTPartStudioDisplayDataReference-4360" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTPartStudioDisplayDataBase-2751"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "cacheDataPath" : {
              "$ref" : "#/components/schemas/BTCacheDataPath-191"
            },
            "tessellationSettings" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "array",
                "items" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          }
        } ]
      },
      "BTPartWithConfiguredProperties-2163" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "configurationProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTOneConfigurationPartProperties-1661"
            }
          },
          "forSubPartProperties" : {
            "type" : "boolean"
          },
          "nodeId" : {
            "type" : "string"
          },
          "parsedQuery" : {
            "$ref" : "#/components/schemas/BTPFunctionDeclaration-246"
          },
          "propertyNodeId" : {
            "type" : "string"
          },
          "query" : {
            "type" : "string"
          }
        }
      },
      "BTPartsExportFilter-4308" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "skipAllMesh" : {
            "type" : "boolean"
          },
          "skipCurves" : {
            "type" : "boolean"
          },
          "skipPartialMesh" : {
            "type" : "boolean"
          }
        }
      },
      "BTPendingUpgradeInfo" : {
        "type" : "object",
        "properties" : {
          "scheduledTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BTPlanSubscriberInfo" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "image" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "state" : {
            "type" : "integer",
            "format" : "int32"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTPlanarImageMapping-4398" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTImageMapping-3821"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "planeSystem" : {
              "$ref" : "#/components/schemas/BTCoordinateSystem-387"
            }
          }
        } ]
      },
      "BTPlaneDescription-692" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSurfaceDescription-1564"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isOrientedWithFace" : {
              "type" : "boolean"
            },
            "normal" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            }
          }
        } ]
      },
      "BTPlaneOrientationFilter-1700" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "normal" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            }
          }
        } ]
      },
      "BTPointEntity-1439" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFeatureEntity-34"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPrivacyConsentInfo" : {
        "type" : "object",
        "properties" : {
          "communicationsOptInDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "communicationsOptOutDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "communicationsStatus" : {
            "type" : "boolean"
          },
          "consentVersion" : {
            "type" : "string"
          },
          "dataProcessingOptInDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dataProcessingOptOutDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dataProcessingStatus" : {
            "type" : "boolean"
          },
          "eulaVersion" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userId" : {
            "type" : "string"
          }
        }
      },
      "BTProjectInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTGlobalTreeNodeInfo"
        }, {
          "type" : "object",
          "properties" : {
            "permissionScheme" : {
              "$ref" : "#/components/schemas/BTRbacPermissionSchemeInfo"
            },
            "permissionSet" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "roleMapEntries" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/RoleMapEntry"
              }
            },
            "trash" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTPropertiesTableTemplateInfo" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "isActive" : {
            "type" : "boolean"
          },
          "isAllCaps" : {
            "type" : "boolean"
          },
          "isIndented" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "propertyColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTSimplePropertyInfo"
            }
          },
          "tableType" : {
            "$ref" : "#/components/schemas/BTPropertiesTableTemplateType"
          },
          "templateGroupId" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTPropertiesTableTemplateParams" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string"
          },
          "isAllCaps" : {
            "type" : "boolean"
          },
          "isIndented" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "propertyColumns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tableType" : {
            "$ref" : "#/components/schemas/BTPropertiesTableTemplateType"
          }
        }
      },
      "BTPropertiesTableTemplateType" : {
        "type" : "string",
        "enum" : [ "BOM", "REVISION_TABLE", "INSPECTION_TABLE" ]
      },
      "BTPropertyTableColumnInfo-2161" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableColumnInfo-1222"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isComputedAssemblyProperty" : {
              "type" : "boolean"
            },
            "isComputedProperty" : {
              "type" : "boolean"
            },
            "propertyValueType" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTPropertyUpdateInfo" : {
        "type" : "object",
        "properties" : {
          "errorMessage" : {
            "type" : "string"
          },
          "itemHref" : {
            "type" : "string"
          },
          "newValue" : {
            "type" : "object"
          },
          "oldValue" : {
            "type" : "object"
          },
          "propertyId" : {
            "type" : "string"
          }
        }
      },
      "BTPropertyValueParam" : {
        "type" : "object",
        "properties" : {
          "propertyId" : {
            "type" : "string",
            "description" : "Id of the property to set."
          },
          "value" : {
            "type" : "object",
            "description" : "Value to set for the property."
          }
        }
      },
      "BTPublicationBulkItemParams" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTPublicationItemParams"
            }
          }
        }
      },
      "BTPublicationInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTGlobalTreeNodeInfo"
        }, {
          "type" : "object",
          "properties" : {
            "defaultWorkspaceId" : {
              "type" : "string"
            },
            "items" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Item"
              }
            },
            "notes" : {
              "type" : "string"
            },
            "sequence" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTPublicationItemParams" : {
        "type" : "object",
        "properties" : {
          "dataType" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "encodedConfiguration" : {
            "type" : "string"
          },
          "isApplication" : {
            "type" : "boolean"
          },
          "isAssembly" : {
            "type" : "boolean"
          },
          "isBlob" : {
            "type" : "boolean"
          },
          "isWholePartStudio" : {
            "type" : "boolean"
          },
          "mimeType" : {
            "type" : "string"
          },
          "partId" : {
            "type" : "string"
          },
          "partName" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "revision" : {
            "type" : "string"
          },
          "revisionId" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          }
        }
      },
      "BTPublicationParams" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTPublicationItemParams"
            }
          },
          "name" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "ownerId" : {
            "type" : "string"
          },
          "ownerType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parentId" : {
            "type" : "string"
          },
          "projectId" : {
            "type" : "string"
          }
        }
      },
      "BTPublishedWorkflowId" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          },
          "workflowId" : {
            "type" : "string"
          }
        }
      },
      "BTPublishedWorkflowInfo" : {
        "type" : "object",
        "properties" : {
          "activeState" : {
            "type" : "integer",
            "format" : "int32"
          },
          "companyId" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "imageSrc" : {
            "type" : "string"
          },
          "isPickable" : {
            "type" : "boolean"
          },
          "json" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "objectType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ownerType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "publishedDate" : {
            "type" : "string",
            "description" : "The date of publication of workflow",
            "format" : "date-time"
          },
          "usesExternalPlm" : {
            "type" : "boolean",
            "description" : "Whether the workflow connects to an external PLM service like Arena"
          },
          "versionId" : {
            "type" : "string"
          }
        },
        "description" : "Captures information about a published workflow"
      },
      "BTPurchaseIdentityParams" : {
        "type" : "object",
        "properties" : {
          "consumedQuantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "identityId" : {
            "type" : "string"
          },
          "identityType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "purchaseId" : {
            "type" : "string"
          }
        }
      },
      "BTPurchaseInfo" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string"
          },
          "actualAmountPaidCents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "amountCents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "application" : {
            "$ref" : "#/components/schemas/BTAPIApplicationSummaryInfo"
          },
          "canceledAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "card" : {
            "$ref" : "#/components/schemas/BTCardInfo"
          },
          "clientId" : {
            "type" : "string"
          },
          "couponAmountOff" : {
            "type" : "integer",
            "format" : "int64"
          },
          "couponPercentOff" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string"
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32"
          },
          "durationMonths" : {
            "type" : "integer",
            "format" : "int32"
          },
          "group" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "lastModified" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "type" : "string"
          },
          "lightSeats" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "nextCharge" : {
            "$ref" : "#/components/schemas/NextCharge"
          },
          "paymentType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pendingCancelation" : {
            "type" : "boolean"
          },
          "plan" : {
            "$ref" : "#/components/schemas/BTBillingPlanInfo"
          },
          "planId" : {
            "type" : "string"
          },
          "planName" : {
            "type" : "string"
          },
          "planType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "preTrialPlanId" : {
            "type" : "string"
          },
          "proratedCharges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProratedCharges"
            }
          },
          "proratedTotal" : {
            "type" : "integer",
            "format" : "int64"
          },
          "purchaseDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "resellerName" : {
            "type" : "string"
          },
          "seats" : {
            "type" : "integer",
            "format" : "int64"
          },
          "state" : {
            "type" : "integer",
            "format" : "int32"
          },
          "subscribers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTPlanSubscriberInfo"
            }
          },
          "subscriptionBeginAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "subscriptionEndAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "subscriptionId" : {
            "type" : "string"
          },
          "subscriptionType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "taxAmountCents" : {
            "type" : "integer",
            "format" : "int64"
          },
          "trialEnd" : {
            "type" : "string",
            "format" : "date-time"
          },
          "trialInitiatedBy" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTQuantityRange-181" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "defaultValue" : {
            "type" : "number",
            "format" : "double"
          },
          "location" : {
            "$ref" : "#/components/schemas/BTLocationInfo-226"
          },
          "maxValue" : {
            "type" : "number",
            "format" : "double"
          },
          "minValue" : {
            "type" : "number",
            "format" : "double"
          },
          "units" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTNullableQuantityRange-1340" : "#/components/schemas/BTNullableQuantityRange-1340"
          }
        }
      },
      "BTQueryFilter-183" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTActiveSheetMetalFilter-2944" : "#/components/schemas/BTActiveSheetMetalFilter-2944",
            "BTAllowEdgePointFilter-2371" : "#/components/schemas/BTAllowEdgePointFilter-2371",
            "BTAllowFlattenedGeometryFilter-2140" : "#/components/schemas/BTAllowFlattenedGeometryFilter-2140",
            "BTAllowMeshGeometryFilter-1026" : "#/components/schemas/BTAllowMeshGeometryFilter-1026",
            "BTAndFilter-110" : "#/components/schemas/BTAndFilter-110",
            "BTBodyTypeFilter-112" : "#/components/schemas/BTBodyTypeFilter-112",
            "BTClosedCurveFilter-1206" : "#/components/schemas/BTClosedCurveFilter-1206",
            "BTConstructionObjectFilter-113" : "#/components/schemas/BTConstructionObjectFilter-113",
            "BTEdgeTopologyFilter-122" : "#/components/schemas/BTEdgeTopologyFilter-122",
            "BTEntityTypeFilter-124" : "#/components/schemas/BTEntityTypeFilter-124",
            "BTFeatureFilter-127" : "#/components/schemas/BTFeatureFilter-127",
            "BTFeatureTypeFilter-962" : "#/components/schemas/BTFeatureTypeFilter-962",
            "BTFlatSheetMetalFilter-3018" : "#/components/schemas/BTFlatSheetMetalFilter-3018",
            "BTGeometryFilter-130" : "#/components/schemas/BTGeometryFilter-130",
            "BTImageFilter-853" : "#/components/schemas/BTImageFilter-853",
            "BTInContextObjectFilter-3810" : "#/components/schemas/BTInContextObjectFilter-3810",
            "BTMateConnectorFilter-163" : "#/components/schemas/BTMateConnectorFilter-163",
            "BTMateFilter-162" : "#/components/schemas/BTMateFilter-162",
            "BTModifiableEntityOnlyFilter-1593" : "#/components/schemas/BTModifiableEntityOnlyFilter-1593",
            "BTNotFilter-165" : "#/components/schemas/BTNotFilter-165",
            "BTOccurrenceFilter-166" : "#/components/schemas/BTOccurrenceFilter-166",
            "BTOrFilter-167" : "#/components/schemas/BTOrFilter-167",
            "BTPlaneOrientationFilter-1700" : "#/components/schemas/BTPlaneOrientationFilter-1700",
            "BTSMDefinitionEntityTypeFilter-1651" : "#/components/schemas/BTSMDefinitionEntityTypeFilter-1651",
            "BTSectionGeometryFilter-4161" : "#/components/schemas/BTSectionGeometryFilter-4161",
            "BTSketchObjectFilter-184" : "#/components/schemas/BTSketchObjectFilter-184",
            "BTSketchSolveStatusFilter-3657" : "#/components/schemas/BTSketchSolveStatusFilter-3657",
            "BTSplineControlPolygonFilter-1130" : "#/components/schemas/BTSplineControlPolygonFilter-1130",
            "BTSplineHandleFilter-2971" : "#/components/schemas/BTSplineHandleFilter-2971",
            "BTSplineInternalPointFilter-4101" : "#/components/schemas/BTSplineInternalPointFilter-4101",
            "BTTextObjectFilter-1515" : "#/components/schemas/BTTextObjectFilter-1515",
            "BTTextStrokeFilter-461" : "#/components/schemas/BTTextStrokeFilter-461"
          }
        }
      },
      "BTRadialDimensionDisplayData-348" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDimensionDisplayData-323"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "positionR" : {
              "type" : "number",
              "format" : "double"
            },
            "positionT" : {
              "type" : "number",
              "format" : "double"
            },
            "radiusDisplay" : {
              "$ref" : "#/components/schemas/GBTRadiusDisplay"
            },
            "realDiameter" : {
              "type" : "boolean"
            },
            "witnessEndPoint0r" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessEndPoint0t" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessEndPoint1r" : {
              "type" : "number",
              "format" : "double"
            },
            "witnessEndPoint1t" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTRbacPermissionSchemeInfo" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "entries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Entry"
            }
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "predefinedPermissionScheme" : {
            "type" : "integer",
            "format" : "int32"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTRbacRoleInfo" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "predefinedRole" : {
            "type" : "integer",
            "format" : "int32"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTReadOnlyParameterSpec-1889" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTParameterSpecProgress-3078" : "#/components/schemas/BTParameterSpecProgress-3078",
            "BTParameterSpecStringWithTolerances-2535" : "#/components/schemas/BTParameterSpecStringWithTolerances-2535"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTParameterSpec-6"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTReferenceCustomData-1551" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTInstanceStandardContentData-2081" : "#/components/schemas/BTInstanceStandardContentData-2081",
            "BTRevisionCustomData-2090" : "#/components/schemas/BTRevisionCustomData-2090"
          }
        }
      },
      "BTReleaseCommentListInfo" : {
        "type" : "object",
        "properties" : {
          "comments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTCommentInfo"
            }
          },
          "rpId" : {
            "type" : "string"
          },
          "rpName" : {
            "type" : "string"
          }
        }
      },
      "BTReleaseItemErrorInfo" : {
        "type" : "object",
        "properties" : {
          "changeTaskId" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pendingTaskId" : {
            "type" : "string"
          },
          "pendingTaskObjectId" : {
            "type" : "string"
          },
          "pendingTaskType" : {
            "type" : "string"
          },
          "releaseId" : {
            "type" : "string"
          },
          "severity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "versionId" : {
            "type" : "string"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTReleaseItemMessageBody" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDocumentMessageBody"
        }, {
          "type" : "object",
          "properties" : {
            "elementType" : {
              "type" : "integer",
              "format" : "int32"
            },
            "isFromInitialState" : {
              "type" : "boolean"
            },
            "isToTerminalState" : {
              "type" : "boolean"
            },
            "releaseId" : {
              "type" : "string"
            },
            "status" : {
              "type" : "string"
            },
            "transitionName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTReleasePackageInfo" : {
        "type" : "object",
        "properties" : {
          "addAllDrawingsActive" : {
            "type" : "boolean"
          },
          "changeOrderId" : {
            "type" : "string"
          },
          "columnNames" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "comments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTCommentInfo"
            }
          },
          "companyId" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "description" : {
            "type" : "string"
          },
          "detailed" : {
            "type" : "boolean"
          },
          "documentId" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "independentCADRevisions" : {
            "type" : "boolean"
          },
          "isObsoletion" : {
            "type" : "boolean"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTReleasePackageItemInfo"
            }
          },
          "linkedVersionIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedBy" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "originalWorkspaceId" : {
            "type" : "string"
          },
          "packageThumbnail" : {
            "type" : "string"
          },
          "parentComments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTReleaseCommentListInfo"
            }
          },
          "parentPackages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTWorkflowPropertyInfo"
            }
          },
          "retainedAsDraft" : {
            "type" : "boolean",
            "description" : "Indicates whether the release is still in setup state and saved as a draft."
          },
          "revisionRuleId" : {
            "type" : "string"
          },
          "rootItemsToRebuild" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "updatedItemIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "versionId" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/BTWorkflowSnapshotInfo"
          },
          "workflowError" : {
            "type" : "string",
            "writeOnly" : true
          },
          "workflowId" : {
            "$ref" : "#/components/schemas/BTPublishedWorkflowId"
          },
          "workspaceId" : {
            "type" : "string"
          }
        },
        "x-BTVisibility-properties" : {
          "draftItemCountChange" : "INTERNAL"
        }
      },
      "BTReleasePackageItemInfo" : {
        "type" : "object",
        "properties" : {
          "addedAutomatically" : {
            "type" : "boolean"
          },
          "canExport" : {
            "type" : "boolean"
          },
          "changeDetectionStatus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "companyId" : {
            "type" : "string"
          },
          "configuration" : {
            "type" : "string"
          },
          "configurationKey" : {
            "type" : "string"
          },
          "diffThumbnailConfigurationKey" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTReleaseItemErrorInfo"
            }
          },
          "flatPartId" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "isRevisionManaged" : {
            "type" : "boolean"
          },
          "isRootItem" : {
            "type" : "boolean"
          },
          "isTranslatable" : {
            "type" : "boolean"
          },
          "manuallyRemovedChildrenIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "meshState" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mimeType" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "obsoletionRevisionId" : {
            "type" : "string"
          },
          "originalWorkspaceId" : {
            "type" : "string"
          },
          "parentId" : {
            "type" : "string"
          },
          "partId" : {
            "type" : "string"
          },
          "partIdentity" : {
            "type" : "string"
          },
          "partType" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMetadataPropertyInfo"
            }
          },
          "referenceIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "referenceIdsFromOriginalWorkspace" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "rpid" : {
            "type" : "string"
          },
          "smallThumbnailHref" : {
            "type" : "string"
          },
          "syncedWithPLM" : {
            "type" : "boolean"
          },
          "versionId" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTReleasePackageItemParams" : {
        "type" : "object",
        "properties" : {
          "addedAutomatically" : {
            "type" : "boolean"
          },
          "configuration" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "isIncluded" : {
            "type" : "boolean"
          },
          "parentId" : {
            "type" : "string"
          },
          "partId" : {
            "type" : "string"
          },
          "partIdentity" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTPropertyValueParam"
            }
          },
          "revisionId" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTReleasePackageParams" : {
        "type" : "object",
        "properties" : {
          "changeOrderId" : {
            "type" : "string"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTReleasePackageItemParams"
            }
          }
        }
      },
      "BTResourceOwnerInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTGlobalTreeNodeInfo"
        }, {
          "type" : "object",
          "properties" : {
            "icon" : {
              "type" : "string"
            },
            "isEnterpriseEdu" : {
              "type" : "boolean"
            },
            "state" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTRestUserRole" : {
        "type" : "string",
        "enum" : [ "PUBLIC", "INTERNAL" ]
      },
      "BTRestoreFromHistoryInfo" : {
        "type" : "object",
        "properties" : {
          "newMicroversion" : {
            "type" : "string"
          }
        }
      },
      "BTRestoreInfo" : {
        "type" : "object",
        "properties" : {
          "defaultRestoreStrategy" : {
            "$ref" : "#/components/schemas/BTRestoreStrategy"
          },
          "elementIdToStrategyOverride" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTRestoreStrategy"
            }
          }
        }
      },
      "BTRestoreStrategy" : {
        "type" : "string",
        "enum" : [ "KEEP", "REPLACE" ]
      },
      "BTRevertUnchangedElementParams" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "referenceIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTRevertUnchangedParams" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string"
          },
          "connectionId" : {
            "type" : "string"
          },
          "doUpdate" : {
            "type" : "boolean"
          },
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTRevertUnchangedElementParams"
            }
          }
        }
      },
      "BTRevisionApproverInfo" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "description" : "The users who approved the release package that created this revision."
      },
      "BTRevisionCustomData-2090" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTReferenceCustomData-1551"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "partNumber" : {
              "type" : "string"
            },
            "revision" : {
              "type" : "string"
            },
            "validRevisionReference" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTRevisionInfo" : {
        "type" : "object",
        "properties" : {
          "approvers" : {
            "type" : "array",
            "description" : "The users who approved the release package that created this revision.",
            "items" : {
              "$ref" : "#/components/schemas/BTRevisionApproverInfo"
            }
          },
          "autoObsoletionReleaseId" : {
            "type" : "string"
          },
          "autoObsoletionReleaseName" : {
            "type" : "string"
          },
          "canChangeType" : {
            "type" : "boolean",
            "description" : "Whether the revision can change object type. Used in reuse part number flow",
            "default" : false
          },
          "canExport" : {
            "type" : "boolean"
          },
          "companyId" : {
            "type" : "string",
            "description" : "The company or enterprise ID that owns the resource."
          },
          "configuration" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "description" : "The Revision Description metadata property if revision is of a drawing."
          },
          "documentId" : {
            "type" : "string",
            "description" : "The document that contains the item."
          },
          "documentName" : {
            "type" : "string",
            "description" : "The name of the document that contains the item."
          },
          "documentState" : {
            "type" : "integer",
            "description" : "The state of document containing this revision. Used in reuse part number flow",
            "format" : "int32"
          },
          "elementId" : {
            "type" : "string",
            "description" : "The element that contains the item."
          },
          "elementType" : {
            "type" : "integer",
            "description" : "The type of item 0: Part Studio, 1: Assembly, 2: Drawing. 4: Blob",
            "format" : "int32"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "flatPartInsertableId" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "insertableId" : {
            "type" : "string"
          },
          "isObsolete" : {
            "type" : "boolean",
            "description" : "Whether the revision has been obsoleted."
          },
          "isRereleasable" : {
            "type" : "boolean",
            "description" : "If true, the revision can be created again."
          },
          "isTranslatable" : {
            "type" : "boolean"
          },
          "mimeType" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "nextRevisionId" : {
            "type" : "string",
            "description" : "The next revision if applicable. null for the latest revision."
          },
          "obsoletionPackageId" : {
            "type" : "string",
            "description" : "The OBSOLETION release package that obsoleted this revision if applicable."
          },
          "partId" : {
            "type" : "string"
          },
          "partIdentity" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string",
            "description" : "The Part Number with which the item was revised."
          },
          "previousRevisionId" : {
            "type" : "string",
            "description" : "The previous revision if applicable. null for first revision."
          },
          "releaseCreatedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "releaseId" : {
            "type" : "string",
            "description" : "The release package that created this revision."
          },
          "releaseName" : {
            "type" : "string",
            "description" : "The name of the release package that created this item."
          },
          "releasedBy" : {
            "$ref" : "#/components/schemas/BTUserSummaryInfo"
          },
          "revision" : {
            "type" : "string",
            "description" : "The id of the revision."
          },
          "revisionRuleId" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string",
            "description" : "The version of the document that contains this revision."
          },
          "versionName" : {
            "type" : "string",
            "description" : "The name of the version of the document that contains this revision."
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        },
        "description" : "A revision of PART/ASSEMBLY etc created by release management."
      },
      "BTRevisionListResponse" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTRevisionInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "partNumber" : {
            "type" : "string"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          }
        }
      },
      "BTRevisionMessageBody" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTReleaseItemMessageBody"
        }, {
          "type" : "object",
          "properties" : {
            "revisionId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTRhoDimensionDisplayData-2892" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDimensionDisplayData-323"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "positionX" : {
              "type" : "number",
              "format" : "double"
            },
            "positionY" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTRigidOrLockedSubAssemblyOutputInfo-3860" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "locked" : {
            "type" : "boolean"
          },
          "rigid" : {
            "type" : "boolean"
          },
          "syncedOutputMVID" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTLockedSubAssemblyOutputInfo-3511" : "#/components/schemas/BTLockedSubAssemblyOutputInfo-3511"
          }
        }
      },
      "BTRole" : {
        "type" : "string",
        "enum" : [ "ANONYMOUS", "TOTPPENDINGUSER", "USER", "DEVELOPER", "PARTNER", "ONSHAPECOMPANYUSER", "ADMIN", "SERVICE" ]
      },
      "BTRootAssemblyDisplayData-96" : {
        "type" : "object",
        "properties" : {
          "annotationsForElement" : {
            "$ref" : "#/components/schemas/BTAnnotationElementDisplayData-894"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "buildDurationMillis" : {
            "type" : "number",
            "format" : "double"
          },
          "deletedGeometryMateIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "deletedLoads" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "deletedMateConnectorIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "deletedMateGroupIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "deletedMateIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "deletedOccurrences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTOccurrence-74"
            }
          },
          "elementId" : {
            "type" : "string"
          },
          "fromFullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "fullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "geometryMates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTGeometryMateDisplayData-1050"
            }
          },
          "incremental" : {
            "type" : "boolean"
          },
          "instanceCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isCollapsible" : {
            "type" : "boolean"
          },
          "isForInContext" : {
            "type" : "boolean"
          },
          "keepFromMicroversion" : {
            "type" : "boolean"
          },
          "loads" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTLoadDisplayData-837"
            }
          },
          "mateConnectors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMateConnectorDisplayData-94"
            }
          },
          "mateGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMateGroupDisplayData-1990"
            }
          },
          "mates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMateDisplayData-1358"
            }
          },
          "microversionId" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          },
          "microversionIdAndConfigurationInterval" : {
            "$ref" : "#/components/schemas/BTMicroversionIdAndConfigurationInterval-2364"
          },
          "microversionInterval" : {
            "$ref" : "#/components/schemas/BTMicroversionIdInterval-367"
          },
          "occurrences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTOccurrenceDisplayData-95"
            }
          },
          "originDisplayData" : {
            "$ref" : "#/components/schemas/BTOriginDisplayData-934"
          },
          "partStudioDisplayData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTPartStudioDisplayDataBase-2751"
            }
          },
          "quickSummary" : {
            "type" : "string"
          },
          "sentTimeISO" : {
            "type" : "string"
          },
          "versionForRasterization" : {
            "$ref" : "#/components/schemas/BTElementDisplayData-326"
          }
        }
      },
      "BTRootAssemblyInfo" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "documentMicroversion" : {
            "type" : "string"
          },
          "documentVersion" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "features" : {
            "type" : "array",
            "description" : "List of Assembly features including those are created by replicates.",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyFeatureInfo"
            }
          },
          "fullConfiguration" : {
            "type" : "string"
          },
          "instances" : {
            "type" : "array",
            "description" : "List of instances including those created by patterns and replicates.",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyInstanceInfo"
            }
          },
          "occurrences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyOccurrenceInfo"
            }
          },
          "partNumber" : {
            "type" : "string"
          },
          "patterns" : {
            "type" : "array",
            "description" : "List of patterns.",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyPatternInfo"
            }
          },
          "revision" : {
            "type" : "string"
          }
        }
      },
      "BTRootDiffInfo" : {
        "type" : "object",
        "properties" : {
          "changes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTDiffInfo"
            }
          },
          "collectionChanges" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTDiffInfo"
              }
            }
          },
          "entityType" : {
            "$ref" : "#/components/schemas/BTDiffInfoCollectionType"
          },
          "geometryChangeMessages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sourceConfiguration" : {
            "type" : "string"
          },
          "sourceId" : {
            "type" : "string"
          },
          "sourceMicroversionId" : {
            "type" : "string"
          },
          "sourceValue" : {
            "type" : "string"
          },
          "sourceVersionId" : {
            "type" : "string"
          },
          "sourceWorkspaceId" : {
            "type" : "string"
          },
          "targetConfiguration" : {
            "type" : "string"
          },
          "targetId" : {
            "type" : "string"
          },
          "targetMicroversionId" : {
            "type" : "string"
          },
          "targetValue" : {
            "type" : "string"
          },
          "targetVersionId" : {
            "type" : "string"
          },
          "targetWorkspaceId" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/GBTNodeChange"
          }
        }
      },
      "BTSMBendTableRowMetadata-1705" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTBaseSMJointTableRowMetadata-2232"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isJointTypeEditable" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTSMDefinitionEntityTypeFilter-1651" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "smDefinitionEntityType" : {
              "$ref" : "#/components/schemas/GBTEntityType"
            }
          }
        } ]
      },
      "BTSMOtherJointTableRowMetadata-2640" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTBaseSMJointTableRowMetadata-2232"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTSMSpecificMetadata-1315" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDomainSpecificMetadata-961"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "definitionEntityType" : {
              "$ref" : "#/components/schemas/GBTEntityType"
            },
            "isSMFormedOutline" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTSearchEntityType" : {
        "type" : "string",
        "enum" : [ "unknown", "capability", "company", "document", "element", "friend", "item", "part", "team", "user", "version", "workspace", "project", "publication", "comment_task", "generic_task", "release_task", "app_store_entry", "folder" ]
      },
      "BTSectionGeometryFilter-4161" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isSectionGeometry" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTSectionPlaneInfo" : {
        "type" : "object",
        "properties" : {
          "center" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "normal" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "tangent" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }
      },
      "BTSelectItemViewStateInfo" : {
        "type" : "object",
        "properties" : {
          "activeSelectorId" : {
            "type" : "string"
          },
          "documentSelectors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTDocumentSelectorInfo"
            }
          },
          "purpose" : {
            "type" : "string"
          }
        }
      },
      "BTSessionCredentialInfo" : {
        "type" : "object",
        "properties" : {
          "provider" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "BTSetFeatureRollbackCall-1899" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFeatureApiBase-1430"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "rollbackIndex" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTSetFeatureRollbackResponse-1042" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "libraryVersion" : {
            "type" : "integer",
            "description" : "FeatureScript version used in the Part Studio. Do not modify.",
            "format" : "int32"
          },
          "microversionId" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          },
          "microversionSkew" : {
            "type" : "boolean",
            "description" : "On output, `true` indicates a microversion mismatch was encountered."
          },
          "rejectMicroversionSkew" : {
            "type" : "boolean",
            "description" : "If `true`, the call will refuse to make the addition if the current microversion for the document does not match the source microversion. If `false`, a best-effort attempt is made to re-interpret the feature addition in the context of a newer document microversion."
          },
          "rollbackIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serializationVersion" : {
            "type" : "string",
            "description" : "Version of the structure serialization rules used to encode the output. This enables incompatibility detection during software updates."
          },
          "sourceMicroversion" : {
            "type" : "string",
            "description" : "The state from which the result was extracted. Geometry ID interpretation is dependent on this document microversion."
          }
        }
      },
      "BTSettingInfo" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          }
        }
      },
      "BTSettingParam" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "operation" : {
            "$ref" : "#/components/schemas/BTUserAppSettingOperationType"
          },
          "value" : {
            "type" : "object"
          }
        }
      },
      "BTShadedViewsInfo" : {
        "type" : "object",
        "properties" : {
          "images" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          }
        },
        "description" : "Images are returned as base64-encoded strings."
      },
      "BTShareEntryParams" : {
        "type" : "object",
        "properties" : {
          "applicationId" : {
            "type" : "string"
          },
          "companyId" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "entryType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "teamId" : {
            "type" : "string"
          },
          "userId" : {
            "type" : "string"
          }
        }
      },
      "BTShareParams" : {
        "type" : "object",
        "properties" : {
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "encodedConfiguration" : {
            "type" : "string"
          },
          "entries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTShareEntryParams"
            }
          },
          "folderId" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "permission" : {
            "type" : "integer",
            "format" : "int64"
          },
          "permissionSet" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "update" : {
            "type" : "boolean"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTSimplePropertyInfo" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string"
          },
          "frozen" : {
            "type" : "boolean"
          },
          "propertyId" : {
            "type" : "string"
          },
          "publishState" : {
            "type" : "integer",
            "format" : "int32"
          },
          "valueType" : {
            "$ref" : "#/components/schemas/BTMetadataValueType"
          }
        }
      },
      "BTSimulationFace-2147" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTEntityFace-31"
        }, {
          "type" : "object",
          "properties" : {
            "bounds" : {
              "$ref" : "#/components/schemas/BTBoundingBox-1052"
            },
            "btType" : {
              "type" : "string"
            },
            "sampleTrianglePointIndices" : {
              "$ref" : "#/components/schemas/BTImmutableIntArray"
            },
            "triangleNormalIndices" : {
              "$ref" : "#/components/schemas/BTImmutableIntArray"
            },
            "trianglePointIndices" : {
              "$ref" : "#/components/schemas/BTImmutableIntArray"
            }
          }
        } ]
      },
      "BTSimulationInstance-3093" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isModal" : {
              "type" : "boolean"
            },
            "simulationId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTSimulationTableColumnInfo-1785" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableColumnInfo-1222"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "crossHighlightData" : {
              "$ref" : "#/components/schemas/BTTableAssemblyCrossHighlightData-2675"
            }
          }
        } ]
      },
      "BTSingleAssemblyReferenceDisplayData-1557" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSingleReferenceDisplayData-1943"
        }, {
          "type" : "object",
          "properties" : {
            "assemblyDisplayData" : {
              "$ref" : "#/components/schemas/BTRootAssemblyDisplayData-96"
            },
            "btType" : {
              "type" : "string"
            },
            "hasConfiguration" : {
              "type" : "boolean"
            },
            "occurrencesToExclude" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTOccurrence-74"
              }
            },
            "transform" : {
              "$ref" : "#/components/schemas/BTBSMatrix-386"
            }
          }
        } ]
      },
      "BTSingleReferenceDisplayData-1943" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "contextWorkspaceId" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "error" : {
            "$ref" : "#/components/schemas/GBTErrorStringEnum"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "fullElementId" : {
            "$ref" : "#/components/schemas/BTFullElementId-756"
          },
          "isTransient" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "referenceName" : {
            "type" : "string"
          },
          "referenceNodeId" : {
            "type" : "string"
          },
          "visibility" : {
            "$ref" : "#/components/schemas/GBTBSFeatureVisibility"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTSingleAssemblyReferenceDisplayData-1557" : "#/components/schemas/BTSingleAssemblyReferenceDisplayData-1557"
          }
        }
      },
      "BTSketchArcDisplayData-349" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSketchEntityDisplayData-354"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTSketchCircleDisplayData-350" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSketchEntityDisplayData-354"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "radius" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTSketchCompositeEntityDisplayData-1093" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTSketchImageDisplayData-1379" : "#/components/schemas/BTSketchImageDisplayData-1379",
            "BTSketchTextDisplayData-1707" : "#/components/schemas/BTSketchTextDisplayData-1707"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSketchEntityDisplayData-354"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTSketchConicDisplayData-1085" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSketchEntityDisplayData-354"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "offset" : {
              "type" : "number",
              "format" : "double"
            },
            "rho" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTSketchEllipseDisplayData-712" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSketchEntityDisplayData-354"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "minorRadius" : {
              "type" : "number",
              "format" : "double"
            },
            "offset" : {
              "type" : "number",
              "format" : "double"
            },
            "radius" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTSketchEllipticalArcDisplayData-892" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSketchEntityDisplayData-354"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "endParam" : {
              "type" : "number",
              "format" : "double"
            },
            "minorRadius" : {
              "type" : "number",
              "format" : "double"
            },
            "offset" : {
              "type" : "number",
              "format" : "double"
            },
            "radius" : {
              "type" : "number",
              "format" : "double"
            },
            "startParam" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTSketchEntity-25" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFeatureEntity-34"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isConstruction" : {
              "type" : "boolean"
            },
            "isFromSplineControlPolygon" : {
              "type" : "boolean"
            },
            "isFromSplineHandle" : {
              "type" : "boolean"
            },
            "isTextStroke" : {
              "type" : "boolean"
            },
            "isUserPoint" : {
              "type" : "boolean"
            },
            "sketchCurveType" : {
              "$ref" : "#/components/schemas/GBTSketchCurveType"
            },
            "sketchEntityId" : {
              "type" : "string"
            },
            "sketchFeatureId" : {
              "type" : "string"
            },
            "solveStatus" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTSketchEntityDisplayData-354" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "points" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTSketchArcDisplayData-349" : "#/components/schemas/BTSketchArcDisplayData-349",
            "BTSketchCircleDisplayData-350" : "#/components/schemas/BTSketchCircleDisplayData-350",
            "BTSketchCompositeEntityDisplayData-1093" : "#/components/schemas/BTSketchCompositeEntityDisplayData-1093",
            "BTSketchConicDisplayData-1085" : "#/components/schemas/BTSketchConicDisplayData-1085",
            "BTSketchEllipseDisplayData-712" : "#/components/schemas/BTSketchEllipseDisplayData-712",
            "BTSketchEllipticalArcDisplayData-892" : "#/components/schemas/BTSketchEllipticalArcDisplayData-892",
            "BTSketchLineDisplayData-357" : "#/components/schemas/BTSketchLineDisplayData-357",
            "BTSketchPointDisplayData-358" : "#/components/schemas/BTSketchPointDisplayData-358",
            "BTSketchSplineDisplayData-359" : "#/components/schemas/BTSketchSplineDisplayData-359"
          }
        }
      },
      "BTSketchImageDisplayData-1379" : {
        "type" : "object",
        "properties" : {
          "bottomLeftCorner" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "bottomRightCorner" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "entities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTSketchEntityDisplayData-354"
            }
          },
          "featureId" : {
            "type" : "string"
          },
          "isOnFlat" : {
            "type" : "boolean"
          },
          "points" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "sourceId" : {
            "type" : "string"
          },
          "topLeftCorner" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          }
        }
      },
      "BTSketchLineDisplayData-357" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSketchEntityDisplayData-354"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTSketchObjectFilter-184" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isSketchObject" : {
              "type" : "boolean"
            },
            "objectType" : {
              "$ref" : "#/components/schemas/GBTSketchObjectType"
            }
          }
        } ]
      },
      "BTSketchPointDisplayData-358" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSketchEntityDisplayData-354"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTSketchSolveStatusFilter-3657" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "solveStatus" : {
              "$ref" : "#/components/schemas/GBTMGeomStatus"
            }
          }
        } ]
      },
      "BTSketchSplineDisplayData-359" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSketchEntityDisplayData-354"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "closed" : {
              "type" : "boolean"
            },
            "controlPointCount" : {
              "type" : "integer",
              "format" : "int32"
            },
            "degree" : {
              "type" : "integer",
              "format" : "int32"
            },
            "hasHandlesInSketch" : {
              "type" : "boolean"
            },
            "maximumParameter" : {
              "type" : "number",
              "format" : "double"
            },
            "minimumParameter" : {
              "type" : "number",
              "format" : "double"
            },
            "rational" : {
              "type" : "boolean"
            },
            "segment" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTSketchTextDisplayData-1707" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSketchCompositeEntityDisplayData-1093"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTSphereDescription-1263" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSurfaceDescription-1564"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "radius" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTSplineControlPolygonFilter-1130" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "allowsSplineControlPolygon" : {
              "type" : "boolean"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTSplineDescription-2118" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTCurveDescription-1583"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "controlPoints" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double"
              }
            },
            "degree" : {
              "type" : "integer",
              "format" : "int32"
            },
            "isPeriodic" : {
              "type" : "boolean"
            },
            "isRational" : {
              "type" : "boolean"
            },
            "knots" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double"
              }
            }
          }
        } ]
      },
      "BTSplineHandleFilter-2971" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "allowsSplineHandle" : {
              "type" : "boolean"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTSplineInternalPointFilter-4101" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "allowsSplineInternalPoint" : {
              "type" : "boolean"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTSpunDescription-657" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSurfaceDescription-1564"
        }, {
          "type" : "object",
          "properties" : {
            "axis" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            },
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTStringFormatBlockPattern-1755" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTStringFormatCondition-683"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "regExpToBlock" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTStringFormatCondition-683" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "errorMessage" : {
            "type" : "string"
          },
          "shouldResetValueWhenConfirmed" : {
            "type" : "boolean"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTStringFormatBlockPattern-1755" : "#/components/schemas/BTStringFormatBlockPattern-1755",
            "BTStringFormatMatchPattern-2446" : "#/components/schemas/BTStringFormatMatchPattern-2446",
            "BTStringMaximumLengthPattern-2593" : "#/components/schemas/BTStringMaximumLengthPattern-2593",
            "BTStringMinimumLengthPattern-895" : "#/components/schemas/BTStringMinimumLengthPattern-895"
          }
        }
      },
      "BTStringFormatMatchPattern-2446" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTStringFormatCondition-683"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "regExpToMatch" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTStringMaximumLengthPattern-2593" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTStringFormatCondition-683"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "maximumLength" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTStringMinimumLengthPattern-895" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTStringFormatCondition-683"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "minimumLength" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTStringNodeWrapper-4224" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "nodeId" : {
            "type" : "string"
          },
          "string" : {
            "type" : "string"
          }
        }
      },
      "BTSubAssemblyInfo" : {
        "type" : "object",
        "properties" : {
          "configuration" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "documentMicroversion" : {
            "type" : "string"
          },
          "documentVersion" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "features" : {
            "type" : "array",
            "description" : "List of Assembly features including those are created by replicates.",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyFeatureInfo"
            }
          },
          "fullConfiguration" : {
            "type" : "string"
          },
          "instances" : {
            "type" : "array",
            "description" : "List of instances including those created by patterns and replicates.",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyInstanceInfo"
            }
          },
          "partNumber" : {
            "type" : "string"
          },
          "patterns" : {
            "type" : "array",
            "description" : "List of patterns.",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyPatternInfo"
            }
          },
          "revision" : {
            "type" : "string"
          }
        }
      },
      "BTSubstituteApproverInfo" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "identity" : {
            "$ref" : "#/components/schemas/BTIdentityInfo"
          }
        }
      },
      "BTSurfaceDescription-1564" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "direction" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "directionOrientedWithFace" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "origin" : {
            "$ref" : "#/components/schemas/BTVector3d-389"
          },
          "type" : {
            "$ref" : "#/components/schemas/GBTSurfaceTypeEnum"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTConeDescription-860" : "#/components/schemas/BTConeDescription-860",
            "BTCylinderDescription-686" : "#/components/schemas/BTCylinderDescription-686",
            "BTPlaneDescription-692" : "#/components/schemas/BTPlaneDescription-692",
            "BTSphereDescription-1263" : "#/components/schemas/BTSphereDescription-1263",
            "BTSpunDescription-657" : "#/components/schemas/BTSpunDescription-657",
            "BTSweepDescription-1473" : "#/components/schemas/BTSweepDescription-1473",
            "BTTorusDescription-1834" : "#/components/schemas/BTTorusDescription-1834"
          }
        }
      },
      "BTSweepDescription-1473" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSurfaceDescription-1564"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "profile" : {
              "$ref" : "#/components/schemas/BTSplineDescription-2118"
            }
          }
        } ]
      },
      "BTSyncAppElementParams" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "elements" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTSystemPartColorCycle-1580" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTBasePartColorCycle-2614"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "version" : {
              "$ref" : "#/components/schemas/GBTPartColorCycleVersion"
            }
          }
        } ]
      },
      "BTTable-1825" : {
        "type" : "object",
        "properties" : {
          "allRowValues" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "columnCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "frozenColumns" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isFailed" : {
            "type" : "boolean"
          },
          "nodeId" : {
            "type" : "string"
          },
          "readOnly" : {
            "type" : "boolean"
          },
          "rowCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sortOrder" : {
            "$ref" : "#/components/schemas/BTTableSortOrder-4371"
          },
          "tableColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTTableColumnInfo-1222"
            }
          },
          "tableId" : {
            "type" : "string"
          },
          "tableRows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTTableRow-1054"
            }
          },
          "title" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTAssemblySimulationStructuralLoadsTable-3867" : "#/components/schemas/BTAssemblySimulationStructuralLoadsTable-3867",
            "BTAssemblySimulationTable-3236" : "#/components/schemas/BTAssemblySimulationTable-3236",
            "BTBillOfMaterialsTable-1073" : "#/components/schemas/BTBillOfMaterialsTable-1073",
            "BTConfiguredPartPropertiesTable-2740" : "#/components/schemas/BTConfiguredPartPropertiesTable-2740",
            "BTFSTable-953" : "#/components/schemas/BTFSTable-953"
          }
        }
      },
      "BTTableAssemblyCrossHighlightData-2675" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableBaseCrossHighlightData-2609"
        }, {
          "type" : "object",
          "properties" : {
            "assemblyCrossHighlightItems" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTTableAssemblyCrossHighlightDataItem-2659"
              }
            }
          }
        } ]
      },
      "BTTableAssemblyCrossHighlightDataItem-2659" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "occurrencePathId" : {
            "type" : "string"
          }
        }
      },
      "BTTableBaseCrossHighlightData-2609" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTTableAssemblyCrossHighlightData-2675" : "#/components/schemas/BTTableAssemblyCrossHighlightData-2675",
            "BTTableCrossHighlightData-1753" : "#/components/schemas/BTTableCrossHighlightData-1753"
          }
        }
      },
      "BTTableBaseRowMetadata-3181" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "crossHighlightDataIfAny" : {
            "$ref" : "#/components/schemas/BTTableBaseCrossHighlightData-2609"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTBaseSMJointTableRowMetadata-2232" : "#/components/schemas/BTBaseSMJointTableRowMetadata-2232",
            "BTBillOfMaterialsTableRowMetadata-1300" : "#/components/schemas/BTBillOfMaterialsTableRowMetadata-1300",
            "BTDatumTableRowMetadata-3060" : "#/components/schemas/BTDatumTableRowMetadata-3060",
            "BTFSTableRowMetadata-2262" : "#/components/schemas/BTFSTableRowMetadata-2262",
            "BTInspectionTableRowMetadata-2485" : "#/components/schemas/BTInspectionTableRowMetadata-2485",
            "BTMirrorTableRowMetaData-5463" : "#/components/schemas/BTMirrorTableRowMetaData-5463",
            "BTVariableTableRowMetadata-3912" : "#/components/schemas/BTVariableTableRowMetadata-3912"
          }
        }
      },
      "BTTableCell-1114" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "isEverVisible" : {
            "type" : "boolean"
          },
          "isReadOnly" : {
            "type" : "boolean"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTTableCellParameter-2399" : "#/components/schemas/BTTableCellParameter-2399",
            "BTTableTestCellDouble-2509" : "#/components/schemas/BTTableTestCellDouble-2509",
            "BTTableTestCellString-2112" : "#/components/schemas/BTTableTestCellString-2112"
          }
        }
      },
      "BTTableCellParameter-2399" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTTableCellParameterWithValue-2122" : "#/components/schemas/BTTableCellParameterWithValue-2122",
            "BTTableCellPropertyParameter-2983" : "#/components/schemas/BTTableCellPropertyParameter-2983"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableCell-1114"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "error" : {
              "type" : "string"
            },
            "info" : {
              "type" : "string"
            },
            "overrideSpec" : {
              "$ref" : "#/components/schemas/BTParameterSpec-6"
            },
            "parameter" : {
              "$ref" : "#/components/schemas/BTMParameter-1"
            }
          }
        } ]
      },
      "BTTableCellParameterWithValue-2122" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableCellParameter-2399"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "value" : {
              "$ref" : "#/components/schemas/BTFSValue-1888"
            }
          }
        } ]
      },
      "BTTableCellPropertyParameter-2983" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableCellParameter-2399"
        }, {
          "type" : "object",
          "properties" : {
            "aggregationSkippedFilteredOutValues" : {
              "type" : "boolean"
            },
            "btType" : {
              "type" : "string"
            },
            "isUnchanged" : {
              "type" : "boolean"
            },
            "overrideStatusType" : {
              "$ref" : "#/components/schemas/GBTMetadataOverrideStatusType"
            },
            "propertySourceType" : {
              "$ref" : "#/components/schemas/GBTMetadataSourceType"
            }
          }
        } ]
      },
      "BTTableColumnInfo-1222" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "id" : {
            "type" : "string"
          },
          "nodeId" : {
            "type" : "string"
          },
          "specification" : {
            "$ref" : "#/components/schemas/BTTableColumnSpec-1967"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTConfiguredValuesColumnInfo-1025" : "#/components/schemas/BTConfiguredValuesColumnInfo-1025",
            "BTFSTableColumnInfo-623" : "#/components/schemas/BTFSTableColumnInfo-623",
            "BTNamedPositionValuesColumnInfo-816" : "#/components/schemas/BTNamedPositionValuesColumnInfo-816",
            "BTPropertyTableColumnInfo-2161" : "#/components/schemas/BTPropertyTableColumnInfo-2161",
            "BTSimulationTableColumnInfo-1785" : "#/components/schemas/BTSimulationTableColumnInfo-1785"
          }
        }
      },
      "BTTableColumnSpec-1967" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "defaultCellSpec" : {
            "$ref" : "#/components/schemas/BTParameterSpec-6"
          },
          "defaultColumnWidthUnits" : {
            "$ref" : "#/components/schemas/GBTTableColumnWidthUnits"
          },
          "defaultColumnWidthValue" : {
            "type" : "integer",
            "format" : "int32"
          },
          "defaultHeaderName" : {
            "type" : "string"
          },
          "defaultTextAlignment" : {
            "$ref" : "#/components/schemas/GBTTableTextAlignment"
          },
          "readOnly" : {
            "type" : "boolean"
          }
        }
      },
      "BTTableCrossHighlightData-1753" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableBaseCrossHighlightData-2609"
        }, {
          "type" : "object",
          "properties" : {
            "deterministicIdList" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "featureIdList" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "BTTableResponse-1546" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "sourceMicroversion" : {
            "type" : "string"
          },
          "table" : {
            "$ref" : "#/components/schemas/BTTable-1825"
          }
        }
      },
      "BTTableRow-1054" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "columnIdToCell" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTTableCell-1114"
            }
          },
          "expandableState" : {
            "$ref" : "#/components/schemas/ExpandableState"
          },
          "id" : {
            "type" : "string"
          },
          "metaData" : {
            "$ref" : "#/components/schemas/BTTreeNode-20"
          },
          "nodeId" : {
            "type" : "string"
          },
          "rowMetadata" : {
            "$ref" : "#/components/schemas/BTTableBaseRowMetadata-3181"
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTBillOfMaterialsTableRow-1425" : "#/components/schemas/BTBillOfMaterialsTableRow-1425"
          }
        }
      },
      "BTTableSortOrder-4371" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "isAscending" : {
            "type" : "boolean"
          },
          "nodeId" : {
            "type" : "string"
          },
          "sortingColumnId" : {
            "type" : "string"
          }
        }
      },
      "BTTableSpec-915" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFeatureSpec-129"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "computedPropertyCategoryIds" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "defaultPartCategoryId" : {
              "type" : "string"
            },
            "isComputedPropertyTable" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTTableTestCellDouble-2509" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableCell-1114"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "cellValue" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTTableTestCellString-2112" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableCell-1114"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "cellValue" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTTaskInfo" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string"
          },
          "approverRole" : {
            "type" : "string"
          },
          "comments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTCommentInfo"
            }
          },
          "companyId" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creator" : {
            "$ref" : "#/components/schemas/BTUserSummaryInfo"
          },
          "deletable" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "documentName" : {
            "type" : "string"
          },
          "documentType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "editable" : {
            "type" : "boolean"
          },
          "elementId" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "objectId" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMetadataPropertyInfo"
            }
          },
          "resolvedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "resolvedBy" : {
            "$ref" : "#/components/schemas/BTUserSummaryInfo"
          },
          "roles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTTaskRbacRoleInfo"
            }
          },
          "simpleName" : {
            "type" : "string"
          },
          "sourceWorkspaceOrVersionName" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "status" : {
            "type" : "integer",
            "format" : "int32"
          },
          "taskItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTTaskItemInfo"
            }
          },
          "taskTemplate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "taskType" : {
            "type" : "string"
          },
          "teams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTTaskTeamSummaryInfo"
            }
          },
          "thumbnail" : {
            "$ref" : "#/components/schemas/BTThumbnailInfo"
          },
          "transition" : {
            "type" : "string"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTTaskUserSummaryInfo"
            }
          },
          "versionId" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "workflowInfo" : {
            "$ref" : "#/components/schemas/BTWorkflowableObjectInfo"
          },
          "workflowableObjectType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTTaskItemInfo" : {
        "type" : "object",
        "properties" : {
          "assemblyFeatures" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "bodyType" : {
            "type" : "string"
          },
          "configuration" : {
            "type" : "string"
          },
          "dataType" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementFeature" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementOccurrences" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "elementQuery" : {
            "type" : "string"
          },
          "elementType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fileName" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "mimeType" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "partId" : {
            "type" : "string"
          },
          "releaseState" : {
            "type" : "integer",
            "format" : "int32"
          },
          "revisionId" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          },
          "viewData" : {
            "$ref" : "#/components/schemas/BTViewDataInfo"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTTaskItemParams" : {
        "type" : "object",
        "properties" : {
          "bodyType" : {
            "type" : "string",
            "description" : "Body type to reference from a task."
          },
          "configuration" : {
            "type" : "string",
            "description" : "Configuration of reference. Used to restrict a reference to a specific configuration of an element."
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the reference."
          },
          "documentId" : {
            "type" : "string",
            "description" : "Id of a document. Required to reference a document or anything contained within it."
          },
          "elementId" : {
            "type" : "string",
            "description" : "Id of an element reference. Used when referencing an element."
          },
          "elementType" : {
            "type" : "integer",
            "description" : "Type of element reference. Options are 0 (Part Studio), 1 (Assembly), 2 (Drawing), 3 (Feature Studio), 4 (Blob), 5 (Application), 6 (Table), 7 (Bill of Materials),  8 (Variable Studio), or 9 (Publication Item).",
            "format" : "int32"
          },
          "mimeType" : {
            "type" : "string",
            "description" : "Mimetype of reference. Used when referencing blob elements."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the reference."
          },
          "partId" : {
            "type" : "string",
            "description" : "Determinstic Id of a part. Used when referencing parts."
          },
          "revisionId" : {
            "type" : "string",
            "description" : "Id of a revision to reference from a task."
          },
          "versionId" : {
            "type" : "string",
            "description" : "Id of a document version. Used when referencing the version itself or an element or part in it."
          },
          "workspaceId" : {
            "type" : "string",
            "description" : "Id of a document workspace. Used when referencing the workspace itself or an element or part in it."
          }
        },
        "description" : "References to add to the task.",
        "x-BTVisibility-properties" : {
          "viewData" : "INTERNAL",
          "dataType" : "INTERNAL",
          "elementFeature" : "INTERNAL",
          "id" : "INTERNAL",
          "assemblyFeature" : "INTERNAL",
          "elementQuery" : "INTERNAL",
          "elementOccurrence" : "INTERNAL"
        }
      },
      "BTTaskListResponse" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "URI for current page of resources.",
            "format" : "uri"
          },
          "items" : {
            "type" : "array",
            "description" : "Array of items in the current page.",
            "items" : {
              "$ref" : "#/components/schemas/BTTaskInfo"
            }
          },
          "next" : {
            "type" : "string",
            "description" : "URI for next page of the resources if more are available.",
            "format" : "uri"
          },
          "previous" : {
            "type" : "string",
            "description" : "URI for previous page of the resources.",
            "format" : "uri"
          },
          "taskTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTTaskTypeInfo"
            }
          }
        }
      },
      "BTTaskRbacRoleInfo" : {
        "type" : "object",
        "properties" : {
          "acted" : {
            "type" : "boolean"
          },
          "active" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "predefinedRole" : {
            "type" : "integer",
            "format" : "int32"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTTaskTeamSummaryInfo" : {
        "type" : "object",
        "properties" : {
          "acted" : {
            "type" : "boolean"
          },
          "active" : {
            "type" : "boolean"
          },
          "canMove" : {
            "type" : "boolean"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "description" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "isContainer" : {
            "type" : "boolean"
          },
          "isEnterpriseOwned" : {
            "type" : "boolean"
          },
          "isMutable" : {
            "type" : "boolean"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedBy" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "owner" : {
            "$ref" : "#/components/schemas/BTOwnerInfo"
          },
          "predefinedTeam" : {
            "type" : "integer",
            "format" : "int32"
          },
          "predefinedTeamMutable" : {
            "type" : "boolean"
          },
          "projectId" : {
            "type" : "string"
          },
          "resourceType" : {
            "type" : "string"
          },
          "treeHref" : {
            "type" : "string"
          },
          "unparentHref" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTTaskTypeInfo" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "BTTaskUserSummaryInfo" : {
        "type" : "object",
        "properties" : {
          "acted" : {
            "type" : "boolean"
          },
          "company" : {
            "$ref" : "#/components/schemas/BTCompanySummaryInfo"
          },
          "documentationName" : {
            "type" : "string"
          },
          "documentationNameOverride" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "globalPermissions" : {
            "$ref" : "#/components/schemas/GlobalPermissionInfo"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "image" : {
            "type" : "string"
          },
          "invitationState" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isGuest" : {
            "type" : "boolean"
          },
          "isLight" : {
            "type" : "boolean"
          },
          "isOnshapeSupport" : {
            "type" : "boolean"
          },
          "lastLoginTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastName" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "personalMessageAllowed" : {
            "type" : "boolean"
          },
          "source" : {
            "type" : "integer",
            "format" : "int32"
          },
          "state" : {
            "type" : "integer",
            "format" : "int32"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTTeamInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTeamSummaryInfo"
        }, {
          "type" : "object",
          "properties" : {
            "admin" : {
              "type" : "boolean"
            },
            "member" : {
              "type" : "boolean"
            },
            "size" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTTeamMemberInfo" : {
        "type" : "object",
        "properties" : {
          "admin" : {
            "type" : "boolean"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "member" : {
            "$ref" : "#/components/schemas/BTUserSummaryInfo"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "team" : {
            "$ref" : "#/components/schemas/BTTeamSummaryInfo"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTTeamSummaryInfo" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "canMove" : {
            "type" : "boolean"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "description" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "isContainer" : {
            "type" : "boolean"
          },
          "isEnterpriseOwned" : {
            "type" : "boolean"
          },
          "isMutable" : {
            "type" : "boolean"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedBy" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "owner" : {
            "$ref" : "#/components/schemas/BTOwnerInfo"
          },
          "predefinedTeam" : {
            "type" : "integer",
            "format" : "int32"
          },
          "predefinedTeamMutable" : {
            "type" : "boolean"
          },
          "projectId" : {
            "type" : "string"
          },
          "resourceType" : {
            "type" : "string"
          },
          "treeHref" : {
            "type" : "string"
          },
          "unparentHref" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        },
        "discriminator" : {
          "propertyName" : "jsonType",
          "mapping" : {
            "team" : "#/components/schemas/BTTeamInfo"
          }
        }
      },
      "BTTessellatedGeometry-2576" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "discriminator" : {
          "propertyName" : "btType",
          "mapping" : {
            "BTEntityDegenerateEdge-1129" : "#/components/schemas/BTEntityDegenerateEdge-1129",
            "BTEntityEdge-30" : "#/components/schemas/BTEntityEdge-30",
            "BTEntityFace-31" : "#/components/schemas/BTEntityFace-31",
            "BTEntityPoint-29" : "#/components/schemas/BTEntityPoint-29"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTEntityGeometry-35"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTTessellationProperties-927" : {
        "type" : "object",
        "properties" : {
          "angularTolerance" : {
            "type" : "number",
            "format" : "double"
          },
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "chordalTolerance" : {
            "type" : "number",
            "format" : "double"
          },
          "nodeId" : {
            "type" : "string"
          },
          "tessellationBudget" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BTTextObjectFilter-1515" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isText" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTTextStrokeFilter-461" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTQueryFilter-183"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "isStroke" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTThumbnailInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "format" : "uri"
          },
          "id" : {
            "type" : "string"
          },
          "secondarySizes" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTThumbnailSizeInfo"
              }
            }
          },
          "sizes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTThumbnailSizeInfo"
            }
          }
        }
      },
      "BTThumbnailSizeInfo" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "format" : "uri"
          },
          "mediaType" : {
            "type" : "string"
          },
          "renderMode" : {
            "type" : "string"
          },
          "sheetName" : {
            "type" : "string"
          },
          "size" : {
            "type" : "string"
          },
          "uniqueId" : {
            "type" : "string"
          },
          "viewOrientation" : {
            "type" : "string"
          }
        }
      },
      "BTToleranceSpec-3441" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFeatureSpec-129"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTToleranceString-3274" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTMNode-19"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "classification" : {
              "type" : "string"
            },
            "lower" : {
              "type" : "string"
            },
            "upper" : {
              "type" : "string"
            },
            "value" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTTorusDescription-1834" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTSurfaceDescription-1564"
        }, {
          "type" : "object",
          "properties" : {
            "axis" : {
              "$ref" : "#/components/schemas/BTVector3d-389"
            },
            "btType" : {
              "type" : "string"
            },
            "majorRadius" : {
              "type" : "number",
              "format" : "double"
            },
            "minorRadius" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "BTTransitionType" : {
        "type" : "string",
        "description" : "Transition types(SUBMIT, APPROVE, REJECT)",
        "enum" : [ "DEFAULT", "SUBMIT", "APPROVE", "APPROVE_DIRECT", "REJECT", "DELETE", "COMMENT", "REASSIGN_TASK" ]
      },
      "BTTranslateFormatParams" : {
        "required" : [ "formatName" ],
        "type" : "object",
        "properties" : {
          "allowFaultyParts" : {
            "type" : "boolean",
            "description" : "If true, parts with faults are imported. If false, faulty parts are omitted.",
            "default" : false
          },
          "angularTolerance" : {
            "type" : "number",
            "description" : "Determines the maximum angular deviation, between the analytical surface and its triangulation. Lower values result in a finer geometry and higher values result in coarser geometry.",
            "format" : "double",
            "example" : 0.001
          },
          "blobElementId" : {
            "type" : "string"
          },
          "blobMicroversionId" : {
            "type" : "string"
          },
          "cloudObjectId" : {
            "type" : "string"
          },
          "cloudStorageAccountId" : {
            "type" : "string"
          },
          "colorMethod" : {
            "type" : "string"
          },
          "configuration" : {
            "type" : "string"
          },
          "connectionId" : {
            "type" : "string"
          },
          "createComposite" : {
            "type" : "boolean"
          },
          "currentSheetOnly" : {
            "type" : "boolean"
          },
          "destinationName" : {
            "type" : "string"
          },
          "distanceTolerance" : {
            "type" : "number",
            "format" : "double"
          },
          "elementId" : {
            "type" : "string",
            "description" : "The id of the element in which to perform the operation."
          },
          "elementIds" : {
            "type" : "array",
            "description" : "An array of element ids.",
            "items" : {
              "type" : "string",
              "description" : "An array of element ids."
            }
          },
          "emailLink" : {
            "type" : "boolean"
          },
          "emailMessage" : {
            "type" : "string"
          },
          "emailSubject" : {
            "type" : "string"
          },
          "emailTo" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "evaluateExportRule" : {
            "type" : "boolean",
            "description" : "Set to `true` to evaluate the export rule for the given `formatName` and to include an `exportRuleFileName` value in the response.",
            "default" : false
          },
          "excludeHiddenEntities" : {
            "type" : "boolean"
          },
          "excludeOffSheetContent" : {
            "type" : "boolean"
          },
          "extractAssemblyHierarchy" : {
            "type" : "boolean"
          },
          "flatten" : {
            "type" : "boolean"
          },
          "flattenAssemblies" : {
            "type" : "boolean"
          },
          "foreignId" : {
            "type" : "string"
          },
          "formatName" : {
            "type" : "string",
            "description" : "The name of the file format."
          },
          "fromUserId" : {
            "type" : "string"
          },
          "getyAxisIsUp" : {
            "type" : "boolean"
          },
          "grouping" : {
            "type" : "boolean"
          },
          "hideInspectionItems" : {
            "type" : "boolean"
          },
          "ignoreExportRulesForContents" : {
            "type" : "boolean"
          },
          "imageHeight" : {
            "type" : "integer",
            "format" : "int32"
          },
          "imageWidth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "importAppearances" : {
            "type" : "boolean"
          },
          "importInBackground" : {
            "type" : "boolean"
          },
          "importMaterialDensity" : {
            "type" : "boolean"
          },
          "importWithinDocument" : {
            "type" : "boolean"
          },
          "includeExportIds" : {
            "type" : "boolean"
          },
          "joinAdjacentSurfaces" : {
            "type" : "boolean"
          },
          "level" : {
            "type" : "string"
          },
          "linkDocumentId" : {
            "type" : "string",
            "description" : "The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both."
          },
          "linkDocumentWorkspaceId" : {
            "type" : "string"
          },
          "maximumChordLength" : {
            "type" : "number",
            "description" : "Determines the maximum distance, between the analytical surface and its triangulation. Lower values result in a finer geometry and higher values result in coarser geometry.",
            "format" : "double",
            "example" : 0.01
          },
          "notifyUser" : {
            "type" : "boolean"
          },
          "occurrencesToExport" : {
            "type" : "string"
          },
          "onePartPerDoc" : {
            "type" : "boolean"
          },
          "originalForeignId" : {
            "type" : "string"
          },
          "parentId" : {
            "type" : "string"
          },
          "partIds" : {
            "type" : "string"
          },
          "partsExportFilter" : {
            "$ref" : "#/components/schemas/BTPartsExportFilter-4308"
          },
          "password" : {
            "type" : "string"
          },
          "passwordRequired" : {
            "type" : "boolean"
          },
          "pdfVersion" : {
            "type" : "string"
          },
          "processedForeignId" : {
            "type" : "string"
          },
          "projectId" : {
            "type" : "string"
          },
          "proxyDocumentId" : {
            "type" : "string"
          },
          "proxyElementId" : {
            "type" : "string"
          },
          "proxyWorkspaceVersion" : {
            "type" : "string"
          },
          "proxyWorkspaceVersionId" : {
            "type" : "string"
          },
          "resolution" : {
            "type" : "string",
            "description" : "Determines export resolution of fine, medium, or coarse",
            "example" : "fine",
            "enum" : [ "fine", "medium", "coarse" ]
          },
          "selectablePdfText" : {
            "type" : "boolean"
          },
          "sendCopyToMe" : {
            "type" : "boolean"
          },
          "sheetIndices" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "showOverriddenDimensions" : {
            "type" : "boolean"
          },
          "skipBodyshop" : {
            "type" : "boolean"
          },
          "sourceName" : {
            "type" : "string"
          },
          "specifyMaterialData" : {
            "type" : "boolean"
          },
          "specifyUnits" : {
            "type" : "boolean"
          },
          "splinesAsPolylines" : {
            "type" : "boolean"
          },
          "splitAssembliesIntoMultipleDocuments" : {
            "type" : "boolean"
          },
          "stepParasolidPreprocessingOption" : {
            "$ref" : "#/components/schemas/GBTPreProcessParasolidOption"
          },
          "stepVersionString" : {
            "type" : "string"
          },
          "storeInDocument" : {
            "type" : "boolean"
          },
          "textAsGeometry" : {
            "type" : "boolean"
          },
          "textOption" : {
            "type" : "string"
          },
          "triggerAutoDownload" : {
            "type" : "boolean"
          },
          "unit" : {
            "type" : "string"
          },
          "uploadId" : {
            "type" : "string"
          },
          "useFileNameToSetSinglePartName" : {
            "type" : "boolean"
          },
          "useGltfCompression" : {
            "type" : "boolean"
          },
          "useIGESImportPostProcessing" : {
            "type" : "boolean"
          },
          "useIgesCompatibilityMode" : {
            "type" : "boolean"
          },
          "validForDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "versionString" : {
            "type" : "string"
          }
        },
        "x-BTVisibility-properties" : {
          "upgradeFeatureScriptVersion" : "INTERNAL"
        }
      },
      "BTTranslationRequestInfo" : {
        "type" : "object",
        "properties" : {
          "documentId" : {
            "type" : "string"
          },
          "exportRuleFileName" : {
            "type" : "string",
            "description" : "The file name after evaluating a rule for the given `formatName`. `NULL` if `evaluateExportRule=false` or if the export rule is not found."
          },
          "failureReason" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "requestElementId" : {
            "type" : "string"
          },
          "requestState" : {
            "$ref" : "#/components/schemas/BTTranslationRequestState"
          },
          "resultDocumentId" : {
            "type" : "string"
          },
          "resultElementIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "resultExternalDataIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "resultWorkspaceId" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTTranslationRequestState" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "DONE", "FAILED" ]
      },
      "BTTreeEdit-13" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "editType" : {
            "$ref" : "#/components/schemas/EditType"
          },
          "newNodes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTTreeNode-20"
            }
          },
          "nothing" : {
            "type" : "boolean"
          }
        }
      },
      "BTTreeNode-20" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "nodeId" : {
            "type" : "string"
          }
        }
      },
      "BTTrialInfo" : {
        "type" : "object",
        "properties" : {
          "paidCustomerInPast" : {
            "type" : "boolean"
          },
          "planId" : {
            "type" : "string"
          },
          "planInterval" : {
            "type" : "string"
          },
          "seats" : {
            "type" : "integer",
            "format" : "int64"
          },
          "trialDaysRemaining" : {
            "type" : "integer",
            "format" : "int64"
          },
          "trialEndDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "trialStartDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "BTUiFeatureStudioChecksum-2438" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "crc32" : {
            "type" : "integer",
            "format" : "int32"
          },
          "microversion" : {
            "$ref" : "#/components/schemas/BTMicroversionId-366"
          }
        }
      },
      "BTUiSelection-1185" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "deterministicIdList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "occurrence" : {
            "$ref" : "#/components/schemas/BTOccurrence-74"
          },
          "tableRowId" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/GBTUiSelectionType"
          }
        }
      },
      "BTUnchangedElementInfo" : {
        "type" : "object",
        "properties" : {
          "connectionId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "unchangedReferences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTUnchangedReferenceInfo"
            }
          }
        }
      },
      "BTUnchangedReferenceInfo" : {
        "type" : "object",
        "properties" : {
          "metadataUnchanged" : {
            "type" : "boolean"
          },
          "nodeIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "toRevision" : {
            "$ref" : "#/components/schemas/BTRevisionInfo"
          }
        }
      },
      "BTUniqueDocumentItemParams" : {
        "type" : "object",
        "properties" : {
          "apiConfiguration" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementType" : {
            "type" : "string"
          },
          "partId" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "revision" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTUnitInfo" : {
        "type" : "object",
        "properties" : {
          "defaultUnits" : {
            "$ref" : "#/components/schemas/BTDefaultUnitsInfo"
          },
          "unitsDisplayPrecision" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "description" : "Specifies the display precision for every supported unit.",
              "format" : "int32"
            },
            "description" : "Specifies the display precision for every supported unit."
          }
        }
      },
      "BTUnitsMaximumDisplayPrecisionInfo" : {
        "type" : "object",
        "properties" : {
          "unitsDisplayPrecision" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      },
      "BTUpdateFeaturesCall-1748" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "libraryVersion" : {
            "type" : "integer",
            "description" : "FeatureScript version used in the Part Studio. Do not modify.",
            "format" : "int32"
          },
          "microversionSkew" : {
            "type" : "boolean",
            "description" : "On output, `true` indicates a microversion mismatch was encountered."
          },
          "rejectMicroversionSkew" : {
            "type" : "boolean",
            "description" : "If `true`, the call will refuse to make the addition if the current microversion for the document does not match the source microversion. If `false`, a best-effort attempt is made to re-interpret the feature addition in the context of a newer document microversion."
          },
          "serializationVersion" : {
            "type" : "string",
            "description" : "Version of the structure serialization rules used to encode the output. This enables incompatibility detection during software updates."
          },
          "sourceMicroversion" : {
            "type" : "string",
            "description" : "The state from which the result was extracted. Geometry ID interpretation is dependent on this document microversion."
          },
          "updateSuppressionAttributes" : {
            "type" : "boolean"
          }
        }
      },
      "BTUpdateFeaturesResponse-1333" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "featureStates" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTFeatureState-1688"
            }
          },
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMFeature-134"
            }
          },
          "libraryVersion" : {
            "type" : "integer",
            "description" : "FeatureScript version used in the Part Studio. Do not modify.",
            "format" : "int32"
          },
          "microversionSkew" : {
            "type" : "boolean",
            "description" : "On output, `true` indicates a microversion mismatch was encountered."
          },
          "rejectMicroversionSkew" : {
            "type" : "boolean",
            "description" : "If `true`, the call will refuse to make the addition if the current microversion for the document does not match the source microversion. If `false`, a best-effort attempt is made to re-interpret the feature addition in the context of a newer document microversion."
          },
          "serializationVersion" : {
            "type" : "string",
            "description" : "Version of the structure serialization rules used to encode the output. This enables incompatibility detection during software updates."
          },
          "sourceMicroversion" : {
            "type" : "string",
            "description" : "The state from which the result was extracted. Geometry ID interpretation is dependent on this document microversion."
          }
        }
      },
      "BTUpdateMeshUnitsParams" : {
        "type" : "object",
        "properties" : {
          "units" : {
            "type" : "string"
          }
        }
      },
      "BTUpdateReferenceParams" : {
        "type" : "object",
        "properties" : {
          "connectionId" : {
            "type" : "string"
          },
          "editDescription" : {
            "type" : "string"
          },
          "referenceUpdates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UpdateParams"
            }
          }
        }
      },
      "BTUpdateReleasePackageParams" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          },
          "itemIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTReleasePackageItemParams"
            }
          },
          "manuallyRemovedItemIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTPropertyValueParam"
            }
          }
        }
      },
      "BTUpdateTaskParams" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string",
            "description" : "Use to transfer task ownership to the company."
          },
          "deleteItemIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "References to remove from the task.",
            "items" : {
              "type" : "string",
              "description" : "References to remove from the task."
            }
          },
          "descriptionParamValue" : {
            "type" : "string"
          },
          "itemParams" : {
            "type" : "array",
            "description" : "References to add to the task.",
            "items" : {
              "$ref" : "#/components/schemas/BTTaskItemParams"
            }
          },
          "nameParamValue" : {
            "type" : "string"
          },
          "propertyValues" : {
            "type" : "array",
            "description" : "Task metadata properties.",
            "items" : {
              "$ref" : "#/components/schemas/BTPropertyValueParam"
            }
          }
        }
      },
      "BTUserAdminInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTUserInfo"
        }, {
          "type" : "object",
          "properties" : {
            "discount" : {
              "$ref" : "#/components/schemas/BTDiscount"
            },
            "invitationId" : {
              "type" : "string"
            },
            "invitedByEmail" : {
              "type" : "string"
            },
            "invitedDocumentId" : {
              "type" : "string"
            },
            "isTrialRequest" : {
              "type" : "boolean"
            },
            "privacyConsents" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPrivacyConsentInfo"
              }
            },
            "userMetrics" : {
              "$ref" : "#/components/schemas/BTUserMetricsInfo"
            }
          }
        } ]
      },
      "BTUserAdminSummaryInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTUserSummaryInfo"
        }, {
          "type" : "object",
          "properties" : {
            "activePlanId" : {
              "type" : "string"
            },
            "billingUpdateRequired" : {
              "type" : "boolean"
            },
            "companyRoles" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/CompanyRole"
              }
            },
            "createdAt" : {
              "type" : "string",
              "format" : "date-time"
            },
            "forumId" : {
              "type" : "string"
            },
            "systemUser" : {
              "type" : "boolean"
            },
            "totpEnabled" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "BTUserAppMessageBody" : {
        "type" : "object",
        "properties" : {
          "appElementSessionId" : {
            "type" : "string"
          },
          "clientId" : {
            "type" : "string"
          },
          "data" : {
            "type" : "string"
          },
          "event" : {
            "type" : "string"
          },
          "identityId" : {
            "type" : "string"
          },
          "messageId" : {
            "type" : "string"
          },
          "settingType" : {
            "$ref" : "#/components/schemas/BTApplicationSettingsType"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "webhookId" : {
            "type" : "string"
          }
        }
      },
      "BTUserAppSettingOperationType" : {
        "type" : "string",
        "enum" : [ "ADD", "REMOVE", "UPDATE" ]
      },
      "BTUserAppSettingsInfo" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTSettingInfo"
            }
          }
        }
      },
      "BTUserAppSettingsParams" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTSettingParam"
            }
          }
        }
      },
      "BTUserBasicSummaryInfo" : {
        "required" : [ "jsonType" ],
        "type" : "object",
        "properties" : {
          "jsonType" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "jsonType",
          "mapping" : {
            "user-summary" : "#/components/schemas/BTUserBasicSummaryInfo",
            "user-detail-summary" : "#/components/schemas/BTUserDetailSummaryInfo"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTBaseInfo"
        }, {
          "type" : "object",
          "properties" : {
            "href" : {
              "type" : "string",
              "description" : "URI to fetch complete information of the resource.",
              "format" : "uri"
            },
            "id" : {
              "type" : "string",
              "description" : "Id of the resource."
            },
            "image" : {
              "type" : "string"
            },
            "isOnshapeSupport" : {
              "type" : "boolean"
            },
            "name" : {
              "type" : "string",
              "description" : "Name of the resource."
            },
            "state" : {
              "type" : "integer",
              "format" : "int32"
            },
            "viewRef" : {
              "type" : "string",
              "description" : "URI to visualize the resource in a webclient if applicable.",
              "format" : "uri"
            }
          }
        } ]
      },
      "BTUserDetailSummaryInfo" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "jsonType",
          "mapping" : {
            "user-detail-summary" : "#/components/schemas/BTUserDetailSummaryInfo",
            "user-summary" : "#/components/schemas/BTUserSummaryInfo"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
        }, {
          "type" : "object",
          "properties" : {
            "documentationName" : {
              "type" : "string"
            },
            "email" : {
              "type" : "string"
            },
            "firstName" : {
              "type" : "string"
            },
            "lastName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTUserInfo" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "jsonType",
          "mapping" : {
            "userinfo" : "#/components/schemas/BTUserInfo",
            "BTUserAdminInfo" : "#/components/schemas/BTUserAdminInfo"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTUserSummaryInfo"
        }, {
          "type" : "object",
          "properties" : {
            "activePlan" : {
              "$ref" : "#/components/schemas/BTBillingPlanInfo"
            },
            "activePlanId" : {
              "type" : "string"
            },
            "activePurchases" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTPurchaseInfo"
              }
            },
            "activeTrialInfo" : {
              "$ref" : "#/components/schemas/BTTrialInfo"
            },
            "b2cId" : {
              "type" : "string"
            },
            "billingUpdateRequired" : {
              "type" : "boolean"
            },
            "cadSystemAtSignup" : {
              "type" : "string"
            },
            "countryCode" : {
              "type" : "string"
            },
            "createdAt" : {
              "type" : "string",
              "format" : "date-time"
            },
            "credential" : {
              "$ref" : "#/components/schemas/BTSessionCredentialInfo"
            },
            "defaultCompanyName" : {
              "type" : "string"
            },
            "description" : {
              "type" : "string"
            },
            "deviceInfo" : {
              "$ref" : "#/components/schemas/BTDeviceLoginSecretInfo"
            },
            "discounts" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTDiscountInfo"
              }
            },
            "enterprise" : {
              "type" : "boolean"
            },
            "eulaId" : {
              "type" : "string"
            },
            "eulaRequired" : {
              "type" : "boolean"
            },
            "evalCenter" : {
              "type" : "boolean"
            },
            "forumId" : {
              "type" : "string"
            },
            "intendedUse" : {
              "type" : "integer",
              "format" : "int32"
            },
            "lastTrialInfo" : {
              "$ref" : "#/components/schemas/BTTrialInfo"
            },
            "needToShowNewWalkthrough" : {
              "type" : "boolean"
            },
            "ownPurchase" : {
              "$ref" : "#/components/schemas/BTPurchaseInfo"
            },
            "phoneNumber" : {
              "type" : "string"
            },
            "proDiscoveryTrialRejected" : {
              "type" : "boolean"
            },
            "productType" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "redirectUrl" : {
              "type" : "string"
            },
            "role" : {
              "type" : "integer",
              "format" : "int32"
            },
            "roles" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTRole"
              }
            },
            "rumEnabled" : {
              "type" : "boolean"
            },
            "showRenewStudentPages" : {
              "type" : "boolean"
            },
            "startupPage" : {
              "type" : "integer",
              "format" : "int32"
            },
            "systemUser" : {
              "type" : "boolean"
            },
            "totpEnabled" : {
              "type" : "boolean"
            },
            "tracingEnabled" : {
              "type" : "boolean"
            },
            "trialInfos" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTTrialInfo"
              }
            }
          }
        } ]
      },
      "BTUserMetricsInfo" : {
        "type" : "object",
        "properties" : {
          "createdDocuments" : {
            "type" : "integer",
            "format" : "int64"
          },
          "hasRecentlyOpenedDocuments" : {
            "type" : "boolean"
          },
          "hasSharedDocuments" : {
            "type" : "boolean"
          },
          "hasTrashedDocuments" : {
            "type" : "boolean"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "privateDocuments" : {
            "type" : "integer",
            "format" : "int64"
          },
          "publicDocuments" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sharedDocuments" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userAccountLimitsCrossed" : {
            "type" : "boolean"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTUserOAuth2SummaryInfo" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTUserSummaryInfo"
        }, {
          "type" : "object",
          "properties" : {
            "clientId" : {
              "type" : "string"
            },
            "companyPlan" : {
              "type" : "boolean"
            },
            "oauth2Scopes" : {
              "type" : "integer",
              "format" : "int64"
            },
            "planGroup" : {
              "type" : "string"
            },
            "role" : {
              "type" : "integer",
              "format" : "int32"
            },
            "roles" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/BTRole"
              }
            }
          }
        } ]
      },
      "BTUserSettingsInfo" : {
        "type" : "object",
        "properties" : {
          "axisRotationLock" : {
            "type" : "boolean"
          },
          "commonUnits" : {
            "$ref" : "#/components/schemas/BTCommonUnitsInfo"
          },
          "customColors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "defaultUnits" : {
            "$ref" : "#/components/schemas/BTDefaultUnitsInfo"
          },
          "displayAssemblyProperties" : {
            "type" : "boolean"
          },
          "drawingBackgroundId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "enforceApplicationAcl" : {
            "type" : "boolean"
          },
          "exportDrawingOptions" : {
            "type" : "string"
          },
          "exportSolidOptions" : {
            "type" : "string"
          },
          "graphicsRenderMode" : {
            "type" : "string"
          },
          "graphicsSmoothEdge" : {
            "type" : "string"
          },
          "highlightLaminarEdges" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "importOptions" : {
            "type" : "string"
          },
          "isolateHideTransparent" : {
            "type" : "string"
          },
          "locale" : {
            "type" : "string"
          },
          "materialLibrarySettings" : {
            "$ref" : "#/components/schemas/BTMaterialLibrarySettingsInfo"
          },
          "miniToolbarSettings" : {
            "type" : "string"
          },
          "mouseActions" : {
            "type" : "string"
          },
          "perspectiveModeOn" : {
            "type" : "string"
          },
          "previousSketchFont" : {
            "type" : "string"
          },
          "reverseScrollWheelZoomDirection" : {
            "type" : "boolean"
          },
          "selectItemViewStateInfos" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTSelectItemViewStateInfo"
            }
          },
          "startupPage" : {
            "type" : "integer",
            "format" : "int32"
          },
          "substituteApprovers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTSubstituteApproverInfo"
            }
          },
          "theme" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unitsDisplayPrecision" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "unitsMaximumDisplayPrecision" : {
            "$ref" : "#/components/schemas/BTUnitsMaximumDisplayPrecisionInfo"
          },
          "use24HourTime" : {
            "type" : "boolean"
          },
          "useDecimalComma" : {
            "type" : "boolean"
          },
          "viewManipulationMouseKeyMapping" : {
            "$ref" : "#/components/schemas/BTViewManipulationMouseKeyMappingInfo"
          },
          "viewMappingId" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "x-BTVisibility-properties" : {
          "hideAhaAppOnboarding" : "INTERNAL"
        }
      },
      "BTUserState" : {
        "type" : "string",
        "enum" : [ "DELETED", "ACTIVE", "INACTIVE", "REQUESTED", "APPROVED", "REQUEST_EXPIRED", "ALL", "MARKED_FOR_DELETION" ]
      },
      "BTUserSummaryInfo" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "jsonType",
          "mapping" : {
            "user-summary" : "#/components/schemas/BTUserSummaryInfo",
            "companyuser" : "#/components/schemas/BTCompanyUserSummaryInfo",
            "BTUserAdminSummaryInfo" : "#/components/schemas/BTUserAdminSummaryInfo",
            "userinfo" : "#/components/schemas/BTUserInfo",
            "BTUserOAuth2SummaryInfo" : "#/components/schemas/BTUserOAuth2SummaryInfo"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTUserDetailSummaryInfo"
        }, {
          "type" : "object",
          "properties" : {
            "company" : {
              "$ref" : "#/components/schemas/BTCompanySummaryInfo"
            },
            "documentationNameOverride" : {
              "type" : "string"
            },
            "globalPermissions" : {
              "$ref" : "#/components/schemas/GlobalPermissionInfo"
            },
            "invitationState" : {
              "type" : "integer",
              "format" : "int32"
            },
            "isGuest" : {
              "type" : "boolean"
            },
            "isLight" : {
              "type" : "boolean"
            },
            "lastLoginTime" : {
              "type" : "string",
              "format" : "date-time"
            },
            "personalMessageAllowed" : {
              "type" : "boolean"
            },
            "source" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "BTValueAndUse-4696" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "use" : {
            "$ref" : "#/components/schemas/GBTValueUse"
          },
          "value" : {
            "$ref" : "#/components/schemas/BTFSValue-1888"
          }
        }
      },
      "BTVariableInfo" : {
        "required" : [ "expression", "name", "type", "value" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Variable description"
          },
          "expression" : {
            "type" : "string",
            "description" : "Variable expression"
          },
          "name" : {
            "type" : "string",
            "description" : "Variable name"
          },
          "type" : {
            "$ref" : "#/components/schemas/GBTVariableType"
          },
          "value" : {
            "type" : "string",
            "description" : "Variable formatted value"
          }
        },
        "description" : "Variables in the VariableTable"
      },
      "BTVariableParams" : {
        "required" : [ "expression", "name", "type" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Variable description"
          },
          "expression" : {
            "type" : "string",
            "description" : "Variable definition expression"
          },
          "name" : {
            "pattern" : "^[a-zA-Z_][a-zA-Z0-9_]*$",
            "type" : "string",
            "description" : "Variable name"
          },
          "type" : {
            "type" : "string",
            "description" : "VariableType name, from FeatureScript VariableType"
          }
        }
      },
      "BTVariableStudioReferenceInfo" : {
        "required" : [ "referenceElementId" ],
        "type" : "object",
        "properties" : {
          "entireVariableStudio" : {
            "type" : "boolean",
            "description" : "Whether all variables in the referenced variable studio are included"
          },
          "referenceDocumentId" : {
            "type" : "string",
            "description" : "DocumentId of referenced variable studio, blank for intra-workspace references"
          },
          "referenceElementId" : {
            "type" : "string",
            "description" : "ElementId of referenced variable studio"
          },
          "referenceVersionId" : {
            "type" : "string",
            "description" : "VersionId of referenced variable studio, blank for intra-workspace references"
          },
          "variableNames" : {
            "type" : "array",
            "description" : "Optional list of selected variables",
            "items" : {
              "type" : "string",
              "description" : "Optional list of selected variables"
            }
          }
        },
        "description" : "List of variable studio references"
      },
      "BTVariableStudioReferenceListInfo" : {
        "type" : "object",
        "properties" : {
          "references" : {
            "type" : "array",
            "description" : "List of variable studio references",
            "items" : {
              "$ref" : "#/components/schemas/BTVariableStudioReferenceInfo"
            }
          }
        }
      },
      "BTVariableStudioReferenceSpec-5278" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTFeatureSpec-129"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTVariableStudioScopeInfo" : {
        "required" : [ "isAutomaticallyInserted" ],
        "type" : "object",
        "properties" : {
          "isAutomaticallyInserted" : {
            "type" : "boolean",
            "description" : "Whether variable studio is automatically inserted into part studios and assemblies in the workspace"
          }
        }
      },
      "BTVariableTableInfo" : {
        "required" : [ "variables" ],
        "type" : "object",
        "properties" : {
          "variableStudioReference" : {
            "$ref" : "#/components/schemas/BTVariableStudioReferenceInfo"
          },
          "variables" : {
            "type" : "array",
            "description" : "Variables in the VariableTable",
            "items" : {
              "$ref" : "#/components/schemas/BTVariableInfo"
            }
          }
        }
      },
      "BTVariableTableRowMetadata-3912" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTTableBaseRowMetadata-3181"
        }, {
          "type" : "object",
          "properties" : {
            "btType" : {
              "type" : "string"
            },
            "crossHighlightData" : {
              "$ref" : "#/components/schemas/BTTableBaseCrossHighlightData-2609"
            },
            "info" : {
              "type" : "string"
            },
            "isFullyEditable" : {
              "type" : "boolean"
            },
            "isRecursiveImport" : {
              "type" : "boolean"
            },
            "lastWritingFeatureNodeId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BTVector2d-1812" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "x" : {
            "type" : "number",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "BTVector3d-389" : {
        "type" : "object",
        "properties" : {
          "btType" : {
            "type" : "string",
            "description" : "Type of JSON object."
          },
          "x" : {
            "type" : "number",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "format" : "double"
          },
          "z" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "BTVersionGraphMode" : {
        "type" : "string",
        "enum" : [ "ALL_BRANCHES", "ACTIVE_BRANCH", "ALL_BRANCHES_WITH_WORKSPACES", "ACTIVE_BRANCH_WITH_PARENTS" ]
      },
      "BTVersionInfo" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creator" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "description" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "lastModifier" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "metadataWorkspaceId" : {
            "type" : "string"
          },
          "microversion" : {
            "type" : "string"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "overrideDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "parent" : {
            "type" : "string"
          },
          "purpose" : {
            "type" : "integer",
            "format" : "int32"
          },
          "thumbnail" : {
            "$ref" : "#/components/schemas/BTThumbnailInfo"
          },
          "type" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTVersionOrWorkspaceMergeInfo" : {
        "type" : "object",
        "properties" : {
          "defaultMergeStrategy" : {
            "$ref" : "#/components/schemas/BTMergeStrategy"
          },
          "id" : {
            "type" : "string"
          },
          "mergeStrategyElementOverrides" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BTMergeStrategy"
            }
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "BTVersionOrWorkspaceParams" : {
        "type" : "object",
        "properties" : {
          "clientInteractionMode" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "fromHistory" : {
            "type" : "boolean"
          },
          "isRelease" : {
            "type" : "boolean"
          },
          "microversionId" : {
            "type" : "string"
          },
          "missingBomTableTemplateId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "publishVersion" : {
            "type" : "boolean"
          },
          "purpose" : {
            "type" : "integer",
            "format" : "int32"
          },
          "readOnly" : {
            "type" : "boolean"
          },
          "versionId" : {
            "type" : "string"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTViewDataInfo" : {
        "type" : "object",
        "properties" : {
          "angle" : {
            "type" : "number",
            "format" : "double"
          },
          "cameraViewport" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "isPerspective" : {
            "type" : "boolean"
          },
          "viewMatrix" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }
      },
      "BTViewDataParams" : {
        "type" : "object",
        "properties" : {
          "angle" : {
            "type" : "number",
            "format" : "double"
          },
          "cameraViewport" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "isPerspective" : {
            "type" : "boolean"
          },
          "viewMatrix" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }
      },
      "BTViewFeatureBaseInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the view feature."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the view feature."
          }
        },
        "description" : "Describes a view feature."
      },
      "BTViewManipulationMouseKeyMappingInfo" : {
        "type" : "object",
        "properties" : {
          "axisRotate3DMapping" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTKeyMouseValuesInfo"
            }
          },
          "pan2DMapping" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTKeyMouseValuesInfo"
            }
          },
          "pan3DMapping" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTKeyMouseValuesInfo"
            }
          },
          "rotate3DMapping" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTKeyMouseValuesInfo"
            }
          },
          "zoom2DMapping" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTKeyMouseValuesInfo"
            }
          },
          "zoom3DMapping" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTKeyMouseValuesInfo"
            }
          }
        }
      },
      "BTWebClientCapabilitiesParams" : {
        "type" : "object",
        "properties" : {
          "angleInstancedArrays" : {
            "type" : "boolean"
          },
          "clientBrowserStorageQuota" : {
            "type" : "number",
            "format" : "double"
          },
          "clientBrowserStorageUsed" : {
            "type" : "number",
            "format" : "double"
          },
          "compressedTextureS3tc" : {
            "type" : "boolean"
          },
          "depthTexture" : {
            "type" : "boolean"
          },
          "devicePixelRatio" : {
            "type" : "number",
            "format" : "double"
          },
          "drawBuffers" : {
            "type" : "boolean"
          },
          "extTextureFilterAnisotropic" : {
            "type" : "boolean"
          },
          "has3dMouse" : {
            "type" : "boolean"
          },
          "oesElementIndexUint" : {
            "type" : "boolean"
          },
          "oesStandardDerivatives" : {
            "type" : "boolean"
          },
          "oesTextureFloat" : {
            "type" : "boolean"
          },
          "oesTextureFloatLinear" : {
            "type" : "boolean"
          },
          "oesTextureHalfFloat" : {
            "type" : "boolean"
          },
          "oesTextureHalfFloatLinear" : {
            "type" : "boolean"
          },
          "oesVertexArrayObject" : {
            "type" : "boolean"
          },
          "renderer" : {
            "type" : "string"
          },
          "screenHeight" : {
            "type" : "integer",
            "format" : "int32"
          },
          "screenWidth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "supportsWebGL2" : {
            "type" : "boolean"
          },
          "supportsWebGPU" : {
            "type" : "boolean"
          },
          "vendor" : {
            "type" : "string"
          }
        }
      },
      "BTWebRendererPerformanceMeasurementParams" : {
        "type" : "object",
        "properties" : {
          "linesPerSecond" : {
            "type" : "number",
            "format" : "float"
          },
          "renderer" : {
            "type" : "string"
          },
          "trianglesPerSecond" : {
            "type" : "number",
            "format" : "float"
          },
          "vendor" : {
            "type" : "string"
          }
        }
      },
      "BTWebhookInfo" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string",
            "description" : "Company admins can register webhooks to listen to all company events."
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/BTUserSummaryInfo"
          },
          "data" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "droppedEventCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "events" : {
            "type" : "array",
            "description" : "List of events for which webhook callback is invoked.",
            "items" : {
              "type" : "string",
              "description" : "List of events for which webhook callback is invoked."
            }
          },
          "externalSessionId" : {
            "type" : "string",
            "description" : "Applications can pass this parameter as X-Session-ID with every REST call to distinguish webhooks triggered by self."
          },
          "filter" : {
            "type" : "string"
          },
          "folderId" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "isTransient" : {
            "type" : "boolean",
            "description" : "Transient webhooks are automatically cleaned up after a period of inactivity.",
            "default" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "options" : {
            "$ref" : "#/components/schemas/BTWebhookOptions"
          },
          "projectId" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTWebhookLifecycleMessageBody" : {
        "type" : "object",
        "properties" : {
          "appElementSessionId" : {
            "type" : "string"
          },
          "data" : {
            "type" : "string"
          },
          "event" : {
            "type" : "string"
          },
          "messageId" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "webhookId" : {
            "type" : "string"
          }
        }
      },
      "BTWebhookOptions" : {
        "type" : "object",
        "properties" : {
          "collapseEvents" : {
            "type" : "boolean"
          }
        }
      },
      "BTWebhookParams" : {
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "string"
          },
          "companyId" : {
            "type" : "string",
            "description" : "Company admins can register webhooks to listen to all company events."
          },
          "data" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "events" : {
            "type" : "array",
            "description" : "List of events for which webhook callback is invoked.",
            "items" : {
              "type" : "string",
              "description" : "List of events for which webhook callback is invoked."
            }
          },
          "externalSessionId" : {
            "type" : "string",
            "description" : "Applications can pass this parameter as X-Session-ID with every REST call to distinguish webhooks triggered by self."
          },
          "filter" : {
            "type" : "string"
          },
          "folderId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "isTransient" : {
            "type" : "boolean",
            "description" : "Transient webhooks are automatically cleaned up after a period of inactivity.",
            "default" : true
          },
          "linkDocumentId" : {
            "type" : "string"
          },
          "options" : {
            "$ref" : "#/components/schemas/BTWebhookOptions"
          },
          "partId" : {
            "type" : "string"
          },
          "projectId" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "userId" : {
            "type" : "string"
          },
          "versionId" : {
            "type" : "string"
          },
          "workspaceId" : {
            "type" : "string"
          }
        }
      },
      "BTWorkflowActionInfo" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string"
          },
          "allowIfApprovers" : {
            "type" : "boolean"
          },
          "allowIfNoApprovers" : {
            "type" : "boolean"
          },
          "alwaysAllow" : {
            "type" : "boolean"
          },
          "isAdminOverride" : {
            "type" : "boolean"
          },
          "isApproverAction" : {
            "type" : "boolean"
          },
          "label" : {
            "type" : "string"
          },
          "requiredProperties" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tooltip" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/BTTransitionType"
          },
          "uiHint" : {
            "type" : "string"
          }
        }
      },
      "BTWorkflowAuditLogEntryInfo" : {
        "type" : "object",
        "properties" : {
          "approvalOverride" : {
            "type" : "boolean"
          },
          "approverIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "commentId" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "entryType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "featureScriptConsole" : {
            "type" : "string"
          },
          "featureScriptNotices" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "featureScriptResponse" : {
            "type" : "object"
          },
          "id" : {
            "type" : "string"
          },
          "objectId" : {
            "type" : "string"
          },
          "propertyUpdates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTPropertyUpdateInfo"
            }
          },
          "supportCode" : {
            "type" : "string"
          },
          "userId" : {
            "type" : "string"
          },
          "workflowAction" : {
            "type" : "string"
          },
          "workflowState" : {
            "type" : "string"
          },
          "workflowTransition" : {
            "type" : "string"
          }
        }
      },
      "BTWorkflowAuditLogInfo" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string"
          },
          "debugMicroversionId" : {
            "type" : "string"
          },
          "entries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTWorkflowAuditLogEntryInfo"
            }
          },
          "objectId" : {
            "type" : "string"
          },
          "objectType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "publishedWorkflowId" : {
            "$ref" : "#/components/schemas/BTPublishedWorkflowId"
          }
        }
      },
      "BTWorkflowMessageBody" : {
        "type" : "object",
        "properties" : {
          "appElementSessionId" : {
            "type" : "string"
          },
          "data" : {
            "type" : "string"
          },
          "event" : {
            "type" : "string"
          },
          "messageId" : {
            "type" : "string"
          },
          "objectId" : {
            "type" : "string"
          },
          "objectType" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "transitionName" : {
            "type" : "string"
          },
          "webhookId" : {
            "type" : "string"
          },
          "workflowId" : {
            "type" : "string"
          }
        }
      },
      "BTWorkflowObserverEntryType" : {
        "type" : "string",
        "enum" : [ "USER", "TEAM", "ROLE", "ALIAS" ]
      },
      "BTWorkflowObserverOptionInfo" : {
        "type" : "object",
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/BTAliasInfo"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "identityType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "role" : {
            "$ref" : "#/components/schemas/BTRbacRoleInfo"
          },
          "team" : {
            "$ref" : "#/components/schemas/BTTeamSummaryInfo"
          },
          "user" : {
            "$ref" : "#/components/schemas/BTUserSummaryInfo"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        },
        "description" : "Array of items in the current page."
      },
      "BTWorkflowObserverState" : {
        "type" : "string",
        "enum" : [ "NONE", "APPROVED", "REJECTED", "OVERRIDDEN" ]
      },
      "BTWorkflowPropertyInfo" : {
        "type" : "object",
        "properties" : {
          "aggregationSkippedFilteredOutValues" : {
            "type" : "boolean"
          },
          "computedAssemblyProperty" : {
            "type" : "boolean"
          },
          "computedProperty" : {
            "type" : "boolean"
          },
          "computedPropertyError" : {
            "type" : "string"
          },
          "computedPropertyEvalInfo" : {
            "type" : "string"
          },
          "dateFormat" : {
            "type" : "string"
          },
          "defaultValue" : {
            "type" : "object"
          },
          "dirty" : {
            "type" : "boolean"
          },
          "editable" : {
            "type" : "boolean"
          },
          "editableInUi" : {
            "type" : "boolean"
          },
          "enumValues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTMetadataEnumValueInfo"
            }
          },
          "hideInUi" : {
            "type" : "boolean"
          },
          "initialValue" : {
            "type" : "object"
          },
          "isApproverProperty" : {
            "type" : "boolean"
          },
          "isNotifierProperty" : {
            "type" : "boolean"
          },
          "multivalued" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "observers" : {
            "type" : "array",
            "writeOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/BTWorkflowableObjectObserver"
            }
          },
          "propertyId" : {
            "type" : "string"
          },
          "propertyOverrideStatus" : {
            "type" : "integer",
            "description" : "0: Unknown | 1: Not computed | 2: Computed without override | 3: Computed with override | 4: Computed with subassembly overrides | 5: Overridden",
            "format" : "int32"
          },
          "propertySource" : {
            "type" : "integer",
            "format" : "int32"
          },
          "required" : {
            "type" : "boolean"
          },
          "schemaId" : {
            "type" : "string"
          },
          "teamsOnly" : {
            "type" : "boolean"
          },
          "uiHints" : {
            "$ref" : "#/components/schemas/BTMetadataPropertyUiHintsInfo"
          },
          "usersOnly" : {
            "type" : "boolean"
          },
          "validator" : {
            "$ref" : "#/components/schemas/BTMetadataPropertyValidatorInfo"
          },
          "value" : {
            "type" : "object"
          },
          "valueType" : {
            "type" : "string"
          }
        }
      },
      "BTWorkflowSnapshotInfo" : {
        "type" : "object",
        "properties" : {
          "actions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTWorkflowActionInfo"
            }
          },
          "approverIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "canBeDiscarded" : {
            "type" : "boolean"
          },
          "debugMicroversionId" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "isCreator" : {
            "type" : "boolean"
          },
          "isDiscarded" : {
            "type" : "boolean"
          },
          "isFrozen" : {
            "type" : "boolean"
          },
          "isSetup" : {
            "type" : "boolean"
          },
          "metadataState" : {
            "type" : "string"
          },
          "notifierIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "state" : {
            "$ref" : "#/components/schemas/BTWorkflowStateInfo"
          },
          "usesExternalPlm" : {
            "type" : "boolean"
          }
        }
      },
      "BTWorkflowStateInfo" : {
        "type" : "object",
        "properties" : {
          "approverSourceProperty" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "editPermissions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "editableProperties" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "nonEditableProperties" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "notifierSourceProperty" : {
            "type" : "string"
          },
          "requiredItemProperties" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "requiredProperties" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BTWorkflowableObjectInfo" : {
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "description" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedBy" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTWorkflowPropertyInfo"
            }
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/BTWorkflowSnapshotInfo"
          },
          "workflowError" : {
            "type" : "string",
            "writeOnly" : true
          },
          "workflowId" : {
            "$ref" : "#/components/schemas/BTPublishedWorkflowId"
          }
        }
      },
      "BTWorkflowableObjectObserver" : {
        "type" : "object",
        "properties" : {
          "adminOverride" : {
            "type" : "boolean"
          },
          "approvalDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "approvalState" : {
            "$ref" : "#/components/schemas/BTWorkflowObserverState"
          },
          "approverId" : {
            "type" : "string"
          },
          "approverName" : {
            "type" : "string"
          },
          "associatedStates" : {
            "type" : "string"
          },
          "companyId" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "type" : "string"
          },
          "creatorOverride" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "entryId" : {
            "type" : "string"
          },
          "entryType" : {
            "$ref" : "#/components/schemas/BTWorkflowObserverEntryType"
          },
          "id" : {
            "type" : "string"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "new" : {
            "type" : "boolean"
          },
          "objectId" : {
            "type" : "string"
          },
          "observationType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "propertyId" : {
            "type" : "string"
          },
          "rejectionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "removable" : {
            "type" : "boolean"
          }
        }
      },
      "BTWorkspaceInfo" : {
        "type" : "object",
        "properties" : {
          "canDelete" : {
            "type" : "boolean"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creator" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "description" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "description" : "URI to fetch complete information of the resource.",
            "format" : "uri"
          },
          "id" : {
            "type" : "string",
            "description" : "Id of the resource."
          },
          "isReadOnly" : {
            "type" : "boolean"
          },
          "lastModifier" : {
            "$ref" : "#/components/schemas/BTUserBasicSummaryInfo"
          },
          "microversion" : {
            "type" : "string"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the resource."
          },
          "overrideDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "parent" : {
            "type" : "string"
          },
          "parents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTVersionInfo"
            }
          },
          "protectionRule" : {
            "$ref" : "#/components/schemas/BTWorkspaceProtectionRuleOptions"
          },
          "state" : {
            "$ref" : "#/components/schemas/BTObjectState"
          },
          "thumbnail" : {
            "$ref" : "#/components/schemas/BTThumbnailInfo"
          },
          "type" : {
            "type" : "string"
          },
          "viewRef" : {
            "type" : "string",
            "description" : "URI to visualize the resource in a webclient if applicable.",
            "format" : "uri"
          }
        }
      },
      "BTWorkspaceMessageBody" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BTDocumentMessageBody"
        }, {
          "type" : "object",
          "properties" : {
            "documentMicroversionId" : {
              "type" : "string",
              "description" : "The resultant document microverion if applicable created due to workspace modification."
            }
          }
        } ]
      },
      "BTWorkspaceProtectionRuleOptions" : {
        "type" : "string",
        "enum" : [ "OPEN", "MERGE", "FAST_FORWARD_MERGE" ]
      },
      "BTZipFileInfo" : {
        "type" : "object",
        "properties" : {
          "files" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BlobItem" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Item"
        }, {
          "type" : "object",
          "properties" : {
            "dataTypeForResponse" : {
              "type" : "string"
            },
            "filename" : {
              "type" : "string"
            },
            "foreignDataId" : {
              "type" : "string"
            },
            "href" : {
              "type" : "string"
            },
            "prettyType" : {
              "type" : "string"
            },
            "safeToShow" : {
              "type" : "boolean"
            },
            "specifiedUnit" : {
              "type" : "string"
            },
            "unupdatable" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "Buffer" : {
        "type" : "object",
        "properties" : {
          "byteLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "name" : {
            "type" : "string"
          },
          "uri" : {
            "type" : "string"
          }
        }
      },
      "BufferModel" : {
        "type" : "object",
        "properties" : {
          "bufferData" : {
            "type" : "object",
            "properties" : {
              "short" : {
                "type" : "integer",
                "format" : "int32"
              },
              "char" : {
                "type" : "string"
              },
              "int" : {
                "type" : "integer",
                "format" : "int32"
              },
              "long" : {
                "type" : "integer",
                "format" : "int64"
              },
              "float" : {
                "type" : "number",
                "format" : "float"
              },
              "double" : {
                "type" : "number",
                "format" : "double"
              },
              "direct" : {
                "type" : "boolean"
              },
              "readOnly" : {
                "type" : "boolean"
              }
            }
          },
          "byteLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "uri" : {
            "type" : "string"
          }
        }
      },
      "BufferView" : {
        "type" : "object",
        "properties" : {
          "buffer" : {
            "type" : "integer",
            "format" : "int32"
          },
          "byteLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "byteOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "byteStride" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "name" : {
            "type" : "string"
          },
          "target" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BufferViewModel" : {
        "type" : "object",
        "properties" : {
          "bufferModel" : {
            "$ref" : "#/components/schemas/BufferModel"
          },
          "bufferViewData" : {
            "type" : "object",
            "properties" : {
              "short" : {
                "type" : "integer",
                "format" : "int32"
              },
              "char" : {
                "type" : "string"
              },
              "int" : {
                "type" : "integer",
                "format" : "int32"
              },
              "long" : {
                "type" : "integer",
                "format" : "int64"
              },
              "float" : {
                "type" : "number",
                "format" : "float"
              },
              "double" : {
                "type" : "number",
                "format" : "double"
              },
              "direct" : {
                "type" : "boolean"
              },
              "readOnly" : {
                "type" : "boolean"
              }
            }
          },
          "byteLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "byteOffset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "byteStride" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "target" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "Callback" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "get$ref" : {
            "type" : "string"
          }
        },
        "additionalProperties" : {
          "$ref" : "#/components/schemas/PathItem"
        }
      },
      "Camera" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "name" : {
            "type" : "string"
          },
          "orthographic" : {
            "$ref" : "#/components/schemas/CameraOrthographic"
          },
          "perspective" : {
            "$ref" : "#/components/schemas/CameraPerspective"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "CameraOrthographic" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "xmag" : {
            "type" : "number",
            "format" : "float"
          },
          "ymag" : {
            "type" : "number",
            "format" : "float"
          },
          "zfar" : {
            "type" : "number",
            "format" : "float"
          },
          "znear" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "CameraPerspective" : {
        "type" : "object",
        "properties" : {
          "aspectRatio" : {
            "type" : "number",
            "format" : "float"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "yfov" : {
            "type" : "number",
            "format" : "float"
          },
          "zfar" : {
            "type" : "number",
            "format" : "float"
          },
          "znear" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "Category" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "plmId" : {
            "type" : "string"
          }
        }
      },
      "CombinedSketchEntityType" : {
        "type" : "object",
        "properties" : {
          "constraintType" : {
            "$ref" : "#/components/schemas/GBTConstraintType"
          },
          "entityType" : {
            "$ref" : "#/components/schemas/GBTSketchEntityType"
          }
        }
      },
      "CompanyRole" : {
        "type" : "object",
        "properties" : {
          "admin" : {
            "type" : "boolean"
          },
          "companyId" : {
            "type" : "string"
          },
          "companyName" : {
            "type" : "string"
          },
          "guest" : {
            "type" : "boolean"
          },
          "light" : {
            "type" : "boolean"
          }
        }
      },
      "Components" : {
        "type" : "object",
        "properties" : {
          "callbacks" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Callback"
            }
          },
          "examples" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Example"
            }
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Header"
            }
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Link"
            }
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Parameter"
            }
          },
          "pathItems" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PathItem"
            }
          },
          "requestBodies" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/RequestBody"
            }
          },
          "responses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ApiResponse"
            }
          },
          "schemas" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Schema"
            }
          },
          "securitySchemes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SecurityScheme"
            }
          }
        }
      },
      "ConfigurationEntry" : {
        "type" : "object",
        "properties" : {
          "parameterId" : {
            "type" : "string"
          },
          "parameterValue" : {
            "type" : "string"
          }
        }
      },
      "ConfigurationInfoEntry" : {
        "type" : "object",
        "properties" : {
          "explicit" : {
            "type" : "boolean"
          },
          "isCosmetic" : {
            "type" : "boolean"
          },
          "isVisible" : {
            "type" : "boolean"
          },
          "parameterAbbreviatedDisplayValue" : {
            "type" : "string"
          },
          "parameterDisplayValue" : {
            "type" : "string"
          },
          "parameterId" : {
            "type" : "string"
          },
          "parameterName" : {
            "type" : "string"
          },
          "parameterType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parameterValue" : {
            "type" : "string"
          }
        }
      },
      "Contact" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "name" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "CoordinatesInfo" : {
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "format" : "float"
          },
          "y" : {
            "type" : "number",
            "format" : "float"
          },
          "z" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "CoordinatesParams" : {
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "format" : "float"
          },
          "y" : {
            "type" : "number",
            "format" : "float"
          },
          "z" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "Discriminator" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "mapping" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "propertyName" : {
            "type" : "string"
          }
        }
      },
      "EditType" : {
        "type" : "string",
        "enum" : [ "NOTHING", "NEW_ROOT", "MOVE", "CHANGE", "CHANGE_FIELD", "INSERTION", "DELETION", "LIST" ]
      },
      "ElementType" : {
        "type" : "string",
        "enum" : [ "SCALAR", "VEC2", "VEC3", "VEC4", "MAT2", "MAT3", "MAT4" ]
      },
      "Encoding" : {
        "type" : "object",
        "properties" : {
          "allowReserved" : {
            "type" : "boolean"
          },
          "contentType" : {
            "type" : "string"
          },
          "explode" : {
            "type" : "boolean"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Header"
            }
          },
          "style" : {
            "$ref" : "#/components/schemas/StyleEnum"
          }
        }
      },
      "Entry" : {
        "type" : "object",
        "properties" : {
          "permissionSet" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "role" : {
            "$ref" : "#/components/schemas/BTRbacRoleInfo"
          }
        }
      },
      "Example" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "externalValue" : {
            "type" : "string"
          },
          "get$ref" : {
            "type" : "string"
          },
          "summary" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          },
          "valueSetFlag" : {
            "type" : "boolean"
          }
        }
      },
      "ExpandableState" : {
        "type" : "string",
        "enum" : [ "NOT_EXPANDABLE", "EXPANDED", "COLLAPSED" ]
      },
      "ExternalDocumentation" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "GBTAnnotationType" : {
        "type" : "string",
        "enum" : [ "DATUM", "GTOL", "DIMENSION_POSITION", "DIMENSION", "WELD", "UNKNOWN" ]
      },
      "GBTAppElementAssociativeDataType" : {
        "type" : "string",
        "enum" : [ "ONSHAPE_DRAWING_VIEW", "MODEL_TOPOLOGY", "MODEL_DEFINITION_FEATURE", "MODEL_DEFINITION_ENTITY", "UNKNOWN" ]
      },
      "GBTAppElementReferenceType" : {
        "type" : "string",
        "enum" : [ "UNKNOWN", "PARTSTUDIO", "ASSEMBLY", "PART", "FLATTENED_PART", "COMPOSITE_PART", "MESH_PART", "SURFACE", "SKETCH", "CURVE" ]
      },
      "GBTAppearanceType" : {
        "type" : "string",
        "enum" : [ "UNKNOWN", "SKETCH" ]
      },
      "GBTAssemblyFeatureDisplayStatus" : {
        "type" : "string",
        "enum" : [ "OK", "ERROR", "SUPPRESSED", "UNKNOWN" ]
      },
      "GBTAssemblySimulationType" : {
        "type" : "string",
        "enum" : [ "LINEAR_STATIC", "MODAL", "CONTACT_ANALYSIS", "UNKNOWN" ]
      },
      "GBTBSFeatureVisibility" : {
        "type" : "string",
        "enum" : [ "UNSET", "HIDDEN", "VISIBLE", "UNKNOWN" ]
      },
      "GBTBillOfMaterialsExclusionStatus" : {
        "type" : "string",
        "enum" : [ "NOT_EXCLUDED", "PARENT_EXCLUDED", "EXCLUDED", "UNKNOWN" ]
      },
      "GBTBillOfMaterialsExpansionStatus" : {
        "type" : "string",
        "enum" : [ "NOT_EXPANDABLE", "EXPANDED", "COLLAPSED", "UNKNOWN" ]
      },
      "GBTBillOfMaterialsSuppressionStatus" : {
        "type" : "string",
        "enum" : [ "UNSET", "SUPPRESSED", "UNSUPPRESSED", "UNKNOWN" ]
      },
      "GBTBodyType" : {
        "type" : "string",
        "enum" : [ "SOLID", "SHEET", "WIRE", "POINT", "MATE_CONNECTOR", "COMPOSITE", "UNKNOWN" ]
      },
      "GBTComputeStatus" : {
        "type" : "string",
        "enum" : [ "COMPUTED", "STALE", "COMPUTING", "ERROR", "UNDERDEFINED", "PREPARING", "UNKNOWN" ]
      },
      "GBTConfigurationParameterType" : {
        "type" : "string",
        "enum" : [ "ENUM", "BOOLEAN", "STRING", "QUANTITY" ]
      },
      "GBTConfiguredParentType" : {
        "type" : "string",
        "enum" : [ "FEATURE", "INSTANCE", "MATE", "MATE_CONNECTOR", "UNKNOWN" ]
      },
      "GBTConstraintType" : {
        "type" : "string",
        "enum" : [ "NONE", "COINCIDENT", "PARALLEL", "VERTICAL", "HORIZONTAL", "PERPENDICULAR", "CONCENTRIC", "MIRROR", "MIDPOINT", "TANGENT", "EQUAL", "LENGTH", "DISTANCE", "ANGLE", "RADIUS", "NORMAL", "FIX", "PROJECTED", "OFFSET", "CIRCULAR_PATTERN", "PIERCE", "LINEAR_PATTERN", "MAJOR_DIAMETER", "MINOR_DIAMETER", "QUADRANT", "DIAMETER", "SILHOUETTED", "CENTERLINE_DIMENSION", "INTERSECTED", "RHO", "EQUAL_CURVATURE", "BEZIER_DEGREE", "FREEZE", "UNKNOWN" ]
      },
      "GBTCurveTypeEnum" : {
        "type" : "string",
        "enum" : [ "OTHER", "LINE", "CIRCLE", "ELLIPSE", "BCURVE", "ICURVE", "UNKNOWN" ]
      },
      "GBTDataItemFormat" : {
        "type" : "string",
        "enum" : [ "X_T", "XMM", "STL", "ONSHAPE", "ZIP", "X_T_XMM_ZIP", "OBJ_MTL_ZIP", "X_B", "UNKNOWN" ]
      },
      "GBTDebugEntityColor" : {
        "type" : "string",
        "enum" : [ "RED", "GREEN", "BLUE", "CYAN", "YELLOW", "MAGENTA", "BLACK", "TRANSLUCENT_PURPLE", "FEATURE_ERROR", "FEATURE_DEBUG", "TRANSLUCENT_GREEN", "TRANSLUCENT_BLUE", "TRANSLUCENT_CYAN", "TRANSLUCENT_YELLOW", "TRANSLUCENT_BLACK", "TRANSLUCENT_ORANGE", "TRANSLUCENT_RED", "TRANSLUCENT_MAGENTA", "ORANGE", "UNKNOWN" ]
      },
      "GBTDebugEntityStyle" : {
        "type" : "string",
        "enum" : [ "DEFAULT", "STAR", "WITH_START", "ERROR", "UNKNOWN" ]
      },
      "GBTDisplayDataUsage" : {
        "type" : "string",
        "enum" : [ "BASE", "PREVIEW_BEFORE", "PREVIEW_AFTER", "PREVIEW_FINAL", "COMPARE_TARGET", "REFERENCE_REPAIR", "UNKNOWN" ]
      },
      "GBTEdgeTopology" : {
        "type" : "string",
        "enum" : [ "WIRE", "ONE_SIDED", "TWO_SIDED", "LAMINAR", "UNKNOWN" ]
      },
      "GBTEdgeType" : {
        "type" : "string",
        "enum" : [ "OTHER", "LINE", "SPLINE", "CIRCLE", "ELLIPSE", "INTERSECTION", "SPCURVE", "POLYLINE", "CONIC", "UNKNOWN" ]
      },
      "GBTElementBranchStatus" : {
        "type" : "string",
        "enum" : [ "CREATED", "DELETED", "EDITS", "NOT_ON_THIS_BRANCH", "NO_CHANGES", "UNKNOWN" ]
      },
      "GBTElementType" : {
        "type" : "string",
        "enum" : [ "PARTSTUDIO", "ASSEMBLY", "DRAWING", "FEATURESTUDIO", "BLOB", "APPLICATION", "TABLE", "BILLOFMATERIALS", "VARIABLESTUDIO", "PUBLICATIONITEM", "UNKNOWN" ]
      },
      "GBTEntityEdgeSmoothnessStatus" : {
        "type" : "string",
        "enum" : [ "UNKNOWN", "SMOOTH", "NOT_SMOOTH", "SMOOTH_V2" ]
      },
      "GBTEntityInferenceType" : {
        "type" : "string",
        "enum" : [ "PART_ORIGIN", "POINT", "CENTROID", "CENTER", "MID_POINT", "TOP_AXIS_POINT", "MID_AXIS_POINT", "BOTTOM_AXIS_POINT", "ORIGIN_X", "ORIGIN_Y", "ORIGIN_Z", "LOOP_CENTER", "VIRTUAL_SHARP", "UNKNOWN" ]
      },
      "GBTEntityType" : {
        "type" : "string",
        "enum" : [ "VERTEX", "EDGE", "FACE", "BODY", "DEGENERATE_EDGE", "UNKNOWN" ]
      },
      "GBTErrorStringEnum" : {
        "type" : "string",
        "enum" : [ "NO_ERROR", "UNKNOWN_OPERATION", "TOO_MANY_ENTITIES_SELECTED", "POINTS_COINCIDENT", "NO_TRANSLATION_DIRECTION", "NO_ROTATION_AXIS", "NO_TANGENT_PLANE", "NO_TANGENT_LINE", "INVALID_INPUT", "CANNOT_RESOLVE_ENTITIES", "CANNOT_EVALUATE_VERTEX", "CANNOT_RESOLVE_PLANE", "CANNOT_COMPUTE_BBOX", "CANNOT_BE_EMPTY", "CACHE_WRITE_FAILED", "CACHE_READ_FAILED", "HLR_FAILED", "BAD_GEOMETRY", "INVALID_RESULT", "MISSING_EXT_REF", "READ_FAILED", "WRITE_FAILED", "WRONG_TYPE", "TANGENT_PROPAGATION_FAILED", "REGEN_ERROR", "COULD_NOT_COMPUTE_TRANSFORM", "MATE_INVALID_MATE", "MATECONNECTOR_INVALID_MATE", "MATE_TWO_MATECONNECTORS_NEEDED", "MATECONNECTORS_ON_SAME_OCCURRENCE", "MATE_OVERDEFINED", "MATE_INCONSISTENT", "BOOLEAN_NEED_ONE_SOLID", "BOOLEAN_INVALID", "BOOLEAN_INTERSECT_FAIL", "BOOLEAN_SAME_INPUT", "BOOLEAN_BAD_INPUT", "BOOLEAN_UNION_NO_OP", "BOOLEAN_INTERSECT_NO_OP", "BOOLEAN_SUBTRACT_NO_OP", "CPLANE_INPUT_MIDPLANE", "CPLANE_INPUT_OFFSET_PLANE", "CPLANE_INPUT_POINT_PLANE", "CPLANE_INPUT_LINE_ANGLE", "CPLANE_INPUT_POINT_LINE", "CPLANE_INPUT_THREE_POINT", "CPLANE_FAILED", "DRAFT_NO_NEUTRAL_PLANE", "DRAFT_NO_DRAFT_FACE", "DRAFT_FAILED", "EXTRUDE_INVALID_REF_FACE", "EXTRUDE_INVALID_REF_SURFACE", "EXTRUDE_FAILED", "EXTRUDE_NO_DIRECTION", "EXTRUDE_INVALID_ENTITIES", "PATTERN_INPUT_TOO_MANY_INSTANCES", "PATTERN_INPUT_TOO_FEW_INSTANCES", "PATTERN_FACE_FAILED", "PATTERN_NOT_ON_BODY", "PATTERN_BODY_FAILED", "TRANSFORM_TRANSLATE_INPUT", "TRANSFORM_TRANSLATE_BY_DISTANCE_INPUT", "TRANSFORM_FAILED", "SHELL_FAILED", "EDGEBLEND_SMOOTH", "EDGEBLEND_FAILED", "DIRECT_EDIT_WRONG_CONCENTRIC", "DIRECT_EDIT_WRONG_EQ_RADIUS", "DIRECT_EDIT_NO_FILLET_FACES", "DIRECT_EDIT_NO_OFFSET", "DIRECT_EDIT_CONSTRAIN_FACE_FAILED", "DIRECT_EDIT_REPLACE_FACE_FAILED", "DIRECT_EDIT_DELETE_FACE_FAILED", "DIRECT_EDIT_MODIFY_FILLET_FAILED", "DIRECT_EDIT_MODIFY_FACE_FAILED", "DIRECT_EDIT_MOVE_FACE_FAILED", "DIRECT_EDIT_OFFSET_FACE_FAILED", "IMPORT_PART_FAILED", "IMPORT_ASSEMBLY_FAILED", "IMPRINT_FAILED", "REVOLVE_FAILED", "REVOLVE_2ND_DIR_FAILED", "REVOLVE_NOT_PLANAR", "REVOLVE_PERPENDICULAR", "REVOLVE_INVALID_ENTITIES", "SPLIT_FAILED", "SPLIT_INVALID_INPUT", "SWEEP_INVALID_PATH", "SWEEP_FAILED", "SWEEP_PATH_FAILED", "SWEEP_PROFILE_FAILED", "WIRE_CREATION_FAILED", "SKETCH_NO_PLANE", "SKETCH_INPUT_INVALID", "SKETCH_NOT_ACTIVE", "SKETCH_SOLVER_NOT_INITIALIZED", "SKETCH_EVALUATION_FAILED", "SKETCH_MODIFICATION_FAILED", "SKETCH_UPDATE_FAILED", "SKETCH_SOLVE_FAILED", "SKETCH_ADD_CONSTRAINT_FAILED", "SKETCH_ADD_DIMENSION_FAILED", "SKETCH_POSITION_DIMENSION_FAILED", "SKETCH_CONSTRAINT_NEEDS_SKETCH_ENTITY", "SKETCH_CONSTRAINT_UNKNOWN", "SKETCH_MISSING_ENTITY", "SKETCH_FILLET_INVALID_POINT", "SKETCH_FILLET_PARALLEL", "SKETCH_FILLET_FAIL", "SKETCH_USE_FAILED", "SKETCH_USE_PARTIAL", "SKETCH_SPLINE_FAILED", "SKETCH_BAD_SPLINE", "SKETCH_DRAG_ERROR", "SKETCH_PROJ_FAILED", "SKETCH_PROJ_PARTIAL", "SKETCH_TANGENT_ARC_FAILED", "SKETCH_TANGENT_NOT_FOUND", "SKETCH_OFFSET_FAILED", "SKETCH_OFFSET_DISTANCE", "SKETCH_TRIM_FAILED", "SKETCH_INFERENCE_FAILED", "SKETCH_MODIFY_DIM_FAILED", "SKETCH_DRAG_NO_SKETCH", "SKETCH_INFER_DIM_FAILED", "SKETCH_DELETE_PTS_FAILED", "SKETCH_DELETE_FAILED", "SKETCH_ARC_FAILED", "SKETCH_LINE_FAILED", "SKETCH_CIRCLE_FAILED", "SKETCH_RECTANGLE_FAILED", "SKETCH_TANGENT_ARC_INVALID_START", "SKETCH_CONSTRUCTION_POINT_FAILED", "SYS_INTERNAL_DESERIALIZATION", "SYS_SERVER_EXCEPTION", "SYS_ERROR_REGEN", "SYS_ERROR_MESSAGING", "CANNOT_RESOLVE_ELEMENT", "NOTHING_SELECTED", "SKETCH_ANGLE_TWO_LINES", "SKETCH_DIMENSION_DIFF_ENTITIES", "SKETCH_CONSTRAINT_DIFF_ENTITIES", "SKETCH_CONSTRAINT_TWO_ENTITIES", "SKETCH_DIMENSION_TWO_ENTITIES", "SKETCH_COINCIDENT_FAILED", "SKETCH_COINCIDENT_INPUT_ERROR", "SKETCH_COINCIDENT_DIFF_POINTS", "SKETCH_CONCENTRIC_INPUT_ERROR", "SKETCH_CONCENTRIC_FAILED", "SKETCH_EQUAL_INPUT_ERROR", "SKETCH_EQUAL_NO_ENDS", "SKETCH_EQUAL_FAILED", "SKETCH_FIX_ONE_ENT", "SKETCH_FIX_FAILED", "SKETCH_DIR_INTERNAL", "SKETCH_DIR_INPUT", "SKETCH_HORIZONTAL_FAILED", "SKETCH_VERTICAL_FAILED", "SKETCH_OFFSET_CONSTRAINT_FAILED", "SKETCH_PARALLEL_CONSTRAINT_FAILED", "SKETCH_PARALLEL_INPUT_ERROR", "SKETCH_DIMENSION_INPUT_ERROR", "SKETCH_DIMENSION_DIST_ERROR", "SKETCH_DIMENSION_FAILED", "SKETCH_NORMAL_NEED_LINE", "SKETCH_NORMAL_INPUT_ERROR", "SKETCH_NORMAL_INPUT_NEEDED", "SKETCH_CANNOT_SPLIT_INTO_GROUPS", "SKETCH_OFFSET_BAD_PAIR", "SKETCH_OFFSET_INPUT_ERROR", "SKETCH_MIDPOINT_INPUT_ERROR", "SKETCH_MIDPOINT_NEED_POINT", "SKETCH_MIDPOINT_NEED_DIFF_POINT", "SKETCH_MIDPOINT_MISSING_ENDS", "SKETCH_MIDPOINT_MISSING_PTS", "SKETCH_MIDPOINT_NO_INTERNAL_LINE", "SKETCH_MIDPOINT_NO_COINCIDENT", "SKETCH_MIDPOINT_FAILED", "SKETCH_PERPENDICULAR_INPUT_ERROR", "SKETCH_PERPENDICULAR_FAILED", "SKETCH_POINT_LINE_ONLY", "SKETCH_PROJECTION_UNKNOWN", "SKETCH_PROJECTION_FAILED", "SKETCH_SIL_PROJECTION_INPUT_ERROR", "SKETCH_SIL_PROJECTION_MISSING_POINT", "SKETCH_LENGTH_DIM_INPUT_ERROR", "SKETCH_LENGTH_DIM_MISSING_ENDS", "SKETCH_LENGTH_DIM_NOT_FOUND", "SKETCH_LENGTH_DIM_FAILED", "SKETCH_RADIUS_INPUT_ERROR", "SKETCH_RADIUS_DIM_FAILED", "SKETCH_TANGENT_INPUT_ERROR", "SKETCH_TANGENT_FAILED", "PART_QUERY_FAILED", "PART_QUERY_MULTI", "MATECONNECTOR_QUERY_FAILED", "MATECONNECTOR_QUERY_ORIGIN_FAILED", "MATECONNECTOR_QUERY_AXIS_FAILED", "MATECONNECTOR_QUERY_CSYS_FAILED", "ASSEMBLY_INSERT_WILL_CAUSE_CYCLES", "SKETCH_MIRROR_NEED_VALID_MIRROR_LINE", "SKETCH_MIRROR_NEED_ENTITIES_TO_MIRROR", "SKETCH_MIRROR_CONSTRAINT_FAILED", "SKETCH_MIRROR_FAILED", "SELF_INTERSECTING_CURVE_SELECTED", "SWEEP_START_NOT_ON_PROFILE", "PATTERN_DIRECTIONS_PARALLEL", "MATE_OCCURRENCE_NOT_VALID", "MATE_WITHIN_SAME_GROUP", "EXPORT_ASSEMBLY_UNKNOWN_NODE_TYPE", "EXPORT_ASSEMBLY_CREATE_INSTANCE_FAILED", "EXPORT_PARTS_AS_XTS_NOT_A_BODY", "EXPORT_PARTS_AS_XTS_FAILED_TO_WRITE_XT", "MATECONNECTOR_OWNER_PART_NOT_RESOLVED", "WIRE_CREATION_PARTIAL_FAILURE", "SERVER_IS_IN_INVALID_STATE", "SKETCH_EXTEND_FAILED", "FOLLOW_CYCLE_ERROR", "SKETCH_FILLET_INVALID_RADIUS", "SKETCH_CONSTRAINT_COINCIDENT_TWO_ENTITIES", "SKETCH_CONSTRAINT_CONCENTRIC_TWO_ENTITIES", "SKETCH_CONSTRAINT_EQUAL_TWO_ENTITIES", "SKETCH_CONSTRAINT_MIDPOINT_TWO_ENTITIES", "EXTRUDE_NO_SELECTED_REGION", "EXTRUDE_NO_REGION_IN_SKETCH", "DELETE_SELECT_PARTS", "COPY_SELECT_PARTS", "SPLIT_NO_CHANGE", "MIRROR_NO_PLANE", "MIRROR_SELECT_PARTS", "PATTERN_CIRCULAR_NO_AXIS", "PATTERN_SELECT_FACES", "PATTERN_SELECT_PARTS", "PATTERN_LINEAR_NO_DIR", "SHELL_SELECT_FACES", "DRAFT_SELECT_NEUTRAL", "DRAFT_SELECT_FACES", "CHAMFER_SELECT_EDGES", "FILLET_SELECT_EDGES", "EXTRUDE_SURF_NO_CURVE", "EXTRUDE_SELECT_TERMINATING_BODY", "EXTRUDE_SELECT_TERMINATING_SURFACE", "DIRECT_EDIT_SELECT_ANCHOR", "REVOLVE_SURF_NO_CURVE", "REVOLVE_SELECT_FACES", "REVOLVE_SELECT_AXIS", "SWEEP_SELECT_PROFILE", "SWEEP_SELECT_PATH", "DIRECT_EDIT_DELETE_SELECT_FACES", "DIRECT_EDIT_MODIFY_FILLET_SELECT", "DIRECT_EDIT_MODIFY_FACE_SELECT", "DIRECT_EDIT_REPLACE_FACE_SELECT", "DIRECT_EDIT_OFFSET_FACE_SELECT", "DIRECT_EDIT_MOVE_FACE_SELECT", "SELECT_MATECONNECTOR", "OVERDEFINED_ASSEMBLY", "PART_STUDIO_UPGRADE_SUCCESSFUL", "PART_STUDIO_UPGRADE_FAILED", "PART_STUDIO_UPGRADE_NONE", "MATE_GROUP_OCCURRENCES_UNRESOLVED", "SWEEP_SURF_NO_CURVE_PROFILE", "MATE_RESET_HAD_NO_EFFECT", "MATECONNECTOR_MULTIPLE_OCCURRENCES", "MATECONNECTOR_OCCURRENCE_NOT_RESOLVED", "ELEMENT_REFERENCE_CYCLE_DETECTED", "MATE_OVERDEFINES_ASSEMBLY", "MATE_CANNOT_RESOLVE_CONNECTORS", "SKETCH_EXCEEDS_BOUNDS", "SWEEP_SELF_INT", "SKETCH_UNSOLVABLE_CONSTRAINT", "RESTRUCTURE_INVALID_SOURCE_OR_TARGET", "CPLANE_INPUT_CURVE_POINT", "TRANSFORM_OCCURRENCES_HAD_NO_EFFECT", "HELIX_FAILED", "HELIX_INPUT_CONE", "RENDERER_NOT_AVAILABLE", "RENDERER_FAILED_TO_RENDER", "EXPRESSION_FAILED_VALIDATION", "VERSION_MISMATCH_ERROR", "EXTRUDE_UPTO_NEXT_NO_DIVISION", "MATE_BETWEEN_FIXED_OCCURRENCES", "THICKEN_SELECT_ENTITIES", "THICKEN_FAILED", "WORKSPACE_UPGRADE_SUCCESSFUL", "WORKSPACE_UPGRADE_FAILED", "WORKSPACE_UPGRADE_NONE", "SKETCH_CIRCULAR_PATTERN_FAILED", "DIRECT_EDIT_ALL_FILLET_FACES_SELECTED", "DIRECT_EDIT_FAILED_TO_IDENTIFY_FILLETS", "PARASOLID_IMPORT_FAILED", "FOLLOW_LEADER_HAS_NO_FUNCTIONALITY_ERROR", "MIRROR_SELECT_FACES", "RELATION_INVALID_RELATION", "RELATION_INVALID_MATE", "GEAR_RELATION_INVALID_MATE_TYPES", "SCREW_RELATION_INVALID_MATE_TYPES", "RACK_RELATION_INVALID_MATE_TYPES", "ROLLING_RELATION_INVALID_MATE_TYPES", "LINEAR_RELATION_INVALID_MATE_TYPES", "RELATION_OVERDEFINED", "RELATION_INCONSISTENT", "RELATION_SAME_OCCURRENCES", "SKETCH_SPLIT_FAILED", "SKETCH_CONSTRAINT_PIERCE_TWO_ENTITIES", "SKETCH_PIERCE_FAILED", "MIRROR_FACE_FAILED", "MIRROR_BODY_FAILED", "SKETCH_CANNOT_PIERCE_WITH_PLANE", "WITH_SUPPORT_CODE", "FILLET_FAIL_SMOOTH", "FILLET_FAILED", "CHAMFER_FAIL_SMOOTH", "CHAMFER_FAILED", "BOOLEAN_OFFSET_NO_FACES", "MATE_OCCURRENCE_SUPPRESSED", "MATECONNECTOR_OCCURRENCE_SUPPRESSED", "SKETCH_SPLINE_NEW_POINTS_TOO_CLOSE", "SKETCH_SPLINE_CANNOT_DELETE_ENDPOINTS", "SKETCH_SPLINE_POINT_TO_DELETE_NOT_FOUND", "ASSEMBLY_INSERT_FAILED", "SKETCH_PATTERN_UNKNOWN_FAILURE", "SKETCH_PATTERN_TOO_LARGE", "SKETCH_LINEAR_PATTERN_ZERO_LENGTH", "SKETCH_LINEAR_PATTERN_PARALLEL_DIRECTIONS", "SKETCH_CIRCULAR_PATTERN_ZERO_ANGLE", "SKETCH_ELLIPSE_FAILED", "SKETCH_ELLIPSE_FAILED_TOO_SMALL", "DELETE_PARTS_FAILED", "DELETE_PARTS_PARTIAL", "SKETCH_ELLIPSE_RADIUS_INPUT_ERROR", "QUADRANT_CONSTRAINT_INPUT", "SKETCH_QUADRANT_FAILED", "SKETCH_SPLINE_TOO_FEW_POINTS", "SKETCH_SPLINE_NOT_INTERPOLATED_SPLINE", "SKETCH_SPLINE_POINTS_NOT_DELETED", "SKETCH_TEXT_RECTANGLE_FAILED", "IMPORT_DERIVED_NO_PARTS", "LOFT_SELECT_PROFILES", "LOFT_PROFILE_SINGLE_FACE", "LOFT_PROFILE_SOLID", "LOFT_PROFILE_POINT", "LOFT_PROFILE_FAILED", "LOFT_SELECT_GUIDES", "LOFT_GUIDE_FAILED", "LOFT_PERIODIC_ERROR", "LOFT_GUIDE_POINT_INTERSECTION", "LOFT_GUIDE_PROFILE_INTERSECTION", "LOFT_VERTEX_MATCHING", "LOFT_DIRECTION_ERROR", "LOFT_PROFILE_ALIGNMENT", "LOFT_GUIDE_ALIGNMENT", "LOFT_VERTEX_ADDITIONS", "LOFT_FAILED", "LOFT_INVALID", "LOFT_ALIGNMENT_INFO", "LOFT_VERTEX_NOT_ON_PROFILE", "LOFT_PROFILE_NO_INNER_LOOPS", "LOFT_TWO_PROFILES", "CANNOT_OFFSET_ELLIPSE", "SKETCH_MIRROR_NEEDS_LINE_AND_TWO_OTHERS", "SKETCH_POLYGON_BAD_SIDE_COUNT", "SKETCH_DIRECTIONAL_GROUP_INPUT", "NAMED_VIEWS_DUPLICATE_NAME", "SILHOUETTE_USE_FAILED", "PASTE_SKETCH_METRICS_FAILURE", "PASTE_SKETCH_LIBRARY_MISMATCH", "PASTE_SKETCH_CLIPBOARD_EMPTY", "SKETCH_MIRROR_OFFSET_SPLINE", "SKETCH_MIRROR_CURVE_POINT", "LOFT_PERIODIC_GUIDE_ERROR", "SHELL_SELECT_PARTS", "RELATION_MATE_DOES_NOT_EXIST", "RELATION_MATE_IS_SUPPRESSED", "VARIABLE_NAME_INVALID", "LOFT_GUIDE_INFO", "HOLE_NO_POINTS", "HOLE_FAIL_BBOX", "HOLE_EMPTY_SCOPE", "HOLE_NO_HITS", "WITH_EXTRA_DATA", "HOLE_DISJOINT", "SKETCH_INSERT_DWG_CONVERSION_FAILURE", "HOLE_CBORE_TOO_SMALL", "HOLE_CBORE_TOO_DEEP", "HOLE_CSINK_TOO_SMALL", "HOLE_CSINK_TOO_DEEP", "SWEEP_PATH_NO_CONSTRUCTION", "SKETCH_IMAGE_RECTANGLE_FAILED", "ASSEMBLY_REPLICATE_NO_VALID_TARGET", "ASSEMBLY_REPLICATE_NO_MATCHING_TARGET", "LOFT_SHAPE_CONTROL_FAILED", "LOFT_START_CONDITIONS_FAILED", "LOFT_END_CONDITIONS_FAILED", "LOFT_NO_FACE_FOR_START_CLAMP", "LOFT_NO_FACE_FOR_END_CLAMP", "LOFT_NO_PLANE_FOR_START_CLAMP", "LOFT_NO_PLANE_FOR_END_CLAMP", "LOFT_NO_CLAMPS_ON_POINT_PROFILE", "EXPORT_NOT_IMPLEMENTED", "SKETCH_POLYGON_ZERO_RADIUS_FAIL", "DRAWING_FAILED_TO_RESOLVE_VIEW_REFERENCE", "DRAWING_PARTSTUDIO_EMPTY_AFTER_SECTION_CUT", "DRAWING_ASSEMBLY_DOES_NOT_CONTAIN_VISIBLE_INSTANCES", "DRAWING_ASSEMBLY_EMPTY_AFTER_SECTION_CUT", "DRAWING_VIEW_GENERATION_FAILED", "SKETCH_SLOT_FAILURE", "SKETCH_SLOT_PARTIAL_FAILURE", "NO_UNIT", "RESTRUCTURE_INVALID_SOURCE", "RESTRUCTURE_INVALID_TARGET", "MATE_MIN_MAX_LIMIT_VIOLATION", "REST_ASSEMBLY_GET_DOCUMENT_FAILED", "REST_ASSEMBLY_UNKNOWN_INSERTABLE_TYPE", "REST_ASSEMBLY_SETUP_EXCEPTION", "REST_ASSEMBLY_BEGIN_OPERATION_FAILED", "REST_ASSEMBLY_INSERT_INSTANCE_FAILED", "REST_ASSEMBLY_COMMIT_OPERATION_FAILED", "REST_ASSEMBLY_CLOSE_CLIENT_FAILED", "REST_ASSEMBLY_NULL_OCCURRENCES", "REST_ASSEMBLY_EMPTY_OCCURRENCE", "REST_ASSEMBLY_TRANSFORM_WRONG_SIZE", "ASSEMBLY_EMPTY_OCCURRENCE_LIST", "ASSEMBLY_NULL_TRANSFORM", "ASSEMBLY_TRANSFORM_NOT_RIGID", "ASSEMBLY_CANNOT_TRANSFORM_FIXED_OCCURRENCE", "ASSEMBLY_TRANSFORM_FAILED", "ASSEMBLY_OCCURRENCE_NOT_FOUND", "ASSEMBLY_REPLICATE_MULTIPLE_VALID_TARGET", "ASSEMBLY_REPLICATE_NO_TARGET_SELECTED", "CPLANE_INPUT_LINE_ANGLE2", "CPLANE_DEGENERATE_SELECTION", "CPLANE_SELECT_LINE_ANGLE_REFERENCE", "ASSEMBLY_REPLICATE_INVALID_SEED_INSTANCE", "CANNOT_USE_VARIABLES_IN_SKETCH_PATTERNS", "SKETCH_MIRROR_OFFSET_ELLIPSE", "EXTERNAL_REFERENCE_FAILED_TO_CREATE", "SPLIT_FACE_NO_CHANGE", "SKETCH_INTERSECTION_FAILED", "SKETCH_INTERSECTION_MULTIPLE_FAILED", "SKETCH_INTERSECTION_PARTIAL_FAILED", "FEATURE_ID_IN_PATH_DOES_NOT_MATCH_BODY", "FEATURE_NOT_FOUND", "FEATURE_DOES_NOT_MATCH", "FEATURE_HAS_INVALID_TYPE", "FEATURE_DOES_NOT_MATCH_ITS_FEATURE_SPEC", "FEATURE_BAD_SERIALIZATION_VERSION", "FEATURE_WRONG_SERIALIZATION_VERSION", "FEATURE_INVALID_ROLLBACK_INDEX", "FEATURE_ERROR_IN_INPUT", "FEATURE_CONCURRENCY_ERROR", "FEATURE_CHANGE_BREAKS_MODEL", "FEATURE_NODE_IDS_INVALID", "ROLLBACK_INDEX_INVALID", "FEATURE_NO_SOLIDS", "SKETCH_EXTERNAL_GEOMETRY_MISMATCH", "HOLE_EXCEEDS_MAX_LOCATIONS", "SKETCH_TEXT_IS_EMPTY", "SKETCH_INSERT_DWG_MAX_ENTITIES_EXCEEDED", "HOLE_TAP_DIA_TOO_LARGE", "ASSEMBLY_EMPTY_BODY", "SIMPLIFY_BODY_FAILED", "INVALID_VIEW_NAME", "PATTERN_SELECT_FEATURES", "MIRROR_SELECT_FEATURES", "PATTERN_FEATURE_FAILED", "SKETCH_TRANSFORM_FAILED", "TANGENT_MATE_TWO_ENTITIES_NEEDED", "HOLE_CANNOT_DETERMINE_LAST_BODY", "RESTRUCTURE_CANNOT_MODIFY_SAVED_VERSION", "REST_ASSEMBLY_EXTERNAL_REFERENCE_REQUIRES_VERSION", "REST_ASSEMBLY_EXTERNAL_REFERENCE_DISALLOWS_MICROVERSION", "REST_ASSEMBLY_VERSION_SUPPORTED_ONLY_FOR_EXTERNAL_REFERENCES", "SWEEP_BAD_LOCK_FACES", "SKETCH_TEXT_CANNOT_BE_CONSTRUCTION", "CUSTOM_ERROR", "BEND_BAD_CONFIGURATION", "BEND_WRONG_NUMBER_OF_ENTITIES", "BEND_BAD_CURVES", "BEND_GENERAL_ERROR", "BEND_EDGE_NO_EDGES", "BEND_EDGE_NO_SEED_ENTITY", "EXTEND_SHEET_BODY_NO_BODY", "EXTRACT_SURFACE_NO_FACES", "FLATTEN_NO_EDGES", "FLATTEN_NO_FACES", "FOLD_NO_BODIES", "BEND_PREP_NO_FACES", "BEND_PREP_NO_BODIES", "BEND_PREP_ERROR_FINDING_EDGE_LOCATIONS", "BEND_PREP_ERROR_IMPRINTING_EDGES", "ASSEMBLY_ANIMATE_MATE_START_AFTER_END", "ASSEMBLY_ANIMATE_NO_MATE", "ASSEMBLY_ANIMATE_MATE_SUPPRESSED", "TANGENT_MATE_GEOMETRY_NOT_SUPPORTED", "SKETCH_DIMENSION_INFINITY", "BOLEAN_INPUTS_NOT_SOLID", "FACE_IS_NOT_RECTANGLE", "HOLE_DESTROY_SOLID", "HELIX_INPUT_CIRCLE", "IMPORT_SCALING_NON_MESH_DATA", "EVALUATE_FACE_TANGENT_FOR_MESHES", "CANNOT_COMPUTE_CENTROID", "CANNOT_EVALUATE_DIMENSION", "CANNOT_IMPORT_MESH", "SKETCH_ELLIPSE_ZERO_AXIS", "TRANSFORM_SCALE_UNIFORMLY", "TRANSFORM_MATE_CONNECTORS", "ASSEMBLY_WRONG_ELEMENT_TYPE", "ASSEMBLY_ELEMENT_NOT_FOUND", "SHEET_METAL_TABLE_UNKNOWN_ERROR", "SHEET_METAL_TABLE_REGEN_ERROR", "SHEET_METAL_TABLE_READ_ONLY", "ASSEMBLY_PATTERN_INVALID_TYPE", "ASSEMBLY_PATTERN_DIRECTION_ERROR", "ASSEMBLY_PATTERN_NONPOSITIVE_LINEAR_DISTANCE", "ASSEMBLY_PATTERN_NONPOSITIVE_ANGLE", "ASSEMBLY_PATTERN_INVALID_SEED", "ASSEMBLY_PATTERN_INVALID_REFERENCE_MATE_CONNECTOR", "RESTORE_FEATURE_FAILED", "FACES_NOT_OWNED_BY_PARTS", "EDGES_NOT_OWNED_BY_PARTS", "SHEET_METAL_REBUILD_ERROR", "SHEET_METAL_INPUT_BODY_SHOULD_NOT_BE_SHEET_METAL", "SHEET_METAL_CANNOT_RECOGNIZE_PARTS", "SHEET_METAL_CANNOT_THICKEN", "SHEET_METAL_CONVERT_PLANE", "ASSEMBLY_PATTERN_AXIS_ERROR", "RIB_NO_PROFILES", "RIB_NO_PARTS", "RIB_PROFILE_FAILED", "RIB_BODY_FAILED", "RIB_NO_INTERSECTIONS", "RIB_MERGE_FAILED", "ASSEMBLY_NAMED_POSITIONS_SAVE_FAILED", "ASSEMBLY_NAMED_POSITIONS_LOAD_FAILED", "ASSEMBLY_NAMED_POSITIONS_NO_MATES_TO_SAVE", "ASSEMBLY_NAMED_POSITIONS_POSITION_NOT_FOUND", "SPHERE_FAILED", "ASSEMBLY_PATTERN_NOT_SUPPORTED", "ASSEMBLY_NAMED_POSITIONS_PARTIAL_LOAD_FAILURE", "ASSEMBLY_NAMED_POSITIONS_LOAD_SUCCEEDED_WITH_EXTRA_MATES", "ASSEMBLY_NAMED_POSITIONS_SAVED_MATE_NOT_FOUND_ON_LOAD", "SHEET_METAL_SINGLE_MODEL_NEEDED", "SHEET_METAL_ACTIVE_JOIN_NEEDED", "INSTANCE_QUERY_FAILED", "SHEET_METAL_ACTIVE_EDGE_NEEDED", "SHEET_METAL_FLANGE_NO_EDGES", "MESH_NOT_SUPPORTED", "SHEET_METAL_PARTS_PROHIBITED", "VARIABLE_CANNOT_EVALUATE", "DRAWING_ASSEMBLY_INVALID_SECTION_CUT", "DRAWING_PARTSTUDIO_INVALID_SECTION_CUT", "SHEET_METAL_COULD_NOT_UNFOLD", "PARAMETER_OUT_OF_RANGE", "SHEET_METAL_NO_0_ANGLE_BEND", "SHEET_METAL_FLAT_RIP_NO_EDIT", "SHEET_METAL_CANT_CHANGE_TO_FLAT", "PARAMETER_PRECONDITION_FAILED", "PARAMETER_SYNTAX_ERROR", "SHEET_METAL_CAN_ONLY_REMOVE", "SHEET_METAL_CAN_ONLY_SUBTRACT", "REST_ASSEMBLY_INVALID_FEATURE", "REST_ASSEMBLY_INVALID_BODY_TYPE", "PARTING_OUT_TARGET_READONLY", "SHEET_METAL_MULTI_SM_DEFAULT_RADIUS", "SHEET_METAL_FLANGE_FAIL_ALIGNMENT", "SHEET_METAL_FLANGE_FAIL_UP_TO", "SHEET_METAL_FLANGE_FAIL_UP_TO_ENTITY", "SHEET_METAL_FLANGE_FAIL", "SHEET_METAL_FLANGE_FAIL_LIMIT_OPP_FLANGE", "CANT_SPLIT_SHEET_METAL_BEND_FACE", "IN_CONTEXT_INSTANCE_INVALID_TARGET", "SHEET_METAL_SELF_INTERSECTING_MODEL", "SHEET_METAL_SELF_INTERSECTING_FLAT", "SHEET_METAL_NON_90_BUTT", "SHEET_METAL_RIP_STYLE_ERROR", "CANNOT_USE_MATECONNECTORS_IN_PATTERN", "CANNOT_COPY_MATECONNECTORS", "SHEET_METAL_CAN_ONLY_OFFSET", "MODIFIABLE_ENTITY_ONLY", "IN_CONTEXT_UPDATE_DELETED_ASSEMBLY", "IN_CONTEXT_UPDATE_EMPTY_INSTANCE", "IN_CONTEXT_UPDATE_INVALID_SOURCE", "IN_CONTEXT_UPDATE_INVALID_TARGET", "SHEET_METAL_NO_FEATURE_PATTERN", "CUSTOM_FEATURE_DEFINITION_NOT_FOUND", "SHEET_METAL_START_SELECT_BENDS", "SHEET_METAL_END_DONE", "PATH_EDGES_NOT_CONTINUOUS", "SHEET_METAL_RIP_FAIL_INTERNAL_EDGE", "SHEET_METAL_RIP_FAIL", "SHEET_METAL_RIP_MULTI_BODY", "SHEET_METAL_RIP_FAIL_NON_PLANAR", "PATTERN_CURVE_NO_EDGES", "SHEET_METAL_RIP_NO_CORNER", "SHEET_METAL_RIP_EVEN", "SHEET_METAL_RIP_WALL_NOT_FOUND", "SHEET_METAL_RIP_SAME_VERTEX", "SHEET_METAL_RIP_NEED_MORE_VERTICES", "SHEET_METAL_MAKE_JOINT_FAIL", "CURVE_PATTERN_START_OFF_PATH", "PART_LOAD_FAILED", "SHEET_METAL_MOVE_NOT_PLANAR", "SHEET_METAL_JOINT_FAIL_ADJACENT_FACES", "WRONG_PARASOLID_VERSION", "SHEET_METAL_SINGLE_MODEL_NEEDED_EDGES", "REST_ASSEMBLY_MISSING_INSTANCE_DOCUMENT_ID", "REST_ASSEMBLY_MISSING_INSTANCE_ELEMENT_ID", "FACE_CLASH", "CURVE_PATTERN_START_OFF_CLOSED_PATH", "SHEET_METAL_CUT_JOINT", "EXPORT_STL_NO_PARTS", "INPUT_NAME_TOO_LONG", "IMPORT_BODY_FAILED_CHECK", "DERIVED_BODIES_HAVE_FAULTS", "SHEET_METAL_BLOCKED_PATTERN", "SHEET_METAL_FLANGE_INTERNAL", "SHEET_METAL_TOO_THICK", "SHEET_METAL_BEND_END_NOT_A_CORNER", "SHEET_METAL_NOT_A_CLOSED_CORNER", "SHEET_METAL_CORNER_NOT_A_BEND_END", "RIB_ONLY_OPEN_PROFILES", "TAB_NO_LONGER_EXISTS", "CLINE_FAILED", "ILLEGAL_MODIFICATION", "ASSEMBLY_MATE_VALUE_SET_FAILED", "EXTRUDE_OFFSET_TOO_DEEP", "SHEET_METAL_CANNOT_MOVE_BEND_EDGE", "UP_TO_FACE_NOT_PARALLEL", "TRANSLATION_FACE_NOT_PLANAR", "MOVE_FACE_NO_INTERSECTION", "SWEEP_PATH_PROFILE_NO_INTERSECTION", "DIRECT_EDIT_MOVE_FACE_CREATE_SELECT", "SHEET_METAL_THICKEN_IN_CONTEXT_INFO", "CANNOT_DELETE_RHO_DIMENSION", "INVALID_RHO", "SKETCH_RHO_DIM_NOT_FOUND", "SKETCH_CONIC_FAILED", "TAB_NAME_TOO_LONG", "DIRECT_EDIT_DELETE_FACE_ALL_FACES", "SHEET_METAL_CORNER_BREAK_FAILED", "BOOLEAN_NO_TARGET_SURFACE", "BAD_BSPLINECURVE_DEFINITION", "REQUIRE_3D_BSPLINECURVE_DATA", "PERIODIC_BSPLINECURVE_NOT_CLOSED", "PERIODIC_BSPLINECURVE_NOT_SMOOTH", "RATIONAL_BSPLINECURVE_WEIGHT_NEGATIVE", "BSPLINECURVE_NOT_G1", "BRIDGING_CURVE_VERTEX_BOTH_SIDES", "BRIDGING_CURVE_ONE_EDGE_EACH_SIDE", "BRIDGING_CURVE_VERTEX_AT_END_OF_EDGE", "PROJECT_CURVES_PARALLEL_PLANES", "PROJECT_CURVES_DIFFERENT_SKETCHES", "SHEET_METAL_SELECT_PART", "VARIABLE_NOT_FOUND", "CANNOT_EDIT_FIXED_CONIC", "EXTRACT_WIRES_OVERLAPPING_EDGES", "EXTRACT_WIRES_NON_MANIFOLD", "EXTRACT_WIRES_NEEDS_EDGES", "SPLINE_TWO_POINTS", "CLOSED_SPLINE_THREE_POINTS", "TANGENCY_ONE_EDGE", "FIT_SPLINE_CANNOT_EVALUATE_END_CONDITION", "FIT_SPLINE_REPEATED_POINT", "FEATURE_ID_REQUIRED", "PARAMETER_NOT_FOUND", "PARAMETER_DOES_NOT_MATCH_ITS_FEATURE_SPEC", "SHEET_METAL_CORNER_BREAK_DISABLED", "SHEET_METAL_FILLET_NO_CONIC", "SHEET_METAL_CHAMFER_NO_TWO_OFFSETS", "SHEET_METAL_CHAMFER_NO_OFFSET_ANGLE", "SHEET_METAL_CHAMFER_MUST_BE_EQUAL_OFFSETS", "SHEET_METAL_ACTIVE_ENTITY_NEEDED", "SHEET_METAL_CORNER_BREAK_NOT_A_CORNER", "SHEET_METAL_CORNER_BREAK_NO_WALL", "SHEET_METAL_CORNER_BREAK_VERTEX_NOT_FREE", "SHEET_METAL_CORNER_BREAK_ATTRIBUTE_EXISTS", "FIT_SPLINE_ZERO_START_MAGNITUDE", "FIT_SPLINE_ZERO_END_MAGNITUDE", "SHEET_METAL_CORNER_BREAK_SELECT_ENTITIES", "EXTRUDE_SELECT_TERMINATING_VERTEX", "FILL_SURFACE_NO_EDGES", "FILL_SURFACE_DOUBLE_SELECTION", "FILL_SURFACE_MULTI_LOOP", "FILL_SURFACE_OPEN_LOOP", "FILL_SURFACE_FAIL", "FILL_SURFACE_ATTACH_FAIL", "FILL_SURFACE_G2_FAIL", "FILL_SURFACE_VERTEX_INTERPOLATION_FAIL", "LOFT_SPINE_DISJOINT_PATH", "LOFT_SPINE_SELF_INTERSECTING_PATH", "LOFT_SPINE_PATH_PROFILE_NO_INTERSECTION", "LOFT_SPINE_FAILED_XSECTIONS", "LOFT_SPINE_GUIDE_WITH_POINT_PROFILE", "LOFT_SPINE_PROFILES_NOT_IN_ORDER", "LOFT_SELECT_SPINE", "DOCUMENT_NOT_FOUND", "ELEMENT_NOT_FOUND", "ENCLOSE_NO_REGION", "ENCLOSE_CANNOT_MERGE_REGIONS", "ENCLOSE_CANNOT_CREATE_SOLID", "ENCLOSE_NOTHING_SELECTED", "ENCLOSE_UNKNOWN_ERROR", "ACCESS_NOT_ALLOWED", "LOFT_SPINE_TOO_MANY_GUIDES", "FEATURE_INVALID_NAMESPACE", "FEATURE_NULL_NOT_ALLOWED", "SKETCH_DIMENSION_LIMIT_ERROR", "FILL_SURFACE_WIRE_CONTINUITY_MISMATCH", "FILL_SURFACE_INTERNAL_CONTINUITY_MISMATCH", "LOFT_START_OR_END_CONDITIONS_FAILED", "LOFT_START_OR_END_CONDITIONS_MAGNITUDE_NO_EFFECT", "FOLLOW_LEADER_IS_IN_UNFOLLOWABLE_TAB", "LOFT_START_OR_END_CONDITIONS_WITH_GUIDES_FAILED", "REST_ASSEMBLY_MISSING_TRANSFORM_GROUPS", "REST_ASSEMBLY_NULL_TRANSFORM_GROUP", "REST_ASSEMBLY_NULL_TRANSFORM_GROUP_INSTANCES", "REST_ASSEMBLY_NULL_TRANSFORM_GROUP_INSTANCE", "LOFT_NO_FACE_FOR_GUIDE_CLAMP", "LOFT_NO_CONTINUITY_CONDITION_AT_INTERNAL_GUIDE", "SKETCH_CONSTRAINT_NOT_FOUND", "SKETCH_CONSTRAINT_PARAMETER_NOT_FOUND", "SKETCH_ENTITY_NOT_FOUND", "SKETCH_ENTITY_PARAMETER_NOT_FOUND", "FEATURE_PARAMETER_TYPE_MISMATCH", "FEATURE_CONFIGURED_PARAMETER_NO_VALUES", "FEATURE_CONFIGURED_PARAMETER_INCONSISTENT_TYPES", "SHEET_METAL_FLANGE_FAIL_AUTO_MITER", "SHEET_METAL_FLANGE_FAIL_PARALLEL_EDGE", "SHEET_METAL_FLANGE_FAIL_PARALLEL_PLANE", "SHEET_METAL_FLANGE_FAIL_PARALLEL_DIRECTION", "SHEET_METAL_FLANGE_FAIL_NO_BEND", "SHEET_METAL_FLANGE_NO_PARALLEL_ENTITY", "SHEET_METAL_FLANGE_NO_DIRECTION_ENTITY", "SHEET_METAL_TAB_NO_BEND", "BOOLEAN_NO_SURFACE_IN_MERGE_SCOPE", "BOOLEAN_NO_SHARED_EDGE_WITH_SURFACE_IN_MERGE_SCOPE", "SHEET_METAL_BEND_RELIEF_NO_CORNER", "SHEET_METAL_CORNER_SELECT_ENTITIES", "SHEET_METAL_BEND_RELIEF_SELECT_ENTITIES", "VRFILLET_RADIUS_REQUIRED_AT_VERTEX", "VRFILLET_RHO_REQUIRED_AT_VERTEX", "VRFILLET_MAG_REQUIRED_AT_VERTEX", "VRFILLET_SELECT_VERTICES", "VRFILLET_VERTEX_NOT_ON_CHAIN", "VRFILLET_INVALID_CHAIN", "SHEET_METAL_TAB_NO_MERGE", "SHEET_METAL_TAB_NONPLANAR", "SHEET_METAL_TAB_NO_WALL", "SHEET_METAL_TAB_NO_TAB", "VRFILLET_NO_EFFECT", "VRFILLET_MULTI_SELECTION", "SHEET_METAL_TAB_NO_PARALLEL_WALL", "SHEET_METAL_CORNER_UNDER_SIZED", "FILLET_PARTIAL_FAIL", "VRFILLET_INTERNAL_ZERO", "SHEET_METAL_TAB_NO_EFFECT", "SHEET_METAL_TAB_LOW_CLEARANCE", "SHEET_METAL_TAB_FAILS_MERGE", "SHEET_METAL_TAB_COLLISION", "REPLACE_FACE_FACE_COUNT_CHANGED", "FACE_OVERLAP", "FACE_REMOVED", "INTERSECTING_EDGES", "CANNOT_SPLIT_FACE", "FILL_SURFACE_BAD_SUPPORT", "FILL_SURFACE_SUPPORT_NOT_ON_BOUNDARY", "FILL_SURFACE_SUPPORT_NOT_SMOOTH", "FILL_CURVE_OR_POINT_CONSTRAINTS", "SHEET_METAL_ADD_WRONG_MODEL", "SHEET_METAL_PATTERN_DISABLED_BOOLEANS", "DRAWING_ALL_INSTANCES_HIDDEN", "FILL_SUPPORT_NOT_SMOOTH_INTERNAL", "SKETCH_CONSTRAINT_WRONG_SHEET_METAL_BODY", "SKETCH_CONSTRAINT_FLAT_IN_3D", "SKETCH_CONSTRAINT_3D_IN_FLAT", "FIT_SPLINE_CURVATURE_FACE", "FIT_SPLINE_CANNOT_EVALUATE_CURVATURE_END_CONDITION", "FIT_SPLINE_NEED_DIRECTION_FOR_CURVATURE", "CONFIGURATION_HAS_BAD_PARAMETERS", "CONFIGURATION_HAS_BAD_CURRENT_CONFIGURATION", "FEATURE_CONFIGURED_PARAMETER_VALUES_HAVE_IDS", "WORKSPACE_NO_LONGER_EXISTS", "CONTENT_STACKING_INVALID_MODE", "CONTENT_STACKING_INVALID_COMPONENTS", "CONTENT_STACKING_INVALID_TOP_STACK", "SHEET_METAL_FACE_PATTERN_NO_JOINT", "SHEET_METAL_FACE_PATTERN_FLOATING_CUT", "SHEET_METAL_FACE_PATTERN_FLOATING_WALL", "SM_FLAT_OP_NO_INTERSECT", "SM_FLAT_OP_PARTIAL_INTERSECT", "SM_FLAT_OP_ADD_CROSSES_EDGE", "SM_FLAT_OP_NON_PLANAR_TOOL", "SM_FLAT_OP_NON_PLANAR_TARGET", "SM_FLAT_OPERATION_FAILED", "SM_FLAT_OP_LEGACY_MODEL", "SHEET_METAL_FLANGE_NON_LINEAR_EDGES", "SHEET_METAL_CYLINDER_BEND", "SHEET_METAL_INVALID_FACE", "SHEET_METAL_ROLLED_CORNER_RELIF", "SHEET_METAL_RELIEF_FAILURES", "EDGE_CHANGE_FAILED", "BOOLEAN_INPUTS_NOT_SOLID", "TRANSFORM_SCALE_SELECTION", "SHEET_METAL_SUBTRACT_DESTROYS_SHEET", "SPLIT_KEEP_TOOLS_WITH_FACE", "SPLIT_TRIM_WITH_SINGLE_FACE", "SHEET_METAL_SKETCH_DETACHED_FACE", "HOLE_CUT_FAIL", "SHEET_METAL_FLAT_OP_ROLL_FAIL", "PATTERN_EDGE_FAILED", "SHEET_METAL_FACE_PATTERN_NO_VERTEX", "SHEET_METAL_FACE_PATTERN_PARTIAL_FLOATING_WALL", "EXTRUDE_3D_AND_FLAT", "PATTERN_SWITCH_TO_PER_INSTANCE", "PATTERN_NO_GEOM_FROM_FEATURES", "RM_NO_LINK_PERMISSION_TO_REVISION", "DRAFT_SELECT_PARTING_EDGES", "DRAFT_CONFLICTING_OPPOSITION", "SPLIT_SELECT_TARGETS", "SPLIT_SELECT_TOOL", "SPLIT_SELECT_FACE_TARGETS", "SPLIT_SELECT_FACE_TOOLS", "ASSEMBLY_PATTERN_EXCEED_MAX_INSTANCE_COUNT", "ASSEMBLY_PATTERN_RECURSIVE_SEED", "NO_LINK_PERMISSION_TO_THIS_DOCUMENT", "SM_FLAT_OP_FACES_NOT_COPLANAR", "FLATTENED_SHEET_METAL_SKETCH_PROHIBTED", "DRAFT_SELECT_PULL_DIRECTION_ENTITY", "DRAFT_PARALLEL_PARTING_EDGE", "FLATTENED_SHEET_METAL_SKETCH_ONE_FACE", "SKETCH_OFFSET_CHAIN_FAIL", "SKETCH_OFFSET_BASE_CURVE_CONSUMED", "SKETCH_OFFSET_SPLINE_SPLIT", "SKETCH_OFFSET_ELLIPSE_SPLIT", "CANNOT_FIND_FLATTENED_BODY", "SHEET_METAL_ACTIVE_MODEL_REQUIRED", "SKETCH_REFERENCE_WRONG_FLAT_PART", "SKETCH_CANNOT_REFERENCE_3D", "SM_FLAT_OP_CANNOT_JOIN_DIFFERENT_TRANSFORMS", "DEFINED_IN_3D_CANT_REFERENCE_SM_FLAT", "DEFINED_IN_SM_FLAT_CANT_REFERENCE_3D", "CANNOT_CHANGE_REFERENCE_TO_DELETED_DOCUMENT", "CANNOT_CHANGE_REFERENCE_ELEMENT_NOT_FOUND", "COPIED_SKETCH_NOT_FOUND", "VARIABLE_NAME_TOO_LONG", "NO_INSTANCE_TO_REPLACE", "ASSEMBLY_REPLACE_NO_REPLACER", "CANNOT_REPLACE_IN_SUBASSEMBLIES", "FILL_SURFACE_G1_FAIL", "ALL_CONFIGURATION_PARAMETERS_NOT_SPECIFIED", "ASSEMBLY_REPLACE_INVALID_SEED_INSTANCE", "ASSEMBLY_REPLACE_INVALID_SEED_TYPE", "ASSEMBLY_REPLACE_SUPPRESSED_FORBIDDEN", "DISPLAY_STATES_INVALID_NAME", "DISPLAY_STATES_DUPLICATE_NAME", "WORKSPACE_UPGRADE_NONE_ENABLE_CAPABILITY", "DISPLAY_STATES_UPDATE_HAD_NO_EFFECT", "DISPLAY_STATES_APPLY_HAD_NO_EFFECT", "DISPLAY_STATES_DOES_NOT_EXIST", "LOFT_SPINE_NONTANGENT_PATH", "LOFT_SPINE_APPROXIMATED", "REST_ASSEMBLY_REVISION_PART_NUMBER_BLANK", "REST_ASSEMBLY_REVISION_NOT_FOUND", "ROLL_FAILED", "ROLL_CANNOT_ADJUST", "ROLL_MISMATCHED_SOURCE", "INVALID_ROLL_SURFACE", "ROLL_NOT_TO_OR_FROM_PLANE", "FAILED_TO_FIND_ELEMENT_FOR_TO_STATE", "FAILED_TO_FIND_VERSION_FOR_TO_STATE", "MISSING_REVISION_ID_FOR_TO_STATE", "MISSING_VERSION_ID_FOR_TO_STATE", "INVALID_DOCUMENT_ID_FOR_TO_STATE", "ASSEMBLY_CONTAINS_MISSING_PART_DATA", "SHEET_METAL_HEM_NO_EDGES", "SHEET_METAL_HEM_NON_LINEAR_EDGES", "SHEET_METAL_HEM_FAIL_ALIGNMENT", "SHEET_METAL_HEM_TOO_SHORT", "SHEET_METAL_HEM_TEAR_DROP_GAP_TOO_LARGE", "SHEET_METAL_HEM_INTERNAL", "SHEET_METAL_HEM_FAILED", "INVALID_CONFIGURATION_SPECIFIED", "EDGEBLEND_PARTIAL", "CHAMFER_PARTIAL_FAIL", "LOFT_INCONSISTENT_EXTENT", "LOFT_CANT_TRIM_PROFILES_INFO", "LOFT_CANT_TRIM_GUIDES_INFO", "NON_GEOMETRIC_ITEM_INSERTION_FAILED", "SHEET_METAL_FLANGE_NEXT_TO_CYLINDER_BEND", "SHEET_METAL_HEM_NEXT_TO_CYLINDER_BEND", "SHEET_METAL_MOVE_FACE_NEXT_TO_CYLINDER_BEND", "ASSEMBLY_UNKNOWN_SOLVE_ERROR", "ASSEMBLY_FEATURE_FAILED_TO_RESOLVE_ALL_INSTANCES", "SHEET_METAL_ORPHANED_BEND", "ASSEMBLY_CONTEXT_INVALID_REFERENCE", "ASSEMBLY_FEATURE_QUERY_DATA_MISSING", "NON_GEOMETRIC_ITEMS_DOCUMENT_NOT_OWNED_BY_COMPANY", "NON_GEOMETRIC_ITEM_NO_ITEM_FOUND_FOR_DOCUMENT_OWNER", "EXTEND_SHEET_BODY_NO_TARGET", "EXTEND_TARGET_MISSED", "EXTEND_SELF_INTERSECTION", "EXTEND_FAILED", "EXTEND_TO_FACE_FAILED", "TRIM_TO_MULTI_FAILED", "EXTEND_NON_LAMINAR", "EXTEND_TO_VERTEX_FAILED", "TRIM_FAILED", "SKETCH_EQUAL_CURVATURE_FAILED", "SKETCH_EQUAL_CURVATURE_INPUT_ERROR", "ASSEMBLY_EXPLODE_STEP_DIRECTION_QUERY_FAILED", "WRAP_DESTINATION_NO_FACE", "WRAP_TRIM_FAILED", "WRAP_TRIM_NO_INTERSECTION", "WRAP_IMPRINT_FAILED", "WRAP_NEEDS_ANCHOR", "WRAP_SELECT_TOOLS", "WRAP_SELECT_TARGET", "CREATE_COMPOSITE_PART_FAILED", "NESTED_COMPOSITE_PARTS", "ASSEMBLY_EXPLOSION_DOES_NOT_EXIST", "FILL_SURFACE_NO_GUIDES", "HOLE_INCONSISTENT_TAP_INFO", "WRAP_SOURCE_DIFFERING_PLANES", "WRAP_IMPRINT_SHEET_METAL", "WRAP_SELECT_ANCHORS", "OPERATION_CANCELLED", "COMPOSITE_CLOSED_OVERLAP", "COMPOSITE_OPEN_OVERLAP", "COMPOSITE_SKETCH", "COMPOSITE_MATE_CONNECTOR", "COMPOSITE_PLANE", "COMPOSITE_NON_MODIFIABLE", "ASSEMBLY_REPLACE_WILL_CAUSE_CYCLES", "CREATE_OUTLINE_TWO_OFFSET_FACES_PER_BODY", "SHEET_METAL_TOOL_DOES_NOT_CUT_THROUGH", "PERIODIC_BSPLINESURFACE_NOT_CLOSED", "PERIODIC_BSPLINESURFACE_NOT_SMOOTH", "CANNOT_MAKE_BSPLINESURFACE", "BSPLINESURFACE_NOT_G1", "BAD_2D_BOUNDARY_BSPLINECURVE_DEFINITION", "PERIODIC_2D_BOUNDARY_BSPLINECURVE_NOT_CLOSED", "PERIODIC_2D_BOUNDARY_BSPLINECURVE_NOT_SMOOTH", "BSPLINESURFACE_BOUNDARY_NOT_SINGLE_CLOSED_LOOP", "BSPLINESURFACE_FAILED_TO_MAKE_SOLID", "BOOLEAN_NO_SHARED_EDGE_WITH_OTHER_SURFACE", "BOOLEAN_NO_SURFACE_TO_MERGE_WITH", "BOOLEAN_INVALID_PARAMETER_COMBINATION", "MODIFY_COMPOSITE_PART_FAILED", "INSTANCE_CONSUMED_BY_CLOSED_COMPOSITE", "EXPLODE_STEP_INSTANCE_IS_SUPPRESSED", "NO_COMPOSITE_FOR_SINGLE_SOLID", "COMPOSITE_PART_ADD_AND_REMOVE_BODY", "BOOLEAN_TOOL_INPUTS_NOT_SOLID", "BOOLEAN_CANNOT_MIX_SOLIDS_AND_SURFACES", "BSPLINESURFACE_CONTROL_POINTS_GRID_TOO_LONG", "BSPLINE_TOO_MANY_CONTROL_POINTS", "BSPLINE_DEGREE_TOO_HIGH", "COMPOSITE_PART_SELECT_ENTITIES", "DELETE_COMPOSITE_PART_FAILED", "SURFACES_NOT_SUPPORTED_BY_PATTERN_REMOVE_AND_INTERSECT", "SHEET_METAL_TAB_MERGE_AND_SUBTRACT_SAME_FLANGE", "EXPLODED_VIEW_INVALID_STARTING_POSITION", "CANNOT_EXPLODE_SKETCH", "FAILED_TO_CREATE_EXPLODED_VIEW", "ASSEMBLY_NAMED_POSITIONS_NEW_INSTANCES", "SYS_FEATURE_EXCEPTION", "CURVE_PARTIAL_FAILED", "CURVE_FAILED", "SPLIT_KEEP_PLANES_AND_MATE_CONNECTORS", "EXPLODE_LINES_MUST_SPECIFY_STARTING_POINT", "EXPLODE_LINES_FAILED_TO_RESOLVE_ENTITY", "SPLINE_THROUGH_EDGES_SELECTED_EDGES_DONT_FORM_CHAIN", "SPLINE_THROUGH_EDGES_TANGENT_DISCONTINUITY_AT_EDGE_ENDS", "SPLINE_THROUGH_EDGES_CANNOT_FIT_SPLINE", "SPLINE_THROUGH_EDGES_SELECT_EDGES", "SPLINE_THROUGH_EDGES_RESULTED_IN_MORE_THAN_ONE_EDGE", "SKETCH_CANNOT_DELETE_SPLINE_HANDLES", "SKETCH_TRIM_NO_SPLINE_HANDLES", "SKETCH_SPLIT_NO_SPLINE_HANDLES", "SKETCH_EXTEND_NO_SPLINE_HANDLES", "SKETCH_PATTERN_NO_SPLINE_HANDLES", "SKETCH_FILLET_NO_SPLINE_HANDLES", "SKETCH_MIRROR_NO_SPLINE_HANDLES", "SKETCH_TRANSFORM_NO_SPLINE_HANDLES", "MATE_OFFSET_INVALID_ROTATION_TYPE", "SKETCH_TANGENT_CONSTRAINT_SPLINE_AND_HANDLE", "SKETCH_CURVATURE_CONSTRAINT_SPLINE_AND_HANDLE", "EXPLODE_LINE_NOT_ON_EXPLODED_INSTANCE", "SWEEP_DISJOINT_PROFILE", "SWEEP_MIXED_PROFILE", "MULTI_PROFILE_SWEEP_NO_INNER_LOOPS", "SWEEP_PROFILE_DIM_MISMATCH", "LOFT_CONNECTION_MATCHING", "SIMULATION_LOAD_DIRECTION_QUERY_FAILED", "SIMULATION_LOAD_REGION_QUERY_FAILED", "SIMULATION_LOAD_REGION_QUERY_EMPTY", "SIMULATION_LOAD_REGION_NOT_ON_LOAD_INSTANCE", "SIMULATION_LOAD_INSTANCE_NOT_SPECIFIED", "SIMULATION_LOAD_DIRECTION_NOT_SPECIFIED", "SIMULATION_FUNCTIONAL_CONNECTION_QUERY_FAILED", "SIMULATION_FUNCTIONAL_CONNECTION_QUERY_EMPTY", "HOLE_MATCH_FAILED", "RULED_SURFACE_SELECT_EDGES", "RULED_SURFACE_MITER_FAILED", "RULED_SURFACE_NO_TANGENT_DIR", "RULED_SURFACE_SELECT_DIRECTION", "RULED_SURFACE_ZERO_LENGTH", "RULED_SURFACE_SELECT_UP_TO_ENTITY", "RULED_SURFACE_OVERLAPPING_SKETCH_EDGES", "RULED_SURFACE_EDGES_NOT_MANIFOLD", "RULED_SURFACE_FAILED", "RULED_SURFACE_NO_LOCK_FACE", "RULED_SURFACE_VERTEX_SELECT_VERTEX", "RULED_SURFACE_MULTIPLE_LOCK_FACES", "RULED_SURFACE_TOP_LEVEL_BOUNDARY_ENTITY", "RULED_SURFACE_SPLIT_VERTEX", "FULL_ROUND_SELECT_FACES", "FULL_ROUND_MINIMUM_VERSION", "FULL_ROUND_ADJACENT_CENTER_FACES", "FULL_ROUND_COMMON_BODY", "FAILED_TO_CREATE_ASSEMBLY_SIMULATION", "IN_CONTEXT_UPDATE_DELETED_WORKSPACE", "HOLE_TOOL_CONSTRUCTION_FAILED", "HOLE_PARTIAL_FAILURE", "HOLE_EXCEEDS_MAX_LOCATIONS_500", "CONSTRUCT_PATH_EDGES_OVERLAP", "CONSTRUCT_PATH_NOT_MANIFOLD", "CONSTRUCT_PATH_FAILED", "CONSTRUCT_PATH_FACES_OPPOSITE_SIDES", "RULED_SURFACE_REFERENCE_FACES_BOTH_SIDES", "HOLE_TARGETS_DO_NOT_DIFFER", "RULED_SURFACE_OVERRIDES_CLASH", "FGS_STREAM_ERROR", "NO_MATERIAL_FOR_MASS_PROPERTY", "SPECIFIED_SIMULATION_DOES_NOT_EXIST", "MULTIPLE_MODAL_SIMULATIONS_PROHIBITED", "LOFT_POINT_PROFILE_NORMAL_TO_PROFILE_GUIDE", "RULED_SURFACE_GLOBAL_NORMAL_OVERRIDE", "RULED_SURFACE_EDGE_PARALLEL_REFERENCE", "FIXED_PART_REQUIRED_FOR_SIMULATION", "MATERIAL_ASSIGNMENT_REQUIRED_FOR_SIMULATION", "LOAD_REQUIRED_FOR_LINEAR_STATIC_SIMULATION", "MATERIAL_LACKS_REQUIRED_PROPERTY_FOR_SIMULATION", "FILLET_EDGES_NOT_MANIFOLD", "SHEET_METAL_FILLET_NO_WIDTH", "FRAME_TAG_PROFILE_SELECT_SKETCH", "FRAME_TAG_PROFILE_SPECIFY_COLUMNS", "FRAME_TAG_PROFILE_HEADER_EMPTY", "FRAME_TAG_PROFILE_VALUE_EMPTY", "FRAME_MISSING_CAP_FACES", "FRAME_MISSING_SWEPT_EDGES", "FRAME_MISSING_SWEPT_FACES", "FRAME_CUTLIST_NO_END_FACE_EDGE_GEOMETRY_PAIR", "PUBLICATION_ITEM_INSERT_FAILED", "PUBLICATION_ITEM_INSERT_FAILED_NO_LINK_PERMISSION", "PUBLICATION_ITEM_INSERT_FAILED_NO_DUPLICATES_ALLOWED", "PUBLICATION_ITEM_UPDATE_FAILED_NO_DUPLICATES_ALLOWED", "PUBLICATION_ITEM_UPDATE_FAILED", "VRFILLET_RADIUS_REQUIRED_AT_POINT", "VRFILLET_PARAMETER_REQUIRED_AT_POINT", "VRFILLET_RHO_REQUIRED_AT_POINT", "VRFILLET_MAG_REQUIRED_AT_POINT", "VRFILLET_SELECT_EDGES", "VRFILLET_EDGE_NOT_ON_CHAIN", "BRIDGING_CURVE_POSITIONS_IDENTICAL", "SPLIT_FACE_MUTUAL_IMPRINT", "BRIDGING_CURVE_ZERO_SPEED_SCALE", "VARIABLE_DESCRIPTION_TOO_LONG", "FRAME_BAD_PATH", "FRAME_SWEEP_FAILED", "FRAME_TRIM_FAILED", "FRAME_MALFORMED_BEAM", "FRAME_BAD_CORNER_TYPE", "FRAME_SELECT_PROFILE", "FRAME_PROFILE_REGION", "FRAME_NO_INTERNAL_TRIM", "FRAME_MULTIPLE_TRIM_PLANES", "FRAME_MULTIPLE_EQUAL_BEAMS_AFTER_SPLIT", "FRAME_TRIM_GROUPS", "FRAME_DISJOINT_GROUPS", "FRAME_CANDIDATE_FACES", "FRAME_LENGTHWISE_TRIM", "FRAME_TRIM_SELECT_TARGETS", "FRAME_TRIM_SELECT_TOOL", "FRAME_SELECT_PATH", "FRAME_TAG_PROFILE_HEADER_RESERVED", "FRAME_CUTLIST_COLUMN_EMPTY", "FRAME_TAG_PROFILE_NO_FEATURE_PATTERN", "FRAME_CUTLIST_NO_FEATURE_PATTERN", "SPLIT_EDGE_SELECT_EDGES", "SPLIT_EDGE_SIZES_MISMATCH", "SPLIT_EDGE_PARAMETER_BOUND", "SPLIT_EDGE_FAILED", "SPLIT_CLOSED_EDGE_ONE_POINT", "SPLIT_EDGE_PROVIDE_PARAMETERS", "NO_MATERIAL_FOR_COMPOSITE_PART_COMPUTED_MASS", "FRAME_MULTIPLE_EQUAL_SEGMENTS_AFTER_SPLIT", "FRAME_MALFORMED_SEGMENT", "SIMULATION_UNSUPPORTED_INSTANCE", "MIXED_MODEL_LAYOUT", "ADJACENT_MESH_FACES_FOR_CAP_OR_HEAL", "NOT_ALL_MESH_FACES_PATTERN", "VOLUME_ACCURACY_MUST_BE_HIGH_FOR_REGEN", "ASSEMBLY_REPLICATE_INVALID_SEED_MATE", "ASSEMBLY_REPLICATE_MISSING_SEED_MATE", "DXF_UNKNOWN_ENTITY", "DXF_NONUNIFORM_SCALING", "DXF_COULD_NOT_READ_FILE", "DXF_COULD_NOT_CONVERT_HATCH", "DXF_COULD_NOT_CONVERT_BODY", "DXF_COULD_NOT_CONVERT_REGION", "DXF_BAD_SPLINE_DATA", "SIMULATION_LOAD_INSTANCE_SUPPRESSED", "DIAMETERS_MUST_BE_EQUAL", "NOT_CONVEX", "SELECT_CYLINDER_EDGES", "NOT_CYLINDER_OR_CONE", "UNABLE_TO_FIND_THREAD_BOUNDARY", "UNDERCUT_OFF_FACE", "UNDERCUT_TOO_DEEP", "HOLE_CBORE_CSINK_VALUES_NON_STD", "SHEET_METAL_FLANGE_PARAMETER_BOUND", "SHEET_METAL_FLANGE_ZERO_WIDTH", "SHEET_METAL_FLANGE_NO_BOUNDING_ENTITY", "SHEET_METAL_FLANGE_BOUNDING_ENTITY_PARALLEL", "SHEET_METAL_FLANGE_BOUNDING_ENTITY_NOT_SUPPORTED", "FRAME_BAD_COMPOSITE_SEGMENT", "SKETCH_SPLINE_POINT_HAS_HANDLE", "SKETCH_TRIM_NO_SPLINE_CONTROL_POLYGON", "SELECTED_NON_MATCHING_SIZE", "NEAREST_MATCHING_THREAD_SIZE", "SKETCH_PATTERN_NO_SPLINE_CONTROL_POLYGON", "SKETCH_TRANSFORM_NO_SPLINE_CONTROL_POLYGON", "SKETCH_FILLET_NO_SPLINE_CONTROL_POLYGON", "SKETCH_MIRROR_NO_SPLINE_CONTROL_POLYGON", "SKETCH_SPLIT_NO_SPLINE_CONTROL_POLYGON", "VARIABLE_SELECT_FIRST_ENTITY", "VARIABLE_SELECT_SECOND_ENTITY", "VARIABLE_SELECT_CUSTOM_DIRECTION", "VARIABLE_SELECT_ENTITIES_TO_MEASURE", "VARIABLE_SELECT_ENTITY_TO_MEASURE", "VARIABLE_NO_GEOMETRY_WITH_DIAMETER", "VARIABLE_ONLY_TWO_ENTITIES_ALLOWED", "VARIABLE_FLATTENED_ENTITIES_MUST_BE_SAME_BODY", "CURVE_PROJECTION_FAILED", "FACE_INTERSECTION_FAILED", "FACE_INTERSECTION_NO_RESULT", "FACE_INTERSECTION_UNIQUE_SELECTION", "FACE_INTERSECTION_OVERLAPPING_SELECTION", "CHAMFER_SIZE_EXCEED_GUSSET_SIZE", "EMPTY_GUSSET_SELECTION", "CANNOT_FIT_A_GUSSET", "NON_FRAME_EDGE_SELECTED", "SWEPT_EDGE_SELECTED", "NO_CAP_FACE_SELECTED_ERROR", "INVALID_CAP_FACE_SELECTED_ERROR", "CAP_MULTI_FACE_SELECTED_ERROR", "CAP_MULTI_LUMENS_SELECTED_ERROR", "CAP_CURVED_FRAME_ERROR", "CAP_FRAME_AXIS_ERROR", "VARIABLE_CANNOT_USE_MAXIMUM_WITH_INFINITE_ENTITIES", "VARIABLE_NO_AXIS_ENTITIES", "CURVE_PROJECTION_NO_RESULT", "BSURF_FAILED", "BSURF_PROFILE_FAILED", "BSURF_INCONSISTENT_BOUNDARY_CONDITIONS", "FGS_SIMULATION_ERROR_SIMULATION_NON_CONVERGENT", "FGS_SIMULATION_ERROR_LATERAL_BEARING_FORCE", "FGS_SIMULATION_ERROR_LOADS_NONE", "FGS_SIMULATION_ERROR_CONSTRAINTS_NONE", "FGS_SIMULATION_ERROR_CONSTRAINTS_ONLY_KINEMATIC", "FGS_SIMULATION_ERROR_INTERNAL_ERROR", "DXF_COULD_NOT_CONVERT_TEXT", "FGS_SIMULATION_ASSEMBLY_TOO_COMPLEX", "SPLIT_SELECT_FACE_DIRECTION", "SELECTION_IS_INVALID", "CANNOT_ADD_MORE_THAN_ONE_THREAD_TO_UNSPLIT_CYLINDER", "UNDERCUT_TOO_SHALLOW", "CAP_INCLINED_CUT_FRAME_ERROR", "SPLIT_OFF_FACE", "UNDERCUT_DIAMETER_TOO_LARGE", "PUBLICATION_ACTION_FAILED_NO_PLAN_ACCESS", "DISPLAY_STATES_NO_REFERENCE", "INVALID_ARC_LENGTH", "FILLET_ADJOINING_EDGE_NOT_FILLETED", "FILLET_BOUNDARY_INTERSECTS_EDGE", "FILLET_BOUNDARY_OVERLAP", "FILLET_EDGE_OVERLAPPED_BY_FILLET", "FILLET_FACE_RANGE_TOO_LARGE", "FILLET_ILLEGAL_END_BOUNDARY", "FILLET_OVERLAP", "FILLET_OVERLAPS_EDGE_LOOP", "FILLET_PRODUCED_SELF_INT_SURFACE", "FILLET_RANGE_INCONSISTENT_EDGE", "FILLET_REQUIRES_SURFACE_EXTENSION", "FILLET_RHO_TOO_LARGE", "FILLET_VERTEX_EDGES_COMPLICATED", "CHAMFER_ADJOINING_EDGE_NOT_CHAMFERED", "CHAMFER_BOUNDARY_INTERSECTS_EDGE", "CHAMFER_BOUNDARY_OVERLAP", "CHAMFER_EDGE_OVERLAPPED_BY_CHAMFER", "CHAMFER_FACE_RANGE_TOO_LARGE", "CHAMFER_ILLEGAL_END_BOUNDARY", "CHAMFER_OVERLAP", "CHAMFER_OVERLAPS_EDGE_LOOP", "CHAMFER_PRODUCED_SELF_INT_SURFACE", "CHAMFER_RANGE_INCONSISTENT_EDGE", "CHAMFER_REQUIRES_SURFACE_EXTENSION", "CHAMFER_RHO_TOO_LARGE", "CHAMFER_VERTEX_EDGES_COMPLICATED", "EDGEBLEND_ADJOINING_EDGE_NOT_BLENDED", "EDGEBLEND_BOUNDARY_INTERSECTS_EDGE", "EDGEBLEND_BOUNDARY_OVERLAP", "EDGEBLEND_EDGE_OVERLAPPED_BY_BLEND", "EDGEBLEND_FACE_RANGE_TOO_LARGE", "EDGEBLEND_ILLEGAL_END_BOUNDARY", "EDGEBLEND_OVERLAP", "EDGEBLEND_OVERLAPS_EDGE_LOOP", "EDGEBLEND_PRODUCED_SELF_INT_SURFACE", "EDGEBLEND_RANGE_INCONSISTENT_EDGE", "EDGEBLEND_REQUIRES_SURFACE_EXTENSION", "EDGEBLEND_RHO_TOO_LARGE", "EDGEBLEND_VERTEX_EDGES_COMPLICATED", "SIMULATION_LOAD_ON_FIXED_INSTANCE", "FRAME_CUSTOM_ALIGNMENT_POINTS_NOT_IN_SKETCH", "NON_MATCHING_SIZE_ERROR", "FILL_CANNOT_MATCH_EDGE_ADJACENT_FACES", "FILL_ADJACENT_FACE_BAD_INPUT", "FRAME_BAD_OFFSET_INDEX", "EXTERNAL_THREADS_UNSUPPORTED_ON_SHEET_METAL", "THREAD_DEPTH_BEYOND_CYLINDER", "VRFILLET_ASYMMETRIC_RADIUS_REQUIRED_AT_VERTEX", "VRFILLET_ASYMMETRIC_RADIUS_REQUIRED_AT_POINT", "VRFILLET_BAD_COEDGE", "FILLET_LEGACY_ASYMMETRIC_UNSUPPORTED", "PARTIAL_FILLET_BAD_INPUT_ERROR", "GUSSET_EMPTY_ALIGNMENT_SELECTION", "GUSSET_ALIGNMENT_NO_INTERSECTION", "BRIDGING_CURVE_VERTEX_OR_EDGE_ON_SIDE", "CANNOT_USE_PARTIAL_FILLET_IN_SHEET_METAL", "PARTIAL_FILLET_CLOSED_PATH_ERROR", "WRONG_CYLINDER_EDGE_SELECTED", "GUSSET_OFFSET_NOT_PARALLEL", "GUSSET_ALIGNED_OFFSET_NOT_PARALLEL", "BRIDGING_CURVE_VERTEX_BELONG_TO_FACE", "BRIDGING_CURVE_EDGE_BELONG_TO_FACE", "BRIDGING_CURVE_NO_START_SELECTION", "BRIDGING_CURVE_NO_END_SELECTION", "NAMED_VIEW_INVALID", "MUTUAL_TRIM_SAME_SURFACE_USED", "MUTUAL_TRIM_SURFACE_NOT_SELECTED", "MUTUAL_TRIM_GENERIC_ERROR", "SHEET_METAL_CANNOT_CUT", "BSURF_2_PROFILES", "BSURF_OPEN_CHAIN", "BSURF_PROFILE_QUALITY", "BSURF_PROFILE_MISMATCH", "BSURF_INVALID_BOUNDARY_CONDITIONS", "BSURF_SOLVE_FAILS", "HOLE_CSINK_ANGLE_TOO_WIDE", "HOLE_CSINK_ANGLE_TOO_NARROW", "EXTRUDE_START_OFFSET_BOUND_NOT_PLANAR", "EXTRUDE_START_OFFSET_BOUND_NOT_PARALLEL_TO_EXTRUDED_ENTITIES", "EXTRUDE_DIRECTION_COPLANAR", "EXTRUDE_DIRECTION_INVALID_ENTITY", "BSURF_CONVERGENCE_CURVES", "BSURF_CONVERGENCE_TANGENCY", "EXTRUDE_SELECT_DIRECTION", "EXTRUDE_SELECT_START_OFFSET_ENTITY", "BSURF_INCONSISTENT_CONDITIONS_ERROR", "PARTIAL_FILLET_INVALID_BOUNDS_ERROR", "DOCUMENT_ELEMENT_NOT_FOUND", "BSURF_PROFILE_NON_G1", "SM_FLAT_OP_FACES_DONT_MATCH", "HOLE_REVERSED_BOUNDS", "HELIX_INPUT_AXIS", "HELIX_BOTH_RADII_ZERO", "HELIX_START_POINT_MISALIGNED", "HELIX_END_POINT_MISALIGNED", "FACE_BLEND_SELECT_FACES", "FACE_BLEND_FAILED", "FACE_BLEND_DIMENSION_TOO_SMALL", "FACE_BLEND_DIMENSION_TOO_LARGE", "FACE_BLEND_CANNOT_ATTACH", "FACE_BLEND_WRONG_LEFT_WALL_SENSE", "FACE_BLEND_WRONG_RIGHT_WALL_SENSE", "FACE_BLEND_WRONG_SENSES", "FACE_BLEND_LEFT_WALL_MULTIPLE_BODIES", "FACE_BLEND_RIGHT_WALL_MULTIPLE_BODIES", "FACE_BLEND_INCONSISTENT_DATA", "FACE_BLEND_INVALID_TANGENT_HOLD_LINE", "FACE_BLEND_INVALID_CONIC_HOLD_LINE", "FACE_BLEND_BAD_SPINE", "FACE_BLEND_RHO_TOO_LARGE", "FACE_BLEND_RHO_INVALID", "FACE_BLEND_SELF_INTERSECTION", "FACE_BLEND_INVALID_CAP", "FACE_BLEND_INVALID_LIMIT", "FACE_BLEND_INVALID_LIMIT_DIRECTION", "FACE_BLEND_SPINE_ZERO_ANGLE_PROPAGATION", "FACE_BLEND_SPINE_TANGENT_PROPAGATION", "FACE_BLEND_SELECT_SPINE", "FACE_BLEND_HOLD_LINE_IN_WALLS", "FACE_BLEND_TANGENT_HL_ASYMMETRIC", "FACE_BLEND_WIDTH_HOLD_LINES", "FACE_BLEND_EDGE_LIMIT_NEEDS_SIDE", "FACE_BLEND_INVALID_PLANE_LIMIT", "FACE_BLEND_INVALID_PROPAGATION_ANGLE", "OFFSET_WIRE_GENERIC_ERROR", "OFFSET_WIRE_SELECT_WALL_PATH", "OFFSET_WIRE_DIR1_FAILED", "OFFSET_WIRE_DIR2_FAILED", "FACE_BLEND_SOLID_LONG_ATTACH", "OFFSET_WIRE_SHAPES_NON_CONSISTENT", "OFFSET_WIRE_MULTIPLE_SHAPES", "BOOLEAN_NON_MANIFOLD_RESULT", "DRAWING_ASSEMBLY_NONMANIFOLD_SECTION_CUT", "DRAWING_PARTSTUDIO_NONMANIFOLD_SECTION_CUT", "MOVE_CURVE_BOUNDARY_FAILED", "MOVE_CURVE_BOUNDARY_EXTENSION_NO_INTERSECTION", "MOVE_CURVE_BOUNDARY_TRIM_NO_INTERSECTION", "MOVE_CURVE_BOUNDARY_SELECT_CURVE", "MOVE_CURVE_BOUNDARY_SELECT_TRIM_BOUNDARY", "MOVE_CURVE_BOUNDARY_SELECT_EXTEND_BOUNDARY", "MOVE_CURVE_BOUNDARY_NO_SKETCH_ENTITIES", "MOVE_CURVE_BOUNDARY_ONLY_WIRES", "MOVE_CURVE_BOUNDARY_SELECT_HELP_POINT", "MOVE_CURVE_BOUNDARY_EXTEND_REQUIRES_OPEN_CURVE", "MOVE_CURVE_BOUNDARY_SPLIT_CLOSED_AT_TWO_POINTS", "HOLE_NO_END_BOUNDS", "HOLE_TAP_TOO_DEEP", "MOVE_CURVE_BOUNDARY_TOOL_IS_TARGET", "DRAWING_IGNORE_FAULTY_PARTS", "ISOCLINE_NO_RESULT", "ISOCLINE_SELECT_FACES", "ISOCLINE_SELECT_DIRECTION", "ISOCLINE_FAILED", "FGS_GENERATIVE_OPT_MAX_ITERATIONS", "FGS_GENERATIVE_TARGET_VOLUME_LOW", "FGS_GENERATIVE_TARGET_VOLUME_LARGE", "FGS_GENERATIVE_THIN_GENERIC", "FGS_GENERATIVE_SYMMETRY_DEF_PROBLEM", "FGS_GENERATIVE_MINRADIUS_SMALL", "FGS_GENERATIVE_MINRADIUS_LARGE", "FGS_GENERATIVE_OPT_INVALID_SETUP", "CURVE_PATTERN_DISTANCE_TOO_LARGE", "BEND_REPLACEMENT_HEAL_FAILED", "CANNOT_COPY_CONSTRAINTS", "PARAMETER_EXPRESSION_VALIDATION_UNITS_MISMATCH_3ARGS", "PARAMETER_EXPRESSION_VALIDATION_SYNTAX_ERROR_0ARGS", "PARAMETER_EXPRESSION_VALIDATION_RESERVED_ID_1ARG", "PARAMETER_EXPRESSION_VALIDATION_CANNOT_APPLY_OP_TO_1ARG", "PARAMETER_EXPRESSION_VALIDATION_CANNOT_APPLY_OP_TO_2ARGS", "PARAMETER_EXPRESSION_VALIDATION_CANNOT_APPLY_OP_TO_3ARGS", "PARAMETER_EXPRESSION_VALIDATION_INCORRECT_TYPE", "PARAMETER_EXPRESSION_UNKNOWN_FUNCTION", "PARAMETER_EXPRESSION_UNKNOWN_VARIABLE", "REVOLVE_NOT_COPLANAR_WITH_AXIS", "FRAME_ANGLE_REFERENCE_INVALID_ENTITY", "AMBIGUOUS_GEOMETRY_FOR_GUSSET_DEFINITION", "HOLE_START_BOUND_INVALID", "HOLE_NO_START_BOUND", "BODY_DRAFT_FAILED", "BODY_DRAFT_NO_REFERENCES", "BODY_DRAFT_NO_ANGLES", "BODY_DRAFT_INVALID_ABOVE_ANGLE", "BODY_DRAFT_INVALID_BELOW_ANGLE", "BODY_DRAFT_INVALID_PARTING_ENTITY", "BODY_DRAFT_INVALID_PULL_DIRECTION", "BODY_DRAFT_MITER_NEED_BOTH_SIDES", "BODY_DRAFT_EDGE_SEPARATION_FAILED", "BODY_DRAFT_EDGE_SPLIT_FAILED", "BODY_DRAFT_ISOCLINE_SPLIT_FAILED", "BODY_DRAFT_PARTING_PLANE_SHEET_ERROR", "BODY_DRAFT_INVALID_REFERENCE", "BODY_DRAFT_REFERENCE_LOOP", "BODY_DRAFT_TOO_STEEP", "BODY_DRAFT_BAD_PULL_DIRECTION", "BODY_DRAFT_MITER_FAILED", "DECAL_HORIZONTAL_REFERENCE_INVALID_ENTITY", "OFFSET_WIRE_SHEET_CREATION_FAILED", "REPLACE_FACE_SHEET_SMALL", "REPLACE_FACES_NOT_ADJACENT", "SHEET_METAL_HOLE_REBUILD_FAILED", "CPLANE_TANGENT_INPUT", "CPLANE_TANGENT_SELECT_REFERENCE", "CPLANE_TANGENT_PLANE_INVALID", "CPLANE_TANGENT_POINT_INVALID", "REPLACE_FACES_NOT_SAME_BODY", "MUST_USE_DEFAULT_RADIUS_WITH_FACE_BEND", "CANNOT_RIP_A_FACE_BEND", "CANNOT_MAKE_A_FACE_BEND_TANGENT", "SKETCH_HAS_PATTERN_TOO_LARGE", "SKETCH_LINEAR_PATTERN_FAILED", "DECAL_PROJECTED_OFF_FACE", "FIT_TOLERANCE_LIMITS_NOT_FOUND", "FIT_TOLERANCE_SIZE_TOO_LARGE_ISO", "FIT_TOLERANCE_SIZE_TOO_LARGE_ANSI", "DECAL_NO_FACE_SELECTION", "DECAL_NO_IMAGE_SELECTION", "DECAL_IMAGE_TOO_LARGE", "FGS_SIMULATION_ASSEMBLY_HAS_NO_INSTANCES", "FGS_SIMULATION_ASSEMBLY_HAS_TOO_FEW_INSTANCES", "FGS_MODAL_SIMULATION_HAS_ALL_FIXED_PARTS", "BODY_DRAFT_STRAY_NONMITER_EDGES", "MASS_PROPERTY_FACES_NOT_COPLANAR", "PARAMETER_VALUE_INVALID", "SHEET_METAL_CHAMFER_NO_TANGENT_BASED", "CHAMFER_DIRECTION_OVERRIDE_NO_EFFECT", "FILLET_CHAMFER_UNSUPPORTED", "LINEAR_PATTERN_SKETCH_REAPPLY_INFO", "CIRCULAR_PATTERN_SKETCH_REAPPLY_INFO", "CURVE_PATTERN_SKETCH_REAPPLY_INFO", "MIRROR_SKETCH_REAPPLY_INFO", "CHAMFER_HELD_BACK", "SWEEP_BAD_LOCK_DIRECTION", "SHEET_METAL_COUNTER_HOLE_UNSUPPORTED", "SPECIFIED_FEATURE_DOES_NOT_EXIST", "SHEET_METAL_BEND_NO_BEND_LINE", "SHEET_METAL_BEND_BAD_BEND_LINE", "SHEET_METAL_BEND_NO_FACE", "SHEET_METAL_BEND_NO_PARALLEL", "SHEET_METAL_BEND_NO_DIRECTION", "SHEET_METAL_BEND_BAD_FACE", "SHEET_METAL_BEND_IMPRINT_FAILED", "SHEET_METAL_BEND_BAD_DECOMPOSITION", "SHEET_METAL_BEND_LINE_PERPENDICULAR_TO_FACE", "SWEEP_SELECT_DIRECTION", "SHEET_METAL_BEND_ROLL_FAILED", "SHEET_METAL_BOTH_SIDES_CONNECTED", "SHEET_METAL_CANNOT_BEND_BUTTS", "SHEET_METAL_BEND_COLLISION", "MISSING_PARAMETER_REFERENCE", "MISSING_IMAGE_PARAMETER_REFERENCE", "BODY_DRAFT_SELECT_EDGES", "BODY_DRAFT_SELECT_FACES", "BODY_DRAFT_SELECT_PARTS", "SPLIT_EDGE_INVALID_SURFACE", "BODY_DRAFT_NO_EFFECT", "OFFSET_CURVE_ON_FACE_SELECT_EDGES", "OFFSET_CURVE_ON_FACE_WIRE_EDGES", "OFFSET_CURVE_ON_FACE_INVALID_TARGETS", "OFFSET_CURVE_ON_FACE_INVALID_DISTANCE", "OFFSET_CURVE_ON_FACE_IMPRINT_NO_EXTEND", "OFFSET_CURVE_ON_FACE_FAILED_TO_CREATE_CHAIN", "OFFSET_CURVE_ON_FACE_BRANCHING_CHAIN", "OFFSET_CURVE_ON_FACE_FAILED", "OFFSET_CURVE_ON_FACE_BAD_DIRECTION", "OFFSET_CURVE_ON_FACE_GEODESIC_OUTSIDE", "OFFSET_CURVE_ON_FACE_EXTENSION_FAILED", "OFFSET_CURVE_ON_FACE_CHAIN_YIELDED_NO_RESULT", "OFFSET_CURVE_ON_FACE_NO_RESULT", "OFFSET_CURVE_ON_FACE_INPUT_WITH_NO_TARGETS", "OFFSET_CURVE_ON_FACE_EUCLIDEAN_SIDE_PICK_FAIL", "OFFSET_CURVE_ON_FACE_SCAR_EDGE", "OFFSET_CURVE_ON_FACE_CLOSED_CURVE_NO_TRIM", "OFFSET_CURVE_ON_FACE_SIDE_DIFF_FAIL", "ANGLE_CONTROL_PARALLEL_TO_BEND", "BODY_DRAFT_PARTING_SURFACE_SMALL", "MASS_PROPERTY_MATE_CONNECTOR_Z_AXIS_NOT_NORMAL", "DERIVED_MATE_CONNECTOR_INDEX_OUT_OF_BOUNDS", "DERIVED_MATE_CONNECTOR_NO_LONGER_VALID", "DERIVED_MATE_CONNECTOR_RESET", "DERIVED_NO_MATE_CONNECTORS", "TESSELLATED_LOFT_ERROR", "BODY_DRAFT_INVALID_FACE_REFERENCE", "BODY_DRAFT_INVALID_EDGE_REFERENCE", "BODY_DRAFT_INVALID_PART_REFERENCE", "HOLE_CANNOT_DETERMINE_TAPPED_BODY", "HOLE_PARAMS_OVERRIDDEN_INFO", "HOLE_TAP_DIA_TOO_LARGE_OR_EQUAL", "SPLIT_AS_MODIFICATION_MULTIPLE_RESULTS", "FORMED_TAG_FORM_NO_FEATURE_PATTERN", "FORMED_TAG_FORM_SELECT_DIFFERENT_PARTS", "FORMED_TAG_FORM_SELECT_SKETCH", "FORMED_TAG_FORM_SELECT_SOMETHING", "ISOPARAMETRIC_CURVE_SELECT_FACE", "ISOPARAMETRIC_CURVE_SELECT_POINT", "ISOPARAMETRIC_CURVE_SELECT_POSITION", "ISOPARAMETRIC_CURVE_POINT_NOT_ON_FACE", "THIN_SWEEP_3D_PROFILE_TRIM_WARNING", "THIN_SWEEP_FAILED_TO_FIND_TRIM_PLANES_WARNING", "THIN_SWEEP_TRIM_FAILED", "ISOPARAMETRIC_CURVE_SELECT_SINGLE_FACE", "HOLE_FASTENER_FIT_IS_NOT_APPLICABLE", "PATTERN_SKIPPED_INSTANCES_SEED_INDEX", "PATTERN_SKIPPED_INSTANCES_OUT_OF_RANGE_INDEX", "FORMED_SELECT_LOCATION", "FORMED_NO_PART_STUDIO_SELECTED", "FORMED_SELECT_LOCATION_ON_ACTIVE_FACE", "FORMED_LOCATION_ON_MULTIPLE_FACES", "FORMED_NOT_ON_HOLE_FORMED_FACE", "THIN_SWEEP_THICKEN_FAILED", "DERIVED_NO_PARTS", "DERIVED_NO_INSTANCING", "DERIVED_NO_SAME_SOURCE", "DERIVED_FULL_FEATURE_PATTERN", "THIN_LOFT_3D_PROFILE_TRIM_WARNING", "THIN_LOFT_FAILED_TO_FIND_TRIM_PLANES_WARNING", "THIN_LOFT_THICKEN_FAILED", "FGS_MODAL_SIMULATION_MAXIMUM_RIGID_MODES_REACHED", "ASSEMBLY_MIRROR_PLANE_ERROR", "POLYLINE_CONSECUTIVE_EQUAL_POINTS", "POLYLINE_ZERO_ANGLE", "POLYLINE_BEND_RADII_INVALID_SIZE", "POLYLINE_INVALID_BEND", "SKETCH_MISSING_LOCAL_REFERENCE", "SKETCH_DIMENSION_MISSING_PARAMETER", "MATECONNECTOR_QUERY_SECONDARY_AXIS_CONFLICT", "MATECONNECTOR_NORMAL_RESOLUTION_FAILED", "LOFT_PLANAR_GUIDE_NOT_FOUND", "PART_STUDIO_DOES_NOT_EXIST_IN_MOMENT", "SOME_BODIES_WERE_REMOVED_FROM_EXPORT", "ALL_BODIES_WERE_REMOVED_FROM_EXPORT", "CONFIG_NO_PARAMETERS_FOUND", "CONFIG_INCORRECT_PARAMETER_TYPE", "CONFIG_TOO_MANY_PARAMETERS", "REFERENCE_REPAIR_MISSING_CONFIGURATION", "SKETCH_CANNOT_MAKE_2_POINTS_BEZIER", "PART_INSTANCE_SELECTED_IN_MULTIPLE_GENERATIVE_DESIGNS", "CURVE_PATTERN_LOCK_FACES_INTERSECTION_FAILED", "SIMULATION_MATERIAL_LACKS_REQUIRED_PROPERTY_DENSITY", "SIMULATION_MATERIAL_LACKS_REQUIRED_PROPERTY_POISSONS_RATIO", "SIMULATION_MATERIAL_LACKS_REQUIRED_PROPERTY_YOUNGS_MODULUS", "SIMULATION_MATERIAL_LACKS_REQUIRED_PROPERTY_TENSILE_YIELD_STRENGTH", "SIMULATION_ASSEMBLY_HAS_UNSUPPORTED_MATES", "ASSEMBLY_NAMED_POSITIONS_OUTSIDE_MATE_LIMIT", "ASSEMBLY_NAMED_POSITIONS_SUBASSEMBLY_OUTSIDE_MATE_LIMIT", "GENERATIVE_RUN_WAS_CANCELED", "SKETCH_CHAMFER_INVALID_POINT", "SKETCH_CHAMFER_PARALLEL", "SKETCH_CHAMFER_FAIL", "SKETCH_CHAMFER_INVALID_INPUTS", "ASSEMBLY_FEATURE_MISSING_SELECTION", "ASSEMBLY_NAMED_POSITIONS_LOCKED_SUBASSEMBLY_FOUND", "CURVE_PATTERN_MISSING_FACE_SELECTION", "TL_CONNECTION_ON_ALL_PROFILES", "TL_FAILED", "TL_CONNECTIONS_CROSS", "TL_SELECT_PROFILES", "TL_TWO_PROFILES", "TL_CONSECUTIVE_ACORNS", "TL_MIXED_PROFILES", "TL_MIXED_PROFILE_TOPOLOGY", "TL_FAILED_TO_CREATE_PROFILES", "TL_CONNECTION_NOT_ON_PROFILE", "SHEET_METAL_FILLET_NO_VARIABLE", "PARTIALLY_INVALID_INPUT", "SKETCH_BEZIER_DEGREE_DIM_NOT_FOUND", "INVALID_BEZIER_DEGREE", "CANNOT_DELETE_BEZIER_DEGREE_DIMENSION", "DERIVED_NO_INSTANCING_SM", "DERIVED_SM_AUTO_INSERT", "ASSEMBLY_PATTERN_WRONG_REFERENCE_WAS_SELECTED", "ASSEMBLY_PATTERN_REFERENCE_COULD_NOT_BE_FOUND", "DERIVED_NO_ACTIVE_SM_COMPOSITE", "PARTIAL_FILLET_INVALID_BOUND_ENTITY", "FGS_THICKNESS_UNCLOSED_INPUT", "FGS_THICKNESS_INTERNAL_ERROR", "SKETCH_SPLIT_NO_BEZIER", "SKETCH_TRIM_NO_BEZIER", "EXPORT_NO_PARTS", "SHEET_METAL_FILLET_OPTIONS_USE_CORNER_BREAK", "SHEET_METAL_CHAMFER_OPTIONS_USE_CORNER_BREAK", "SHEET_METAL_ATTRIBUTE_CORNER_BREAK_UNSUPPORTED_SELECTION", "SHEET_METAL_USE_CORNER_BREAK_INFO", "DRAWING_VIEW_CORRESPONDENCE_FAILED", "EDIT_CURVE_SELECT_PLANE", "EDIT_CURVE_SELECT_WIRE", "EDIT_CURVE_MULTIPLE_EDGES", "EDIT_CURVE_DEGREE_TOO_HIGH", "EDIT_CURVE_INDEX_TOO_LARGE", "EDIT_CURVE_PERIODICITY_CHANGE", "EDIT_CURVE_FAILED", "EDIT_CURVE_NOT_WIRE", "EDIT_CURVE_CANNOT_EDIT_SKETCH_WIRE", "EDIT_CURVE_LOCK_ENDS_PERIODIC", "EDIT_CURVE_NO_BEST_FIT", "PARTIAL_FILLET_OFFSET_BOUNDARY_TOO_LARG", "ASSEMBLY_MIRROR_INVALID_SEED", "FLATTEN_COULD_NOT_FLATTEN", "FLATTEN_SELECT_CONTIGUOUS_REGION", "RULED_SURFACE_BAD_VERTEX", "EDIT_CURVE_TOO_MANY_CONTROL_POINTS", "EDIT_CURVE_NO_END_OVERLAP", "EDIT_CURVE_APPROXIMATION_DEGREE_TOO_SMALL", "EDIT_CURVE_CLOSED_APPROXIMATION_NO_DERIVATIVE", "CONFIGURATION_PARAMETER_HAS_BAD_VISIBILITY_CONDITION", "SHEET_METAL_FORMED_REBUILD_FAILED", "SKETCH_PROFILE_ANALYSIS_FAILED", "FORMED_SPLIT_PART", "LOFT_NO_DIRECTION_FOR_START", "LOFT_NO_DIRECTION_FOR_END", "TOO_MANY_SAMPLES", "FORMED_TOOL_NOT_NORMAL_TO_FACE", "SHEET_METAL_ACTIVE_MODEL_NEEDED", "SHEET_METAL_SELECT_PARTS", "SHEET_METAL_INACTIVE_MODEL_SELECTED", "FORMED_NOT_SAME_LOCATION", "SIMULATION_MASS_OVERRIDE_WILL_BE_IGNORED", "SIMULATION_MASS_OVERRIDE_ARE_IGNORED", "FORMED_TAG_FORM_SELECT_SKETCH_WITH_WIRE_POINT", "FORMED_TAG_FORM_BODIES_ALREADY_TAGGED", "FORMED_TAG_FORM_POSITIVE_PART_NOT_SOLID", "FORMED_TAG_FORM_NEGATIVE_PART_NOT_SOLID", "FORMED_TAG_FORM_POSITIVE_PART_CONSUMED", "FORMED_TAG_FORM_NEGATIVE_PART_CONSUMED", "FORMED_BOOLEAN_UNION_NO_OP", "FORMED_BOOLEAN_SUBTRACT_NO_OP", "FORMED_FAILED_TO_DERIVE", "TWO_WIDTH_MATECONNECTORS_NEEDED", "ONE_TAB_MATECONNECTOR_NEEDED", "TWO_TAB_MATECONNECTORS_NEEDED", "FORMED_TAG_FORM_ORIGIN_OUTSIDE_TOOLS_BBOX", "FORMED_TOOLS_INTERSECT_CANNOT_CUT", "SKETCH_PATTERN_NEEDS_SEED", "WRAP_NEEDS_DIFFERENT_ANCHOR", "UNKNOWN" ]
      },
      "GBTFeatureFilterExclusion" : {
        "type" : "string",
        "enum" : [ "EXCLUDE_EVERYTHING_ELSE", "EXCLUDE_THIS", "UNKNOWN" ]
      },
      "GBTFilterFlattenedGeometryOptions" : {
        "type" : "string",
        "enum" : [ "MODEL_ONLY", "FLATTENED_ONLY", "MODEL_AND_FLATTENED", "UNKNOWN" ]
      },
      "GBTGTolConstraintType" : {
        "type" : "string",
        "enum" : [ "TRUE_POSITION", "PARALLELISM", "PERPENDICULARITY", "PROFILE_SURFACE", "TOTAL_RUNOUT", "UNKNOWN" ]
      },
      "GBTGeometryType" : {
        "type" : "string",
        "enum" : [ "LINE", "CIRCLE", "ARC", "PLANE", "CYLINDER", "CONE", "SPHERE", "TORUS", "SPLINE", "ELLIPSE", "MESH", "CONIC", "REVOLVED", "EXTRUDED", "ALL_MESH", "MIXED_MESH", "SPLINE_INTERNAL_POINT", "SPLINE_CONTROL_POLYGON", "ELLIPTICAL_ARC", "UNKNOWN" ]
      },
      "GBTGraphicsBufferTarget" : {
        "type" : "string",
        "enum" : [ "ARRAY_BUFFER", "ELEMENT_ARRAY_BUFFER", "UNKNOWN" ]
      },
      "GBTInsertableType" : {
        "type" : "string",
        "enum" : [ "PARTS", "SKETCHES", "SURFACES", "FLATTENED_PARTS", "COMPOSITE_PARTS", "PART_STUDIOS", "WIRES", "PARAMETRIC_PART_STUDIOS", "UNKNOWN" ]
      },
      "GBTLoadType" : {
        "type" : "string",
        "enum" : [ "FORCE", "MOMENT", "BEARING_LOAD", "ACCELERATION", "PRESSURE", "UNKNOWN" ]
      },
      "GBTMGeomStatus" : {
        "type" : "string",
        "enum" : [ "UNKNOWN", "UNDER_DEFINED", "WELL_DEFINED", "FIXED", "OVER_DEFINED", "NOT_CONSISTENT" ]
      },
      "GBTMateType" : {
        "type" : "string",
        "enum" : [ "SLIDER", "CYLINDRICAL", "REVOLUTE", "PIN_SLOT", "PLANAR", "BALL", "FASTENED", "PARALLEL", "UNKNOWN" ]
      },
      "GBTMeshState" : {
        "type" : "string",
        "enum" : [ "NO_MESH", "MIXED", "ALL_MESH", "UNKNOWN" ]
      },
      "GBTMetadataOverrideStatusType" : {
        "type" : "string",
        "enum" : [ "UNKNOWN", "PROPERTY_NOT_COMPUTED", "COMPUTED_WITH_NO_OVERRIDES", "COMPUTED_WITH_OVERRIDES", "COMPUTED_WITH_SUBASSEMBLY_OVERRIDES", "OVERRIDDEN" ]
      },
      "GBTMetadataSourceType" : {
        "type" : "string",
        "enum" : [ "AUTOMATIC", "MERGED", "FEATURE", "UNCONFIGURED", "CONFIGURED", "STANDARD_CONTENT", "DEFAULT", "COMPUTED", "COMPUTED_CONFIGURED", "IMPORT", "UNKNOWN" ]
      },
      "GBTNodeChange" : {
        "type" : "string",
        "enum" : [ "NONE", "MOVED", "MODIFIED", "MOVED_AND_MODIFIED", "ADDED", "DELETED", "UNKNOWN" ]
      },
      "GBTNodeStatusType" : {
        "type" : "string",
        "enum" : [ "OK", "INFO", "WARNING", "ERROR", "UNKNOWN" ]
      },
      "GBTNoticeLevel" : {
        "type" : "string",
        "enum" : [ "INTERNAL", "ERROR", "WARNING", "INFO", "UNKNOWN" ]
      },
      "GBTNoticeType" : {
        "type" : "string",
        "enum" : [ "PARSE", "SEMANTIC", "EXECUTION", "MODELING", "TEST", "OTHER", "UNKNOWN" ]
      },
      "GBTPDefinitionType" : {
        "type" : "string",
        "enum" : [ "FUNCTION", "PREDICATE", "CONSTANT", "ENUM", "USER_TYPE", "FEATURE_DEFINITION", "FILE_HEADER", "UNDOCUMENTABLE", "CONST_LAMBDA", "UNKNOWN" ]
      },
      "GBTPOperator" : {
        "type" : "string",
        "enum" : [ "NONE", "PLUS", "MINUS", "TIMES", "DIVIDE", "MODULUS", "POWER", "NEGATE", "OR", "AND", "NOT", "EQUAL_TO", "NOT_EQUAL_TO", "GREATER", "LESS", "GREATER_OR_EQUAL", "LESS_OR_EQUAL", "CONCATENATE", "CONDITIONAL", "UNDEFINED_COALESCING" ]
      },
      "GBTPType" : {
        "type" : "string",
        "enum" : [ "UNDEFINED", "BOOLEAN", "NUMBER", "STRING", "ARRAY", "MAP", "BOX", "BUILTIN", "FUNCTION", "UNKNOWN" ]
      },
      "GBTParameterVisibilityLogicalOp" : {
        "type" : "string",
        "enum" : [ "NOT", "AND", "OR", "UNKNOWN" ]
      },
      "GBTPartColorCycleVersion" : {
        "type" : "string",
        "enum" : [ "COLOR_CYCLE_0", "COLOR_CYCLE_1", "UNKNOWN" ]
      },
      "GBTPartStudioDisplayDataVersion" : {
        "type" : "string",
        "enum" : [ "V0_ORIGINAL_VERSION", "V1_SMOOTH_EDGES_RENDERING_OPTIONS", "V2_SMOOTH_EDGES_TOLERANCE_CHANGED", "UNKNOWN" ]
      },
      "GBTPartStudioInstanceType" : {
        "type" : "string",
        "enum" : [ "PART", "SKETCH", "SURFACE", "COMPOSITE", "UNKNOWN" ]
      },
      "GBTPartStudioItemType" : {
        "type" : "string",
        "enum" : [ "SOLID", "SURFACE", "WIRE", "MESH", "SKETCH", "FLATTENED_SHEET_METAL", "ENTIRE_PART_STUDIO", "CONSTRUCTION_PLANE", "COMPOSITE_PART", "UNKNOWN" ]
      },
      "GBTPartVisibility" : {
        "type" : "string",
        "enum" : [ "HIDDEN", "VISIBLE", "UNSPECIFIED", "UNKNOWN" ]
      },
      "GBTPatternType" : {
        "type" : "string",
        "enum" : [ "LINEAR", "CIRCULAR", "UNKNOWN" ]
      },
      "GBTPreProcessParasolidOption" : {
        "type" : "string",
        "enum" : [ "NO_PRE_PROCESSING", "USE_BODYSHOP_PRE_PROCESSING_ADVANCED", "USE_TRANSLATOR_PRE_PROCESSING", "USE_BODYSHOP_PRE_PROCESSING", "USE_BODYSHOP_PRE_PROCESSING_ADVANCED_WITH_SURFS_TO_BSURFS_CONVERTING", "UNKNOWN" ]
      },
      "GBTQuantityType" : {
        "type" : "string",
        "enum" : [ "UNKNOWN", "INTEGER", "REAL", "LENGTH", "ANGLE", "MASS", "TIME", "TEMPERATURE", "CURRENT", "ANYTHING", "ANYTHING_WITH_UNITS", "FORCE", "PRESSURE", "MOMENT", "ACCELERATION", "ANGULAR_VELOCITY", "ENERGY", "AREA", "VOLUME", "BOOLEAN", "STRING" ]
      },
      "GBTRadiusDisplay" : {
        "type" : "string",
        "enum" : [ "NONE", "RADIAL", "DIAMETRAL", "UNKNOWN" ]
      },
      "GBTSimulationContactBehavior" : {
        "type" : "string",
        "enum" : [ "MATES_ONLY", "FUSE_IN_CONTACT", "FUSE_IN_CONTACT_AND_USE_MATES", "UNKNOWN" ]
      },
      "GBTSketchCurveType" : {
        "type" : "string",
        "enum" : [ "UNSET", "INTERPOLATED_SPLINE", "BEZIER_CURVE", "UNKNOWN" ]
      },
      "GBTSketchEntityType" : {
        "type" : "string",
        "enum" : [ "CURVE", "IMAGE_ENTITY", "POINT", "TEXT", "CIRCLE", "CONIC", "SPLINE", "ELLIPSE", "LINE", "UNKNOWN" ]
      },
      "GBTSketchObjectType" : {
        "type" : "string",
        "enum" : [ "NOT_SKETCH_OBJECT", "ANY_SKETCH_OBJECT", "USER_ENTITY", "WHOLE_SKETCH", "UNKNOWN" ]
      },
      "GBTSubAssemblyLockType" : {
        "type" : "string",
        "enum" : [ "SUB_ASSEMBLY_POSITION", "CURRENT_POSITION", "NAMED_POSIITION", "UNKNOWN" ]
      },
      "GBTSurfaceType" : {
        "type" : "string",
        "enum" : [ "PLANE", "CYLINDER", "CONE", "SPHERE", "TORUS", "OTHER", "REVOLVED", "EXTRUDED", "MESH", "SPLINE", "UNKNOWN" ]
      },
      "GBTSurfaceTypeEnum" : {
        "type" : "string",
        "enum" : [ "PLANE", "CYLINDER", "CONE", "SPHERE", "TORUS", "SPUN", "SWEEP", "OFFSET", "BLEND", "BSURFACE", "OTHER", "UNKNOWN" ]
      },
      "GBTTableColumnWidthUnits" : {
        "type" : "string",
        "enum" : [ "PERCENT", "CHARS", "PIXELS", "UNKNOWN" ]
      },
      "GBTTableTextAlignment" : {
        "type" : "string",
        "enum" : [ "LEFT", "CENTER", "RIGHT", "UNKNOWN" ]
      },
      "GBTTessellationSettingEnum" : {
        "type" : "string",
        "enum" : [ "AUTO", "COARSE", "MEDIUM", "FINE", "VERY_FINE", "CURVATURE_VISUALIZATION", "UNKNOWN" ]
      },
      "GBTTolerancePrecision" : {
        "type" : "string",
        "enum" : [ "DEFAULT", "ONES", "TENTHS", "HUNDREDTHS", "THOUSANDTHS", "TEN_THOUSANDTHS", "HUNDRED_THOUSANDTHS", "MILLIONTHS", "UNKNOWN" ]
      },
      "GBTToleranceType" : {
        "type" : "string",
        "enum" : [ "NONE", "SYMMETRICAL", "DEVIATION", "LIMITS", "MIN", "MAX", "FIT", "FIT_WITH_TOLERANCE", "FIT_TOLERANCE_ONLY", "DEFAULT", "BASIC", "UNKNOWN" ]
      },
      "GBTUIHint" : {
        "type" : "string",
        "enum" : [ "OPPOSITE_DIRECTION", "ALWAYS_HIDDEN", "SHOW_CREATE_SELECTION", "CONTROL_VISIBILITY", "NO_PREVIEW_PROVIDED", "REMEMBER_PREVIOUS_VALUE", "DISPLAY_SHORT", "ALLOW_FEATURE_SELECTION", "MATE_CONNECTOR_AXIS_TYPE", "PRIMARY_AXIS", "SHOW_EXPRESSION", "OPPOSITE_DIRECTION_CIRCULAR", "SHOW_LABEL", "HORIZONTAL_ENUM", "UNCONFIGURABLE", "MATCH_LAST_ARRAY_ITEM", "COLLAPSE_ARRAY_ITEMS", "INITIAL_FOCUS_ON_EDIT", "INITIAL_FOCUS", "DISPLAY_CURRENT_VALUE_ONLY", "READ_ONLY", "PREVENT_CREATING_NEW_MATE_CONNECTORS", "FIRST_IN_ROW", "ALLOW_QUERY_ORDER", "PREVENT_ARRAY_REORDER", "VARIABLE_NAME", "FOCUS_INNER_QUERY", "SHOW_TOLERANCE", "ALLOW_ARRAY_FOCUS", "SHOW_INLINE_CONFIG_INPUTS", "FOCUS_ON_VISIBLE", "CAN_BE_TOLERANT", "CAN_BE_TOLERANT_DIAMETER", "PLUS_MINUS", "UNKNOWN" ]
      },
      "GBTUiSelectionType" : {
        "type" : "string",
        "enum" : [ "ENTITY", "FEATURE", "BODY", "OCCURRENCE", "USERCODE", "ROLLBACKBAR", "ELEMENT", "MATE", "MATE_CONNECTOR", "EDGE_POINT", "MESH_POINT", "TABLE_ITEM", "SKETCH_GROUP", "FOLDER", "NON_GEOMETRIC_ITEM", "TEMPORARY_GEOMETRY", "PROPERTY", "SIMULATION_LOAD", "PERSISTENT_QUERY_STRING", "GENERATIVE_DESIGN_ITEM", "ANNOTATION", "DIMENSION", "UNKNOWN" ]
      },
      "GBTValueUse" : {
        "type" : "string",
        "enum" : [ "STRING", "INTEGER", "UNITS", "TYPE", "LOCALIZE", "UNKNOWN" ]
      },
      "GBTVariableType" : {
        "type" : "string",
        "description" : "Variable type name, from FeatureScript VariableType",
        "enum" : [ "LENGTH", "ANGLE", "NUMBER", "ANY", "UNKNOWN" ]
      },
      "GBTWeldJointType" : {
        "type" : "string",
        "enum" : [ "NONE", "DOUBLE_V_GROOVE", "DOUBLE_BEVEL_GROOVE", "DOUBLE_U_GROOVE", "DOUBLE_J_GROOVE", "DOUBLE_FLARE_V", "DOUBLE_FLARE_BEVEL", "UNKNOWN" ]
      },
      "GBTWeldType" : {
        "type" : "string",
        "enum" : [ "NONE", "SQUARE_GROOVE", "V_GROOVE", "U_GROOVE", "J_GROOVE", "BEVEL_GROOVE", "SINGLE_BEVEL_BUTT_BROAD_ROOT", "V_FLARE_GROOVE", "BEVEL_FLARE_GROOVE", "BEAD_JOINT", "FILLET_JOINT", "UNKNOWN" ]
      },
      "GlTF" : {
        "type" : "object",
        "properties" : {
          "accessors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accessor"
            }
          },
          "animations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Animation"
            }
          },
          "asset" : {
            "$ref" : "#/components/schemas/Asset"
          },
          "bufferViews" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BufferView"
            }
          },
          "buffers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Buffer"
            }
          },
          "cameras" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Camera"
            }
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extensionsRequired" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "extensionsUsed" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "images" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Image"
            }
          },
          "materials" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Material"
            }
          },
          "meshes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Mesh"
            }
          },
          "nodes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Node"
            }
          },
          "samplers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Sampler"
            }
          },
          "scene" : {
            "type" : "integer",
            "format" : "int32"
          },
          "scenes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Scene"
            }
          },
          "skins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Skin"
            }
          },
          "textures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Texture"
            }
          }
        }
      },
      "GlobalPermissionInfo" : {
        "type" : "object",
        "properties" : {
          "accessReports" : {
            "type" : "boolean"
          },
          "adminEnterprise" : {
            "type" : "boolean"
          },
          "allowAppStoreAccess" : {
            "type" : "boolean"
          },
          "allowPublicDocumentsAccess" : {
            "type" : "boolean"
          },
          "approveReleases" : {
            "type" : "boolean"
          },
          "branchLockPermissions" : {
            "type" : "boolean"
          },
          "createChangeOrders" : {
            "type" : "boolean"
          },
          "createChangeRequests" : {
            "type" : "boolean"
          },
          "createDocumentsInRoot" : {
            "type" : "boolean"
          },
          "createProject" : {
            "type" : "boolean"
          },
          "createReleases" : {
            "type" : "boolean"
          },
          "createTasks" : {
            "type" : "boolean"
          },
          "deletePermanently" : {
            "type" : "boolean"
          },
          "importFiles" : {
            "type" : "boolean"
          },
          "manageGuestUsers" : {
            "type" : "boolean"
          },
          "manageNonGeometricItems" : {
            "type" : "boolean"
          },
          "manageRbac" : {
            "type" : "boolean"
          },
          "manageStandardContentMetadata" : {
            "type" : "boolean"
          },
          "manageUsers" : {
            "type" : "boolean"
          },
          "manageWorkflows" : {
            "type" : "boolean"
          },
          "shareForAnonymousAccess" : {
            "type" : "boolean"
          },
          "transferDocumentsFromEnterprise" : {
            "type" : "boolean"
          },
          "viewChangeOrders" : {
            "type" : "boolean"
          },
          "viewChangeRequests" : {
            "type" : "boolean"
          }
        }
      },
      "Header" : {
        "type" : "object",
        "properties" : {
          "deprecated" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "example" : {
            "type" : "object"
          },
          "examples" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Example"
            }
          },
          "explode" : {
            "type" : "boolean"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "get$ref" : {
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          },
          "schema" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "style" : {
            "$ref" : "#/components/schemas/StyleEnum"
          }
        }
      },
      "Image" : {
        "type" : "object",
        "properties" : {
          "bufferView" : {
            "type" : "integer",
            "format" : "int32"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "mimeType" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "uri" : {
            "type" : "string"
          }
        }
      },
      "In" : {
        "type" : "string",
        "enum" : [ "COOKIE", "HEADER", "QUERY" ]
      },
      "Info" : {
        "type" : "object",
        "properties" : {
          "contact" : {
            "$ref" : "#/components/schemas/Contact"
          },
          "description" : {
            "type" : "string"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "license" : {
            "$ref" : "#/components/schemas/License"
          },
          "summary" : {
            "type" : "string"
          },
          "termsOfService" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          }
        }
      },
      "Interpolation" : {
        "type" : "string",
        "enum" : [ "STEP", "LINEAR", "CATMULLROMSPLINE", "CUBICSPLINE" ]
      },
      "Item" : {
        "required" : [ "jsonType" ],
        "type" : "object",
        "properties" : {
          "applicationTarget" : {
            "$ref" : "#/components/schemas/BTApplicationTargetInfo"
          },
          "dataType" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "elementId" : {
            "type" : "string"
          },
          "elementType" : {
            "$ref" : "#/components/schemas/GBTElementType"
          },
          "encodedConfiguration" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "jsonType" : {
            "type" : "string"
          },
          "partId" : {
            "type" : "string"
          },
          "partName" : {
            "type" : "string"
          },
          "partNumber" : {
            "type" : "string"
          },
          "revision" : {
            "type" : "string"
          },
          "revisionId" : {
            "type" : "string"
          },
          "state" : {
            "type" : "integer",
            "format" : "int32"
          },
          "versionId" : {
            "type" : "string"
          },
          "versionName" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "jsonType",
          "mapping" : {
            "publication-blob-item" : "#/components/schemas/BlobItem"
          }
        }
      },
      "License" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "Lines" : {
        "type" : "object"
      },
      "Link" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "get$ref" : {
            "type" : "string"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Header"
            }
          },
          "operationId" : {
            "type" : "string"
          },
          "operationRef" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "requestBody" : {
            "type" : "object"
          },
          "server" : {
            "$ref" : "#/components/schemas/Server"
          }
        }
      },
      "Material" : {
        "type" : "object",
        "properties" : {
          "alphaCutoff" : {
            "type" : "number",
            "format" : "float"
          },
          "alphaMode" : {
            "type" : "string"
          },
          "doubleSided" : {
            "type" : "boolean"
          },
          "emissiveFactor" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          },
          "emissiveTexture" : {
            "$ref" : "#/components/schemas/TextureInfo"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "name" : {
            "type" : "string"
          },
          "normalTexture" : {
            "$ref" : "#/components/schemas/MaterialNormalTextureInfo"
          },
          "occlusionTexture" : {
            "$ref" : "#/components/schemas/MaterialOcclusionTextureInfo"
          },
          "pbrMetallicRoughness" : {
            "$ref" : "#/components/schemas/MaterialPbrMetallicRoughness"
          }
        }
      },
      "MaterialNormalTextureInfo" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "scale" : {
            "type" : "number",
            "format" : "float"
          },
          "texCoord" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MaterialOcclusionTextureInfo" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "strength" : {
            "type" : "number",
            "format" : "float"
          },
          "texCoord" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MaterialPbrMetallicRoughness" : {
        "type" : "object",
        "properties" : {
          "baseColorFactor" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          },
          "baseColorTexture" : {
            "$ref" : "#/components/schemas/TextureInfo"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "metallicFactor" : {
            "type" : "number",
            "format" : "float"
          },
          "metallicRoughnessTexture" : {
            "$ref" : "#/components/schemas/TextureInfo"
          },
          "roughnessFactor" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "MediaType" : {
        "type" : "object",
        "properties" : {
          "encoding" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Encoding"
            }
          },
          "example" : {
            "type" : "object"
          },
          "exampleSetFlag" : {
            "type" : "boolean"
          },
          "examples" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Example"
            }
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "schema" : {
            "$ref" : "#/components/schemas/Schema"
          }
        }
      },
      "Mesh" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "name" : {
            "type" : "string"
          },
          "primitives" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MeshPrimitive"
            }
          },
          "weights" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          }
        }
      },
      "MeshPrimitive" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "indices" : {
            "type" : "integer",
            "format" : "int32"
          },
          "material" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        }
      },
      "NextCharge" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currentPeriodEnd" : {
            "type" : "string",
            "format" : "date-time"
          },
          "interval" : {
            "type" : "string"
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "Node" : {
        "type" : "object",
        "properties" : {
          "camera" : {
            "type" : "integer",
            "format" : "int32"
          },
          "children" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "matrix" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          },
          "mesh" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "rotation" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          },
          "scale" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          },
          "skin" : {
            "type" : "integer",
            "format" : "int32"
          },
          "translation" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          },
          "weights" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          }
        }
      },
      "OAuthFlow" : {
        "type" : "object",
        "properties" : {
          "authorizationUrl" : {
            "type" : "string"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "refreshUrl" : {
            "type" : "string"
          },
          "scopes" : {
            "type" : "object",
            "properties" : {
              "extensions" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              },
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "tokenUrl" : {
            "type" : "string"
          }
        }
      },
      "OAuthFlows" : {
        "type" : "object",
        "properties" : {
          "authorizationCode" : {
            "$ref" : "#/components/schemas/OAuthFlow"
          },
          "clientCredentials" : {
            "$ref" : "#/components/schemas/OAuthFlow"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "implicit" : {
            "$ref" : "#/components/schemas/OAuthFlow"
          },
          "password" : {
            "$ref" : "#/components/schemas/OAuthFlow"
          }
        }
      },
      "ObjectId" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "OpenAPI" : {
        "type" : "object",
        "properties" : {
          "components" : {
            "$ref" : "#/components/schemas/Components"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "externalDocs" : {
            "$ref" : "#/components/schemas/ExternalDocumentation"
          },
          "info" : {
            "$ref" : "#/components/schemas/Info"
          },
          "jsonSchemaDialect" : {
            "type" : "string"
          },
          "openapi" : {
            "type" : "string"
          },
          "paths" : {
            "type" : "object",
            "properties" : {
              "extensions" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              },
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PathItem"
            }
          },
          "security" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SecurityRequirement"
            }
          },
          "servers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Server"
            }
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "webhooks" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PathItem"
            }
          }
        }
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "callbacks" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Callback"
            }
          },
          "deprecated" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "externalDocs" : {
            "$ref" : "#/components/schemas/ExternalDocumentation"
          },
          "operationId" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Parameter"
            }
          },
          "requestBody" : {
            "$ref" : "#/components/schemas/RequestBody"
          },
          "responses" : {
            "type" : "object",
            "properties" : {
              "extensions" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              },
              "default" : {
                "$ref" : "#/components/schemas/ApiResponse"
              },
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ApiResponse"
            }
          },
          "security" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SecurityRequirement"
            }
          },
          "servers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Server"
            }
          },
          "summary" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Parameter" : {
        "type" : "object",
        "properties" : {
          "allowEmptyValue" : {
            "type" : "boolean"
          },
          "allowReserved" : {
            "type" : "boolean"
          },
          "content" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MediaType"
            }
          },
          "deprecated" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "example" : {
            "type" : "object"
          },
          "examples" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Example"
            }
          },
          "explode" : {
            "type" : "boolean"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "get$ref" : {
            "type" : "string"
          },
          "in" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          },
          "schema" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "style" : {
            "$ref" : "#/components/schemas/StyleEnum"
          }
        }
      },
      "PathItem" : {
        "type" : "object",
        "properties" : {
          "delete" : {
            "$ref" : "#/components/schemas/Operation"
          },
          "description" : {
            "type" : "string"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "get" : {
            "$ref" : "#/components/schemas/Operation"
          },
          "get$ref" : {
            "type" : "string"
          },
          "head" : {
            "$ref" : "#/components/schemas/Operation"
          },
          "options" : {
            "$ref" : "#/components/schemas/Operation"
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Parameter"
            }
          },
          "patch" : {
            "$ref" : "#/components/schemas/Operation"
          },
          "post" : {
            "$ref" : "#/components/schemas/Operation"
          },
          "put" : {
            "$ref" : "#/components/schemas/Operation"
          },
          "servers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Server"
            }
          },
          "summary" : {
            "type" : "string"
          },
          "trace" : {
            "$ref" : "#/components/schemas/Operation"
          }
        }
      },
      "ProratedCharges" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "RequestBody" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "object",
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MediaType"
            }
          },
          "description" : {
            "type" : "string"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "get$ref" : {
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          }
        }
      },
      "RoleMapEntry" : {
        "type" : "object",
        "properties" : {
          "identities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTIdentityInfo"
            }
          },
          "role" : {
            "$ref" : "#/components/schemas/BTRbacRoleInfo"
          }
        }
      },
      "Sampler" : {
        "type" : "object",
        "properties" : {
          "input" : {
            "$ref" : "#/components/schemas/AccessorModel"
          },
          "interpolation" : {
            "$ref" : "#/components/schemas/Interpolation"
          },
          "output" : {
            "$ref" : "#/components/schemas/AccessorModel"
          }
        }
      },
      "Scene" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "name" : {
            "type" : "string"
          },
          "nodes" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      },
      "Schema" : {
        "type" : "object",
        "properties" : {
          "additionalItems" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "additionalProperties" : {
            "type" : "object"
          },
          "allOf" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Schema"
            }
          },
          "anyOf" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Schema"
            }
          },
          "booleanSchemaValue" : {
            "type" : "boolean"
          },
          "const" : {
            "type" : "object"
          },
          "contains" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "contentEncoding" : {
            "type" : "string"
          },
          "contentMediaType" : {
            "type" : "string"
          },
          "contentSchema" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "default" : {
            "type" : "object"
          },
          "dependentRequired" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "dependentSchemas" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Schema"
            }
          },
          "deprecated" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "discriminator" : {
            "$ref" : "#/components/schemas/Discriminator"
          },
          "else" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "enum" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "example" : {
            "type" : "object"
          },
          "exampleSetFlag" : {
            "type" : "boolean"
          },
          "examples" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "exclusiveMaximum" : {
            "type" : "boolean"
          },
          "exclusiveMaximumValue" : {
            "type" : "number"
          },
          "exclusiveMinimum" : {
            "type" : "boolean"
          },
          "exclusiveMinimumValue" : {
            "type" : "number"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "externalDocs" : {
            "$ref" : "#/components/schemas/ExternalDocumentation"
          },
          "format" : {
            "type" : "string"
          },
          "get$anchor" : {
            "type" : "string"
          },
          "get$comment" : {
            "type" : "string"
          },
          "get$id" : {
            "type" : "string"
          },
          "get$ref" : {
            "type" : "string"
          },
          "get$schema" : {
            "type" : "string"
          },
          "if" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "items" : {
            "$ref" : "#/components/schemas/SchemaObject"
          },
          "jsonSchema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "jsonSchemaImpl" : {
            "type" : "object"
          },
          "maxContains" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxItems" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxProperties" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maximum" : {
            "type" : "number"
          },
          "minContains" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minItems" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minProperties" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minimum" : {
            "type" : "number"
          },
          "multipleOf" : {
            "type" : "number"
          },
          "not" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "nullable" : {
            "type" : "boolean"
          },
          "oneOf" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Schema"
            }
          },
          "pattern" : {
            "type" : "string"
          },
          "patternProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Schema"
            }
          },
          "prefixItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Schema"
            }
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Schema"
            }
          },
          "propertyNames" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "readOnly" : {
            "type" : "boolean"
          },
          "required" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "then" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "types" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "unevaluatedItems" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "unevaluatedProperties" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "uniqueItems" : {
            "type" : "boolean"
          },
          "writeOnly" : {
            "type" : "boolean"
          },
          "xml" : {
            "$ref" : "#/components/schemas/XML"
          }
        }
      },
      "SchemaObject" : {
        "type" : "object",
        "properties" : {
          "additionalItems" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "additionalProperties" : {
            "type" : "object"
          },
          "allOf" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Schema"
            }
          },
          "anyOf" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Schema"
            }
          },
          "booleanSchemaValue" : {
            "type" : "boolean"
          },
          "const" : {
            "type" : "object"
          },
          "contains" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "contentEncoding" : {
            "type" : "string"
          },
          "contentMediaType" : {
            "type" : "string"
          },
          "contentSchema" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "default" : {
            "type" : "object"
          },
          "dependentRequired" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "deprecated" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "discriminator" : {
            "$ref" : "#/components/schemas/Discriminator"
          },
          "else" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "enum" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "example" : {
            "type" : "object"
          },
          "exampleSetFlag" : {
            "type" : "boolean"
          },
          "examples" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "exclusiveMaximum" : {
            "type" : "boolean"
          },
          "exclusiveMaximumValue" : {
            "type" : "number"
          },
          "exclusiveMinimum" : {
            "type" : "boolean"
          },
          "exclusiveMinimumValue" : {
            "type" : "number"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "externalDocs" : {
            "$ref" : "#/components/schemas/ExternalDocumentation"
          },
          "format" : {
            "type" : "string"
          },
          "get$anchor" : {
            "type" : "string"
          },
          "get$comment" : {
            "type" : "string"
          },
          "get$id" : {
            "type" : "string"
          },
          "get$ref" : {
            "type" : "string"
          },
          "get$schema" : {
            "type" : "string"
          },
          "if" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "items" : {
            "$ref" : "#/components/schemas/SchemaObject"
          },
          "jsonSchema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "jsonSchemaImpl" : {
            "type" : "object"
          },
          "maxContains" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxItems" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxProperties" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maximum" : {
            "type" : "number"
          },
          "minContains" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minItems" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minLength" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minProperties" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minimum" : {
            "type" : "number"
          },
          "multipleOf" : {
            "type" : "number"
          },
          "not" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "nullable" : {
            "type" : "boolean"
          },
          "oneOf" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Schema"
            }
          },
          "pattern" : {
            "type" : "string"
          },
          "prefixItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Schema"
            }
          },
          "propertyNames" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "readOnly" : {
            "type" : "boolean"
          },
          "required" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "then" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "types" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "unevaluatedItems" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "unevaluatedProperties" : {
            "$ref" : "#/components/schemas/Schema"
          },
          "uniqueItems" : {
            "type" : "boolean"
          },
          "writeOnly" : {
            "type" : "boolean"
          },
          "xml" : {
            "$ref" : "#/components/schemas/XML"
          }
        }
      },
      "SecurityRequirement" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "SecurityScheme" : {
        "type" : "object",
        "properties" : {
          "bearerFormat" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "flows" : {
            "$ref" : "#/components/schemas/OAuthFlows"
          },
          "get$ref" : {
            "type" : "string"
          },
          "in" : {
            "$ref" : "#/components/schemas/In"
          },
          "name" : {
            "type" : "string"
          },
          "openIdConnectUrl" : {
            "type" : "string"
          },
          "scheme" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/Type"
          }
        }
      },
      "Server" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "url" : {
            "type" : "string"
          },
          "variables" : {
            "type" : "object",
            "properties" : {
              "extensions" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              },
              "empty" : {
                "type" : "boolean"
              }
            },
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ServerVariable"
            }
          }
        }
      },
      "ServerVariable" : {
        "type" : "object",
        "properties" : {
          "default" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "enum" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "Skin" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "inverseBindMatrices" : {
            "type" : "integer",
            "format" : "int32"
          },
          "joints" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "name" : {
            "type" : "string"
          },
          "skeleton" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "Status" : {
        "type" : "string",
        "enum" : [ "DB_TIMEOUT", "DB_MAX_NUMBER_ITEMS_EXCEEDED" ]
      },
      "StyleEnum" : {
        "type" : "string",
        "enum" : [ "FORM", "SPACE_DELIMITED", "PIPE_DELIMITED", "DEEP_OBJECT" ]
      },
      "Tag" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "externalDocs" : {
            "$ref" : "#/components/schemas/ExternalDocumentation"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "Texture" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "name" : {
            "type" : "string"
          },
          "sampler" : {
            "type" : "integer",
            "format" : "int32"
          },
          "source" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "TextureInfo" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "extras" : {
            "type" : "object"
          },
          "index" : {
            "type" : "integer",
            "format" : "int32"
          },
          "texCoord" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "TransformGroup" : {
        "type" : "object",
        "properties" : {
          "instances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTAssemblyInstanceDefinitionParams"
            }
          },
          "transform" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }
      },
      "Type" : {
        "type" : "string",
        "enum" : [ "APIKEY", "HTTP", "OAUTH2", "OPENIDCONNECT", "MUTUALTLS" ]
      },
      "UpdateParams" : {
        "type" : "object",
        "properties" : {
          "fromReference" : {
            "$ref" : "#/components/schemas/BTUniqueDocumentItemParams"
          },
          "idsToUpdate" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ignoreChildren" : {
            "type" : "boolean"
          },
          "toReference" : {
            "$ref" : "#/components/schemas/BTUniqueDocumentItemParams"
          }
        }
      },
      "VersionAlias" : {
        "type" : "string",
        "enum" : [ "LAST_MINOR", "LAST_BUILD" ]
      },
      "Versions" : {
        "type" : "object",
        "properties" : {
          "availableVersions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BTApiVersion"
            }
          },
          "specifiedVersion" : {
            "$ref" : "#/components/schemas/BTApiVersion"
          }
        }
      },
      "XML" : {
        "type" : "object",
        "properties" : {
          "attribute" : {
            "type" : "boolean"
          },
          "extensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "name" : {
            "type" : "string"
          },
          "namespace" : {
            "type" : "string"
          },
          "prefix" : {
            "type" : "string"
          },
          "wrapped" : {
            "type" : "boolean"
          }
        }
      }
    },
    "securitySchemes" : {
      "OAuth2" : {
        "type" : "oauth2",
        "description" : "Use OAuth 2.0 to authenticate requests.",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "/oauth/authorize",
            "tokenUrl" : "/oauth/token",
            "refreshUrl" : "/oauth/token",
            "scopes" : {
              "OAuth2Internal" : "Application is Onshape Internal",
              "OAuth2ReadPII" : "Application can read your profile information",
              "OAuth2Read" : "Application can read your documents",
              "OAuth2Write" : "Application can write to your documents",
              "OAuth2Delete" : "Application can delete your documents and workspaces",
              "OAuth2Purchase" : "Application can request purchases on your behalf",
              "OAuth2Share" : "Application can share and unshare documents on your behalf",
              "document.create" : "Atlas Application can create a document",
              "document.edit" : "Atlas Application can edit a document",
              "document.delete" : "Atlas Application can delete a document",
              "document.read" : "Atlas Application can read a document",
              "enterprise.create" : "Atlas Application can create an enterprise",
              "enterprise.read" : "Atlas Application can read from an enterprise",
              "enterprise.edit" : "Atlas Application can edit an enterprise",
              "enterprise.delete" : "Atlas Application can delete an enterprise",
              "enterprise.member.create" : "Atlas Application can create an enterprise member",
              "enterprise.member.read" : "Atlas Application can read the details of an enterprise member",
              "enterprise.member.edit" : "Atlas Application can edit the details of an enterprise member",
              "enterprise.member.delete" : "Atlas Application can delete a member from an enterprise",
              "webhook.create" : "Atlas Application can create a webhook on behalf of the logged-in user",
              "webhook.edit" : "Atlas Application can edit a webhook on behalf of the logged-in user",
              "webhook.read" : "Atlas Application can read a webhook on behalf of the logged-in user",
              "webhook.delete" : "Atlas Application can delete a webhook on behalf of the logged-in user",
              "PLMIntegration" : "PLM automation can invoke limited operations"
            }
          }
        }
      },
      "BasicAuth" : {
        "type" : "http",
        "description" : "Use Basic Authentication with API Keys (key as username and secret as password) to authenticate requests.",
        "scheme" : "basic"
      }
    }
  }
}