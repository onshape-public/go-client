/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTTranslateFormatParams struct for BTTranslateFormatParams
type BTTranslateFormatParams struct {
	// If true, parts with faults are imported. If false, faulty parts are omitted.
	AllowFaultyParts *bool `json:"allowFaultyParts,omitempty"`
	// Determines the maximum angular deviation, between the analytical surface and its triangulation. Lower values result in a finer geometry and higher values result in coarser geometry.
	AngularTolerance      *float64 `json:"angularTolerance,omitempty"`
	BlobElementId         *string  `json:"blobElementId,omitempty"`
	BlobMicroversionId    *string  `json:"blobMicroversionId,omitempty"`
	CloudObjectId         *string  `json:"cloudObjectId,omitempty"`
	CloudStorageAccountId *string  `json:"cloudStorageAccountId,omitempty"`
	ColorMethod           *string  `json:"colorMethod,omitempty"`
	Configuration         *string  `json:"configuration,omitempty"`
	ConnectionId          *string  `json:"connectionId,omitempty"`
	CreateComposite       *bool    `json:"createComposite,omitempty"`
	CurrentSheetOnly      *bool    `json:"currentSheetOnly,omitempty"`
	DestinationName       *string  `json:"destinationName,omitempty"`
	DistanceTolerance     *float64 `json:"distanceTolerance,omitempty"`
	// The id of the element in which to perform the operation.
	ElementId *string `json:"elementId,omitempty"`
	// An array of element ids.
	ElementIds   []string `json:"elementIds,omitempty"`
	EmailLink    *bool    `json:"emailLink,omitempty"`
	EmailMessage *string  `json:"emailMessage,omitempty"`
	EmailSubject *string  `json:"emailSubject,omitempty"`
	EmailTo      []string `json:"emailTo,omitempty"`
	// Set to `true` to evaluate the export rule for the given `formatName` and to include an `exportRuleFileName` value in the response.
	EvaluateExportRule       *bool   `json:"evaluateExportRule,omitempty"`
	ExcludeHiddenEntities    *bool   `json:"excludeHiddenEntities,omitempty"`
	ExtractAssemblyHierarchy *bool   `json:"extractAssemblyHierarchy,omitempty"`
	Flatten                  *bool   `json:"flatten,omitempty"`
	FlattenAssemblies        *bool   `json:"flattenAssemblies,omitempty"`
	ForeignId                *string `json:"foreignId,omitempty"`
	// The name of the file format.
	FormatName                   string  `json:"formatName"`
	FromUserId                   *string `json:"fromUserId,omitempty"`
	GetyAxisIsUp                 *bool   `json:"getyAxisIsUp,omitempty"`
	Grouping                     *bool   `json:"grouping,omitempty"`
	HideInspectionItems          *bool   `json:"hideInspectionItems,omitempty"`
	IgnoreExportRulesForContents *bool   `json:"ignoreExportRulesForContents,omitempty"`
	ImageHeight                  *int32  `json:"imageHeight,omitempty"`
	ImageWidth                   *int32  `json:"imageWidth,omitempty"`
	ImportAppearances            *bool   `json:"importAppearances,omitempty"`
	ImportInBackground           *bool   `json:"importInBackground,omitempty"`
	ImportMaterialDensity        *bool   `json:"importMaterialDensity,omitempty"`
	ImportWithinDocument         *bool   `json:"importWithinDocument,omitempty"`
	IncludeExportIds             *bool   `json:"includeExportIds,omitempty"`
	JoinAdjacentSurfaces         *bool   `json:"joinAdjacentSurfaces,omitempty"`
	Level                        *string `json:"level,omitempty"`
	// The id of the document through which the above document should be accessed; only applicable when accessing a version of the document. This allows a user who has access to document a to see data from document b, as long as document b has been linked to document a by a user who has permission to both.
	LinkDocumentId          *string `json:"linkDocumentId,omitempty"`
	LinkDocumentWorkspaceId *string `json:"linkDocumentWorkspaceId,omitempty"`
	// Determines the maximum distance, between the analytical surface and its triangulation. Lower values result in a finer geometry and higher values result in coarser geometry.
	MaximumChordLength      *float64                 `json:"maximumChordLength,omitempty"`
	NotifyUser              *bool                    `json:"notifyUser,omitempty"`
	OccurrencesToExport     *string                  `json:"occurrencesToExport,omitempty"`
	OnePartPerDoc           *bool                    `json:"onePartPerDoc,omitempty"`
	OriginalForeignId       *string                  `json:"originalForeignId,omitempty"`
	ParentId                *string                  `json:"parentId,omitempty"`
	PartIds                 *string                  `json:"partIds,omitempty"`
	PartsExportFilter       *BTPartsExportFilter4308 `json:"partsExportFilter,omitempty"`
	Password                *string                  `json:"password,omitempty"`
	PasswordRequired        *bool                    `json:"passwordRequired,omitempty"`
	PdfVersion              *string                  `json:"pdfVersion,omitempty"`
	ProcessedForeignId      *string                  `json:"processedForeignId,omitempty"`
	ProjectId               *string                  `json:"projectId,omitempty"`
	ProxyDocumentId         *string                  `json:"proxyDocumentId,omitempty"`
	ProxyElementId          *string                  `json:"proxyElementId,omitempty"`
	ProxyWorkspaceVersion   *string                  `json:"proxyWorkspaceVersion,omitempty"`
	ProxyWorkspaceVersionId *string                  `json:"proxyWorkspaceVersionId,omitempty"`
	// Determines export resolution of fine, medium, or coarse
	Resolution                           *string                       `json:"resolution,omitempty"`
	SelectablePdfText                    *bool                         `json:"selectablePdfText,omitempty"`
	SendCopyToMe                         *bool                         `json:"sendCopyToMe,omitempty"`
	SheetIndices                         []int32                       `json:"sheetIndices,omitempty"`
	ShowOverriddenDimensions             *bool                         `json:"showOverriddenDimensions,omitempty"`
	SkipBodyshop                         *bool                         `json:"skipBodyshop,omitempty"`
	SourceName                           *string                       `json:"sourceName,omitempty"`
	SpecifyMaterialData                  *bool                         `json:"specifyMaterialData,omitempty"`
	SpecifyUnits                         *bool                         `json:"specifyUnits,omitempty"`
	SplinesAsPolylines                   *bool                         `json:"splinesAsPolylines,omitempty"`
	SplitAssembliesIntoMultipleDocuments *bool                         `json:"splitAssembliesIntoMultipleDocuments,omitempty"`
	StepParasolidPreprocessingOption     *GBTPreProcessParasolidOption `json:"stepParasolidPreprocessingOption,omitempty"`
	StepVersionString                    *string                       `json:"stepVersionString,omitempty"`
	StoreInDocument                      *bool                         `json:"storeInDocument,omitempty"`
	TextAsGeometry                       *bool                         `json:"textAsGeometry,omitempty"`
	TextOption                           *string                       `json:"textOption,omitempty"`
	TriggerAutoDownload                  *bool                         `json:"triggerAutoDownload,omitempty"`
	Unit                                 *string                       `json:"unit,omitempty"`
	UpgradeFeatureScriptVersion          *bool                         `json:"upgradeFeatureScriptVersion,omitempty"`
	UploadId                             *string                       `json:"uploadId,omitempty"`
	UseFileNameToSetSinglePartName       *bool                         `json:"useFileNameToSetSinglePartName,omitempty"`
	UseGltfCompression                   *bool                         `json:"useGltfCompression,omitempty"`
	UseIGESImportPostProcessing          *bool                         `json:"useIGESImportPostProcessing,omitempty"`
	UseIgesCompatibilityMode             *bool                         `json:"useIgesCompatibilityMode,omitempty"`
	ValidForDays                         *int32                        `json:"validForDays,omitempty"`
	VersionString                        *string                       `json:"versionString,omitempty"`
}

// NewBTTranslateFormatParams instantiates a new BTTranslateFormatParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTTranslateFormatParams(formatName string) *BTTranslateFormatParams {
	this := BTTranslateFormatParams{}
	var allowFaultyParts bool = false
	this.AllowFaultyParts = &allowFaultyParts
	var evaluateExportRule bool = false
	this.EvaluateExportRule = &evaluateExportRule
	this.FormatName = formatName
	return &this
}

// NewBTTranslateFormatParamsWithDefaults instantiates a new BTTranslateFormatParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTTranslateFormatParamsWithDefaults() *BTTranslateFormatParams {
	this := BTTranslateFormatParams{}
	var allowFaultyParts bool = false
	this.AllowFaultyParts = &allowFaultyParts
	var evaluateExportRule bool = false
	this.EvaluateExportRule = &evaluateExportRule
	return &this
}

// GetAllowFaultyParts returns the AllowFaultyParts field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetAllowFaultyParts() bool {
	if o == nil || o.AllowFaultyParts == nil {
		var ret bool
		return ret
	}
	return *o.AllowFaultyParts
}

// GetAllowFaultyPartsOk returns a tuple with the AllowFaultyParts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetAllowFaultyPartsOk() (*bool, bool) {
	if o == nil || o.AllowFaultyParts == nil {
		return nil, false
	}
	return o.AllowFaultyParts, true
}

// HasAllowFaultyParts returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasAllowFaultyParts() bool {
	if o != nil && o.AllowFaultyParts != nil {
		return true
	}

	return false
}

// SetAllowFaultyParts gets a reference to the given bool and assigns it to the AllowFaultyParts field.
func (o *BTTranslateFormatParams) SetAllowFaultyParts(v bool) {
	o.AllowFaultyParts = &v
}

// GetAngularTolerance returns the AngularTolerance field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetAngularTolerance() float64 {
	if o == nil || o.AngularTolerance == nil {
		var ret float64
		return ret
	}
	return *o.AngularTolerance
}

// GetAngularToleranceOk returns a tuple with the AngularTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetAngularToleranceOk() (*float64, bool) {
	if o == nil || o.AngularTolerance == nil {
		return nil, false
	}
	return o.AngularTolerance, true
}

// HasAngularTolerance returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasAngularTolerance() bool {
	if o != nil && o.AngularTolerance != nil {
		return true
	}

	return false
}

// SetAngularTolerance gets a reference to the given float64 and assigns it to the AngularTolerance field.
func (o *BTTranslateFormatParams) SetAngularTolerance(v float64) {
	o.AngularTolerance = &v
}

// GetBlobElementId returns the BlobElementId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetBlobElementId() string {
	if o == nil || o.BlobElementId == nil {
		var ret string
		return ret
	}
	return *o.BlobElementId
}

// GetBlobElementIdOk returns a tuple with the BlobElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetBlobElementIdOk() (*string, bool) {
	if o == nil || o.BlobElementId == nil {
		return nil, false
	}
	return o.BlobElementId, true
}

// HasBlobElementId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasBlobElementId() bool {
	if o != nil && o.BlobElementId != nil {
		return true
	}

	return false
}

// SetBlobElementId gets a reference to the given string and assigns it to the BlobElementId field.
func (o *BTTranslateFormatParams) SetBlobElementId(v string) {
	o.BlobElementId = &v
}

// GetBlobMicroversionId returns the BlobMicroversionId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetBlobMicroversionId() string {
	if o == nil || o.BlobMicroversionId == nil {
		var ret string
		return ret
	}
	return *o.BlobMicroversionId
}

// GetBlobMicroversionIdOk returns a tuple with the BlobMicroversionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetBlobMicroversionIdOk() (*string, bool) {
	if o == nil || o.BlobMicroversionId == nil {
		return nil, false
	}
	return o.BlobMicroversionId, true
}

// HasBlobMicroversionId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasBlobMicroversionId() bool {
	if o != nil && o.BlobMicroversionId != nil {
		return true
	}

	return false
}

// SetBlobMicroversionId gets a reference to the given string and assigns it to the BlobMicroversionId field.
func (o *BTTranslateFormatParams) SetBlobMicroversionId(v string) {
	o.BlobMicroversionId = &v
}

// GetCloudObjectId returns the CloudObjectId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetCloudObjectId() string {
	if o == nil || o.CloudObjectId == nil {
		var ret string
		return ret
	}
	return *o.CloudObjectId
}

// GetCloudObjectIdOk returns a tuple with the CloudObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetCloudObjectIdOk() (*string, bool) {
	if o == nil || o.CloudObjectId == nil {
		return nil, false
	}
	return o.CloudObjectId, true
}

// HasCloudObjectId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasCloudObjectId() bool {
	if o != nil && o.CloudObjectId != nil {
		return true
	}

	return false
}

// SetCloudObjectId gets a reference to the given string and assigns it to the CloudObjectId field.
func (o *BTTranslateFormatParams) SetCloudObjectId(v string) {
	o.CloudObjectId = &v
}

// GetCloudStorageAccountId returns the CloudStorageAccountId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetCloudStorageAccountId() string {
	if o == nil || o.CloudStorageAccountId == nil {
		var ret string
		return ret
	}
	return *o.CloudStorageAccountId
}

// GetCloudStorageAccountIdOk returns a tuple with the CloudStorageAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetCloudStorageAccountIdOk() (*string, bool) {
	if o == nil || o.CloudStorageAccountId == nil {
		return nil, false
	}
	return o.CloudStorageAccountId, true
}

// HasCloudStorageAccountId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasCloudStorageAccountId() bool {
	if o != nil && o.CloudStorageAccountId != nil {
		return true
	}

	return false
}

// SetCloudStorageAccountId gets a reference to the given string and assigns it to the CloudStorageAccountId field.
func (o *BTTranslateFormatParams) SetCloudStorageAccountId(v string) {
	o.CloudStorageAccountId = &v
}

// GetColorMethod returns the ColorMethod field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetColorMethod() string {
	if o == nil || o.ColorMethod == nil {
		var ret string
		return ret
	}
	return *o.ColorMethod
}

// GetColorMethodOk returns a tuple with the ColorMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetColorMethodOk() (*string, bool) {
	if o == nil || o.ColorMethod == nil {
		return nil, false
	}
	return o.ColorMethod, true
}

// HasColorMethod returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasColorMethod() bool {
	if o != nil && o.ColorMethod != nil {
		return true
	}

	return false
}

// SetColorMethod gets a reference to the given string and assigns it to the ColorMethod field.
func (o *BTTranslateFormatParams) SetColorMethod(v string) {
	o.ColorMethod = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetConfiguration() string {
	if o == nil || o.Configuration == nil {
		var ret string
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetConfigurationOk() (*string, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given string and assigns it to the Configuration field.
func (o *BTTranslateFormatParams) SetConfiguration(v string) {
	o.Configuration = &v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetConnectionId() string {
	if o == nil || o.ConnectionId == nil {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetConnectionIdOk() (*string, bool) {
	if o == nil || o.ConnectionId == nil {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasConnectionId() bool {
	if o != nil && o.ConnectionId != nil {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *BTTranslateFormatParams) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetCreateComposite returns the CreateComposite field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetCreateComposite() bool {
	if o == nil || o.CreateComposite == nil {
		var ret bool
		return ret
	}
	return *o.CreateComposite
}

// GetCreateCompositeOk returns a tuple with the CreateComposite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetCreateCompositeOk() (*bool, bool) {
	if o == nil || o.CreateComposite == nil {
		return nil, false
	}
	return o.CreateComposite, true
}

// HasCreateComposite returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasCreateComposite() bool {
	if o != nil && o.CreateComposite != nil {
		return true
	}

	return false
}

// SetCreateComposite gets a reference to the given bool and assigns it to the CreateComposite field.
func (o *BTTranslateFormatParams) SetCreateComposite(v bool) {
	o.CreateComposite = &v
}

// GetCurrentSheetOnly returns the CurrentSheetOnly field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetCurrentSheetOnly() bool {
	if o == nil || o.CurrentSheetOnly == nil {
		var ret bool
		return ret
	}
	return *o.CurrentSheetOnly
}

// GetCurrentSheetOnlyOk returns a tuple with the CurrentSheetOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetCurrentSheetOnlyOk() (*bool, bool) {
	if o == nil || o.CurrentSheetOnly == nil {
		return nil, false
	}
	return o.CurrentSheetOnly, true
}

// HasCurrentSheetOnly returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasCurrentSheetOnly() bool {
	if o != nil && o.CurrentSheetOnly != nil {
		return true
	}

	return false
}

// SetCurrentSheetOnly gets a reference to the given bool and assigns it to the CurrentSheetOnly field.
func (o *BTTranslateFormatParams) SetCurrentSheetOnly(v bool) {
	o.CurrentSheetOnly = &v
}

// GetDestinationName returns the DestinationName field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetDestinationName() string {
	if o == nil || o.DestinationName == nil {
		var ret string
		return ret
	}
	return *o.DestinationName
}

// GetDestinationNameOk returns a tuple with the DestinationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetDestinationNameOk() (*string, bool) {
	if o == nil || o.DestinationName == nil {
		return nil, false
	}
	return o.DestinationName, true
}

// HasDestinationName returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasDestinationName() bool {
	if o != nil && o.DestinationName != nil {
		return true
	}

	return false
}

// SetDestinationName gets a reference to the given string and assigns it to the DestinationName field.
func (o *BTTranslateFormatParams) SetDestinationName(v string) {
	o.DestinationName = &v
}

// GetDistanceTolerance returns the DistanceTolerance field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetDistanceTolerance() float64 {
	if o == nil || o.DistanceTolerance == nil {
		var ret float64
		return ret
	}
	return *o.DistanceTolerance
}

// GetDistanceToleranceOk returns a tuple with the DistanceTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetDistanceToleranceOk() (*float64, bool) {
	if o == nil || o.DistanceTolerance == nil {
		return nil, false
	}
	return o.DistanceTolerance, true
}

// HasDistanceTolerance returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasDistanceTolerance() bool {
	if o != nil && o.DistanceTolerance != nil {
		return true
	}

	return false
}

// SetDistanceTolerance gets a reference to the given float64 and assigns it to the DistanceTolerance field.
func (o *BTTranslateFormatParams) SetDistanceTolerance(v float64) {
	o.DistanceTolerance = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetElementId() string {
	if o == nil || o.ElementId == nil {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetElementIdOk() (*string, bool) {
	if o == nil || o.ElementId == nil {
		return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasElementId() bool {
	if o != nil && o.ElementId != nil {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *BTTranslateFormatParams) SetElementId(v string) {
	o.ElementId = &v
}

// GetElementIds returns the ElementIds field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetElementIds() []string {
	if o == nil || o.ElementIds == nil {
		var ret []string
		return ret
	}
	return o.ElementIds
}

// GetElementIdsOk returns a tuple with the ElementIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetElementIdsOk() ([]string, bool) {
	if o == nil || o.ElementIds == nil {
		return nil, false
	}
	return o.ElementIds, true
}

// HasElementIds returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasElementIds() bool {
	if o != nil && o.ElementIds != nil {
		return true
	}

	return false
}

// SetElementIds gets a reference to the given []string and assigns it to the ElementIds field.
func (o *BTTranslateFormatParams) SetElementIds(v []string) {
	o.ElementIds = v
}

// GetEmailLink returns the EmailLink field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetEmailLink() bool {
	if o == nil || o.EmailLink == nil {
		var ret bool
		return ret
	}
	return *o.EmailLink
}

// GetEmailLinkOk returns a tuple with the EmailLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetEmailLinkOk() (*bool, bool) {
	if o == nil || o.EmailLink == nil {
		return nil, false
	}
	return o.EmailLink, true
}

// HasEmailLink returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasEmailLink() bool {
	if o != nil && o.EmailLink != nil {
		return true
	}

	return false
}

// SetEmailLink gets a reference to the given bool and assigns it to the EmailLink field.
func (o *BTTranslateFormatParams) SetEmailLink(v bool) {
	o.EmailLink = &v
}

// GetEmailMessage returns the EmailMessage field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetEmailMessage() string {
	if o == nil || o.EmailMessage == nil {
		var ret string
		return ret
	}
	return *o.EmailMessage
}

// GetEmailMessageOk returns a tuple with the EmailMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetEmailMessageOk() (*string, bool) {
	if o == nil || o.EmailMessage == nil {
		return nil, false
	}
	return o.EmailMessage, true
}

// HasEmailMessage returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasEmailMessage() bool {
	if o != nil && o.EmailMessage != nil {
		return true
	}

	return false
}

// SetEmailMessage gets a reference to the given string and assigns it to the EmailMessage field.
func (o *BTTranslateFormatParams) SetEmailMessage(v string) {
	o.EmailMessage = &v
}

// GetEmailSubject returns the EmailSubject field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetEmailSubject() string {
	if o == nil || o.EmailSubject == nil {
		var ret string
		return ret
	}
	return *o.EmailSubject
}

// GetEmailSubjectOk returns a tuple with the EmailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetEmailSubjectOk() (*string, bool) {
	if o == nil || o.EmailSubject == nil {
		return nil, false
	}
	return o.EmailSubject, true
}

// HasEmailSubject returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasEmailSubject() bool {
	if o != nil && o.EmailSubject != nil {
		return true
	}

	return false
}

// SetEmailSubject gets a reference to the given string and assigns it to the EmailSubject field.
func (o *BTTranslateFormatParams) SetEmailSubject(v string) {
	o.EmailSubject = &v
}

// GetEmailTo returns the EmailTo field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetEmailTo() []string {
	if o == nil || o.EmailTo == nil {
		var ret []string
		return ret
	}
	return o.EmailTo
}

// GetEmailToOk returns a tuple with the EmailTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetEmailToOk() ([]string, bool) {
	if o == nil || o.EmailTo == nil {
		return nil, false
	}
	return o.EmailTo, true
}

// HasEmailTo returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasEmailTo() bool {
	if o != nil && o.EmailTo != nil {
		return true
	}

	return false
}

// SetEmailTo gets a reference to the given []string and assigns it to the EmailTo field.
func (o *BTTranslateFormatParams) SetEmailTo(v []string) {
	o.EmailTo = v
}

// GetEvaluateExportRule returns the EvaluateExportRule field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetEvaluateExportRule() bool {
	if o == nil || o.EvaluateExportRule == nil {
		var ret bool
		return ret
	}
	return *o.EvaluateExportRule
}

// GetEvaluateExportRuleOk returns a tuple with the EvaluateExportRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetEvaluateExportRuleOk() (*bool, bool) {
	if o == nil || o.EvaluateExportRule == nil {
		return nil, false
	}
	return o.EvaluateExportRule, true
}

// HasEvaluateExportRule returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasEvaluateExportRule() bool {
	if o != nil && o.EvaluateExportRule != nil {
		return true
	}

	return false
}

// SetEvaluateExportRule gets a reference to the given bool and assigns it to the EvaluateExportRule field.
func (o *BTTranslateFormatParams) SetEvaluateExportRule(v bool) {
	o.EvaluateExportRule = &v
}

// GetExcludeHiddenEntities returns the ExcludeHiddenEntities field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetExcludeHiddenEntities() bool {
	if o == nil || o.ExcludeHiddenEntities == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeHiddenEntities
}

// GetExcludeHiddenEntitiesOk returns a tuple with the ExcludeHiddenEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetExcludeHiddenEntitiesOk() (*bool, bool) {
	if o == nil || o.ExcludeHiddenEntities == nil {
		return nil, false
	}
	return o.ExcludeHiddenEntities, true
}

// HasExcludeHiddenEntities returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasExcludeHiddenEntities() bool {
	if o != nil && o.ExcludeHiddenEntities != nil {
		return true
	}

	return false
}

// SetExcludeHiddenEntities gets a reference to the given bool and assigns it to the ExcludeHiddenEntities field.
func (o *BTTranslateFormatParams) SetExcludeHiddenEntities(v bool) {
	o.ExcludeHiddenEntities = &v
}

// GetExtractAssemblyHierarchy returns the ExtractAssemblyHierarchy field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetExtractAssemblyHierarchy() bool {
	if o == nil || o.ExtractAssemblyHierarchy == nil {
		var ret bool
		return ret
	}
	return *o.ExtractAssemblyHierarchy
}

// GetExtractAssemblyHierarchyOk returns a tuple with the ExtractAssemblyHierarchy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetExtractAssemblyHierarchyOk() (*bool, bool) {
	if o == nil || o.ExtractAssemblyHierarchy == nil {
		return nil, false
	}
	return o.ExtractAssemblyHierarchy, true
}

// HasExtractAssemblyHierarchy returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasExtractAssemblyHierarchy() bool {
	if o != nil && o.ExtractAssemblyHierarchy != nil {
		return true
	}

	return false
}

// SetExtractAssemblyHierarchy gets a reference to the given bool and assigns it to the ExtractAssemblyHierarchy field.
func (o *BTTranslateFormatParams) SetExtractAssemblyHierarchy(v bool) {
	o.ExtractAssemblyHierarchy = &v
}

// GetFlatten returns the Flatten field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetFlatten() bool {
	if o == nil || o.Flatten == nil {
		var ret bool
		return ret
	}
	return *o.Flatten
}

// GetFlattenOk returns a tuple with the Flatten field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetFlattenOk() (*bool, bool) {
	if o == nil || o.Flatten == nil {
		return nil, false
	}
	return o.Flatten, true
}

// HasFlatten returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasFlatten() bool {
	if o != nil && o.Flatten != nil {
		return true
	}

	return false
}

// SetFlatten gets a reference to the given bool and assigns it to the Flatten field.
func (o *BTTranslateFormatParams) SetFlatten(v bool) {
	o.Flatten = &v
}

// GetFlattenAssemblies returns the FlattenAssemblies field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetFlattenAssemblies() bool {
	if o == nil || o.FlattenAssemblies == nil {
		var ret bool
		return ret
	}
	return *o.FlattenAssemblies
}

// GetFlattenAssembliesOk returns a tuple with the FlattenAssemblies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetFlattenAssembliesOk() (*bool, bool) {
	if o == nil || o.FlattenAssemblies == nil {
		return nil, false
	}
	return o.FlattenAssemblies, true
}

// HasFlattenAssemblies returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasFlattenAssemblies() bool {
	if o != nil && o.FlattenAssemblies != nil {
		return true
	}

	return false
}

// SetFlattenAssemblies gets a reference to the given bool and assigns it to the FlattenAssemblies field.
func (o *BTTranslateFormatParams) SetFlattenAssemblies(v bool) {
	o.FlattenAssemblies = &v
}

// GetForeignId returns the ForeignId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetForeignId() string {
	if o == nil || o.ForeignId == nil {
		var ret string
		return ret
	}
	return *o.ForeignId
}

// GetForeignIdOk returns a tuple with the ForeignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetForeignIdOk() (*string, bool) {
	if o == nil || o.ForeignId == nil {
		return nil, false
	}
	return o.ForeignId, true
}

// HasForeignId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasForeignId() bool {
	if o != nil && o.ForeignId != nil {
		return true
	}

	return false
}

// SetForeignId gets a reference to the given string and assigns it to the ForeignId field.
func (o *BTTranslateFormatParams) SetForeignId(v string) {
	o.ForeignId = &v
}

// GetFormatName returns the FormatName field value
func (o *BTTranslateFormatParams) GetFormatName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FormatName
}

// GetFormatNameOk returns a tuple with the FormatName field value
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetFormatNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FormatName, true
}

// SetFormatName sets field value
func (o *BTTranslateFormatParams) SetFormatName(v string) {
	o.FormatName = v
}

// GetFromUserId returns the FromUserId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetFromUserId() string {
	if o == nil || o.FromUserId == nil {
		var ret string
		return ret
	}
	return *o.FromUserId
}

// GetFromUserIdOk returns a tuple with the FromUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetFromUserIdOk() (*string, bool) {
	if o == nil || o.FromUserId == nil {
		return nil, false
	}
	return o.FromUserId, true
}

// HasFromUserId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasFromUserId() bool {
	if o != nil && o.FromUserId != nil {
		return true
	}

	return false
}

// SetFromUserId gets a reference to the given string and assigns it to the FromUserId field.
func (o *BTTranslateFormatParams) SetFromUserId(v string) {
	o.FromUserId = &v
}

// GetGetyAxisIsUp returns the GetyAxisIsUp field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetGetyAxisIsUp() bool {
	if o == nil || o.GetyAxisIsUp == nil {
		var ret bool
		return ret
	}
	return *o.GetyAxisIsUp
}

// GetGetyAxisIsUpOk returns a tuple with the GetyAxisIsUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetGetyAxisIsUpOk() (*bool, bool) {
	if o == nil || o.GetyAxisIsUp == nil {
		return nil, false
	}
	return o.GetyAxisIsUp, true
}

// HasGetyAxisIsUp returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasGetyAxisIsUp() bool {
	if o != nil && o.GetyAxisIsUp != nil {
		return true
	}

	return false
}

// SetGetyAxisIsUp gets a reference to the given bool and assigns it to the GetyAxisIsUp field.
func (o *BTTranslateFormatParams) SetGetyAxisIsUp(v bool) {
	o.GetyAxisIsUp = &v
}

// GetGrouping returns the Grouping field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetGrouping() bool {
	if o == nil || o.Grouping == nil {
		var ret bool
		return ret
	}
	return *o.Grouping
}

// GetGroupingOk returns a tuple with the Grouping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetGroupingOk() (*bool, bool) {
	if o == nil || o.Grouping == nil {
		return nil, false
	}
	return o.Grouping, true
}

// HasGrouping returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasGrouping() bool {
	if o != nil && o.Grouping != nil {
		return true
	}

	return false
}

// SetGrouping gets a reference to the given bool and assigns it to the Grouping field.
func (o *BTTranslateFormatParams) SetGrouping(v bool) {
	o.Grouping = &v
}

// GetHideInspectionItems returns the HideInspectionItems field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetHideInspectionItems() bool {
	if o == nil || o.HideInspectionItems == nil {
		var ret bool
		return ret
	}
	return *o.HideInspectionItems
}

// GetHideInspectionItemsOk returns a tuple with the HideInspectionItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetHideInspectionItemsOk() (*bool, bool) {
	if o == nil || o.HideInspectionItems == nil {
		return nil, false
	}
	return o.HideInspectionItems, true
}

// HasHideInspectionItems returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasHideInspectionItems() bool {
	if o != nil && o.HideInspectionItems != nil {
		return true
	}

	return false
}

// SetHideInspectionItems gets a reference to the given bool and assigns it to the HideInspectionItems field.
func (o *BTTranslateFormatParams) SetHideInspectionItems(v bool) {
	o.HideInspectionItems = &v
}

// GetIgnoreExportRulesForContents returns the IgnoreExportRulesForContents field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetIgnoreExportRulesForContents() bool {
	if o == nil || o.IgnoreExportRulesForContents == nil {
		var ret bool
		return ret
	}
	return *o.IgnoreExportRulesForContents
}

// GetIgnoreExportRulesForContentsOk returns a tuple with the IgnoreExportRulesForContents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetIgnoreExportRulesForContentsOk() (*bool, bool) {
	if o == nil || o.IgnoreExportRulesForContents == nil {
		return nil, false
	}
	return o.IgnoreExportRulesForContents, true
}

// HasIgnoreExportRulesForContents returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasIgnoreExportRulesForContents() bool {
	if o != nil && o.IgnoreExportRulesForContents != nil {
		return true
	}

	return false
}

// SetIgnoreExportRulesForContents gets a reference to the given bool and assigns it to the IgnoreExportRulesForContents field.
func (o *BTTranslateFormatParams) SetIgnoreExportRulesForContents(v bool) {
	o.IgnoreExportRulesForContents = &v
}

// GetImageHeight returns the ImageHeight field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetImageHeight() int32 {
	if o == nil || o.ImageHeight == nil {
		var ret int32
		return ret
	}
	return *o.ImageHeight
}

// GetImageHeightOk returns a tuple with the ImageHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetImageHeightOk() (*int32, bool) {
	if o == nil || o.ImageHeight == nil {
		return nil, false
	}
	return o.ImageHeight, true
}

// HasImageHeight returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasImageHeight() bool {
	if o != nil && o.ImageHeight != nil {
		return true
	}

	return false
}

// SetImageHeight gets a reference to the given int32 and assigns it to the ImageHeight field.
func (o *BTTranslateFormatParams) SetImageHeight(v int32) {
	o.ImageHeight = &v
}

// GetImageWidth returns the ImageWidth field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetImageWidth() int32 {
	if o == nil || o.ImageWidth == nil {
		var ret int32
		return ret
	}
	return *o.ImageWidth
}

// GetImageWidthOk returns a tuple with the ImageWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetImageWidthOk() (*int32, bool) {
	if o == nil || o.ImageWidth == nil {
		return nil, false
	}
	return o.ImageWidth, true
}

// HasImageWidth returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasImageWidth() bool {
	if o != nil && o.ImageWidth != nil {
		return true
	}

	return false
}

// SetImageWidth gets a reference to the given int32 and assigns it to the ImageWidth field.
func (o *BTTranslateFormatParams) SetImageWidth(v int32) {
	o.ImageWidth = &v
}

// GetImportAppearances returns the ImportAppearances field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetImportAppearances() bool {
	if o == nil || o.ImportAppearances == nil {
		var ret bool
		return ret
	}
	return *o.ImportAppearances
}

// GetImportAppearancesOk returns a tuple with the ImportAppearances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetImportAppearancesOk() (*bool, bool) {
	if o == nil || o.ImportAppearances == nil {
		return nil, false
	}
	return o.ImportAppearances, true
}

// HasImportAppearances returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasImportAppearances() bool {
	if o != nil && o.ImportAppearances != nil {
		return true
	}

	return false
}

// SetImportAppearances gets a reference to the given bool and assigns it to the ImportAppearances field.
func (o *BTTranslateFormatParams) SetImportAppearances(v bool) {
	o.ImportAppearances = &v
}

// GetImportInBackground returns the ImportInBackground field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetImportInBackground() bool {
	if o == nil || o.ImportInBackground == nil {
		var ret bool
		return ret
	}
	return *o.ImportInBackground
}

// GetImportInBackgroundOk returns a tuple with the ImportInBackground field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetImportInBackgroundOk() (*bool, bool) {
	if o == nil || o.ImportInBackground == nil {
		return nil, false
	}
	return o.ImportInBackground, true
}

// HasImportInBackground returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasImportInBackground() bool {
	if o != nil && o.ImportInBackground != nil {
		return true
	}

	return false
}

// SetImportInBackground gets a reference to the given bool and assigns it to the ImportInBackground field.
func (o *BTTranslateFormatParams) SetImportInBackground(v bool) {
	o.ImportInBackground = &v
}

// GetImportMaterialDensity returns the ImportMaterialDensity field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetImportMaterialDensity() bool {
	if o == nil || o.ImportMaterialDensity == nil {
		var ret bool
		return ret
	}
	return *o.ImportMaterialDensity
}

// GetImportMaterialDensityOk returns a tuple with the ImportMaterialDensity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetImportMaterialDensityOk() (*bool, bool) {
	if o == nil || o.ImportMaterialDensity == nil {
		return nil, false
	}
	return o.ImportMaterialDensity, true
}

// HasImportMaterialDensity returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasImportMaterialDensity() bool {
	if o != nil && o.ImportMaterialDensity != nil {
		return true
	}

	return false
}

// SetImportMaterialDensity gets a reference to the given bool and assigns it to the ImportMaterialDensity field.
func (o *BTTranslateFormatParams) SetImportMaterialDensity(v bool) {
	o.ImportMaterialDensity = &v
}

// GetImportWithinDocument returns the ImportWithinDocument field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetImportWithinDocument() bool {
	if o == nil || o.ImportWithinDocument == nil {
		var ret bool
		return ret
	}
	return *o.ImportWithinDocument
}

// GetImportWithinDocumentOk returns a tuple with the ImportWithinDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetImportWithinDocumentOk() (*bool, bool) {
	if o == nil || o.ImportWithinDocument == nil {
		return nil, false
	}
	return o.ImportWithinDocument, true
}

// HasImportWithinDocument returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasImportWithinDocument() bool {
	if o != nil && o.ImportWithinDocument != nil {
		return true
	}

	return false
}

// SetImportWithinDocument gets a reference to the given bool and assigns it to the ImportWithinDocument field.
func (o *BTTranslateFormatParams) SetImportWithinDocument(v bool) {
	o.ImportWithinDocument = &v
}

// GetIncludeExportIds returns the IncludeExportIds field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetIncludeExportIds() bool {
	if o == nil || o.IncludeExportIds == nil {
		var ret bool
		return ret
	}
	return *o.IncludeExportIds
}

// GetIncludeExportIdsOk returns a tuple with the IncludeExportIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetIncludeExportIdsOk() (*bool, bool) {
	if o == nil || o.IncludeExportIds == nil {
		return nil, false
	}
	return o.IncludeExportIds, true
}

// HasIncludeExportIds returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasIncludeExportIds() bool {
	if o != nil && o.IncludeExportIds != nil {
		return true
	}

	return false
}

// SetIncludeExportIds gets a reference to the given bool and assigns it to the IncludeExportIds field.
func (o *BTTranslateFormatParams) SetIncludeExportIds(v bool) {
	o.IncludeExportIds = &v
}

// GetJoinAdjacentSurfaces returns the JoinAdjacentSurfaces field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetJoinAdjacentSurfaces() bool {
	if o == nil || o.JoinAdjacentSurfaces == nil {
		var ret bool
		return ret
	}
	return *o.JoinAdjacentSurfaces
}

// GetJoinAdjacentSurfacesOk returns a tuple with the JoinAdjacentSurfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetJoinAdjacentSurfacesOk() (*bool, bool) {
	if o == nil || o.JoinAdjacentSurfaces == nil {
		return nil, false
	}
	return o.JoinAdjacentSurfaces, true
}

// HasJoinAdjacentSurfaces returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasJoinAdjacentSurfaces() bool {
	if o != nil && o.JoinAdjacentSurfaces != nil {
		return true
	}

	return false
}

// SetJoinAdjacentSurfaces gets a reference to the given bool and assigns it to the JoinAdjacentSurfaces field.
func (o *BTTranslateFormatParams) SetJoinAdjacentSurfaces(v bool) {
	o.JoinAdjacentSurfaces = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetLevel() string {
	if o == nil || o.Level == nil {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetLevelOk() (*string, bool) {
	if o == nil || o.Level == nil {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasLevel() bool {
	if o != nil && o.Level != nil {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *BTTranslateFormatParams) SetLevel(v string) {
	o.Level = &v
}

// GetLinkDocumentId returns the LinkDocumentId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetLinkDocumentId() string {
	if o == nil || o.LinkDocumentId == nil {
		var ret string
		return ret
	}
	return *o.LinkDocumentId
}

// GetLinkDocumentIdOk returns a tuple with the LinkDocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetLinkDocumentIdOk() (*string, bool) {
	if o == nil || o.LinkDocumentId == nil {
		return nil, false
	}
	return o.LinkDocumentId, true
}

// HasLinkDocumentId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasLinkDocumentId() bool {
	if o != nil && o.LinkDocumentId != nil {
		return true
	}

	return false
}

// SetLinkDocumentId gets a reference to the given string and assigns it to the LinkDocumentId field.
func (o *BTTranslateFormatParams) SetLinkDocumentId(v string) {
	o.LinkDocumentId = &v
}

// GetLinkDocumentWorkspaceId returns the LinkDocumentWorkspaceId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetLinkDocumentWorkspaceId() string {
	if o == nil || o.LinkDocumentWorkspaceId == nil {
		var ret string
		return ret
	}
	return *o.LinkDocumentWorkspaceId
}

// GetLinkDocumentWorkspaceIdOk returns a tuple with the LinkDocumentWorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetLinkDocumentWorkspaceIdOk() (*string, bool) {
	if o == nil || o.LinkDocumentWorkspaceId == nil {
		return nil, false
	}
	return o.LinkDocumentWorkspaceId, true
}

// HasLinkDocumentWorkspaceId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasLinkDocumentWorkspaceId() bool {
	if o != nil && o.LinkDocumentWorkspaceId != nil {
		return true
	}

	return false
}

// SetLinkDocumentWorkspaceId gets a reference to the given string and assigns it to the LinkDocumentWorkspaceId field.
func (o *BTTranslateFormatParams) SetLinkDocumentWorkspaceId(v string) {
	o.LinkDocumentWorkspaceId = &v
}

// GetMaximumChordLength returns the MaximumChordLength field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetMaximumChordLength() float64 {
	if o == nil || o.MaximumChordLength == nil {
		var ret float64
		return ret
	}
	return *o.MaximumChordLength
}

// GetMaximumChordLengthOk returns a tuple with the MaximumChordLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetMaximumChordLengthOk() (*float64, bool) {
	if o == nil || o.MaximumChordLength == nil {
		return nil, false
	}
	return o.MaximumChordLength, true
}

// HasMaximumChordLength returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasMaximumChordLength() bool {
	if o != nil && o.MaximumChordLength != nil {
		return true
	}

	return false
}

// SetMaximumChordLength gets a reference to the given float64 and assigns it to the MaximumChordLength field.
func (o *BTTranslateFormatParams) SetMaximumChordLength(v float64) {
	o.MaximumChordLength = &v
}

// GetNotifyUser returns the NotifyUser field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetNotifyUser() bool {
	if o == nil || o.NotifyUser == nil {
		var ret bool
		return ret
	}
	return *o.NotifyUser
}

// GetNotifyUserOk returns a tuple with the NotifyUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetNotifyUserOk() (*bool, bool) {
	if o == nil || o.NotifyUser == nil {
		return nil, false
	}
	return o.NotifyUser, true
}

// HasNotifyUser returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasNotifyUser() bool {
	if o != nil && o.NotifyUser != nil {
		return true
	}

	return false
}

// SetNotifyUser gets a reference to the given bool and assigns it to the NotifyUser field.
func (o *BTTranslateFormatParams) SetNotifyUser(v bool) {
	o.NotifyUser = &v
}

// GetOccurrencesToExport returns the OccurrencesToExport field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetOccurrencesToExport() string {
	if o == nil || o.OccurrencesToExport == nil {
		var ret string
		return ret
	}
	return *o.OccurrencesToExport
}

// GetOccurrencesToExportOk returns a tuple with the OccurrencesToExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetOccurrencesToExportOk() (*string, bool) {
	if o == nil || o.OccurrencesToExport == nil {
		return nil, false
	}
	return o.OccurrencesToExport, true
}

// HasOccurrencesToExport returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasOccurrencesToExport() bool {
	if o != nil && o.OccurrencesToExport != nil {
		return true
	}

	return false
}

// SetOccurrencesToExport gets a reference to the given string and assigns it to the OccurrencesToExport field.
func (o *BTTranslateFormatParams) SetOccurrencesToExport(v string) {
	o.OccurrencesToExport = &v
}

// GetOnePartPerDoc returns the OnePartPerDoc field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetOnePartPerDoc() bool {
	if o == nil || o.OnePartPerDoc == nil {
		var ret bool
		return ret
	}
	return *o.OnePartPerDoc
}

// GetOnePartPerDocOk returns a tuple with the OnePartPerDoc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetOnePartPerDocOk() (*bool, bool) {
	if o == nil || o.OnePartPerDoc == nil {
		return nil, false
	}
	return o.OnePartPerDoc, true
}

// HasOnePartPerDoc returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasOnePartPerDoc() bool {
	if o != nil && o.OnePartPerDoc != nil {
		return true
	}

	return false
}

// SetOnePartPerDoc gets a reference to the given bool and assigns it to the OnePartPerDoc field.
func (o *BTTranslateFormatParams) SetOnePartPerDoc(v bool) {
	o.OnePartPerDoc = &v
}

// GetOriginalForeignId returns the OriginalForeignId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetOriginalForeignId() string {
	if o == nil || o.OriginalForeignId == nil {
		var ret string
		return ret
	}
	return *o.OriginalForeignId
}

// GetOriginalForeignIdOk returns a tuple with the OriginalForeignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetOriginalForeignIdOk() (*string, bool) {
	if o == nil || o.OriginalForeignId == nil {
		return nil, false
	}
	return o.OriginalForeignId, true
}

// HasOriginalForeignId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasOriginalForeignId() bool {
	if o != nil && o.OriginalForeignId != nil {
		return true
	}

	return false
}

// SetOriginalForeignId gets a reference to the given string and assigns it to the OriginalForeignId field.
func (o *BTTranslateFormatParams) SetOriginalForeignId(v string) {
	o.OriginalForeignId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetParentIdOk() (*string, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *BTTranslateFormatParams) SetParentId(v string) {
	o.ParentId = &v
}

// GetPartIds returns the PartIds field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetPartIds() string {
	if o == nil || o.PartIds == nil {
		var ret string
		return ret
	}
	return *o.PartIds
}

// GetPartIdsOk returns a tuple with the PartIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetPartIdsOk() (*string, bool) {
	if o == nil || o.PartIds == nil {
		return nil, false
	}
	return o.PartIds, true
}

// HasPartIds returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasPartIds() bool {
	if o != nil && o.PartIds != nil {
		return true
	}

	return false
}

// SetPartIds gets a reference to the given string and assigns it to the PartIds field.
func (o *BTTranslateFormatParams) SetPartIds(v string) {
	o.PartIds = &v
}

// GetPartsExportFilter returns the PartsExportFilter field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetPartsExportFilter() BTPartsExportFilter4308 {
	if o == nil || o.PartsExportFilter == nil {
		var ret BTPartsExportFilter4308
		return ret
	}
	return *o.PartsExportFilter
}

// GetPartsExportFilterOk returns a tuple with the PartsExportFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetPartsExportFilterOk() (*BTPartsExportFilter4308, bool) {
	if o == nil || o.PartsExportFilter == nil {
		return nil, false
	}
	return o.PartsExportFilter, true
}

// HasPartsExportFilter returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasPartsExportFilter() bool {
	if o != nil && o.PartsExportFilter != nil {
		return true
	}

	return false
}

// SetPartsExportFilter gets a reference to the given BTPartsExportFilter4308 and assigns it to the PartsExportFilter field.
func (o *BTTranslateFormatParams) SetPartsExportFilter(v BTPartsExportFilter4308) {
	o.PartsExportFilter = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *BTTranslateFormatParams) SetPassword(v string) {
	o.Password = &v
}

// GetPasswordRequired returns the PasswordRequired field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetPasswordRequired() bool {
	if o == nil || o.PasswordRequired == nil {
		var ret bool
		return ret
	}
	return *o.PasswordRequired
}

// GetPasswordRequiredOk returns a tuple with the PasswordRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetPasswordRequiredOk() (*bool, bool) {
	if o == nil || o.PasswordRequired == nil {
		return nil, false
	}
	return o.PasswordRequired, true
}

// HasPasswordRequired returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasPasswordRequired() bool {
	if o != nil && o.PasswordRequired != nil {
		return true
	}

	return false
}

// SetPasswordRequired gets a reference to the given bool and assigns it to the PasswordRequired field.
func (o *BTTranslateFormatParams) SetPasswordRequired(v bool) {
	o.PasswordRequired = &v
}

// GetPdfVersion returns the PdfVersion field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetPdfVersion() string {
	if o == nil || o.PdfVersion == nil {
		var ret string
		return ret
	}
	return *o.PdfVersion
}

// GetPdfVersionOk returns a tuple with the PdfVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetPdfVersionOk() (*string, bool) {
	if o == nil || o.PdfVersion == nil {
		return nil, false
	}
	return o.PdfVersion, true
}

// HasPdfVersion returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasPdfVersion() bool {
	if o != nil && o.PdfVersion != nil {
		return true
	}

	return false
}

// SetPdfVersion gets a reference to the given string and assigns it to the PdfVersion field.
func (o *BTTranslateFormatParams) SetPdfVersion(v string) {
	o.PdfVersion = &v
}

// GetProcessedForeignId returns the ProcessedForeignId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetProcessedForeignId() string {
	if o == nil || o.ProcessedForeignId == nil {
		var ret string
		return ret
	}
	return *o.ProcessedForeignId
}

// GetProcessedForeignIdOk returns a tuple with the ProcessedForeignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetProcessedForeignIdOk() (*string, bool) {
	if o == nil || o.ProcessedForeignId == nil {
		return nil, false
	}
	return o.ProcessedForeignId, true
}

// HasProcessedForeignId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasProcessedForeignId() bool {
	if o != nil && o.ProcessedForeignId != nil {
		return true
	}

	return false
}

// SetProcessedForeignId gets a reference to the given string and assigns it to the ProcessedForeignId field.
func (o *BTTranslateFormatParams) SetProcessedForeignId(v string) {
	o.ProcessedForeignId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *BTTranslateFormatParams) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProxyDocumentId returns the ProxyDocumentId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetProxyDocumentId() string {
	if o == nil || o.ProxyDocumentId == nil {
		var ret string
		return ret
	}
	return *o.ProxyDocumentId
}

// GetProxyDocumentIdOk returns a tuple with the ProxyDocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetProxyDocumentIdOk() (*string, bool) {
	if o == nil || o.ProxyDocumentId == nil {
		return nil, false
	}
	return o.ProxyDocumentId, true
}

// HasProxyDocumentId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasProxyDocumentId() bool {
	if o != nil && o.ProxyDocumentId != nil {
		return true
	}

	return false
}

// SetProxyDocumentId gets a reference to the given string and assigns it to the ProxyDocumentId field.
func (o *BTTranslateFormatParams) SetProxyDocumentId(v string) {
	o.ProxyDocumentId = &v
}

// GetProxyElementId returns the ProxyElementId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetProxyElementId() string {
	if o == nil || o.ProxyElementId == nil {
		var ret string
		return ret
	}
	return *o.ProxyElementId
}

// GetProxyElementIdOk returns a tuple with the ProxyElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetProxyElementIdOk() (*string, bool) {
	if o == nil || o.ProxyElementId == nil {
		return nil, false
	}
	return o.ProxyElementId, true
}

// HasProxyElementId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasProxyElementId() bool {
	if o != nil && o.ProxyElementId != nil {
		return true
	}

	return false
}

// SetProxyElementId gets a reference to the given string and assigns it to the ProxyElementId field.
func (o *BTTranslateFormatParams) SetProxyElementId(v string) {
	o.ProxyElementId = &v
}

// GetProxyWorkspaceVersion returns the ProxyWorkspaceVersion field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetProxyWorkspaceVersion() string {
	if o == nil || o.ProxyWorkspaceVersion == nil {
		var ret string
		return ret
	}
	return *o.ProxyWorkspaceVersion
}

// GetProxyWorkspaceVersionOk returns a tuple with the ProxyWorkspaceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetProxyWorkspaceVersionOk() (*string, bool) {
	if o == nil || o.ProxyWorkspaceVersion == nil {
		return nil, false
	}
	return o.ProxyWorkspaceVersion, true
}

// HasProxyWorkspaceVersion returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasProxyWorkspaceVersion() bool {
	if o != nil && o.ProxyWorkspaceVersion != nil {
		return true
	}

	return false
}

// SetProxyWorkspaceVersion gets a reference to the given string and assigns it to the ProxyWorkspaceVersion field.
func (o *BTTranslateFormatParams) SetProxyWorkspaceVersion(v string) {
	o.ProxyWorkspaceVersion = &v
}

// GetProxyWorkspaceVersionId returns the ProxyWorkspaceVersionId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetProxyWorkspaceVersionId() string {
	if o == nil || o.ProxyWorkspaceVersionId == nil {
		var ret string
		return ret
	}
	return *o.ProxyWorkspaceVersionId
}

// GetProxyWorkspaceVersionIdOk returns a tuple with the ProxyWorkspaceVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetProxyWorkspaceVersionIdOk() (*string, bool) {
	if o == nil || o.ProxyWorkspaceVersionId == nil {
		return nil, false
	}
	return o.ProxyWorkspaceVersionId, true
}

// HasProxyWorkspaceVersionId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasProxyWorkspaceVersionId() bool {
	if o != nil && o.ProxyWorkspaceVersionId != nil {
		return true
	}

	return false
}

// SetProxyWorkspaceVersionId gets a reference to the given string and assigns it to the ProxyWorkspaceVersionId field.
func (o *BTTranslateFormatParams) SetProxyWorkspaceVersionId(v string) {
	o.ProxyWorkspaceVersionId = &v
}

// GetResolution returns the Resolution field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetResolution() string {
	if o == nil || o.Resolution == nil {
		var ret string
		return ret
	}
	return *o.Resolution
}

// GetResolutionOk returns a tuple with the Resolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetResolutionOk() (*string, bool) {
	if o == nil || o.Resolution == nil {
		return nil, false
	}
	return o.Resolution, true
}

// HasResolution returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasResolution() bool {
	if o != nil && o.Resolution != nil {
		return true
	}

	return false
}

// SetResolution gets a reference to the given string and assigns it to the Resolution field.
func (o *BTTranslateFormatParams) SetResolution(v string) {
	o.Resolution = &v
}

// GetSelectablePdfText returns the SelectablePdfText field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetSelectablePdfText() bool {
	if o == nil || o.SelectablePdfText == nil {
		var ret bool
		return ret
	}
	return *o.SelectablePdfText
}

// GetSelectablePdfTextOk returns a tuple with the SelectablePdfText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetSelectablePdfTextOk() (*bool, bool) {
	if o == nil || o.SelectablePdfText == nil {
		return nil, false
	}
	return o.SelectablePdfText, true
}

// HasSelectablePdfText returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasSelectablePdfText() bool {
	if o != nil && o.SelectablePdfText != nil {
		return true
	}

	return false
}

// SetSelectablePdfText gets a reference to the given bool and assigns it to the SelectablePdfText field.
func (o *BTTranslateFormatParams) SetSelectablePdfText(v bool) {
	o.SelectablePdfText = &v
}

// GetSendCopyToMe returns the SendCopyToMe field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetSendCopyToMe() bool {
	if o == nil || o.SendCopyToMe == nil {
		var ret bool
		return ret
	}
	return *o.SendCopyToMe
}

// GetSendCopyToMeOk returns a tuple with the SendCopyToMe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetSendCopyToMeOk() (*bool, bool) {
	if o == nil || o.SendCopyToMe == nil {
		return nil, false
	}
	return o.SendCopyToMe, true
}

// HasSendCopyToMe returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasSendCopyToMe() bool {
	if o != nil && o.SendCopyToMe != nil {
		return true
	}

	return false
}

// SetSendCopyToMe gets a reference to the given bool and assigns it to the SendCopyToMe field.
func (o *BTTranslateFormatParams) SetSendCopyToMe(v bool) {
	o.SendCopyToMe = &v
}

// GetSheetIndices returns the SheetIndices field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetSheetIndices() []int32 {
	if o == nil || o.SheetIndices == nil {
		var ret []int32
		return ret
	}
	return o.SheetIndices
}

// GetSheetIndicesOk returns a tuple with the SheetIndices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetSheetIndicesOk() ([]int32, bool) {
	if o == nil || o.SheetIndices == nil {
		return nil, false
	}
	return o.SheetIndices, true
}

// HasSheetIndices returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasSheetIndices() bool {
	if o != nil && o.SheetIndices != nil {
		return true
	}

	return false
}

// SetSheetIndices gets a reference to the given []int32 and assigns it to the SheetIndices field.
func (o *BTTranslateFormatParams) SetSheetIndices(v []int32) {
	o.SheetIndices = v
}

// GetShowOverriddenDimensions returns the ShowOverriddenDimensions field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetShowOverriddenDimensions() bool {
	if o == nil || o.ShowOverriddenDimensions == nil {
		var ret bool
		return ret
	}
	return *o.ShowOverriddenDimensions
}

// GetShowOverriddenDimensionsOk returns a tuple with the ShowOverriddenDimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetShowOverriddenDimensionsOk() (*bool, bool) {
	if o == nil || o.ShowOverriddenDimensions == nil {
		return nil, false
	}
	return o.ShowOverriddenDimensions, true
}

// HasShowOverriddenDimensions returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasShowOverriddenDimensions() bool {
	if o != nil && o.ShowOverriddenDimensions != nil {
		return true
	}

	return false
}

// SetShowOverriddenDimensions gets a reference to the given bool and assigns it to the ShowOverriddenDimensions field.
func (o *BTTranslateFormatParams) SetShowOverriddenDimensions(v bool) {
	o.ShowOverriddenDimensions = &v
}

// GetSkipBodyshop returns the SkipBodyshop field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetSkipBodyshop() bool {
	if o == nil || o.SkipBodyshop == nil {
		var ret bool
		return ret
	}
	return *o.SkipBodyshop
}

// GetSkipBodyshopOk returns a tuple with the SkipBodyshop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetSkipBodyshopOk() (*bool, bool) {
	if o == nil || o.SkipBodyshop == nil {
		return nil, false
	}
	return o.SkipBodyshop, true
}

// HasSkipBodyshop returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasSkipBodyshop() bool {
	if o != nil && o.SkipBodyshop != nil {
		return true
	}

	return false
}

// SetSkipBodyshop gets a reference to the given bool and assigns it to the SkipBodyshop field.
func (o *BTTranslateFormatParams) SetSkipBodyshop(v bool) {
	o.SkipBodyshop = &v
}

// GetSourceName returns the SourceName field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetSourceName() string {
	if o == nil || o.SourceName == nil {
		var ret string
		return ret
	}
	return *o.SourceName
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetSourceNameOk() (*string, bool) {
	if o == nil || o.SourceName == nil {
		return nil, false
	}
	return o.SourceName, true
}

// HasSourceName returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasSourceName() bool {
	if o != nil && o.SourceName != nil {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given string and assigns it to the SourceName field.
func (o *BTTranslateFormatParams) SetSourceName(v string) {
	o.SourceName = &v
}

// GetSpecifyMaterialData returns the SpecifyMaterialData field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetSpecifyMaterialData() bool {
	if o == nil || o.SpecifyMaterialData == nil {
		var ret bool
		return ret
	}
	return *o.SpecifyMaterialData
}

// GetSpecifyMaterialDataOk returns a tuple with the SpecifyMaterialData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetSpecifyMaterialDataOk() (*bool, bool) {
	if o == nil || o.SpecifyMaterialData == nil {
		return nil, false
	}
	return o.SpecifyMaterialData, true
}

// HasSpecifyMaterialData returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasSpecifyMaterialData() bool {
	if o != nil && o.SpecifyMaterialData != nil {
		return true
	}

	return false
}

// SetSpecifyMaterialData gets a reference to the given bool and assigns it to the SpecifyMaterialData field.
func (o *BTTranslateFormatParams) SetSpecifyMaterialData(v bool) {
	o.SpecifyMaterialData = &v
}

// GetSpecifyUnits returns the SpecifyUnits field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetSpecifyUnits() bool {
	if o == nil || o.SpecifyUnits == nil {
		var ret bool
		return ret
	}
	return *o.SpecifyUnits
}

// GetSpecifyUnitsOk returns a tuple with the SpecifyUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetSpecifyUnitsOk() (*bool, bool) {
	if o == nil || o.SpecifyUnits == nil {
		return nil, false
	}
	return o.SpecifyUnits, true
}

// HasSpecifyUnits returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasSpecifyUnits() bool {
	if o != nil && o.SpecifyUnits != nil {
		return true
	}

	return false
}

// SetSpecifyUnits gets a reference to the given bool and assigns it to the SpecifyUnits field.
func (o *BTTranslateFormatParams) SetSpecifyUnits(v bool) {
	o.SpecifyUnits = &v
}

// GetSplinesAsPolylines returns the SplinesAsPolylines field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetSplinesAsPolylines() bool {
	if o == nil || o.SplinesAsPolylines == nil {
		var ret bool
		return ret
	}
	return *o.SplinesAsPolylines
}

// GetSplinesAsPolylinesOk returns a tuple with the SplinesAsPolylines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetSplinesAsPolylinesOk() (*bool, bool) {
	if o == nil || o.SplinesAsPolylines == nil {
		return nil, false
	}
	return o.SplinesAsPolylines, true
}

// HasSplinesAsPolylines returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasSplinesAsPolylines() bool {
	if o != nil && o.SplinesAsPolylines != nil {
		return true
	}

	return false
}

// SetSplinesAsPolylines gets a reference to the given bool and assigns it to the SplinesAsPolylines field.
func (o *BTTranslateFormatParams) SetSplinesAsPolylines(v bool) {
	o.SplinesAsPolylines = &v
}

// GetSplitAssembliesIntoMultipleDocuments returns the SplitAssembliesIntoMultipleDocuments field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetSplitAssembliesIntoMultipleDocuments() bool {
	if o == nil || o.SplitAssembliesIntoMultipleDocuments == nil {
		var ret bool
		return ret
	}
	return *o.SplitAssembliesIntoMultipleDocuments
}

// GetSplitAssembliesIntoMultipleDocumentsOk returns a tuple with the SplitAssembliesIntoMultipleDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetSplitAssembliesIntoMultipleDocumentsOk() (*bool, bool) {
	if o == nil || o.SplitAssembliesIntoMultipleDocuments == nil {
		return nil, false
	}
	return o.SplitAssembliesIntoMultipleDocuments, true
}

// HasSplitAssembliesIntoMultipleDocuments returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasSplitAssembliesIntoMultipleDocuments() bool {
	if o != nil && o.SplitAssembliesIntoMultipleDocuments != nil {
		return true
	}

	return false
}

// SetSplitAssembliesIntoMultipleDocuments gets a reference to the given bool and assigns it to the SplitAssembliesIntoMultipleDocuments field.
func (o *BTTranslateFormatParams) SetSplitAssembliesIntoMultipleDocuments(v bool) {
	o.SplitAssembliesIntoMultipleDocuments = &v
}

// GetStepParasolidPreprocessingOption returns the StepParasolidPreprocessingOption field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetStepParasolidPreprocessingOption() GBTPreProcessParasolidOption {
	if o == nil || o.StepParasolidPreprocessingOption == nil {
		var ret GBTPreProcessParasolidOption
		return ret
	}
	return *o.StepParasolidPreprocessingOption
}

// GetStepParasolidPreprocessingOptionOk returns a tuple with the StepParasolidPreprocessingOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetStepParasolidPreprocessingOptionOk() (*GBTPreProcessParasolidOption, bool) {
	if o == nil || o.StepParasolidPreprocessingOption == nil {
		return nil, false
	}
	return o.StepParasolidPreprocessingOption, true
}

// HasStepParasolidPreprocessingOption returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasStepParasolidPreprocessingOption() bool {
	if o != nil && o.StepParasolidPreprocessingOption != nil {
		return true
	}

	return false
}

// SetStepParasolidPreprocessingOption gets a reference to the given GBTPreProcessParasolidOption and assigns it to the StepParasolidPreprocessingOption field.
func (o *BTTranslateFormatParams) SetStepParasolidPreprocessingOption(v GBTPreProcessParasolidOption) {
	o.StepParasolidPreprocessingOption = &v
}

// GetStepVersionString returns the StepVersionString field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetStepVersionString() string {
	if o == nil || o.StepVersionString == nil {
		var ret string
		return ret
	}
	return *o.StepVersionString
}

// GetStepVersionStringOk returns a tuple with the StepVersionString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetStepVersionStringOk() (*string, bool) {
	if o == nil || o.StepVersionString == nil {
		return nil, false
	}
	return o.StepVersionString, true
}

// HasStepVersionString returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasStepVersionString() bool {
	if o != nil && o.StepVersionString != nil {
		return true
	}

	return false
}

// SetStepVersionString gets a reference to the given string and assigns it to the StepVersionString field.
func (o *BTTranslateFormatParams) SetStepVersionString(v string) {
	o.StepVersionString = &v
}

// GetStoreInDocument returns the StoreInDocument field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetStoreInDocument() bool {
	if o == nil || o.StoreInDocument == nil {
		var ret bool
		return ret
	}
	return *o.StoreInDocument
}

// GetStoreInDocumentOk returns a tuple with the StoreInDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetStoreInDocumentOk() (*bool, bool) {
	if o == nil || o.StoreInDocument == nil {
		return nil, false
	}
	return o.StoreInDocument, true
}

// HasStoreInDocument returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasStoreInDocument() bool {
	if o != nil && o.StoreInDocument != nil {
		return true
	}

	return false
}

// SetStoreInDocument gets a reference to the given bool and assigns it to the StoreInDocument field.
func (o *BTTranslateFormatParams) SetStoreInDocument(v bool) {
	o.StoreInDocument = &v
}

// GetTextAsGeometry returns the TextAsGeometry field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetTextAsGeometry() bool {
	if o == nil || o.TextAsGeometry == nil {
		var ret bool
		return ret
	}
	return *o.TextAsGeometry
}

// GetTextAsGeometryOk returns a tuple with the TextAsGeometry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetTextAsGeometryOk() (*bool, bool) {
	if o == nil || o.TextAsGeometry == nil {
		return nil, false
	}
	return o.TextAsGeometry, true
}

// HasTextAsGeometry returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasTextAsGeometry() bool {
	if o != nil && o.TextAsGeometry != nil {
		return true
	}

	return false
}

// SetTextAsGeometry gets a reference to the given bool and assigns it to the TextAsGeometry field.
func (o *BTTranslateFormatParams) SetTextAsGeometry(v bool) {
	o.TextAsGeometry = &v
}

// GetTextOption returns the TextOption field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetTextOption() string {
	if o == nil || o.TextOption == nil {
		var ret string
		return ret
	}
	return *o.TextOption
}

// GetTextOptionOk returns a tuple with the TextOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetTextOptionOk() (*string, bool) {
	if o == nil || o.TextOption == nil {
		return nil, false
	}
	return o.TextOption, true
}

// HasTextOption returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasTextOption() bool {
	if o != nil && o.TextOption != nil {
		return true
	}

	return false
}

// SetTextOption gets a reference to the given string and assigns it to the TextOption field.
func (o *BTTranslateFormatParams) SetTextOption(v string) {
	o.TextOption = &v
}

// GetTriggerAutoDownload returns the TriggerAutoDownload field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetTriggerAutoDownload() bool {
	if o == nil || o.TriggerAutoDownload == nil {
		var ret bool
		return ret
	}
	return *o.TriggerAutoDownload
}

// GetTriggerAutoDownloadOk returns a tuple with the TriggerAutoDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetTriggerAutoDownloadOk() (*bool, bool) {
	if o == nil || o.TriggerAutoDownload == nil {
		return nil, false
	}
	return o.TriggerAutoDownload, true
}

// HasTriggerAutoDownload returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasTriggerAutoDownload() bool {
	if o != nil && o.TriggerAutoDownload != nil {
		return true
	}

	return false
}

// SetTriggerAutoDownload gets a reference to the given bool and assigns it to the TriggerAutoDownload field.
func (o *BTTranslateFormatParams) SetTriggerAutoDownload(v bool) {
	o.TriggerAutoDownload = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetUnit() string {
	if o == nil || o.Unit == nil {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetUnitOk() (*string, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *BTTranslateFormatParams) SetUnit(v string) {
	o.Unit = &v
}

// GetUpgradeFeatureScriptVersion returns the UpgradeFeatureScriptVersion field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetUpgradeFeatureScriptVersion() bool {
	if o == nil || o.UpgradeFeatureScriptVersion == nil {
		var ret bool
		return ret
	}
	return *o.UpgradeFeatureScriptVersion
}

// GetUpgradeFeatureScriptVersionOk returns a tuple with the UpgradeFeatureScriptVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetUpgradeFeatureScriptVersionOk() (*bool, bool) {
	if o == nil || o.UpgradeFeatureScriptVersion == nil {
		return nil, false
	}
	return o.UpgradeFeatureScriptVersion, true
}

// HasUpgradeFeatureScriptVersion returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasUpgradeFeatureScriptVersion() bool {
	if o != nil && o.UpgradeFeatureScriptVersion != nil {
		return true
	}

	return false
}

// SetUpgradeFeatureScriptVersion gets a reference to the given bool and assigns it to the UpgradeFeatureScriptVersion field.
func (o *BTTranslateFormatParams) SetUpgradeFeatureScriptVersion(v bool) {
	o.UpgradeFeatureScriptVersion = &v
}

// GetUploadId returns the UploadId field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetUploadId() string {
	if o == nil || o.UploadId == nil {
		var ret string
		return ret
	}
	return *o.UploadId
}

// GetUploadIdOk returns a tuple with the UploadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetUploadIdOk() (*string, bool) {
	if o == nil || o.UploadId == nil {
		return nil, false
	}
	return o.UploadId, true
}

// HasUploadId returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasUploadId() bool {
	if o != nil && o.UploadId != nil {
		return true
	}

	return false
}

// SetUploadId gets a reference to the given string and assigns it to the UploadId field.
func (o *BTTranslateFormatParams) SetUploadId(v string) {
	o.UploadId = &v
}

// GetUseFileNameToSetSinglePartName returns the UseFileNameToSetSinglePartName field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetUseFileNameToSetSinglePartName() bool {
	if o == nil || o.UseFileNameToSetSinglePartName == nil {
		var ret bool
		return ret
	}
	return *o.UseFileNameToSetSinglePartName
}

// GetUseFileNameToSetSinglePartNameOk returns a tuple with the UseFileNameToSetSinglePartName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetUseFileNameToSetSinglePartNameOk() (*bool, bool) {
	if o == nil || o.UseFileNameToSetSinglePartName == nil {
		return nil, false
	}
	return o.UseFileNameToSetSinglePartName, true
}

// HasUseFileNameToSetSinglePartName returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasUseFileNameToSetSinglePartName() bool {
	if o != nil && o.UseFileNameToSetSinglePartName != nil {
		return true
	}

	return false
}

// SetUseFileNameToSetSinglePartName gets a reference to the given bool and assigns it to the UseFileNameToSetSinglePartName field.
func (o *BTTranslateFormatParams) SetUseFileNameToSetSinglePartName(v bool) {
	o.UseFileNameToSetSinglePartName = &v
}

// GetUseGltfCompression returns the UseGltfCompression field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetUseGltfCompression() bool {
	if o == nil || o.UseGltfCompression == nil {
		var ret bool
		return ret
	}
	return *o.UseGltfCompression
}

// GetUseGltfCompressionOk returns a tuple with the UseGltfCompression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetUseGltfCompressionOk() (*bool, bool) {
	if o == nil || o.UseGltfCompression == nil {
		return nil, false
	}
	return o.UseGltfCompression, true
}

// HasUseGltfCompression returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasUseGltfCompression() bool {
	if o != nil && o.UseGltfCompression != nil {
		return true
	}

	return false
}

// SetUseGltfCompression gets a reference to the given bool and assigns it to the UseGltfCompression field.
func (o *BTTranslateFormatParams) SetUseGltfCompression(v bool) {
	o.UseGltfCompression = &v
}

// GetUseIGESImportPostProcessing returns the UseIGESImportPostProcessing field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetUseIGESImportPostProcessing() bool {
	if o == nil || o.UseIGESImportPostProcessing == nil {
		var ret bool
		return ret
	}
	return *o.UseIGESImportPostProcessing
}

// GetUseIGESImportPostProcessingOk returns a tuple with the UseIGESImportPostProcessing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetUseIGESImportPostProcessingOk() (*bool, bool) {
	if o == nil || o.UseIGESImportPostProcessing == nil {
		return nil, false
	}
	return o.UseIGESImportPostProcessing, true
}

// HasUseIGESImportPostProcessing returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasUseIGESImportPostProcessing() bool {
	if o != nil && o.UseIGESImportPostProcessing != nil {
		return true
	}

	return false
}

// SetUseIGESImportPostProcessing gets a reference to the given bool and assigns it to the UseIGESImportPostProcessing field.
func (o *BTTranslateFormatParams) SetUseIGESImportPostProcessing(v bool) {
	o.UseIGESImportPostProcessing = &v
}

// GetUseIgesCompatibilityMode returns the UseIgesCompatibilityMode field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetUseIgesCompatibilityMode() bool {
	if o == nil || o.UseIgesCompatibilityMode == nil {
		var ret bool
		return ret
	}
	return *o.UseIgesCompatibilityMode
}

// GetUseIgesCompatibilityModeOk returns a tuple with the UseIgesCompatibilityMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetUseIgesCompatibilityModeOk() (*bool, bool) {
	if o == nil || o.UseIgesCompatibilityMode == nil {
		return nil, false
	}
	return o.UseIgesCompatibilityMode, true
}

// HasUseIgesCompatibilityMode returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasUseIgesCompatibilityMode() bool {
	if o != nil && o.UseIgesCompatibilityMode != nil {
		return true
	}

	return false
}

// SetUseIgesCompatibilityMode gets a reference to the given bool and assigns it to the UseIgesCompatibilityMode field.
func (o *BTTranslateFormatParams) SetUseIgesCompatibilityMode(v bool) {
	o.UseIgesCompatibilityMode = &v
}

// GetValidForDays returns the ValidForDays field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetValidForDays() int32 {
	if o == nil || o.ValidForDays == nil {
		var ret int32
		return ret
	}
	return *o.ValidForDays
}

// GetValidForDaysOk returns a tuple with the ValidForDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetValidForDaysOk() (*int32, bool) {
	if o == nil || o.ValidForDays == nil {
		return nil, false
	}
	return o.ValidForDays, true
}

// HasValidForDays returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasValidForDays() bool {
	if o != nil && o.ValidForDays != nil {
		return true
	}

	return false
}

// SetValidForDays gets a reference to the given int32 and assigns it to the ValidForDays field.
func (o *BTTranslateFormatParams) SetValidForDays(v int32) {
	o.ValidForDays = &v
}

// GetVersionString returns the VersionString field value if set, zero value otherwise.
func (o *BTTranslateFormatParams) GetVersionString() string {
	if o == nil || o.VersionString == nil {
		var ret string
		return ret
	}
	return *o.VersionString
}

// GetVersionStringOk returns a tuple with the VersionString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTranslateFormatParams) GetVersionStringOk() (*string, bool) {
	if o == nil || o.VersionString == nil {
		return nil, false
	}
	return o.VersionString, true
}

// HasVersionString returns a boolean if a field has been set.
func (o *BTTranslateFormatParams) HasVersionString() bool {
	if o != nil && o.VersionString != nil {
		return true
	}

	return false
}

// SetVersionString gets a reference to the given string and assigns it to the VersionString field.
func (o *BTTranslateFormatParams) SetVersionString(v string) {
	o.VersionString = &v
}

func (o BTTranslateFormatParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowFaultyParts != nil {
		toSerialize["allowFaultyParts"] = o.AllowFaultyParts
	}
	if o.AngularTolerance != nil {
		toSerialize["angularTolerance"] = o.AngularTolerance
	}
	if o.BlobElementId != nil {
		toSerialize["blobElementId"] = o.BlobElementId
	}
	if o.BlobMicroversionId != nil {
		toSerialize["blobMicroversionId"] = o.BlobMicroversionId
	}
	if o.CloudObjectId != nil {
		toSerialize["cloudObjectId"] = o.CloudObjectId
	}
	if o.CloudStorageAccountId != nil {
		toSerialize["cloudStorageAccountId"] = o.CloudStorageAccountId
	}
	if o.ColorMethod != nil {
		toSerialize["colorMethod"] = o.ColorMethod
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.ConnectionId != nil {
		toSerialize["connectionId"] = o.ConnectionId
	}
	if o.CreateComposite != nil {
		toSerialize["createComposite"] = o.CreateComposite
	}
	if o.CurrentSheetOnly != nil {
		toSerialize["currentSheetOnly"] = o.CurrentSheetOnly
	}
	if o.DestinationName != nil {
		toSerialize["destinationName"] = o.DestinationName
	}
	if o.DistanceTolerance != nil {
		toSerialize["distanceTolerance"] = o.DistanceTolerance
	}
	if o.ElementId != nil {
		toSerialize["elementId"] = o.ElementId
	}
	if o.ElementIds != nil {
		toSerialize["elementIds"] = o.ElementIds
	}
	if o.EmailLink != nil {
		toSerialize["emailLink"] = o.EmailLink
	}
	if o.EmailMessage != nil {
		toSerialize["emailMessage"] = o.EmailMessage
	}
	if o.EmailSubject != nil {
		toSerialize["emailSubject"] = o.EmailSubject
	}
	if o.EmailTo != nil {
		toSerialize["emailTo"] = o.EmailTo
	}
	if o.EvaluateExportRule != nil {
		toSerialize["evaluateExportRule"] = o.EvaluateExportRule
	}
	if o.ExcludeHiddenEntities != nil {
		toSerialize["excludeHiddenEntities"] = o.ExcludeHiddenEntities
	}
	if o.ExtractAssemblyHierarchy != nil {
		toSerialize["extractAssemblyHierarchy"] = o.ExtractAssemblyHierarchy
	}
	if o.Flatten != nil {
		toSerialize["flatten"] = o.Flatten
	}
	if o.FlattenAssemblies != nil {
		toSerialize["flattenAssemblies"] = o.FlattenAssemblies
	}
	if o.ForeignId != nil {
		toSerialize["foreignId"] = o.ForeignId
	}
	if true {
		toSerialize["formatName"] = o.FormatName
	}
	if o.FromUserId != nil {
		toSerialize["fromUserId"] = o.FromUserId
	}
	if o.GetyAxisIsUp != nil {
		toSerialize["getyAxisIsUp"] = o.GetyAxisIsUp
	}
	if o.Grouping != nil {
		toSerialize["grouping"] = o.Grouping
	}
	if o.HideInspectionItems != nil {
		toSerialize["hideInspectionItems"] = o.HideInspectionItems
	}
	if o.IgnoreExportRulesForContents != nil {
		toSerialize["ignoreExportRulesForContents"] = o.IgnoreExportRulesForContents
	}
	if o.ImageHeight != nil {
		toSerialize["imageHeight"] = o.ImageHeight
	}
	if o.ImageWidth != nil {
		toSerialize["imageWidth"] = o.ImageWidth
	}
	if o.ImportAppearances != nil {
		toSerialize["importAppearances"] = o.ImportAppearances
	}
	if o.ImportInBackground != nil {
		toSerialize["importInBackground"] = o.ImportInBackground
	}
	if o.ImportMaterialDensity != nil {
		toSerialize["importMaterialDensity"] = o.ImportMaterialDensity
	}
	if o.ImportWithinDocument != nil {
		toSerialize["importWithinDocument"] = o.ImportWithinDocument
	}
	if o.IncludeExportIds != nil {
		toSerialize["includeExportIds"] = o.IncludeExportIds
	}
	if o.JoinAdjacentSurfaces != nil {
		toSerialize["joinAdjacentSurfaces"] = o.JoinAdjacentSurfaces
	}
	if o.Level != nil {
		toSerialize["level"] = o.Level
	}
	if o.LinkDocumentId != nil {
		toSerialize["linkDocumentId"] = o.LinkDocumentId
	}
	if o.LinkDocumentWorkspaceId != nil {
		toSerialize["linkDocumentWorkspaceId"] = o.LinkDocumentWorkspaceId
	}
	if o.MaximumChordLength != nil {
		toSerialize["maximumChordLength"] = o.MaximumChordLength
	}
	if o.NotifyUser != nil {
		toSerialize["notifyUser"] = o.NotifyUser
	}
	if o.OccurrencesToExport != nil {
		toSerialize["occurrencesToExport"] = o.OccurrencesToExport
	}
	if o.OnePartPerDoc != nil {
		toSerialize["onePartPerDoc"] = o.OnePartPerDoc
	}
	if o.OriginalForeignId != nil {
		toSerialize["originalForeignId"] = o.OriginalForeignId
	}
	if o.ParentId != nil {
		toSerialize["parentId"] = o.ParentId
	}
	if o.PartIds != nil {
		toSerialize["partIds"] = o.PartIds
	}
	if o.PartsExportFilter != nil {
		toSerialize["partsExportFilter"] = o.PartsExportFilter
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.PasswordRequired != nil {
		toSerialize["passwordRequired"] = o.PasswordRequired
	}
	if o.PdfVersion != nil {
		toSerialize["pdfVersion"] = o.PdfVersion
	}
	if o.ProcessedForeignId != nil {
		toSerialize["processedForeignId"] = o.ProcessedForeignId
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.ProxyDocumentId != nil {
		toSerialize["proxyDocumentId"] = o.ProxyDocumentId
	}
	if o.ProxyElementId != nil {
		toSerialize["proxyElementId"] = o.ProxyElementId
	}
	if o.ProxyWorkspaceVersion != nil {
		toSerialize["proxyWorkspaceVersion"] = o.ProxyWorkspaceVersion
	}
	if o.ProxyWorkspaceVersionId != nil {
		toSerialize["proxyWorkspaceVersionId"] = o.ProxyWorkspaceVersionId
	}
	if o.Resolution != nil {
		toSerialize["resolution"] = o.Resolution
	}
	if o.SelectablePdfText != nil {
		toSerialize["selectablePdfText"] = o.SelectablePdfText
	}
	if o.SendCopyToMe != nil {
		toSerialize["sendCopyToMe"] = o.SendCopyToMe
	}
	if o.SheetIndices != nil {
		toSerialize["sheetIndices"] = o.SheetIndices
	}
	if o.ShowOverriddenDimensions != nil {
		toSerialize["showOverriddenDimensions"] = o.ShowOverriddenDimensions
	}
	if o.SkipBodyshop != nil {
		toSerialize["skipBodyshop"] = o.SkipBodyshop
	}
	if o.SourceName != nil {
		toSerialize["sourceName"] = o.SourceName
	}
	if o.SpecifyMaterialData != nil {
		toSerialize["specifyMaterialData"] = o.SpecifyMaterialData
	}
	if o.SpecifyUnits != nil {
		toSerialize["specifyUnits"] = o.SpecifyUnits
	}
	if o.SplinesAsPolylines != nil {
		toSerialize["splinesAsPolylines"] = o.SplinesAsPolylines
	}
	if o.SplitAssembliesIntoMultipleDocuments != nil {
		toSerialize["splitAssembliesIntoMultipleDocuments"] = o.SplitAssembliesIntoMultipleDocuments
	}
	if o.StepParasolidPreprocessingOption != nil {
		toSerialize["stepParasolidPreprocessingOption"] = o.StepParasolidPreprocessingOption
	}
	if o.StepVersionString != nil {
		toSerialize["stepVersionString"] = o.StepVersionString
	}
	if o.StoreInDocument != nil {
		toSerialize["storeInDocument"] = o.StoreInDocument
	}
	if o.TextAsGeometry != nil {
		toSerialize["textAsGeometry"] = o.TextAsGeometry
	}
	if o.TextOption != nil {
		toSerialize["textOption"] = o.TextOption
	}
	if o.TriggerAutoDownload != nil {
		toSerialize["triggerAutoDownload"] = o.TriggerAutoDownload
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	if o.UpgradeFeatureScriptVersion != nil {
		toSerialize["upgradeFeatureScriptVersion"] = o.UpgradeFeatureScriptVersion
	}
	if o.UploadId != nil {
		toSerialize["uploadId"] = o.UploadId
	}
	if o.UseFileNameToSetSinglePartName != nil {
		toSerialize["useFileNameToSetSinglePartName"] = o.UseFileNameToSetSinglePartName
	}
	if o.UseGltfCompression != nil {
		toSerialize["useGltfCompression"] = o.UseGltfCompression
	}
	if o.UseIGESImportPostProcessing != nil {
		toSerialize["useIGESImportPostProcessing"] = o.UseIGESImportPostProcessing
	}
	if o.UseIgesCompatibilityMode != nil {
		toSerialize["useIgesCompatibilityMode"] = o.UseIgesCompatibilityMode
	}
	if o.ValidForDays != nil {
		toSerialize["validForDays"] = o.ValidForDays
	}
	if o.VersionString != nil {
		toSerialize["versionString"] = o.VersionString
	}
	return json.Marshal(toSerialize)
}

type NullableBTTranslateFormatParams struct {
	value *BTTranslateFormatParams
	isSet bool
}

func (v NullableBTTranslateFormatParams) Get() *BTTranslateFormatParams {
	return v.value
}

func (v *NullableBTTranslateFormatParams) Set(val *BTTranslateFormatParams) {
	v.value = val
	v.isSet = true
}

func (v NullableBTTranslateFormatParams) IsSet() bool {
	return v.isSet
}

func (v *NullableBTTranslateFormatParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTTranslateFormatParams(val *BTTranslateFormatParams) *NullableBTTranslateFormatParams {
	return &NullableBTTranslateFormatParams{value: val, isSet: true}
}

func (v NullableBTTranslateFormatParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTTranslateFormatParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
