/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTCosmeticThreadMetadata3248 struct for BTCosmeticThreadMetadata3248
type BTCosmeticThreadMetadata3248 struct {
	BTDomainSpecificMetadata961
	BtType         *string                `json:"btType,omitempty"`
	CylinderRadius *float64               `json:"cylinderRadius,omitempty"`
	CylinderSystem *BTCoordinateSystem387 `json:"cylinderSystem,omitempty"`
	Pitch          *float64               `json:"pitch,omitempty"`
	ThreadLength   *float64               `json:"threadLength,omitempty"`
}

// NewBTCosmeticThreadMetadata3248 instantiates a new BTCosmeticThreadMetadata3248 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTCosmeticThreadMetadata3248() *BTCosmeticThreadMetadata3248 {
	this := BTCosmeticThreadMetadata3248{}
	return &this
}

// NewBTCosmeticThreadMetadata3248WithDefaults instantiates a new BTCosmeticThreadMetadata3248 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTCosmeticThreadMetadata3248WithDefaults() *BTCosmeticThreadMetadata3248 {
	this := BTCosmeticThreadMetadata3248{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTCosmeticThreadMetadata3248) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCosmeticThreadMetadata3248) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTCosmeticThreadMetadata3248) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTCosmeticThreadMetadata3248) SetBtType(v string) {
	o.BtType = &v
}

// GetCylinderRadius returns the CylinderRadius field value if set, zero value otherwise.
func (o *BTCosmeticThreadMetadata3248) GetCylinderRadius() float64 {
	if o == nil || o.CylinderRadius == nil {
		var ret float64
		return ret
	}
	return *o.CylinderRadius
}

// GetCylinderRadiusOk returns a tuple with the CylinderRadius field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCosmeticThreadMetadata3248) GetCylinderRadiusOk() (*float64, bool) {
	if o == nil || o.CylinderRadius == nil {
		return nil, false
	}
	return o.CylinderRadius, true
}

// HasCylinderRadius returns a boolean if a field has been set.
func (o *BTCosmeticThreadMetadata3248) HasCylinderRadius() bool {
	if o != nil && o.CylinderRadius != nil {
		return true
	}

	return false
}

// SetCylinderRadius gets a reference to the given float64 and assigns it to the CylinderRadius field.
func (o *BTCosmeticThreadMetadata3248) SetCylinderRadius(v float64) {
	o.CylinderRadius = &v
}

// GetCylinderSystem returns the CylinderSystem field value if set, zero value otherwise.
func (o *BTCosmeticThreadMetadata3248) GetCylinderSystem() BTCoordinateSystem387 {
	if o == nil || o.CylinderSystem == nil {
		var ret BTCoordinateSystem387
		return ret
	}
	return *o.CylinderSystem
}

// GetCylinderSystemOk returns a tuple with the CylinderSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCosmeticThreadMetadata3248) GetCylinderSystemOk() (*BTCoordinateSystem387, bool) {
	if o == nil || o.CylinderSystem == nil {
		return nil, false
	}
	return o.CylinderSystem, true
}

// HasCylinderSystem returns a boolean if a field has been set.
func (o *BTCosmeticThreadMetadata3248) HasCylinderSystem() bool {
	if o != nil && o.CylinderSystem != nil {
		return true
	}

	return false
}

// SetCylinderSystem gets a reference to the given BTCoordinateSystem387 and assigns it to the CylinderSystem field.
func (o *BTCosmeticThreadMetadata3248) SetCylinderSystem(v BTCoordinateSystem387) {
	o.CylinderSystem = &v
}

// GetPitch returns the Pitch field value if set, zero value otherwise.
func (o *BTCosmeticThreadMetadata3248) GetPitch() float64 {
	if o == nil || o.Pitch == nil {
		var ret float64
		return ret
	}
	return *o.Pitch
}

// GetPitchOk returns a tuple with the Pitch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCosmeticThreadMetadata3248) GetPitchOk() (*float64, bool) {
	if o == nil || o.Pitch == nil {
		return nil, false
	}
	return o.Pitch, true
}

// HasPitch returns a boolean if a field has been set.
func (o *BTCosmeticThreadMetadata3248) HasPitch() bool {
	if o != nil && o.Pitch != nil {
		return true
	}

	return false
}

// SetPitch gets a reference to the given float64 and assigns it to the Pitch field.
func (o *BTCosmeticThreadMetadata3248) SetPitch(v float64) {
	o.Pitch = &v
}

// GetThreadLength returns the ThreadLength field value if set, zero value otherwise.
func (o *BTCosmeticThreadMetadata3248) GetThreadLength() float64 {
	if o == nil || o.ThreadLength == nil {
		var ret float64
		return ret
	}
	return *o.ThreadLength
}

// GetThreadLengthOk returns a tuple with the ThreadLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCosmeticThreadMetadata3248) GetThreadLengthOk() (*float64, bool) {
	if o == nil || o.ThreadLength == nil {
		return nil, false
	}
	return o.ThreadLength, true
}

// HasThreadLength returns a boolean if a field has been set.
func (o *BTCosmeticThreadMetadata3248) HasThreadLength() bool {
	if o != nil && o.ThreadLength != nil {
		return true
	}

	return false
}

// SetThreadLength gets a reference to the given float64 and assigns it to the ThreadLength field.
func (o *BTCosmeticThreadMetadata3248) SetThreadLength(v float64) {
	o.ThreadLength = &v
}

func (o BTCosmeticThreadMetadata3248) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTDomainSpecificMetadata961, errBTDomainSpecificMetadata961 := json.Marshal(o.BTDomainSpecificMetadata961)
	if errBTDomainSpecificMetadata961 != nil {
		return []byte{}, errBTDomainSpecificMetadata961
	}
	errBTDomainSpecificMetadata961 = json.Unmarshal([]byte(serializedBTDomainSpecificMetadata961), &toSerialize)
	if errBTDomainSpecificMetadata961 != nil {
		return []byte{}, errBTDomainSpecificMetadata961
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.CylinderRadius != nil {
		toSerialize["cylinderRadius"] = o.CylinderRadius
	}
	if o.CylinderSystem != nil {
		toSerialize["cylinderSystem"] = o.CylinderSystem
	}
	if o.Pitch != nil {
		toSerialize["pitch"] = o.Pitch
	}
	if o.ThreadLength != nil {
		toSerialize["threadLength"] = o.ThreadLength
	}
	return json.Marshal(toSerialize)
}

type NullableBTCosmeticThreadMetadata3248 struct {
	value *BTCosmeticThreadMetadata3248
	isSet bool
}

func (v NullableBTCosmeticThreadMetadata3248) Get() *BTCosmeticThreadMetadata3248 {
	return v.value
}

func (v *NullableBTCosmeticThreadMetadata3248) Set(val *BTCosmeticThreadMetadata3248) {
	v.value = val
	v.isSet = true
}

func (v NullableBTCosmeticThreadMetadata3248) IsSet() bool {
	return v.isSet
}

func (v *NullableBTCosmeticThreadMetadata3248) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTCosmeticThreadMetadata3248(val *BTCosmeticThreadMetadata3248) *NullableBTCosmeticThreadMetadata3248 {
	return &NullableBTCosmeticThreadMetadata3248{value: val, isSet: true}
}

func (v NullableBTCosmeticThreadMetadata3248) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTCosmeticThreadMetadata3248) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
