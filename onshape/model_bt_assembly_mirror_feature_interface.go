/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTAssemblyMirrorFeatureInterface struct for BTAssemblyMirrorFeatureInterface
type BTAssemblyMirrorFeatureInterface struct {
	ArrayParameterFromFeature *BTMParameterArray2025 `json:"arrayParameterFromFeature,omitempty"`
	Feature                   *BTMAssemblyFeature887 `json:"feature,omitempty"`
	NodeId                    *string                `json:"nodeId,omitempty"`
}

// NewBTAssemblyMirrorFeatureInterface instantiates a new BTAssemblyMirrorFeatureInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTAssemblyMirrorFeatureInterface() *BTAssemblyMirrorFeatureInterface {
	this := BTAssemblyMirrorFeatureInterface{}
	return &this
}

// NewBTAssemblyMirrorFeatureInterfaceWithDefaults instantiates a new BTAssemblyMirrorFeatureInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTAssemblyMirrorFeatureInterfaceWithDefaults() *BTAssemblyMirrorFeatureInterface {
	this := BTAssemblyMirrorFeatureInterface{}
	return &this
}

// GetArrayParameterFromFeature returns the ArrayParameterFromFeature field value if set, zero value otherwise.
func (o *BTAssemblyMirrorFeatureInterface) GetArrayParameterFromFeature() BTMParameterArray2025 {
	if o == nil || o.ArrayParameterFromFeature == nil {
		var ret BTMParameterArray2025
		return ret
	}
	return *o.ArrayParameterFromFeature
}

// GetArrayParameterFromFeatureOk returns a tuple with the ArrayParameterFromFeature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAssemblyMirrorFeatureInterface) GetArrayParameterFromFeatureOk() (*BTMParameterArray2025, bool) {
	if o == nil || o.ArrayParameterFromFeature == nil {
		return nil, false
	}
	return o.ArrayParameterFromFeature, true
}

// HasArrayParameterFromFeature returns a boolean if a field has been set.
func (o *BTAssemblyMirrorFeatureInterface) HasArrayParameterFromFeature() bool {
	if o != nil && o.ArrayParameterFromFeature != nil {
		return true
	}

	return false
}

// SetArrayParameterFromFeature gets a reference to the given BTMParameterArray2025 and assigns it to the ArrayParameterFromFeature field.
func (o *BTAssemblyMirrorFeatureInterface) SetArrayParameterFromFeature(v BTMParameterArray2025) {
	o.ArrayParameterFromFeature = &v
}

// GetFeature returns the Feature field value if set, zero value otherwise.
func (o *BTAssemblyMirrorFeatureInterface) GetFeature() BTMAssemblyFeature887 {
	if o == nil || o.Feature == nil {
		var ret BTMAssemblyFeature887
		return ret
	}
	return *o.Feature
}

// GetFeatureOk returns a tuple with the Feature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAssemblyMirrorFeatureInterface) GetFeatureOk() (*BTMAssemblyFeature887, bool) {
	if o == nil || o.Feature == nil {
		return nil, false
	}
	return o.Feature, true
}

// HasFeature returns a boolean if a field has been set.
func (o *BTAssemblyMirrorFeatureInterface) HasFeature() bool {
	if o != nil && o.Feature != nil {
		return true
	}

	return false
}

// SetFeature gets a reference to the given BTMAssemblyFeature887 and assigns it to the Feature field.
func (o *BTAssemblyMirrorFeatureInterface) SetFeature(v BTMAssemblyFeature887) {
	o.Feature = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *BTAssemblyMirrorFeatureInterface) GetNodeId() string {
	if o == nil || o.NodeId == nil {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAssemblyMirrorFeatureInterface) GetNodeIdOk() (*string, bool) {
	if o == nil || o.NodeId == nil {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *BTAssemblyMirrorFeatureInterface) HasNodeId() bool {
	if o != nil && o.NodeId != nil {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *BTAssemblyMirrorFeatureInterface) SetNodeId(v string) {
	o.NodeId = &v
}

func (o BTAssemblyMirrorFeatureInterface) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ArrayParameterFromFeature != nil {
		toSerialize["arrayParameterFromFeature"] = o.ArrayParameterFromFeature
	}
	if o.Feature != nil {
		toSerialize["feature"] = o.Feature
	}
	if o.NodeId != nil {
		toSerialize["nodeId"] = o.NodeId
	}
	return json.Marshal(toSerialize)
}

type NullableBTAssemblyMirrorFeatureInterface struct {
	value *BTAssemblyMirrorFeatureInterface
	isSet bool
}

func (v NullableBTAssemblyMirrorFeatureInterface) Get() *BTAssemblyMirrorFeatureInterface {
	return v.value
}

func (v *NullableBTAssemblyMirrorFeatureInterface) Set(val *BTAssemblyMirrorFeatureInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableBTAssemblyMirrorFeatureInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableBTAssemblyMirrorFeatureInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTAssemblyMirrorFeatureInterface(val *BTAssemblyMirrorFeatureInterface) *NullableBTAssemblyMirrorFeatureInterface {
	return &NullableBTAssemblyMirrorFeatureInterface{value: val, isSet: true}
}

func (v NullableBTAssemblyMirrorFeatureInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTAssemblyMirrorFeatureInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
