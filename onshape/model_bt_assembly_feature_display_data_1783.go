/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
	"fmt"
)

// BTAssemblyFeatureDisplayData1783 - struct for BTAssemblyFeatureDisplayData1783
type BTAssemblyFeatureDisplayData1783 struct {
	implBTAssemblyFeatureDisplayData1783 interface{}
}

// BTGeometryMateDisplayData1050AsBTAssemblyFeatureDisplayData1783 is a convenience function that returns BTGeometryMateDisplayData1050 wrapped in BTAssemblyFeatureDisplayData1783
func (o *BTGeometryMateDisplayData1050) AsBTAssemblyFeatureDisplayData1783() *BTAssemblyFeatureDisplayData1783 {
	return &BTAssemblyFeatureDisplayData1783{o}
}

// BTLoadDisplayData837AsBTAssemblyFeatureDisplayData1783 is a convenience function that returns BTLoadDisplayData837 wrapped in BTAssemblyFeatureDisplayData1783
func (o *BTLoadDisplayData837) AsBTAssemblyFeatureDisplayData1783() *BTAssemblyFeatureDisplayData1783 {
	return &BTAssemblyFeatureDisplayData1783{o}
}

// BTWidthMateDisplayData2888AsBTAssemblyFeatureDisplayData1783 is a convenience function that returns BTWidthMateDisplayData2888 wrapped in BTAssemblyFeatureDisplayData1783
func (o *BTWidthMateDisplayData2888) AsBTAssemblyFeatureDisplayData1783() *BTAssemblyFeatureDisplayData1783 {
	return &BTAssemblyFeatureDisplayData1783{o}
}

// BTMateDisplayData1358AsBTAssemblyFeatureDisplayData1783 is a convenience function that returns BTMateDisplayData1358 wrapped in BTAssemblyFeatureDisplayData1783
func (o *BTMateDisplayData1358) AsBTAssemblyFeatureDisplayData1783() *BTAssemblyFeatureDisplayData1783 {
	return &BTAssemblyFeatureDisplayData1783{o}
}

// BTMateGroupDisplayData1990AsBTAssemblyFeatureDisplayData1783 is a convenience function that returns BTMateGroupDisplayData1990 wrapped in BTAssemblyFeatureDisplayData1783
func (o *BTMateGroupDisplayData1990) AsBTAssemblyFeatureDisplayData1783() *BTAssemblyFeatureDisplayData1783 {
	return &BTAssemblyFeatureDisplayData1783{o}
}

// NewBTAssemblyFeatureDisplayData1783 instantiates a new BTAssemblyFeatureDisplayData1783 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTAssemblyFeatureDisplayData1783() *BTAssemblyFeatureDisplayData1783 {
	this := BTAssemblyFeatureDisplayData1783{Newbase_BTAssemblyFeatureDisplayData1783()}
	return &this
}

// NewBTAssemblyFeatureDisplayData1783WithDefaults instantiates a new BTAssemblyFeatureDisplayData1783 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTAssemblyFeatureDisplayData1783WithDefaults() *BTAssemblyFeatureDisplayData1783 {
	this := BTAssemblyFeatureDisplayData1783{Newbase_BTAssemblyFeatureDisplayData1783WithDefaults()}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTAssemblyFeatureDisplayData1783) GetBtType() string {
	type getResult interface {
		GetBtType() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtType()
	} else {
		var de string
		return de
	}
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAssemblyFeatureDisplayData1783) GetBtTypeOk() (*string, bool) {
	type getResult interface {
		GetBtTypeOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtTypeOk()
	} else {
		return nil, false
	}
}

// HasBtType returns a boolean if a field has been set.
func (o *BTAssemblyFeatureDisplayData1783) HasBtType() bool {
	type getResult interface {
		HasBtType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasBtType()
	} else {
		return false
	}
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTAssemblyFeatureDisplayData1783) SetBtType(v string) {
	type getResult interface {
		SetBtType(v string)
	}

	o.GetActualInstance().(getResult).SetBtType(v)
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *BTAssemblyFeatureDisplayData1783) GetHidden() bool {
	type getResult interface {
		GetHidden() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetHidden()
	} else {
		var de bool
		return de
	}
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAssemblyFeatureDisplayData1783) GetHiddenOk() (*bool, bool) {
	type getResult interface {
		GetHiddenOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetHiddenOk()
	} else {
		return nil, false
	}
}

// HasHidden returns a boolean if a field has been set.
func (o *BTAssemblyFeatureDisplayData1783) HasHidden() bool {
	type getResult interface {
		HasHidden() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasHidden()
	} else {
		return false
	}
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *BTAssemblyFeatureDisplayData1783) SetHidden(v bool) {
	type getResult interface {
		SetHidden(v bool)
	}

	o.GetActualInstance().(getResult).SetHidden(v)
}

// GetIsDerivedFeature returns the IsDerivedFeature field value if set, zero value otherwise.
func (o *BTAssemblyFeatureDisplayData1783) GetIsDerivedFeature() bool {
	type getResult interface {
		GetIsDerivedFeature() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsDerivedFeature()
	} else {
		var de bool
		return de
	}
}

// GetIsDerivedFeatureOk returns a tuple with the IsDerivedFeature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAssemblyFeatureDisplayData1783) GetIsDerivedFeatureOk() (*bool, bool) {
	type getResult interface {
		GetIsDerivedFeatureOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsDerivedFeatureOk()
	} else {
		return nil, false
	}
}

// HasIsDerivedFeature returns a boolean if a field has been set.
func (o *BTAssemblyFeatureDisplayData1783) HasIsDerivedFeature() bool {
	type getResult interface {
		HasIsDerivedFeature() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIsDerivedFeature()
	} else {
		return false
	}
}

// SetIsDerivedFeature gets a reference to the given bool and assigns it to the IsDerivedFeature field.
func (o *BTAssemblyFeatureDisplayData1783) SetIsDerivedFeature(v bool) {
	type getResult interface {
		SetIsDerivedFeature(v bool)
	}

	o.GetActualInstance().(getResult).SetIsDerivedFeature(v)
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *BTAssemblyFeatureDisplayData1783) GetNodeId() string {
	type getResult interface {
		GetNodeId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNodeId()
	} else {
		var de string
		return de
	}
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAssemblyFeatureDisplayData1783) GetNodeIdOk() (*string, bool) {
	type getResult interface {
		GetNodeIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNodeIdOk()
	} else {
		return nil, false
	}
}

// HasNodeId returns a boolean if a field has been set.
func (o *BTAssemblyFeatureDisplayData1783) HasNodeId() bool {
	type getResult interface {
		HasNodeId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasNodeId()
	} else {
		return false
	}
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *BTAssemblyFeatureDisplayData1783) SetNodeId(v string) {
	type getResult interface {
		SetNodeId(v string)
	}

	o.GetActualInstance().(getResult).SetNodeId(v)
}

// GetOwnerOccurrence returns the OwnerOccurrence field value if set, zero value otherwise.
func (o *BTAssemblyFeatureDisplayData1783) GetOwnerOccurrence() BTOccurrence74 {
	type getResult interface {
		GetOwnerOccurrence() BTOccurrence74
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetOwnerOccurrence()
	} else {
		var de BTOccurrence74
		return de
	}
}

// GetOwnerOccurrenceOk returns a tuple with the OwnerOccurrence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAssemblyFeatureDisplayData1783) GetOwnerOccurrenceOk() (*BTOccurrence74, bool) {
	type getResult interface {
		GetOwnerOccurrenceOk() (*BTOccurrence74, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetOwnerOccurrenceOk()
	} else {
		return nil, false
	}
}

// HasOwnerOccurrence returns a boolean if a field has been set.
func (o *BTAssemblyFeatureDisplayData1783) HasOwnerOccurrence() bool {
	type getResult interface {
		HasOwnerOccurrence() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasOwnerOccurrence()
	} else {
		return false
	}
}

// SetOwnerOccurrence gets a reference to the given BTOccurrence74 and assigns it to the OwnerOccurrence field.
func (o *BTAssemblyFeatureDisplayData1783) SetOwnerOccurrence(v BTOccurrence74) {
	type getResult interface {
		SetOwnerOccurrence(v BTOccurrence74)
	}

	o.GetActualInstance().(getResult).SetOwnerOccurrence(v)
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BTAssemblyFeatureDisplayData1783) GetStatus() GBTAssemblyFeatureDisplayStatus {
	type getResult interface {
		GetStatus() GBTAssemblyFeatureDisplayStatus
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetStatus()
	} else {
		var de GBTAssemblyFeatureDisplayStatus
		return de
	}
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAssemblyFeatureDisplayData1783) GetStatusOk() (*GBTAssemblyFeatureDisplayStatus, bool) {
	type getResult interface {
		GetStatusOk() (*GBTAssemblyFeatureDisplayStatus, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetStatusOk()
	} else {
		return nil, false
	}
}

// HasStatus returns a boolean if a field has been set.
func (o *BTAssemblyFeatureDisplayData1783) HasStatus() bool {
	type getResult interface {
		HasStatus() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasStatus()
	} else {
		return false
	}
}

// SetStatus gets a reference to the given GBTAssemblyFeatureDisplayStatus and assigns it to the Status field.
func (o *BTAssemblyFeatureDisplayData1783) SetStatus(v GBTAssemblyFeatureDisplayStatus) {
	type getResult interface {
		SetStatus(v GBTAssemblyFeatureDisplayStatus)
	}

	o.GetActualInstance().(getResult).SetStatus(v)
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *BTAssemblyFeatureDisplayData1783) UnmarshalJSON(data []byte) error {
	var err error
	// use discriminator value to speed up the lookup
	var jsonDict map[string]interface{}
	err = newStrictDecoder(data).Decode(&jsonDict)
	if err != nil {
		return fmt.Errorf("failed to unmarshal JSON into map for the discriminator lookup")
	}

	// check if the discriminator value is 'BTGeometryMateDisplayData-1050'
	if jsonDict["btType"] == "BTGeometryMateDisplayData-1050" {
		// try to unmarshal JSON data into BTGeometryMateDisplayData1050
		var qr *BTGeometryMateDisplayData1050
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTAssemblyFeatureDisplayData1783 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTAssemblyFeatureDisplayData1783 = nil
			return fmt.Errorf("failed to unmarshal BTAssemblyFeatureDisplayData1783 as BTGeometryMateDisplayData1050: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTLoadDisplayData-837'
	if jsonDict["btType"] == "BTLoadDisplayData-837" {
		// try to unmarshal JSON data into BTLoadDisplayData837
		var qr *BTLoadDisplayData837
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTAssemblyFeatureDisplayData1783 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTAssemblyFeatureDisplayData1783 = nil
			return fmt.Errorf("failed to unmarshal BTAssemblyFeatureDisplayData1783 as BTLoadDisplayData837: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMateDisplayData-1358'
	if jsonDict["btType"] == "BTMateDisplayData-1358" {
		// try to unmarshal JSON data into BTMateDisplayData1358
		var qr *BTMateDisplayData1358
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTAssemblyFeatureDisplayData1783 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTAssemblyFeatureDisplayData1783 = nil
			return fmt.Errorf("failed to unmarshal BTAssemblyFeatureDisplayData1783 as BTMateDisplayData1358: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMateGroupDisplayData-1990'
	if jsonDict["btType"] == "BTMateGroupDisplayData-1990" {
		// try to unmarshal JSON data into BTMateGroupDisplayData1990
		var qr *BTMateGroupDisplayData1990
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTAssemblyFeatureDisplayData1783 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTAssemblyFeatureDisplayData1783 = nil
			return fmt.Errorf("failed to unmarshal BTAssemblyFeatureDisplayData1783 as BTMateGroupDisplayData1990: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTWidthMateDisplayData-2888'
	if jsonDict["btType"] == "BTWidthMateDisplayData-2888" {
		// try to unmarshal JSON data into BTWidthMateDisplayData2888
		var qr *BTWidthMateDisplayData2888
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTAssemblyFeatureDisplayData1783 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTAssemblyFeatureDisplayData1783 = nil
			return fmt.Errorf("failed to unmarshal BTAssemblyFeatureDisplayData1783 as BTWidthMateDisplayData2888: %s", err.Error())
		}
	}

	var qtx *base_BTAssemblyFeatureDisplayData1783
	err = json.Unmarshal(data, &qtx)
	if err == nil {
		dst.implBTAssemblyFeatureDisplayData1783 = qtx
		return nil // data stored in dst.base_BTAssemblyFeatureDisplayData1783, return on the first match
	} else {
		dst.implBTAssemblyFeatureDisplayData1783 = nil
		return fmt.Errorf("failed to unmarshal BTAssemblyFeatureDisplayData1783 as base_BTAssemblyFeatureDisplayData1783: %s", err.Error())
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BTAssemblyFeatureDisplayData1783) MarshalJSON() ([]byte, error) {
	ret := src.GetActualInstance()
	if ret == nil {
		return nil, nil // no data in oneOf schemas
	} else {
		return json.Marshal(&ret)
	}
}

// Get the actual instance
func (obj *BTAssemblyFeatureDisplayData1783) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	return obj.implBTAssemblyFeatureDisplayData1783
}

type NullableBTAssemblyFeatureDisplayData1783 struct {
	value *BTAssemblyFeatureDisplayData1783
	isSet bool
}

func (v NullableBTAssemblyFeatureDisplayData1783) Get() *BTAssemblyFeatureDisplayData1783 {
	return v.value
}

func (v *NullableBTAssemblyFeatureDisplayData1783) Set(val *BTAssemblyFeatureDisplayData1783) {
	v.value = val
	v.isSet = true
}

func (v NullableBTAssemblyFeatureDisplayData1783) IsSet() bool {
	return v.isSet
}

func (v *NullableBTAssemblyFeatureDisplayData1783) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTAssemblyFeatureDisplayData1783(val *BTAssemblyFeatureDisplayData1783) *NullableBTAssemblyFeatureDisplayData1783 {
	return &NullableBTAssemblyFeatureDisplayData1783{value: val, isSet: true}
}

func (v NullableBTAssemblyFeatureDisplayData1783) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTAssemblyFeatureDisplayData1783) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type base_BTAssemblyFeatureDisplayData1783 struct {
	// Type of JSON object.
	BtType           *string                          `json:"btType,omitempty"`
	Hidden           *bool                            `json:"hidden,omitempty"`
	IsDerivedFeature *bool                            `json:"isDerivedFeature,omitempty"`
	NodeId           *string                          `json:"nodeId,omitempty"`
	OwnerOccurrence  *BTOccurrence74                  `json:"ownerOccurrence,omitempty"`
	Status           *GBTAssemblyFeatureDisplayStatus `json:"status,omitempty"`
}

// Newbase_BTAssemblyFeatureDisplayData1783 instantiates a new base_BTAssemblyFeatureDisplayData1783 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func Newbase_BTAssemblyFeatureDisplayData1783() *base_BTAssemblyFeatureDisplayData1783 {
	this := base_BTAssemblyFeatureDisplayData1783{}
	return &this
}

// Newbase_BTAssemblyFeatureDisplayData1783WithDefaults instantiates a new base_BTAssemblyFeatureDisplayData1783 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func Newbase_BTAssemblyFeatureDisplayData1783WithDefaults() *base_BTAssemblyFeatureDisplayData1783 {
	this := base_BTAssemblyFeatureDisplayData1783{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *base_BTAssemblyFeatureDisplayData1783) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAssemblyFeatureDisplayData1783) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *base_BTAssemblyFeatureDisplayData1783) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *base_BTAssemblyFeatureDisplayData1783) SetBtType(v string) {
	o.BtType = &v
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *base_BTAssemblyFeatureDisplayData1783) GetHidden() bool {
	if o == nil || o.Hidden == nil {
		var ret bool
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAssemblyFeatureDisplayData1783) GetHiddenOk() (*bool, bool) {
	if o == nil || o.Hidden == nil {
		return nil, false
	}
	return o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *base_BTAssemblyFeatureDisplayData1783) HasHidden() bool {
	if o != nil && o.Hidden != nil {
		return true
	}

	return false
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *base_BTAssemblyFeatureDisplayData1783) SetHidden(v bool) {
	o.Hidden = &v
}

// GetIsDerivedFeature returns the IsDerivedFeature field value if set, zero value otherwise.
func (o *base_BTAssemblyFeatureDisplayData1783) GetIsDerivedFeature() bool {
	if o == nil || o.IsDerivedFeature == nil {
		var ret bool
		return ret
	}
	return *o.IsDerivedFeature
}

// GetIsDerivedFeatureOk returns a tuple with the IsDerivedFeature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAssemblyFeatureDisplayData1783) GetIsDerivedFeatureOk() (*bool, bool) {
	if o == nil || o.IsDerivedFeature == nil {
		return nil, false
	}
	return o.IsDerivedFeature, true
}

// HasIsDerivedFeature returns a boolean if a field has been set.
func (o *base_BTAssemblyFeatureDisplayData1783) HasIsDerivedFeature() bool {
	if o != nil && o.IsDerivedFeature != nil {
		return true
	}

	return false
}

// SetIsDerivedFeature gets a reference to the given bool and assigns it to the IsDerivedFeature field.
func (o *base_BTAssemblyFeatureDisplayData1783) SetIsDerivedFeature(v bool) {
	o.IsDerivedFeature = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *base_BTAssemblyFeatureDisplayData1783) GetNodeId() string {
	if o == nil || o.NodeId == nil {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAssemblyFeatureDisplayData1783) GetNodeIdOk() (*string, bool) {
	if o == nil || o.NodeId == nil {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *base_BTAssemblyFeatureDisplayData1783) HasNodeId() bool {
	if o != nil && o.NodeId != nil {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *base_BTAssemblyFeatureDisplayData1783) SetNodeId(v string) {
	o.NodeId = &v
}

// GetOwnerOccurrence returns the OwnerOccurrence field value if set, zero value otherwise.
func (o *base_BTAssemblyFeatureDisplayData1783) GetOwnerOccurrence() BTOccurrence74 {
	if o == nil || o.OwnerOccurrence == nil {
		var ret BTOccurrence74
		return ret
	}
	return *o.OwnerOccurrence
}

// GetOwnerOccurrenceOk returns a tuple with the OwnerOccurrence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAssemblyFeatureDisplayData1783) GetOwnerOccurrenceOk() (*BTOccurrence74, bool) {
	if o == nil || o.OwnerOccurrence == nil {
		return nil, false
	}
	return o.OwnerOccurrence, true
}

// HasOwnerOccurrence returns a boolean if a field has been set.
func (o *base_BTAssemblyFeatureDisplayData1783) HasOwnerOccurrence() bool {
	if o != nil && o.OwnerOccurrence != nil {
		return true
	}

	return false
}

// SetOwnerOccurrence gets a reference to the given BTOccurrence74 and assigns it to the OwnerOccurrence field.
func (o *base_BTAssemblyFeatureDisplayData1783) SetOwnerOccurrence(v BTOccurrence74) {
	o.OwnerOccurrence = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *base_BTAssemblyFeatureDisplayData1783) GetStatus() GBTAssemblyFeatureDisplayStatus {
	if o == nil || o.Status == nil {
		var ret GBTAssemblyFeatureDisplayStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAssemblyFeatureDisplayData1783) GetStatusOk() (*GBTAssemblyFeatureDisplayStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *base_BTAssemblyFeatureDisplayData1783) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given GBTAssemblyFeatureDisplayStatus and assigns it to the Status field.
func (o *base_BTAssemblyFeatureDisplayData1783) SetStatus(v GBTAssemblyFeatureDisplayStatus) {
	o.Status = &v
}

func (o base_BTAssemblyFeatureDisplayData1783) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.Hidden != nil {
		toSerialize["hidden"] = o.Hidden
	}
	if o.IsDerivedFeature != nil {
		toSerialize["isDerivedFeature"] = o.IsDerivedFeature
	}
	if o.NodeId != nil {
		toSerialize["nodeId"] = o.NodeId
	}
	if o.OwnerOccurrence != nil {
		toSerialize["ownerOccurrence"] = o.OwnerOccurrence
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}
