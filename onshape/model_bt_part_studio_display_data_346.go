/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTPartStudioDisplayData346 struct for BTPartStudioDisplayData346
type BTPartStudioDisplayData346 struct {
	AppearanceIdToAppearanceOverride        *map[string]BTAppearanceOverride2517                `json:"appearanceIdToAppearanceOverride,omitempty"`
	AssemblyReferenceDisplayData            *BTAssemblyReferencesDisplayData1562                `json:"assemblyReferenceDisplayData,omitempty"`
	BodyIdToEntityAppearanceSettings        *map[string]BTBaseEntityAppearanceSettings1391      `json:"bodyIdToEntityAppearanceSettings,omitempty"`
	BodyIdToEntityAppearanceSettingsChanged *bool                                               `json:"bodyIdToEntityAppearanceSettingsChanged,omitempty"`
	BtType                                  *string                                             `json:"btType,omitempty"`
	CacheablePartStudioDisplayDataVersion   *GBTPartStudioDisplayDataVersion                    `json:"cacheablePartStudioDisplayDataVersion,omitempty"`
	DecalIdToDecal                          *map[string]BTDecal2404                             `json:"decalIdToDecal,omitempty"`
	DeterministicIdToAssociatedFeatureIds   *map[string][]string                                `json:"deterministicIdToAssociatedFeatureIds,omitempty"`
	DeterministicIdToEntity                 *map[string]BTBaseEntityData33                      `json:"deterministicIdToEntity,omitempty"`
	DeterministicIdToPartDisplayData        *map[string]BTPartDisplayData17                     `json:"deterministicIdToPartDisplayData,omitempty"`
	DeterministicPartIdToData               *map[string]BTPartData16                            `json:"deterministicPartIdToData,omitempty"`
	Dimensions                              []BTDimensionDisplayData323                         `json:"dimensions,omitempty"`
	DisplayStateId                          *string                                             `json:"displayStateId,omitempty"`
	ElementId                               *string                                             `json:"elementId,omitempty"`
	FeatureIdToOperationIndices             *map[string][]int32                                 `json:"featureIdToOperationIndices,omitempty"`
	FromCache                               *bool                                               `json:"fromCache,omitempty"`
	FromFullElementId                       *BTFullElementId756                                 `json:"fromFullElementId,omitempty"`
	FullElementId                           *BTFullElementId756                                 `json:"fullElementId,omitempty"`
	Incremental                             *bool                                               `json:"incremental,omitempty"`
	InstanceCount                           *int32                                              `json:"instanceCount,omitempty"`
	IsBase                                  *bool                                               `json:"isBase,omitempty"`
	IsExternal                              *bool                                               `json:"isExternal,omitempty"`
	IsNoop                                  *bool                                               `json:"isNoop,omitempty"`
	KeepFromMicroversion                    *bool                                               `json:"keepFromMicroversion,omitempty"`
	MicroversionId                          *BTMicroversionId366                                `json:"microversionId,omitempty"`
	MicroversionIdAndConfigurationInterval  *BTMicroversionIdAndConfigurationInterval2364       `json:"microversionIdAndConfigurationInterval,omitempty"`
	MicroversionInterval                    *BTMicroversionIdInterval367                        `json:"microversionInterval,omitempty"`
	NumberOfSketchEntities                  *int32                                              `json:"numberOfSketchEntities,omitempty"`
	PartColorCycle                          *BTBasePartColorCycle2614                           `json:"partColorCycle,omitempty"`
	PartDisplayData                         []BTPartDisplayData17                               `json:"partDisplayData,omitempty"`
	SketchImages                            *map[string]map[string]BTSketchImageDisplayData1379 `json:"sketchImages,omitempty"`
	UpdatedParts                            []string                                            `json:"updatedParts,omitempty"`
	Usage                                   *GBTDisplayDataUsage                                `json:"usage,omitempty"`
	UsesMultipleTessellationSettings        *bool                                               `json:"usesMultipleTessellationSettings,omitempty"`
	VersionForRasterization                 *BTElementDisplayData326                            `json:"versionForRasterization,omitempty"`
}

// NewBTPartStudioDisplayData346 instantiates a new BTPartStudioDisplayData346 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTPartStudioDisplayData346() *BTPartStudioDisplayData346 {
	this := BTPartStudioDisplayData346{}
	return &this
}

// NewBTPartStudioDisplayData346WithDefaults instantiates a new BTPartStudioDisplayData346 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTPartStudioDisplayData346WithDefaults() *BTPartStudioDisplayData346 {
	this := BTPartStudioDisplayData346{}
	return &this
}

// GetAppearanceIdToAppearanceOverride returns the AppearanceIdToAppearanceOverride field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetAppearanceIdToAppearanceOverride() map[string]BTAppearanceOverride2517 {
	if o == nil || o.AppearanceIdToAppearanceOverride == nil {
		var ret map[string]BTAppearanceOverride2517
		return ret
	}
	return *o.AppearanceIdToAppearanceOverride
}

// GetAppearanceIdToAppearanceOverrideOk returns a tuple with the AppearanceIdToAppearanceOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetAppearanceIdToAppearanceOverrideOk() (*map[string]BTAppearanceOverride2517, bool) {
	if o == nil || o.AppearanceIdToAppearanceOverride == nil {
		return nil, false
	}
	return o.AppearanceIdToAppearanceOverride, true
}

// HasAppearanceIdToAppearanceOverride returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasAppearanceIdToAppearanceOverride() bool {
	if o != nil && o.AppearanceIdToAppearanceOverride != nil {
		return true
	}

	return false
}

// SetAppearanceIdToAppearanceOverride gets a reference to the given map[string]BTAppearanceOverride2517 and assigns it to the AppearanceIdToAppearanceOverride field.
func (o *BTPartStudioDisplayData346) SetAppearanceIdToAppearanceOverride(v map[string]BTAppearanceOverride2517) {
	o.AppearanceIdToAppearanceOverride = &v
}

// GetAssemblyReferenceDisplayData returns the AssemblyReferenceDisplayData field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetAssemblyReferenceDisplayData() BTAssemblyReferencesDisplayData1562 {
	if o == nil || o.AssemblyReferenceDisplayData == nil {
		var ret BTAssemblyReferencesDisplayData1562
		return ret
	}
	return *o.AssemblyReferenceDisplayData
}

// GetAssemblyReferenceDisplayDataOk returns a tuple with the AssemblyReferenceDisplayData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetAssemblyReferenceDisplayDataOk() (*BTAssemblyReferencesDisplayData1562, bool) {
	if o == nil || o.AssemblyReferenceDisplayData == nil {
		return nil, false
	}
	return o.AssemblyReferenceDisplayData, true
}

// HasAssemblyReferenceDisplayData returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasAssemblyReferenceDisplayData() bool {
	if o != nil && o.AssemblyReferenceDisplayData != nil {
		return true
	}

	return false
}

// SetAssemblyReferenceDisplayData gets a reference to the given BTAssemblyReferencesDisplayData1562 and assigns it to the AssemblyReferenceDisplayData field.
func (o *BTPartStudioDisplayData346) SetAssemblyReferenceDisplayData(v BTAssemblyReferencesDisplayData1562) {
	o.AssemblyReferenceDisplayData = &v
}

// GetBodyIdToEntityAppearanceSettings returns the BodyIdToEntityAppearanceSettings field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetBodyIdToEntityAppearanceSettings() map[string]BTBaseEntityAppearanceSettings1391 {
	if o == nil || o.BodyIdToEntityAppearanceSettings == nil {
		var ret map[string]BTBaseEntityAppearanceSettings1391
		return ret
	}
	return *o.BodyIdToEntityAppearanceSettings
}

// GetBodyIdToEntityAppearanceSettingsOk returns a tuple with the BodyIdToEntityAppearanceSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetBodyIdToEntityAppearanceSettingsOk() (*map[string]BTBaseEntityAppearanceSettings1391, bool) {
	if o == nil || o.BodyIdToEntityAppearanceSettings == nil {
		return nil, false
	}
	return o.BodyIdToEntityAppearanceSettings, true
}

// HasBodyIdToEntityAppearanceSettings returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasBodyIdToEntityAppearanceSettings() bool {
	if o != nil && o.BodyIdToEntityAppearanceSettings != nil {
		return true
	}

	return false
}

// SetBodyIdToEntityAppearanceSettings gets a reference to the given map[string]BTBaseEntityAppearanceSettings1391 and assigns it to the BodyIdToEntityAppearanceSettings field.
func (o *BTPartStudioDisplayData346) SetBodyIdToEntityAppearanceSettings(v map[string]BTBaseEntityAppearanceSettings1391) {
	o.BodyIdToEntityAppearanceSettings = &v
}

// GetBodyIdToEntityAppearanceSettingsChanged returns the BodyIdToEntityAppearanceSettingsChanged field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetBodyIdToEntityAppearanceSettingsChanged() bool {
	if o == nil || o.BodyIdToEntityAppearanceSettingsChanged == nil {
		var ret bool
		return ret
	}
	return *o.BodyIdToEntityAppearanceSettingsChanged
}

// GetBodyIdToEntityAppearanceSettingsChangedOk returns a tuple with the BodyIdToEntityAppearanceSettingsChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetBodyIdToEntityAppearanceSettingsChangedOk() (*bool, bool) {
	if o == nil || o.BodyIdToEntityAppearanceSettingsChanged == nil {
		return nil, false
	}
	return o.BodyIdToEntityAppearanceSettingsChanged, true
}

// HasBodyIdToEntityAppearanceSettingsChanged returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasBodyIdToEntityAppearanceSettingsChanged() bool {
	if o != nil && o.BodyIdToEntityAppearanceSettingsChanged != nil {
		return true
	}

	return false
}

// SetBodyIdToEntityAppearanceSettingsChanged gets a reference to the given bool and assigns it to the BodyIdToEntityAppearanceSettingsChanged field.
func (o *BTPartStudioDisplayData346) SetBodyIdToEntityAppearanceSettingsChanged(v bool) {
	o.BodyIdToEntityAppearanceSettingsChanged = &v
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTPartStudioDisplayData346) SetBtType(v string) {
	o.BtType = &v
}

// GetCacheablePartStudioDisplayDataVersion returns the CacheablePartStudioDisplayDataVersion field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetCacheablePartStudioDisplayDataVersion() GBTPartStudioDisplayDataVersion {
	if o == nil || o.CacheablePartStudioDisplayDataVersion == nil {
		var ret GBTPartStudioDisplayDataVersion
		return ret
	}
	return *o.CacheablePartStudioDisplayDataVersion
}

// GetCacheablePartStudioDisplayDataVersionOk returns a tuple with the CacheablePartStudioDisplayDataVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetCacheablePartStudioDisplayDataVersionOk() (*GBTPartStudioDisplayDataVersion, bool) {
	if o == nil || o.CacheablePartStudioDisplayDataVersion == nil {
		return nil, false
	}
	return o.CacheablePartStudioDisplayDataVersion, true
}

// HasCacheablePartStudioDisplayDataVersion returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasCacheablePartStudioDisplayDataVersion() bool {
	if o != nil && o.CacheablePartStudioDisplayDataVersion != nil {
		return true
	}

	return false
}

// SetCacheablePartStudioDisplayDataVersion gets a reference to the given GBTPartStudioDisplayDataVersion and assigns it to the CacheablePartStudioDisplayDataVersion field.
func (o *BTPartStudioDisplayData346) SetCacheablePartStudioDisplayDataVersion(v GBTPartStudioDisplayDataVersion) {
	o.CacheablePartStudioDisplayDataVersion = &v
}

// GetDecalIdToDecal returns the DecalIdToDecal field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetDecalIdToDecal() map[string]BTDecal2404 {
	if o == nil || o.DecalIdToDecal == nil {
		var ret map[string]BTDecal2404
		return ret
	}
	return *o.DecalIdToDecal
}

// GetDecalIdToDecalOk returns a tuple with the DecalIdToDecal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetDecalIdToDecalOk() (*map[string]BTDecal2404, bool) {
	if o == nil || o.DecalIdToDecal == nil {
		return nil, false
	}
	return o.DecalIdToDecal, true
}

// HasDecalIdToDecal returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasDecalIdToDecal() bool {
	if o != nil && o.DecalIdToDecal != nil {
		return true
	}

	return false
}

// SetDecalIdToDecal gets a reference to the given map[string]BTDecal2404 and assigns it to the DecalIdToDecal field.
func (o *BTPartStudioDisplayData346) SetDecalIdToDecal(v map[string]BTDecal2404) {
	o.DecalIdToDecal = &v
}

// GetDeterministicIdToAssociatedFeatureIds returns the DeterministicIdToAssociatedFeatureIds field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetDeterministicIdToAssociatedFeatureIds() map[string][]string {
	if o == nil || o.DeterministicIdToAssociatedFeatureIds == nil {
		var ret map[string][]string
		return ret
	}
	return *o.DeterministicIdToAssociatedFeatureIds
}

// GetDeterministicIdToAssociatedFeatureIdsOk returns a tuple with the DeterministicIdToAssociatedFeatureIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetDeterministicIdToAssociatedFeatureIdsOk() (*map[string][]string, bool) {
	if o == nil || o.DeterministicIdToAssociatedFeatureIds == nil {
		return nil, false
	}
	return o.DeterministicIdToAssociatedFeatureIds, true
}

// HasDeterministicIdToAssociatedFeatureIds returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasDeterministicIdToAssociatedFeatureIds() bool {
	if o != nil && o.DeterministicIdToAssociatedFeatureIds != nil {
		return true
	}

	return false
}

// SetDeterministicIdToAssociatedFeatureIds gets a reference to the given map[string][]string and assigns it to the DeterministicIdToAssociatedFeatureIds field.
func (o *BTPartStudioDisplayData346) SetDeterministicIdToAssociatedFeatureIds(v map[string][]string) {
	o.DeterministicIdToAssociatedFeatureIds = &v
}

// GetDeterministicIdToEntity returns the DeterministicIdToEntity field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetDeterministicIdToEntity() map[string]BTBaseEntityData33 {
	if o == nil || o.DeterministicIdToEntity == nil {
		var ret map[string]BTBaseEntityData33
		return ret
	}
	return *o.DeterministicIdToEntity
}

// GetDeterministicIdToEntityOk returns a tuple with the DeterministicIdToEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetDeterministicIdToEntityOk() (*map[string]BTBaseEntityData33, bool) {
	if o == nil || o.DeterministicIdToEntity == nil {
		return nil, false
	}
	return o.DeterministicIdToEntity, true
}

// HasDeterministicIdToEntity returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasDeterministicIdToEntity() bool {
	if o != nil && o.DeterministicIdToEntity != nil {
		return true
	}

	return false
}

// SetDeterministicIdToEntity gets a reference to the given map[string]BTBaseEntityData33 and assigns it to the DeterministicIdToEntity field.
func (o *BTPartStudioDisplayData346) SetDeterministicIdToEntity(v map[string]BTBaseEntityData33) {
	o.DeterministicIdToEntity = &v
}

// GetDeterministicIdToPartDisplayData returns the DeterministicIdToPartDisplayData field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetDeterministicIdToPartDisplayData() map[string]BTPartDisplayData17 {
	if o == nil || o.DeterministicIdToPartDisplayData == nil {
		var ret map[string]BTPartDisplayData17
		return ret
	}
	return *o.DeterministicIdToPartDisplayData
}

// GetDeterministicIdToPartDisplayDataOk returns a tuple with the DeterministicIdToPartDisplayData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetDeterministicIdToPartDisplayDataOk() (*map[string]BTPartDisplayData17, bool) {
	if o == nil || o.DeterministicIdToPartDisplayData == nil {
		return nil, false
	}
	return o.DeterministicIdToPartDisplayData, true
}

// HasDeterministicIdToPartDisplayData returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasDeterministicIdToPartDisplayData() bool {
	if o != nil && o.DeterministicIdToPartDisplayData != nil {
		return true
	}

	return false
}

// SetDeterministicIdToPartDisplayData gets a reference to the given map[string]BTPartDisplayData17 and assigns it to the DeterministicIdToPartDisplayData field.
func (o *BTPartStudioDisplayData346) SetDeterministicIdToPartDisplayData(v map[string]BTPartDisplayData17) {
	o.DeterministicIdToPartDisplayData = &v
}

// GetDeterministicPartIdToData returns the DeterministicPartIdToData field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetDeterministicPartIdToData() map[string]BTPartData16 {
	if o == nil || o.DeterministicPartIdToData == nil {
		var ret map[string]BTPartData16
		return ret
	}
	return *o.DeterministicPartIdToData
}

// GetDeterministicPartIdToDataOk returns a tuple with the DeterministicPartIdToData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetDeterministicPartIdToDataOk() (*map[string]BTPartData16, bool) {
	if o == nil || o.DeterministicPartIdToData == nil {
		return nil, false
	}
	return o.DeterministicPartIdToData, true
}

// HasDeterministicPartIdToData returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasDeterministicPartIdToData() bool {
	if o != nil && o.DeterministicPartIdToData != nil {
		return true
	}

	return false
}

// SetDeterministicPartIdToData gets a reference to the given map[string]BTPartData16 and assigns it to the DeterministicPartIdToData field.
func (o *BTPartStudioDisplayData346) SetDeterministicPartIdToData(v map[string]BTPartData16) {
	o.DeterministicPartIdToData = &v
}

// GetDimensions returns the Dimensions field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetDimensions() []BTDimensionDisplayData323 {
	if o == nil || o.Dimensions == nil {
		var ret []BTDimensionDisplayData323
		return ret
	}
	return o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetDimensionsOk() ([]BTDimensionDisplayData323, bool) {
	if o == nil || o.Dimensions == nil {
		return nil, false
	}
	return o.Dimensions, true
}

// HasDimensions returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasDimensions() bool {
	if o != nil && o.Dimensions != nil {
		return true
	}

	return false
}

// SetDimensions gets a reference to the given []BTDimensionDisplayData323 and assigns it to the Dimensions field.
func (o *BTPartStudioDisplayData346) SetDimensions(v []BTDimensionDisplayData323) {
	o.Dimensions = v
}

// GetDisplayStateId returns the DisplayStateId field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetDisplayStateId() string {
	if o == nil || o.DisplayStateId == nil {
		var ret string
		return ret
	}
	return *o.DisplayStateId
}

// GetDisplayStateIdOk returns a tuple with the DisplayStateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetDisplayStateIdOk() (*string, bool) {
	if o == nil || o.DisplayStateId == nil {
		return nil, false
	}
	return o.DisplayStateId, true
}

// HasDisplayStateId returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasDisplayStateId() bool {
	if o != nil && o.DisplayStateId != nil {
		return true
	}

	return false
}

// SetDisplayStateId gets a reference to the given string and assigns it to the DisplayStateId field.
func (o *BTPartStudioDisplayData346) SetDisplayStateId(v string) {
	o.DisplayStateId = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetElementId() string {
	if o == nil || o.ElementId == nil {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetElementIdOk() (*string, bool) {
	if o == nil || o.ElementId == nil {
		return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasElementId() bool {
	if o != nil && o.ElementId != nil {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *BTPartStudioDisplayData346) SetElementId(v string) {
	o.ElementId = &v
}

// GetFeatureIdToOperationIndices returns the FeatureIdToOperationIndices field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetFeatureIdToOperationIndices() map[string][]int32 {
	if o == nil || o.FeatureIdToOperationIndices == nil {
		var ret map[string][]int32
		return ret
	}
	return *o.FeatureIdToOperationIndices
}

// GetFeatureIdToOperationIndicesOk returns a tuple with the FeatureIdToOperationIndices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetFeatureIdToOperationIndicesOk() (*map[string][]int32, bool) {
	if o == nil || o.FeatureIdToOperationIndices == nil {
		return nil, false
	}
	return o.FeatureIdToOperationIndices, true
}

// HasFeatureIdToOperationIndices returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasFeatureIdToOperationIndices() bool {
	if o != nil && o.FeatureIdToOperationIndices != nil {
		return true
	}

	return false
}

// SetFeatureIdToOperationIndices gets a reference to the given map[string][]int32 and assigns it to the FeatureIdToOperationIndices field.
func (o *BTPartStudioDisplayData346) SetFeatureIdToOperationIndices(v map[string][]int32) {
	o.FeatureIdToOperationIndices = &v
}

// GetFromCache returns the FromCache field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetFromCache() bool {
	if o == nil || o.FromCache == nil {
		var ret bool
		return ret
	}
	return *o.FromCache
}

// GetFromCacheOk returns a tuple with the FromCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetFromCacheOk() (*bool, bool) {
	if o == nil || o.FromCache == nil {
		return nil, false
	}
	return o.FromCache, true
}

// HasFromCache returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasFromCache() bool {
	if o != nil && o.FromCache != nil {
		return true
	}

	return false
}

// SetFromCache gets a reference to the given bool and assigns it to the FromCache field.
func (o *BTPartStudioDisplayData346) SetFromCache(v bool) {
	o.FromCache = &v
}

// GetFromFullElementId returns the FromFullElementId field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetFromFullElementId() BTFullElementId756 {
	if o == nil || o.FromFullElementId == nil {
		var ret BTFullElementId756
		return ret
	}
	return *o.FromFullElementId
}

// GetFromFullElementIdOk returns a tuple with the FromFullElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetFromFullElementIdOk() (*BTFullElementId756, bool) {
	if o == nil || o.FromFullElementId == nil {
		return nil, false
	}
	return o.FromFullElementId, true
}

// HasFromFullElementId returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasFromFullElementId() bool {
	if o != nil && o.FromFullElementId != nil {
		return true
	}

	return false
}

// SetFromFullElementId gets a reference to the given BTFullElementId756 and assigns it to the FromFullElementId field.
func (o *BTPartStudioDisplayData346) SetFromFullElementId(v BTFullElementId756) {
	o.FromFullElementId = &v
}

// GetFullElementId returns the FullElementId field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetFullElementId() BTFullElementId756 {
	if o == nil || o.FullElementId == nil {
		var ret BTFullElementId756
		return ret
	}
	return *o.FullElementId
}

// GetFullElementIdOk returns a tuple with the FullElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetFullElementIdOk() (*BTFullElementId756, bool) {
	if o == nil || o.FullElementId == nil {
		return nil, false
	}
	return o.FullElementId, true
}

// HasFullElementId returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasFullElementId() bool {
	if o != nil && o.FullElementId != nil {
		return true
	}

	return false
}

// SetFullElementId gets a reference to the given BTFullElementId756 and assigns it to the FullElementId field.
func (o *BTPartStudioDisplayData346) SetFullElementId(v BTFullElementId756) {
	o.FullElementId = &v
}

// GetIncremental returns the Incremental field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetIncremental() bool {
	if o == nil || o.Incremental == nil {
		var ret bool
		return ret
	}
	return *o.Incremental
}

// GetIncrementalOk returns a tuple with the Incremental field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetIncrementalOk() (*bool, bool) {
	if o == nil || o.Incremental == nil {
		return nil, false
	}
	return o.Incremental, true
}

// HasIncremental returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasIncremental() bool {
	if o != nil && o.Incremental != nil {
		return true
	}

	return false
}

// SetIncremental gets a reference to the given bool and assigns it to the Incremental field.
func (o *BTPartStudioDisplayData346) SetIncremental(v bool) {
	o.Incremental = &v
}

// GetInstanceCount returns the InstanceCount field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetInstanceCount() int32 {
	if o == nil || o.InstanceCount == nil {
		var ret int32
		return ret
	}
	return *o.InstanceCount
}

// GetInstanceCountOk returns a tuple with the InstanceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetInstanceCountOk() (*int32, bool) {
	if o == nil || o.InstanceCount == nil {
		return nil, false
	}
	return o.InstanceCount, true
}

// HasInstanceCount returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasInstanceCount() bool {
	if o != nil && o.InstanceCount != nil {
		return true
	}

	return false
}

// SetInstanceCount gets a reference to the given int32 and assigns it to the InstanceCount field.
func (o *BTPartStudioDisplayData346) SetInstanceCount(v int32) {
	o.InstanceCount = &v
}

// GetIsBase returns the IsBase field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetIsBase() bool {
	if o == nil || o.IsBase == nil {
		var ret bool
		return ret
	}
	return *o.IsBase
}

// GetIsBaseOk returns a tuple with the IsBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetIsBaseOk() (*bool, bool) {
	if o == nil || o.IsBase == nil {
		return nil, false
	}
	return o.IsBase, true
}

// HasIsBase returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasIsBase() bool {
	if o != nil && o.IsBase != nil {
		return true
	}

	return false
}

// SetIsBase gets a reference to the given bool and assigns it to the IsBase field.
func (o *BTPartStudioDisplayData346) SetIsBase(v bool) {
	o.IsBase = &v
}

// GetIsExternal returns the IsExternal field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetIsExternal() bool {
	if o == nil || o.IsExternal == nil {
		var ret bool
		return ret
	}
	return *o.IsExternal
}

// GetIsExternalOk returns a tuple with the IsExternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetIsExternalOk() (*bool, bool) {
	if o == nil || o.IsExternal == nil {
		return nil, false
	}
	return o.IsExternal, true
}

// HasIsExternal returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasIsExternal() bool {
	if o != nil && o.IsExternal != nil {
		return true
	}

	return false
}

// SetIsExternal gets a reference to the given bool and assigns it to the IsExternal field.
func (o *BTPartStudioDisplayData346) SetIsExternal(v bool) {
	o.IsExternal = &v
}

// GetIsNoop returns the IsNoop field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetIsNoop() bool {
	if o == nil || o.IsNoop == nil {
		var ret bool
		return ret
	}
	return *o.IsNoop
}

// GetIsNoopOk returns a tuple with the IsNoop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetIsNoopOk() (*bool, bool) {
	if o == nil || o.IsNoop == nil {
		return nil, false
	}
	return o.IsNoop, true
}

// HasIsNoop returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasIsNoop() bool {
	if o != nil && o.IsNoop != nil {
		return true
	}

	return false
}

// SetIsNoop gets a reference to the given bool and assigns it to the IsNoop field.
func (o *BTPartStudioDisplayData346) SetIsNoop(v bool) {
	o.IsNoop = &v
}

// GetKeepFromMicroversion returns the KeepFromMicroversion field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetKeepFromMicroversion() bool {
	if o == nil || o.KeepFromMicroversion == nil {
		var ret bool
		return ret
	}
	return *o.KeepFromMicroversion
}

// GetKeepFromMicroversionOk returns a tuple with the KeepFromMicroversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetKeepFromMicroversionOk() (*bool, bool) {
	if o == nil || o.KeepFromMicroversion == nil {
		return nil, false
	}
	return o.KeepFromMicroversion, true
}

// HasKeepFromMicroversion returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasKeepFromMicroversion() bool {
	if o != nil && o.KeepFromMicroversion != nil {
		return true
	}

	return false
}

// SetKeepFromMicroversion gets a reference to the given bool and assigns it to the KeepFromMicroversion field.
func (o *BTPartStudioDisplayData346) SetKeepFromMicroversion(v bool) {
	o.KeepFromMicroversion = &v
}

// GetMicroversionId returns the MicroversionId field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetMicroversionId() BTMicroversionId366 {
	if o == nil || o.MicroversionId == nil {
		var ret BTMicroversionId366
		return ret
	}
	return *o.MicroversionId
}

// GetMicroversionIdOk returns a tuple with the MicroversionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetMicroversionIdOk() (*BTMicroversionId366, bool) {
	if o == nil || o.MicroversionId == nil {
		return nil, false
	}
	return o.MicroversionId, true
}

// HasMicroversionId returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasMicroversionId() bool {
	if o != nil && o.MicroversionId != nil {
		return true
	}

	return false
}

// SetMicroversionId gets a reference to the given BTMicroversionId366 and assigns it to the MicroversionId field.
func (o *BTPartStudioDisplayData346) SetMicroversionId(v BTMicroversionId366) {
	o.MicroversionId = &v
}

// GetMicroversionIdAndConfigurationInterval returns the MicroversionIdAndConfigurationInterval field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetMicroversionIdAndConfigurationInterval() BTMicroversionIdAndConfigurationInterval2364 {
	if o == nil || o.MicroversionIdAndConfigurationInterval == nil {
		var ret BTMicroversionIdAndConfigurationInterval2364
		return ret
	}
	return *o.MicroversionIdAndConfigurationInterval
}

// GetMicroversionIdAndConfigurationIntervalOk returns a tuple with the MicroversionIdAndConfigurationInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetMicroversionIdAndConfigurationIntervalOk() (*BTMicroversionIdAndConfigurationInterval2364, bool) {
	if o == nil || o.MicroversionIdAndConfigurationInterval == nil {
		return nil, false
	}
	return o.MicroversionIdAndConfigurationInterval, true
}

// HasMicroversionIdAndConfigurationInterval returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasMicroversionIdAndConfigurationInterval() bool {
	if o != nil && o.MicroversionIdAndConfigurationInterval != nil {
		return true
	}

	return false
}

// SetMicroversionIdAndConfigurationInterval gets a reference to the given BTMicroversionIdAndConfigurationInterval2364 and assigns it to the MicroversionIdAndConfigurationInterval field.
func (o *BTPartStudioDisplayData346) SetMicroversionIdAndConfigurationInterval(v BTMicroversionIdAndConfigurationInterval2364) {
	o.MicroversionIdAndConfigurationInterval = &v
}

// GetMicroversionInterval returns the MicroversionInterval field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetMicroversionInterval() BTMicroversionIdInterval367 {
	if o == nil || o.MicroversionInterval == nil {
		var ret BTMicroversionIdInterval367
		return ret
	}
	return *o.MicroversionInterval
}

// GetMicroversionIntervalOk returns a tuple with the MicroversionInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetMicroversionIntervalOk() (*BTMicroversionIdInterval367, bool) {
	if o == nil || o.MicroversionInterval == nil {
		return nil, false
	}
	return o.MicroversionInterval, true
}

// HasMicroversionInterval returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasMicroversionInterval() bool {
	if o != nil && o.MicroversionInterval != nil {
		return true
	}

	return false
}

// SetMicroversionInterval gets a reference to the given BTMicroversionIdInterval367 and assigns it to the MicroversionInterval field.
func (o *BTPartStudioDisplayData346) SetMicroversionInterval(v BTMicroversionIdInterval367) {
	o.MicroversionInterval = &v
}

// GetNumberOfSketchEntities returns the NumberOfSketchEntities field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetNumberOfSketchEntities() int32 {
	if o == nil || o.NumberOfSketchEntities == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfSketchEntities
}

// GetNumberOfSketchEntitiesOk returns a tuple with the NumberOfSketchEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetNumberOfSketchEntitiesOk() (*int32, bool) {
	if o == nil || o.NumberOfSketchEntities == nil {
		return nil, false
	}
	return o.NumberOfSketchEntities, true
}

// HasNumberOfSketchEntities returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasNumberOfSketchEntities() bool {
	if o != nil && o.NumberOfSketchEntities != nil {
		return true
	}

	return false
}

// SetNumberOfSketchEntities gets a reference to the given int32 and assigns it to the NumberOfSketchEntities field.
func (o *BTPartStudioDisplayData346) SetNumberOfSketchEntities(v int32) {
	o.NumberOfSketchEntities = &v
}

// GetPartColorCycle returns the PartColorCycle field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetPartColorCycle() BTBasePartColorCycle2614 {
	if o == nil || o.PartColorCycle == nil {
		var ret BTBasePartColorCycle2614
		return ret
	}
	return *o.PartColorCycle
}

// GetPartColorCycleOk returns a tuple with the PartColorCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetPartColorCycleOk() (*BTBasePartColorCycle2614, bool) {
	if o == nil || o.PartColorCycle == nil {
		return nil, false
	}
	return o.PartColorCycle, true
}

// HasPartColorCycle returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasPartColorCycle() bool {
	if o != nil && o.PartColorCycle != nil {
		return true
	}

	return false
}

// SetPartColorCycle gets a reference to the given BTBasePartColorCycle2614 and assigns it to the PartColorCycle field.
func (o *BTPartStudioDisplayData346) SetPartColorCycle(v BTBasePartColorCycle2614) {
	o.PartColorCycle = &v
}

// GetPartDisplayData returns the PartDisplayData field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetPartDisplayData() []BTPartDisplayData17 {
	if o == nil || o.PartDisplayData == nil {
		var ret []BTPartDisplayData17
		return ret
	}
	return o.PartDisplayData
}

// GetPartDisplayDataOk returns a tuple with the PartDisplayData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetPartDisplayDataOk() ([]BTPartDisplayData17, bool) {
	if o == nil || o.PartDisplayData == nil {
		return nil, false
	}
	return o.PartDisplayData, true
}

// HasPartDisplayData returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasPartDisplayData() bool {
	if o != nil && o.PartDisplayData != nil {
		return true
	}

	return false
}

// SetPartDisplayData gets a reference to the given []BTPartDisplayData17 and assigns it to the PartDisplayData field.
func (o *BTPartStudioDisplayData346) SetPartDisplayData(v []BTPartDisplayData17) {
	o.PartDisplayData = v
}

// GetSketchImages returns the SketchImages field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetSketchImages() map[string]map[string]BTSketchImageDisplayData1379 {
	if o == nil || o.SketchImages == nil {
		var ret map[string]map[string]BTSketchImageDisplayData1379
		return ret
	}
	return *o.SketchImages
}

// GetSketchImagesOk returns a tuple with the SketchImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetSketchImagesOk() (*map[string]map[string]BTSketchImageDisplayData1379, bool) {
	if o == nil || o.SketchImages == nil {
		return nil, false
	}
	return o.SketchImages, true
}

// HasSketchImages returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasSketchImages() bool {
	if o != nil && o.SketchImages != nil {
		return true
	}

	return false
}

// SetSketchImages gets a reference to the given map[string]map[string]BTSketchImageDisplayData1379 and assigns it to the SketchImages field.
func (o *BTPartStudioDisplayData346) SetSketchImages(v map[string]map[string]BTSketchImageDisplayData1379) {
	o.SketchImages = &v
}

// GetUpdatedParts returns the UpdatedParts field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetUpdatedParts() []string {
	if o == nil || o.UpdatedParts == nil {
		var ret []string
		return ret
	}
	return o.UpdatedParts
}

// GetUpdatedPartsOk returns a tuple with the UpdatedParts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetUpdatedPartsOk() ([]string, bool) {
	if o == nil || o.UpdatedParts == nil {
		return nil, false
	}
	return o.UpdatedParts, true
}

// HasUpdatedParts returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasUpdatedParts() bool {
	if o != nil && o.UpdatedParts != nil {
		return true
	}

	return false
}

// SetUpdatedParts gets a reference to the given []string and assigns it to the UpdatedParts field.
func (o *BTPartStudioDisplayData346) SetUpdatedParts(v []string) {
	o.UpdatedParts = v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetUsage() GBTDisplayDataUsage {
	if o == nil || o.Usage == nil {
		var ret GBTDisplayDataUsage
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetUsageOk() (*GBTDisplayDataUsage, bool) {
	if o == nil || o.Usage == nil {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasUsage() bool {
	if o != nil && o.Usage != nil {
		return true
	}

	return false
}

// SetUsage gets a reference to the given GBTDisplayDataUsage and assigns it to the Usage field.
func (o *BTPartStudioDisplayData346) SetUsage(v GBTDisplayDataUsage) {
	o.Usage = &v
}

// GetUsesMultipleTessellationSettings returns the UsesMultipleTessellationSettings field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetUsesMultipleTessellationSettings() bool {
	if o == nil || o.UsesMultipleTessellationSettings == nil {
		var ret bool
		return ret
	}
	return *o.UsesMultipleTessellationSettings
}

// GetUsesMultipleTessellationSettingsOk returns a tuple with the UsesMultipleTessellationSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetUsesMultipleTessellationSettingsOk() (*bool, bool) {
	if o == nil || o.UsesMultipleTessellationSettings == nil {
		return nil, false
	}
	return o.UsesMultipleTessellationSettings, true
}

// HasUsesMultipleTessellationSettings returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasUsesMultipleTessellationSettings() bool {
	if o != nil && o.UsesMultipleTessellationSettings != nil {
		return true
	}

	return false
}

// SetUsesMultipleTessellationSettings gets a reference to the given bool and assigns it to the UsesMultipleTessellationSettings field.
func (o *BTPartStudioDisplayData346) SetUsesMultipleTessellationSettings(v bool) {
	o.UsesMultipleTessellationSettings = &v
}

// GetVersionForRasterization returns the VersionForRasterization field value if set, zero value otherwise.
func (o *BTPartStudioDisplayData346) GetVersionForRasterization() BTElementDisplayData326 {
	if o == nil || o.VersionForRasterization == nil {
		var ret BTElementDisplayData326
		return ret
	}
	return *o.VersionForRasterization
}

// GetVersionForRasterizationOk returns a tuple with the VersionForRasterization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPartStudioDisplayData346) GetVersionForRasterizationOk() (*BTElementDisplayData326, bool) {
	if o == nil || o.VersionForRasterization == nil {
		return nil, false
	}
	return o.VersionForRasterization, true
}

// HasVersionForRasterization returns a boolean if a field has been set.
func (o *BTPartStudioDisplayData346) HasVersionForRasterization() bool {
	if o != nil && o.VersionForRasterization != nil {
		return true
	}

	return false
}

// SetVersionForRasterization gets a reference to the given BTElementDisplayData326 and assigns it to the VersionForRasterization field.
func (o *BTPartStudioDisplayData346) SetVersionForRasterization(v BTElementDisplayData326) {
	o.VersionForRasterization = &v
}

func (o BTPartStudioDisplayData346) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppearanceIdToAppearanceOverride != nil {
		toSerialize["appearanceIdToAppearanceOverride"] = o.AppearanceIdToAppearanceOverride
	}
	if o.AssemblyReferenceDisplayData != nil {
		toSerialize["assemblyReferenceDisplayData"] = o.AssemblyReferenceDisplayData
	}
	if o.BodyIdToEntityAppearanceSettings != nil {
		toSerialize["bodyIdToEntityAppearanceSettings"] = o.BodyIdToEntityAppearanceSettings
	}
	if o.BodyIdToEntityAppearanceSettingsChanged != nil {
		toSerialize["bodyIdToEntityAppearanceSettingsChanged"] = o.BodyIdToEntityAppearanceSettingsChanged
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.CacheablePartStudioDisplayDataVersion != nil {
		toSerialize["cacheablePartStudioDisplayDataVersion"] = o.CacheablePartStudioDisplayDataVersion
	}
	if o.DecalIdToDecal != nil {
		toSerialize["decalIdToDecal"] = o.DecalIdToDecal
	}
	if o.DeterministicIdToAssociatedFeatureIds != nil {
		toSerialize["deterministicIdToAssociatedFeatureIds"] = o.DeterministicIdToAssociatedFeatureIds
	}
	if o.DeterministicIdToEntity != nil {
		toSerialize["deterministicIdToEntity"] = o.DeterministicIdToEntity
	}
	if o.DeterministicIdToPartDisplayData != nil {
		toSerialize["deterministicIdToPartDisplayData"] = o.DeterministicIdToPartDisplayData
	}
	if o.DeterministicPartIdToData != nil {
		toSerialize["deterministicPartIdToData"] = o.DeterministicPartIdToData
	}
	if o.Dimensions != nil {
		toSerialize["dimensions"] = o.Dimensions
	}
	if o.DisplayStateId != nil {
		toSerialize["displayStateId"] = o.DisplayStateId
	}
	if o.ElementId != nil {
		toSerialize["elementId"] = o.ElementId
	}
	if o.FeatureIdToOperationIndices != nil {
		toSerialize["featureIdToOperationIndices"] = o.FeatureIdToOperationIndices
	}
	if o.FromCache != nil {
		toSerialize["fromCache"] = o.FromCache
	}
	if o.FromFullElementId != nil {
		toSerialize["fromFullElementId"] = o.FromFullElementId
	}
	if o.FullElementId != nil {
		toSerialize["fullElementId"] = o.FullElementId
	}
	if o.Incremental != nil {
		toSerialize["incremental"] = o.Incremental
	}
	if o.InstanceCount != nil {
		toSerialize["instanceCount"] = o.InstanceCount
	}
	if o.IsBase != nil {
		toSerialize["isBase"] = o.IsBase
	}
	if o.IsExternal != nil {
		toSerialize["isExternal"] = o.IsExternal
	}
	if o.IsNoop != nil {
		toSerialize["isNoop"] = o.IsNoop
	}
	if o.KeepFromMicroversion != nil {
		toSerialize["keepFromMicroversion"] = o.KeepFromMicroversion
	}
	if o.MicroversionId != nil {
		toSerialize["microversionId"] = o.MicroversionId
	}
	if o.MicroversionIdAndConfigurationInterval != nil {
		toSerialize["microversionIdAndConfigurationInterval"] = o.MicroversionIdAndConfigurationInterval
	}
	if o.MicroversionInterval != nil {
		toSerialize["microversionInterval"] = o.MicroversionInterval
	}
	if o.NumberOfSketchEntities != nil {
		toSerialize["numberOfSketchEntities"] = o.NumberOfSketchEntities
	}
	if o.PartColorCycle != nil {
		toSerialize["partColorCycle"] = o.PartColorCycle
	}
	if o.PartDisplayData != nil {
		toSerialize["partDisplayData"] = o.PartDisplayData
	}
	if o.SketchImages != nil {
		toSerialize["sketchImages"] = o.SketchImages
	}
	if o.UpdatedParts != nil {
		toSerialize["updatedParts"] = o.UpdatedParts
	}
	if o.Usage != nil {
		toSerialize["usage"] = o.Usage
	}
	if o.UsesMultipleTessellationSettings != nil {
		toSerialize["usesMultipleTessellationSettings"] = o.UsesMultipleTessellationSettings
	}
	if o.VersionForRasterization != nil {
		toSerialize["versionForRasterization"] = o.VersionForRasterization
	}
	return json.Marshal(toSerialize)
}

type NullableBTPartStudioDisplayData346 struct {
	value *BTPartStudioDisplayData346
	isSet bool
}

func (v NullableBTPartStudioDisplayData346) Get() *BTPartStudioDisplayData346 {
	return v.value
}

func (v *NullableBTPartStudioDisplayData346) Set(val *BTPartStudioDisplayData346) {
	v.value = val
	v.isSet = true
}

func (v NullableBTPartStudioDisplayData346) IsSet() bool {
	return v.isSet
}

func (v *NullableBTPartStudioDisplayData346) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTPartStudioDisplayData346(val *BTPartStudioDisplayData346) *NullableBTPartStudioDisplayData346 {
	return &NullableBTPartStudioDisplayData346{value: val, isSet: true}
}

func (v NullableBTPartStudioDisplayData346) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTPartStudioDisplayData346) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
