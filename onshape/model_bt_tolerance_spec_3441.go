/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTToleranceSpec3441 struct for BTToleranceSpec3441
type BTToleranceSpec3441 struct {
	BTFeatureSpec129
	AdditionalLocalizedStrings *int32                       `json:"additionalLocalizedStrings,omitempty"`
	AllParameters              []BTParameterSpec6           `json:"allParameters,omitempty"`
	BtType                     *string                      `json:"btType,omitempty"`
	ComputedPartPropertySpec   *bool                        `json:"computedPartPropertySpec,omitempty"`
	DescriptionImageUri        *string                      `json:"descriptionImageUri,omitempty"`
	EditingLogic               *BTEditingLogic2350          `json:"editingLogic,omitempty"`
	FeatureNameTemplate        *string                      `json:"featureNameTemplate,omitempty"`
	FeatureType                *string                      `json:"featureType,omitempty"`
	FeatureTypeDescription     *string                      `json:"featureTypeDescription,omitempty"`
	FeatureTypeName            *string                      `json:"featureTypeName,omitempty"`
	FilterSelectors            []string                     `json:"filterSelectors,omitempty"`
	FullFeatureType            *string                      `json:"fullFeatureType,omitempty"`
	Groups                     []BTParameterGroupSpec3469   `json:"groups,omitempty"`
	IconUri                    *string                      `json:"iconUri,omitempty"`
	LanguageVersion            *int32                       `json:"languageVersion,omitempty"`
	LinkedLocationName         *string                      `json:"linkedLocationName,omitempty"`
	LocalizableName            *string                      `json:"localizableName,omitempty"`
	LocalizedName              *string                      `json:"localizedName,omitempty"`
	LocationInfos              []BTLocationInfo226          `json:"locationInfos,omitempty"`
	ManipulatorChangeFunction  *string                      `json:"manipulatorChangeFunction,omitempty"`
	Namespace                  *string                      `json:"namespace,omitempty"`
	NamespaceIncludingEnums    *string                      `json:"namespaceIncludingEnums,omitempty"`
	NamespaceTheSource         *bool                        `json:"namespaceTheSource,omitempty"`
	ParameterIdToSpec          *map[string]BTParameterSpec6 `json:"parameterIdToSpec,omitempty"`
	Parameters                 []BTParameterSpec6           `json:"parameters,omitempty"`
	Signature                  *string                      `json:"signature,omitempty"`
	SourceLocation             *BTLocationInfo226           `json:"sourceLocation,omitempty"`
	SourceMicroversionId       *string                      `json:"sourceMicroversionId,omitempty"`
	StringsToLocalize          []string                     `json:"stringsToLocalize,omitempty"`
	TableSpec                  *bool                        `json:"tableSpec,omitempty"`
	ToleranceSpec              *bool                        `json:"toleranceSpec,omitempty"`
	TooltipTemplate            *string                      `json:"tooltipTemplate,omitempty"`
	UiHints                    []GBTUIHint                  `json:"uiHints,omitempty"`
}

// NewBTToleranceSpec3441 instantiates a new BTToleranceSpec3441 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTToleranceSpec3441() *BTToleranceSpec3441 {
	this := BTToleranceSpec3441{}
	return &this
}

// NewBTToleranceSpec3441WithDefaults instantiates a new BTToleranceSpec3441 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTToleranceSpec3441WithDefaults() *BTToleranceSpec3441 {
	this := BTToleranceSpec3441{}
	return &this
}

// GetAdditionalLocalizedStrings returns the AdditionalLocalizedStrings field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetAdditionalLocalizedStrings() int32 {
	if o == nil || o.AdditionalLocalizedStrings == nil {
		var ret int32
		return ret
	}
	return *o.AdditionalLocalizedStrings
}

// GetAdditionalLocalizedStringsOk returns a tuple with the AdditionalLocalizedStrings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetAdditionalLocalizedStringsOk() (*int32, bool) {
	if o == nil || o.AdditionalLocalizedStrings == nil {
		return nil, false
	}
	return o.AdditionalLocalizedStrings, true
}

// HasAdditionalLocalizedStrings returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasAdditionalLocalizedStrings() bool {
	if o != nil && o.AdditionalLocalizedStrings != nil {
		return true
	}

	return false
}

// SetAdditionalLocalizedStrings gets a reference to the given int32 and assigns it to the AdditionalLocalizedStrings field.
func (o *BTToleranceSpec3441) SetAdditionalLocalizedStrings(v int32) {
	o.AdditionalLocalizedStrings = &v
}

// GetAllParameters returns the AllParameters field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetAllParameters() []BTParameterSpec6 {
	if o == nil || o.AllParameters == nil {
		var ret []BTParameterSpec6
		return ret
	}
	return o.AllParameters
}

// GetAllParametersOk returns a tuple with the AllParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetAllParametersOk() ([]BTParameterSpec6, bool) {
	if o == nil || o.AllParameters == nil {
		return nil, false
	}
	return o.AllParameters, true
}

// HasAllParameters returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasAllParameters() bool {
	if o != nil && o.AllParameters != nil {
		return true
	}

	return false
}

// SetAllParameters gets a reference to the given []BTParameterSpec6 and assigns it to the AllParameters field.
func (o *BTToleranceSpec3441) SetAllParameters(v []BTParameterSpec6) {
	o.AllParameters = v
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTToleranceSpec3441) SetBtType(v string) {
	o.BtType = &v
}

// GetComputedPartPropertySpec returns the ComputedPartPropertySpec field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetComputedPartPropertySpec() bool {
	if o == nil || o.ComputedPartPropertySpec == nil {
		var ret bool
		return ret
	}
	return *o.ComputedPartPropertySpec
}

// GetComputedPartPropertySpecOk returns a tuple with the ComputedPartPropertySpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetComputedPartPropertySpecOk() (*bool, bool) {
	if o == nil || o.ComputedPartPropertySpec == nil {
		return nil, false
	}
	return o.ComputedPartPropertySpec, true
}

// HasComputedPartPropertySpec returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasComputedPartPropertySpec() bool {
	if o != nil && o.ComputedPartPropertySpec != nil {
		return true
	}

	return false
}

// SetComputedPartPropertySpec gets a reference to the given bool and assigns it to the ComputedPartPropertySpec field.
func (o *BTToleranceSpec3441) SetComputedPartPropertySpec(v bool) {
	o.ComputedPartPropertySpec = &v
}

// GetDescriptionImageUri returns the DescriptionImageUri field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetDescriptionImageUri() string {
	if o == nil || o.DescriptionImageUri == nil {
		var ret string
		return ret
	}
	return *o.DescriptionImageUri
}

// GetDescriptionImageUriOk returns a tuple with the DescriptionImageUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetDescriptionImageUriOk() (*string, bool) {
	if o == nil || o.DescriptionImageUri == nil {
		return nil, false
	}
	return o.DescriptionImageUri, true
}

// HasDescriptionImageUri returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasDescriptionImageUri() bool {
	if o != nil && o.DescriptionImageUri != nil {
		return true
	}

	return false
}

// SetDescriptionImageUri gets a reference to the given string and assigns it to the DescriptionImageUri field.
func (o *BTToleranceSpec3441) SetDescriptionImageUri(v string) {
	o.DescriptionImageUri = &v
}

// GetEditingLogic returns the EditingLogic field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetEditingLogic() BTEditingLogic2350 {
	if o == nil || o.EditingLogic == nil {
		var ret BTEditingLogic2350
		return ret
	}
	return *o.EditingLogic
}

// GetEditingLogicOk returns a tuple with the EditingLogic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetEditingLogicOk() (*BTEditingLogic2350, bool) {
	if o == nil || o.EditingLogic == nil {
		return nil, false
	}
	return o.EditingLogic, true
}

// HasEditingLogic returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasEditingLogic() bool {
	if o != nil && o.EditingLogic != nil {
		return true
	}

	return false
}

// SetEditingLogic gets a reference to the given BTEditingLogic2350 and assigns it to the EditingLogic field.
func (o *BTToleranceSpec3441) SetEditingLogic(v BTEditingLogic2350) {
	o.EditingLogic = &v
}

// GetFeatureNameTemplate returns the FeatureNameTemplate field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetFeatureNameTemplate() string {
	if o == nil || o.FeatureNameTemplate == nil {
		var ret string
		return ret
	}
	return *o.FeatureNameTemplate
}

// GetFeatureNameTemplateOk returns a tuple with the FeatureNameTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetFeatureNameTemplateOk() (*string, bool) {
	if o == nil || o.FeatureNameTemplate == nil {
		return nil, false
	}
	return o.FeatureNameTemplate, true
}

// HasFeatureNameTemplate returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasFeatureNameTemplate() bool {
	if o != nil && o.FeatureNameTemplate != nil {
		return true
	}

	return false
}

// SetFeatureNameTemplate gets a reference to the given string and assigns it to the FeatureNameTemplate field.
func (o *BTToleranceSpec3441) SetFeatureNameTemplate(v string) {
	o.FeatureNameTemplate = &v
}

// GetFeatureType returns the FeatureType field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetFeatureType() string {
	if o == nil || o.FeatureType == nil {
		var ret string
		return ret
	}
	return *o.FeatureType
}

// GetFeatureTypeOk returns a tuple with the FeatureType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetFeatureTypeOk() (*string, bool) {
	if o == nil || o.FeatureType == nil {
		return nil, false
	}
	return o.FeatureType, true
}

// HasFeatureType returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasFeatureType() bool {
	if o != nil && o.FeatureType != nil {
		return true
	}

	return false
}

// SetFeatureType gets a reference to the given string and assigns it to the FeatureType field.
func (o *BTToleranceSpec3441) SetFeatureType(v string) {
	o.FeatureType = &v
}

// GetFeatureTypeDescription returns the FeatureTypeDescription field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetFeatureTypeDescription() string {
	if o == nil || o.FeatureTypeDescription == nil {
		var ret string
		return ret
	}
	return *o.FeatureTypeDescription
}

// GetFeatureTypeDescriptionOk returns a tuple with the FeatureTypeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetFeatureTypeDescriptionOk() (*string, bool) {
	if o == nil || o.FeatureTypeDescription == nil {
		return nil, false
	}
	return o.FeatureTypeDescription, true
}

// HasFeatureTypeDescription returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasFeatureTypeDescription() bool {
	if o != nil && o.FeatureTypeDescription != nil {
		return true
	}

	return false
}

// SetFeatureTypeDescription gets a reference to the given string and assigns it to the FeatureTypeDescription field.
func (o *BTToleranceSpec3441) SetFeatureTypeDescription(v string) {
	o.FeatureTypeDescription = &v
}

// GetFeatureTypeName returns the FeatureTypeName field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetFeatureTypeName() string {
	if o == nil || o.FeatureTypeName == nil {
		var ret string
		return ret
	}
	return *o.FeatureTypeName
}

// GetFeatureTypeNameOk returns a tuple with the FeatureTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetFeatureTypeNameOk() (*string, bool) {
	if o == nil || o.FeatureTypeName == nil {
		return nil, false
	}
	return o.FeatureTypeName, true
}

// HasFeatureTypeName returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasFeatureTypeName() bool {
	if o != nil && o.FeatureTypeName != nil {
		return true
	}

	return false
}

// SetFeatureTypeName gets a reference to the given string and assigns it to the FeatureTypeName field.
func (o *BTToleranceSpec3441) SetFeatureTypeName(v string) {
	o.FeatureTypeName = &v
}

// GetFilterSelectors returns the FilterSelectors field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetFilterSelectors() []string {
	if o == nil || o.FilterSelectors == nil {
		var ret []string
		return ret
	}
	return o.FilterSelectors
}

// GetFilterSelectorsOk returns a tuple with the FilterSelectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetFilterSelectorsOk() ([]string, bool) {
	if o == nil || o.FilterSelectors == nil {
		return nil, false
	}
	return o.FilterSelectors, true
}

// HasFilterSelectors returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasFilterSelectors() bool {
	if o != nil && o.FilterSelectors != nil {
		return true
	}

	return false
}

// SetFilterSelectors gets a reference to the given []string and assigns it to the FilterSelectors field.
func (o *BTToleranceSpec3441) SetFilterSelectors(v []string) {
	o.FilterSelectors = v
}

// GetFullFeatureType returns the FullFeatureType field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetFullFeatureType() string {
	if o == nil || o.FullFeatureType == nil {
		var ret string
		return ret
	}
	return *o.FullFeatureType
}

// GetFullFeatureTypeOk returns a tuple with the FullFeatureType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetFullFeatureTypeOk() (*string, bool) {
	if o == nil || o.FullFeatureType == nil {
		return nil, false
	}
	return o.FullFeatureType, true
}

// HasFullFeatureType returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasFullFeatureType() bool {
	if o != nil && o.FullFeatureType != nil {
		return true
	}

	return false
}

// SetFullFeatureType gets a reference to the given string and assigns it to the FullFeatureType field.
func (o *BTToleranceSpec3441) SetFullFeatureType(v string) {
	o.FullFeatureType = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetGroups() []BTParameterGroupSpec3469 {
	if o == nil || o.Groups == nil {
		var ret []BTParameterGroupSpec3469
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetGroupsOk() ([]BTParameterGroupSpec3469, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []BTParameterGroupSpec3469 and assigns it to the Groups field.
func (o *BTToleranceSpec3441) SetGroups(v []BTParameterGroupSpec3469) {
	o.Groups = v
}

// GetIconUri returns the IconUri field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetIconUri() string {
	if o == nil || o.IconUri == nil {
		var ret string
		return ret
	}
	return *o.IconUri
}

// GetIconUriOk returns a tuple with the IconUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetIconUriOk() (*string, bool) {
	if o == nil || o.IconUri == nil {
		return nil, false
	}
	return o.IconUri, true
}

// HasIconUri returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasIconUri() bool {
	if o != nil && o.IconUri != nil {
		return true
	}

	return false
}

// SetIconUri gets a reference to the given string and assigns it to the IconUri field.
func (o *BTToleranceSpec3441) SetIconUri(v string) {
	o.IconUri = &v
}

// GetLanguageVersion returns the LanguageVersion field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetLanguageVersion() int32 {
	if o == nil || o.LanguageVersion == nil {
		var ret int32
		return ret
	}
	return *o.LanguageVersion
}

// GetLanguageVersionOk returns a tuple with the LanguageVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetLanguageVersionOk() (*int32, bool) {
	if o == nil || o.LanguageVersion == nil {
		return nil, false
	}
	return o.LanguageVersion, true
}

// HasLanguageVersion returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasLanguageVersion() bool {
	if o != nil && o.LanguageVersion != nil {
		return true
	}

	return false
}

// SetLanguageVersion gets a reference to the given int32 and assigns it to the LanguageVersion field.
func (o *BTToleranceSpec3441) SetLanguageVersion(v int32) {
	o.LanguageVersion = &v
}

// GetLinkedLocationName returns the LinkedLocationName field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetLinkedLocationName() string {
	if o == nil || o.LinkedLocationName == nil {
		var ret string
		return ret
	}
	return *o.LinkedLocationName
}

// GetLinkedLocationNameOk returns a tuple with the LinkedLocationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetLinkedLocationNameOk() (*string, bool) {
	if o == nil || o.LinkedLocationName == nil {
		return nil, false
	}
	return o.LinkedLocationName, true
}

// HasLinkedLocationName returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasLinkedLocationName() bool {
	if o != nil && o.LinkedLocationName != nil {
		return true
	}

	return false
}

// SetLinkedLocationName gets a reference to the given string and assigns it to the LinkedLocationName field.
func (o *BTToleranceSpec3441) SetLinkedLocationName(v string) {
	o.LinkedLocationName = &v
}

// GetLocalizableName returns the LocalizableName field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetLocalizableName() string {
	if o == nil || o.LocalizableName == nil {
		var ret string
		return ret
	}
	return *o.LocalizableName
}

// GetLocalizableNameOk returns a tuple with the LocalizableName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetLocalizableNameOk() (*string, bool) {
	if o == nil || o.LocalizableName == nil {
		return nil, false
	}
	return o.LocalizableName, true
}

// HasLocalizableName returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasLocalizableName() bool {
	if o != nil && o.LocalizableName != nil {
		return true
	}

	return false
}

// SetLocalizableName gets a reference to the given string and assigns it to the LocalizableName field.
func (o *BTToleranceSpec3441) SetLocalizableName(v string) {
	o.LocalizableName = &v
}

// GetLocalizedName returns the LocalizedName field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetLocalizedName() string {
	if o == nil || o.LocalizedName == nil {
		var ret string
		return ret
	}
	return *o.LocalizedName
}

// GetLocalizedNameOk returns a tuple with the LocalizedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetLocalizedNameOk() (*string, bool) {
	if o == nil || o.LocalizedName == nil {
		return nil, false
	}
	return o.LocalizedName, true
}

// HasLocalizedName returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasLocalizedName() bool {
	if o != nil && o.LocalizedName != nil {
		return true
	}

	return false
}

// SetLocalizedName gets a reference to the given string and assigns it to the LocalizedName field.
func (o *BTToleranceSpec3441) SetLocalizedName(v string) {
	o.LocalizedName = &v
}

// GetLocationInfos returns the LocationInfos field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetLocationInfos() []BTLocationInfo226 {
	if o == nil || o.LocationInfos == nil {
		var ret []BTLocationInfo226
		return ret
	}
	return o.LocationInfos
}

// GetLocationInfosOk returns a tuple with the LocationInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetLocationInfosOk() ([]BTLocationInfo226, bool) {
	if o == nil || o.LocationInfos == nil {
		return nil, false
	}
	return o.LocationInfos, true
}

// HasLocationInfos returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasLocationInfos() bool {
	if o != nil && o.LocationInfos != nil {
		return true
	}

	return false
}

// SetLocationInfos gets a reference to the given []BTLocationInfo226 and assigns it to the LocationInfos field.
func (o *BTToleranceSpec3441) SetLocationInfos(v []BTLocationInfo226) {
	o.LocationInfos = v
}

// GetManipulatorChangeFunction returns the ManipulatorChangeFunction field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetManipulatorChangeFunction() string {
	if o == nil || o.ManipulatorChangeFunction == nil {
		var ret string
		return ret
	}
	return *o.ManipulatorChangeFunction
}

// GetManipulatorChangeFunctionOk returns a tuple with the ManipulatorChangeFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetManipulatorChangeFunctionOk() (*string, bool) {
	if o == nil || o.ManipulatorChangeFunction == nil {
		return nil, false
	}
	return o.ManipulatorChangeFunction, true
}

// HasManipulatorChangeFunction returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasManipulatorChangeFunction() bool {
	if o != nil && o.ManipulatorChangeFunction != nil {
		return true
	}

	return false
}

// SetManipulatorChangeFunction gets a reference to the given string and assigns it to the ManipulatorChangeFunction field.
func (o *BTToleranceSpec3441) SetManipulatorChangeFunction(v string) {
	o.ManipulatorChangeFunction = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *BTToleranceSpec3441) SetNamespace(v string) {
	o.Namespace = &v
}

// GetNamespaceIncludingEnums returns the NamespaceIncludingEnums field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetNamespaceIncludingEnums() string {
	if o == nil || o.NamespaceIncludingEnums == nil {
		var ret string
		return ret
	}
	return *o.NamespaceIncludingEnums
}

// GetNamespaceIncludingEnumsOk returns a tuple with the NamespaceIncludingEnums field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetNamespaceIncludingEnumsOk() (*string, bool) {
	if o == nil || o.NamespaceIncludingEnums == nil {
		return nil, false
	}
	return o.NamespaceIncludingEnums, true
}

// HasNamespaceIncludingEnums returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasNamespaceIncludingEnums() bool {
	if o != nil && o.NamespaceIncludingEnums != nil {
		return true
	}

	return false
}

// SetNamespaceIncludingEnums gets a reference to the given string and assigns it to the NamespaceIncludingEnums field.
func (o *BTToleranceSpec3441) SetNamespaceIncludingEnums(v string) {
	o.NamespaceIncludingEnums = &v
}

// GetNamespaceTheSource returns the NamespaceTheSource field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetNamespaceTheSource() bool {
	if o == nil || o.NamespaceTheSource == nil {
		var ret bool
		return ret
	}
	return *o.NamespaceTheSource
}

// GetNamespaceTheSourceOk returns a tuple with the NamespaceTheSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetNamespaceTheSourceOk() (*bool, bool) {
	if o == nil || o.NamespaceTheSource == nil {
		return nil, false
	}
	return o.NamespaceTheSource, true
}

// HasNamespaceTheSource returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasNamespaceTheSource() bool {
	if o != nil && o.NamespaceTheSource != nil {
		return true
	}

	return false
}

// SetNamespaceTheSource gets a reference to the given bool and assigns it to the NamespaceTheSource field.
func (o *BTToleranceSpec3441) SetNamespaceTheSource(v bool) {
	o.NamespaceTheSource = &v
}

// GetParameterIdToSpec returns the ParameterIdToSpec field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetParameterIdToSpec() map[string]BTParameterSpec6 {
	if o == nil || o.ParameterIdToSpec == nil {
		var ret map[string]BTParameterSpec6
		return ret
	}
	return *o.ParameterIdToSpec
}

// GetParameterIdToSpecOk returns a tuple with the ParameterIdToSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetParameterIdToSpecOk() (*map[string]BTParameterSpec6, bool) {
	if o == nil || o.ParameterIdToSpec == nil {
		return nil, false
	}
	return o.ParameterIdToSpec, true
}

// HasParameterIdToSpec returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasParameterIdToSpec() bool {
	if o != nil && o.ParameterIdToSpec != nil {
		return true
	}

	return false
}

// SetParameterIdToSpec gets a reference to the given map[string]BTParameterSpec6 and assigns it to the ParameterIdToSpec field.
func (o *BTToleranceSpec3441) SetParameterIdToSpec(v map[string]BTParameterSpec6) {
	o.ParameterIdToSpec = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetParameters() []BTParameterSpec6 {
	if o == nil || o.Parameters == nil {
		var ret []BTParameterSpec6
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetParametersOk() ([]BTParameterSpec6, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []BTParameterSpec6 and assigns it to the Parameters field.
func (o *BTToleranceSpec3441) SetParameters(v []BTParameterSpec6) {
	o.Parameters = v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetSignature() string {
	if o == nil || o.Signature == nil {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetSignatureOk() (*string, bool) {
	if o == nil || o.Signature == nil {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasSignature() bool {
	if o != nil && o.Signature != nil {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *BTToleranceSpec3441) SetSignature(v string) {
	o.Signature = &v
}

// GetSourceLocation returns the SourceLocation field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetSourceLocation() BTLocationInfo226 {
	if o == nil || o.SourceLocation == nil {
		var ret BTLocationInfo226
		return ret
	}
	return *o.SourceLocation
}

// GetSourceLocationOk returns a tuple with the SourceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetSourceLocationOk() (*BTLocationInfo226, bool) {
	if o == nil || o.SourceLocation == nil {
		return nil, false
	}
	return o.SourceLocation, true
}

// HasSourceLocation returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasSourceLocation() bool {
	if o != nil && o.SourceLocation != nil {
		return true
	}

	return false
}

// SetSourceLocation gets a reference to the given BTLocationInfo226 and assigns it to the SourceLocation field.
func (o *BTToleranceSpec3441) SetSourceLocation(v BTLocationInfo226) {
	o.SourceLocation = &v
}

// GetSourceMicroversionId returns the SourceMicroversionId field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetSourceMicroversionId() string {
	if o == nil || o.SourceMicroversionId == nil {
		var ret string
		return ret
	}
	return *o.SourceMicroversionId
}

// GetSourceMicroversionIdOk returns a tuple with the SourceMicroversionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetSourceMicroversionIdOk() (*string, bool) {
	if o == nil || o.SourceMicroversionId == nil {
		return nil, false
	}
	return o.SourceMicroversionId, true
}

// HasSourceMicroversionId returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasSourceMicroversionId() bool {
	if o != nil && o.SourceMicroversionId != nil {
		return true
	}

	return false
}

// SetSourceMicroversionId gets a reference to the given string and assigns it to the SourceMicroversionId field.
func (o *BTToleranceSpec3441) SetSourceMicroversionId(v string) {
	o.SourceMicroversionId = &v
}

// GetStringsToLocalize returns the StringsToLocalize field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetStringsToLocalize() []string {
	if o == nil || o.StringsToLocalize == nil {
		var ret []string
		return ret
	}
	return o.StringsToLocalize
}

// GetStringsToLocalizeOk returns a tuple with the StringsToLocalize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetStringsToLocalizeOk() ([]string, bool) {
	if o == nil || o.StringsToLocalize == nil {
		return nil, false
	}
	return o.StringsToLocalize, true
}

// HasStringsToLocalize returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasStringsToLocalize() bool {
	if o != nil && o.StringsToLocalize != nil {
		return true
	}

	return false
}

// SetStringsToLocalize gets a reference to the given []string and assigns it to the StringsToLocalize field.
func (o *BTToleranceSpec3441) SetStringsToLocalize(v []string) {
	o.StringsToLocalize = v
}

// GetTableSpec returns the TableSpec field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetTableSpec() bool {
	if o == nil || o.TableSpec == nil {
		var ret bool
		return ret
	}
	return *o.TableSpec
}

// GetTableSpecOk returns a tuple with the TableSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetTableSpecOk() (*bool, bool) {
	if o == nil || o.TableSpec == nil {
		return nil, false
	}
	return o.TableSpec, true
}

// HasTableSpec returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasTableSpec() bool {
	if o != nil && o.TableSpec != nil {
		return true
	}

	return false
}

// SetTableSpec gets a reference to the given bool and assigns it to the TableSpec field.
func (o *BTToleranceSpec3441) SetTableSpec(v bool) {
	o.TableSpec = &v
}

// GetToleranceSpec returns the ToleranceSpec field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetToleranceSpec() bool {
	if o == nil || o.ToleranceSpec == nil {
		var ret bool
		return ret
	}
	return *o.ToleranceSpec
}

// GetToleranceSpecOk returns a tuple with the ToleranceSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetToleranceSpecOk() (*bool, bool) {
	if o == nil || o.ToleranceSpec == nil {
		return nil, false
	}
	return o.ToleranceSpec, true
}

// HasToleranceSpec returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasToleranceSpec() bool {
	if o != nil && o.ToleranceSpec != nil {
		return true
	}

	return false
}

// SetToleranceSpec gets a reference to the given bool and assigns it to the ToleranceSpec field.
func (o *BTToleranceSpec3441) SetToleranceSpec(v bool) {
	o.ToleranceSpec = &v
}

// GetTooltipTemplate returns the TooltipTemplate field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetTooltipTemplate() string {
	if o == nil || o.TooltipTemplate == nil {
		var ret string
		return ret
	}
	return *o.TooltipTemplate
}

// GetTooltipTemplateOk returns a tuple with the TooltipTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetTooltipTemplateOk() (*string, bool) {
	if o == nil || o.TooltipTemplate == nil {
		return nil, false
	}
	return o.TooltipTemplate, true
}

// HasTooltipTemplate returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasTooltipTemplate() bool {
	if o != nil && o.TooltipTemplate != nil {
		return true
	}

	return false
}

// SetTooltipTemplate gets a reference to the given string and assigns it to the TooltipTemplate field.
func (o *BTToleranceSpec3441) SetTooltipTemplate(v string) {
	o.TooltipTemplate = &v
}

// GetUiHints returns the UiHints field value if set, zero value otherwise.
func (o *BTToleranceSpec3441) GetUiHints() []GBTUIHint {
	if o == nil || o.UiHints == nil {
		var ret []GBTUIHint
		return ret
	}
	return o.UiHints
}

// GetUiHintsOk returns a tuple with the UiHints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTToleranceSpec3441) GetUiHintsOk() ([]GBTUIHint, bool) {
	if o == nil || o.UiHints == nil {
		return nil, false
	}
	return o.UiHints, true
}

// HasUiHints returns a boolean if a field has been set.
func (o *BTToleranceSpec3441) HasUiHints() bool {
	if o != nil && o.UiHints != nil {
		return true
	}

	return false
}

// SetUiHints gets a reference to the given []GBTUIHint and assigns it to the UiHints field.
func (o *BTToleranceSpec3441) SetUiHints(v []GBTUIHint) {
	o.UiHints = v
}

func (o BTToleranceSpec3441) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTFeatureSpec129, errBTFeatureSpec129 := json.Marshal(o.BTFeatureSpec129)
	if errBTFeatureSpec129 != nil {
		return []byte{}, errBTFeatureSpec129
	}
	errBTFeatureSpec129 = json.Unmarshal([]byte(serializedBTFeatureSpec129), &toSerialize)
	if errBTFeatureSpec129 != nil {
		return []byte{}, errBTFeatureSpec129
	}
	if o.AdditionalLocalizedStrings != nil {
		toSerialize["additionalLocalizedStrings"] = o.AdditionalLocalizedStrings
	}
	if o.AllParameters != nil {
		toSerialize["allParameters"] = o.AllParameters
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.ComputedPartPropertySpec != nil {
		toSerialize["computedPartPropertySpec"] = o.ComputedPartPropertySpec
	}
	if o.DescriptionImageUri != nil {
		toSerialize["descriptionImageUri"] = o.DescriptionImageUri
	}
	if o.EditingLogic != nil {
		toSerialize["editingLogic"] = o.EditingLogic
	}
	if o.FeatureNameTemplate != nil {
		toSerialize["featureNameTemplate"] = o.FeatureNameTemplate
	}
	if o.FeatureType != nil {
		toSerialize["featureType"] = o.FeatureType
	}
	if o.FeatureTypeDescription != nil {
		toSerialize["featureTypeDescription"] = o.FeatureTypeDescription
	}
	if o.FeatureTypeName != nil {
		toSerialize["featureTypeName"] = o.FeatureTypeName
	}
	if o.FilterSelectors != nil {
		toSerialize["filterSelectors"] = o.FilterSelectors
	}
	if o.FullFeatureType != nil {
		toSerialize["fullFeatureType"] = o.FullFeatureType
	}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	if o.IconUri != nil {
		toSerialize["iconUri"] = o.IconUri
	}
	if o.LanguageVersion != nil {
		toSerialize["languageVersion"] = o.LanguageVersion
	}
	if o.LinkedLocationName != nil {
		toSerialize["linkedLocationName"] = o.LinkedLocationName
	}
	if o.LocalizableName != nil {
		toSerialize["localizableName"] = o.LocalizableName
	}
	if o.LocalizedName != nil {
		toSerialize["localizedName"] = o.LocalizedName
	}
	if o.LocationInfos != nil {
		toSerialize["locationInfos"] = o.LocationInfos
	}
	if o.ManipulatorChangeFunction != nil {
		toSerialize["manipulatorChangeFunction"] = o.ManipulatorChangeFunction
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.NamespaceIncludingEnums != nil {
		toSerialize["namespaceIncludingEnums"] = o.NamespaceIncludingEnums
	}
	if o.NamespaceTheSource != nil {
		toSerialize["namespaceTheSource"] = o.NamespaceTheSource
	}
	if o.ParameterIdToSpec != nil {
		toSerialize["parameterIdToSpec"] = o.ParameterIdToSpec
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.Signature != nil {
		toSerialize["signature"] = o.Signature
	}
	if o.SourceLocation != nil {
		toSerialize["sourceLocation"] = o.SourceLocation
	}
	if o.SourceMicroversionId != nil {
		toSerialize["sourceMicroversionId"] = o.SourceMicroversionId
	}
	if o.StringsToLocalize != nil {
		toSerialize["stringsToLocalize"] = o.StringsToLocalize
	}
	if o.TableSpec != nil {
		toSerialize["tableSpec"] = o.TableSpec
	}
	if o.ToleranceSpec != nil {
		toSerialize["toleranceSpec"] = o.ToleranceSpec
	}
	if o.TooltipTemplate != nil {
		toSerialize["tooltipTemplate"] = o.TooltipTemplate
	}
	if o.UiHints != nil {
		toSerialize["uiHints"] = o.UiHints
	}
	return json.Marshal(toSerialize)
}

type NullableBTToleranceSpec3441 struct {
	value *BTToleranceSpec3441
	isSet bool
}

func (v NullableBTToleranceSpec3441) Get() *BTToleranceSpec3441 {
	return v.value
}

func (v *NullableBTToleranceSpec3441) Set(val *BTToleranceSpec3441) {
	v.value = val
	v.isSet = true
}

func (v NullableBTToleranceSpec3441) IsSet() bool {
	return v.isSet
}

func (v *NullableBTToleranceSpec3441) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTToleranceSpec3441(val *BTToleranceSpec3441) *NullableBTToleranceSpec3441 {
	return &NullableBTToleranceSpec3441{value: val, isSet: true}
}

func (v NullableBTToleranceSpec3441) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTToleranceSpec3441) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
