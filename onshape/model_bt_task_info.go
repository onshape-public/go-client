/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTTaskInfo struct for BTTaskInfo
type BTTaskInfo struct {
	Action       *string            `json:"action,omitempty"`
	ApproverRole *string            `json:"approverRole,omitempty"`
	Comments     []BTCommentInfo    `json:"comments,omitempty"`
	CompanyId    *string            `json:"companyId,omitempty"`
	CreatedAt    *JSONTime          `json:"createdAt,omitempty"`
	Creator      *BTUserSummaryInfo `json:"creator,omitempty"`
	Deletable    *bool              `json:"deletable,omitempty"`
	Description  *string            `json:"description,omitempty"`
	DocumentId   *string            `json:"documentId,omitempty"`
	DocumentName *string            `json:"documentName,omitempty"`
	DocumentType *int32             `json:"documentType,omitempty"`
	Editable     *bool              `json:"editable,omitempty"`
	ElementId    *string            `json:"elementId,omitempty"`
	// URI to fetch complete information of the resource.
	Href *string `json:"href,omitempty"`
	// Id of the resource.
	Id *string `json:"id,omitempty"`
	// Name of the resource.
	Name                         *string                  `json:"name,omitempty"`
	ObjectId                     *string                  `json:"objectId,omitempty"`
	Properties                   []BTMetadataPropertyInfo `json:"properties,omitempty"`
	PublishedWorkflow            *BTPublishedWorkflowInfo `json:"publishedWorkflow,omitempty"`
	ResolvedAt                   *JSONTime                `json:"resolvedAt,omitempty"`
	ResolvedBy                   *BTUserSummaryInfo       `json:"resolvedBy,omitempty"`
	Roles                        []BTTaskRbacRoleInfo     `json:"roles,omitempty"`
	SimpleName                   *string                  `json:"simpleName,omitempty"`
	SourceWorkspaceOrVersionName *string                  `json:"sourceWorkspaceOrVersionName,omitempty"`
	State                        *string                  `json:"state,omitempty"`
	Status                       *int32                   `json:"status,omitempty"`
	TaskItems                    []BTTaskItemInfo         `json:"taskItems,omitempty"`
	TaskType                     *string                  `json:"taskType,omitempty"`
	Teams                        []BTTaskTeamSummaryInfo  `json:"teams,omitempty"`
	Thumbnail                    *BTThumbnailInfo         `json:"thumbnail,omitempty"`
	Transition                   *string                  `json:"transition,omitempty"`
	Users                        []BTTaskUserSummaryInfo  `json:"users,omitempty"`
	VersionId                    *string                  `json:"versionId,omitempty"`
	// URI to visualize the resource in a webclient if applicable.
	ViewRef                *string                   `json:"viewRef,omitempty"`
	WorkflowInfo           *BTWorkflowableObjectInfo `json:"workflowInfo,omitempty"`
	WorkflowableObjectType *int32                    `json:"workflowableObjectType,omitempty"`
	WorkspaceId            *string                   `json:"workspaceId,omitempty"`
}

// NewBTTaskInfo instantiates a new BTTaskInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTTaskInfo() *BTTaskInfo {
	this := BTTaskInfo{}
	return &this
}

// NewBTTaskInfoWithDefaults instantiates a new BTTaskInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTTaskInfoWithDefaults() *BTTaskInfo {
	this := BTTaskInfo{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *BTTaskInfo) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *BTTaskInfo) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *BTTaskInfo) SetAction(v string) {
	o.Action = &v
}

// GetApproverRole returns the ApproverRole field value if set, zero value otherwise.
func (o *BTTaskInfo) GetApproverRole() string {
	if o == nil || o.ApproverRole == nil {
		var ret string
		return ret
	}
	return *o.ApproverRole
}

// GetApproverRoleOk returns a tuple with the ApproverRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetApproverRoleOk() (*string, bool) {
	if o == nil || o.ApproverRole == nil {
		return nil, false
	}
	return o.ApproverRole, true
}

// HasApproverRole returns a boolean if a field has been set.
func (o *BTTaskInfo) HasApproverRole() bool {
	if o != nil && o.ApproverRole != nil {
		return true
	}

	return false
}

// SetApproverRole gets a reference to the given string and assigns it to the ApproverRole field.
func (o *BTTaskInfo) SetApproverRole(v string) {
	o.ApproverRole = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *BTTaskInfo) GetComments() []BTCommentInfo {
	if o == nil || o.Comments == nil {
		var ret []BTCommentInfo
		return ret
	}
	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetCommentsOk() ([]BTCommentInfo, bool) {
	if o == nil || o.Comments == nil {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *BTTaskInfo) HasComments() bool {
	if o != nil && o.Comments != nil {
		return true
	}

	return false
}

// SetComments gets a reference to the given []BTCommentInfo and assigns it to the Comments field.
func (o *BTTaskInfo) SetComments(v []BTCommentInfo) {
	o.Comments = v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *BTTaskInfo) GetCompanyId() string {
	if o == nil || o.CompanyId == nil {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetCompanyIdOk() (*string, bool) {
	if o == nil || o.CompanyId == nil {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *BTTaskInfo) HasCompanyId() bool {
	if o != nil && o.CompanyId != nil {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *BTTaskInfo) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BTTaskInfo) GetCreatedAt() JSONTime {
	if o == nil || o.CreatedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetCreatedAtOk() (*JSONTime, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BTTaskInfo) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given JSONTime and assigns it to the CreatedAt field.
func (o *BTTaskInfo) SetCreatedAt(v JSONTime) {
	o.CreatedAt = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *BTTaskInfo) GetCreator() BTUserSummaryInfo {
	if o == nil || o.Creator == nil {
		var ret BTUserSummaryInfo
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetCreatorOk() (*BTUserSummaryInfo, bool) {
	if o == nil || o.Creator == nil {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *BTTaskInfo) HasCreator() bool {
	if o != nil && o.Creator != nil {
		return true
	}

	return false
}

// SetCreator gets a reference to the given BTUserSummaryInfo and assigns it to the Creator field.
func (o *BTTaskInfo) SetCreator(v BTUserSummaryInfo) {
	o.Creator = &v
}

// GetDeletable returns the Deletable field value if set, zero value otherwise.
func (o *BTTaskInfo) GetDeletable() bool {
	if o == nil || o.Deletable == nil {
		var ret bool
		return ret
	}
	return *o.Deletable
}

// GetDeletableOk returns a tuple with the Deletable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetDeletableOk() (*bool, bool) {
	if o == nil || o.Deletable == nil {
		return nil, false
	}
	return o.Deletable, true
}

// HasDeletable returns a boolean if a field has been set.
func (o *BTTaskInfo) HasDeletable() bool {
	if o != nil && o.Deletable != nil {
		return true
	}

	return false
}

// SetDeletable gets a reference to the given bool and assigns it to the Deletable field.
func (o *BTTaskInfo) SetDeletable(v bool) {
	o.Deletable = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BTTaskInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BTTaskInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BTTaskInfo) SetDescription(v string) {
	o.Description = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *BTTaskInfo) GetDocumentId() string {
	if o == nil || o.DocumentId == nil {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetDocumentIdOk() (*string, bool) {
	if o == nil || o.DocumentId == nil {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *BTTaskInfo) HasDocumentId() bool {
	if o != nil && o.DocumentId != nil {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *BTTaskInfo) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetDocumentName returns the DocumentName field value if set, zero value otherwise.
func (o *BTTaskInfo) GetDocumentName() string {
	if o == nil || o.DocumentName == nil {
		var ret string
		return ret
	}
	return *o.DocumentName
}

// GetDocumentNameOk returns a tuple with the DocumentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetDocumentNameOk() (*string, bool) {
	if o == nil || o.DocumentName == nil {
		return nil, false
	}
	return o.DocumentName, true
}

// HasDocumentName returns a boolean if a field has been set.
func (o *BTTaskInfo) HasDocumentName() bool {
	if o != nil && o.DocumentName != nil {
		return true
	}

	return false
}

// SetDocumentName gets a reference to the given string and assigns it to the DocumentName field.
func (o *BTTaskInfo) SetDocumentName(v string) {
	o.DocumentName = &v
}

// GetDocumentType returns the DocumentType field value if set, zero value otherwise.
func (o *BTTaskInfo) GetDocumentType() int32 {
	if o == nil || o.DocumentType == nil {
		var ret int32
		return ret
	}
	return *o.DocumentType
}

// GetDocumentTypeOk returns a tuple with the DocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetDocumentTypeOk() (*int32, bool) {
	if o == nil || o.DocumentType == nil {
		return nil, false
	}
	return o.DocumentType, true
}

// HasDocumentType returns a boolean if a field has been set.
func (o *BTTaskInfo) HasDocumentType() bool {
	if o != nil && o.DocumentType != nil {
		return true
	}

	return false
}

// SetDocumentType gets a reference to the given int32 and assigns it to the DocumentType field.
func (o *BTTaskInfo) SetDocumentType(v int32) {
	o.DocumentType = &v
}

// GetEditable returns the Editable field value if set, zero value otherwise.
func (o *BTTaskInfo) GetEditable() bool {
	if o == nil || o.Editable == nil {
		var ret bool
		return ret
	}
	return *o.Editable
}

// GetEditableOk returns a tuple with the Editable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetEditableOk() (*bool, bool) {
	if o == nil || o.Editable == nil {
		return nil, false
	}
	return o.Editable, true
}

// HasEditable returns a boolean if a field has been set.
func (o *BTTaskInfo) HasEditable() bool {
	if o != nil && o.Editable != nil {
		return true
	}

	return false
}

// SetEditable gets a reference to the given bool and assigns it to the Editable field.
func (o *BTTaskInfo) SetEditable(v bool) {
	o.Editable = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *BTTaskInfo) GetElementId() string {
	if o == nil || o.ElementId == nil {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetElementIdOk() (*string, bool) {
	if o == nil || o.ElementId == nil {
		return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *BTTaskInfo) HasElementId() bool {
	if o != nil && o.ElementId != nil {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *BTTaskInfo) SetElementId(v string) {
	o.ElementId = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTTaskInfo) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTTaskInfo) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTTaskInfo) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTTaskInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTTaskInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTTaskInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTTaskInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTTaskInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTTaskInfo) SetName(v string) {
	o.Name = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *BTTaskInfo) GetObjectId() string {
	if o == nil || o.ObjectId == nil {
		var ret string
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetObjectIdOk() (*string, bool) {
	if o == nil || o.ObjectId == nil {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *BTTaskInfo) HasObjectId() bool {
	if o != nil && o.ObjectId != nil {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given string and assigns it to the ObjectId field.
func (o *BTTaskInfo) SetObjectId(v string) {
	o.ObjectId = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *BTTaskInfo) GetProperties() []BTMetadataPropertyInfo {
	if o == nil || o.Properties == nil {
		var ret []BTMetadataPropertyInfo
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetPropertiesOk() ([]BTMetadataPropertyInfo, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *BTTaskInfo) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []BTMetadataPropertyInfo and assigns it to the Properties field.
func (o *BTTaskInfo) SetProperties(v []BTMetadataPropertyInfo) {
	o.Properties = v
}

// GetPublishedWorkflow returns the PublishedWorkflow field value if set, zero value otherwise.
func (o *BTTaskInfo) GetPublishedWorkflow() BTPublishedWorkflowInfo {
	if o == nil || o.PublishedWorkflow == nil {
		var ret BTPublishedWorkflowInfo
		return ret
	}
	return *o.PublishedWorkflow
}

// GetPublishedWorkflowOk returns a tuple with the PublishedWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetPublishedWorkflowOk() (*BTPublishedWorkflowInfo, bool) {
	if o == nil || o.PublishedWorkflow == nil {
		return nil, false
	}
	return o.PublishedWorkflow, true
}

// HasPublishedWorkflow returns a boolean if a field has been set.
func (o *BTTaskInfo) HasPublishedWorkflow() bool {
	if o != nil && o.PublishedWorkflow != nil {
		return true
	}

	return false
}

// SetPublishedWorkflow gets a reference to the given BTPublishedWorkflowInfo and assigns it to the PublishedWorkflow field.
func (o *BTTaskInfo) SetPublishedWorkflow(v BTPublishedWorkflowInfo) {
	o.PublishedWorkflow = &v
}

// GetResolvedAt returns the ResolvedAt field value if set, zero value otherwise.
func (o *BTTaskInfo) GetResolvedAt() JSONTime {
	if o == nil || o.ResolvedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.ResolvedAt
}

// GetResolvedAtOk returns a tuple with the ResolvedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetResolvedAtOk() (*JSONTime, bool) {
	if o == nil || o.ResolvedAt == nil {
		return nil, false
	}
	return o.ResolvedAt, true
}

// HasResolvedAt returns a boolean if a field has been set.
func (o *BTTaskInfo) HasResolvedAt() bool {
	if o != nil && o.ResolvedAt != nil {
		return true
	}

	return false
}

// SetResolvedAt gets a reference to the given JSONTime and assigns it to the ResolvedAt field.
func (o *BTTaskInfo) SetResolvedAt(v JSONTime) {
	o.ResolvedAt = &v
}

// GetResolvedBy returns the ResolvedBy field value if set, zero value otherwise.
func (o *BTTaskInfo) GetResolvedBy() BTUserSummaryInfo {
	if o == nil || o.ResolvedBy == nil {
		var ret BTUserSummaryInfo
		return ret
	}
	return *o.ResolvedBy
}

// GetResolvedByOk returns a tuple with the ResolvedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetResolvedByOk() (*BTUserSummaryInfo, bool) {
	if o == nil || o.ResolvedBy == nil {
		return nil, false
	}
	return o.ResolvedBy, true
}

// HasResolvedBy returns a boolean if a field has been set.
func (o *BTTaskInfo) HasResolvedBy() bool {
	if o != nil && o.ResolvedBy != nil {
		return true
	}

	return false
}

// SetResolvedBy gets a reference to the given BTUserSummaryInfo and assigns it to the ResolvedBy field.
func (o *BTTaskInfo) SetResolvedBy(v BTUserSummaryInfo) {
	o.ResolvedBy = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *BTTaskInfo) GetRoles() []BTTaskRbacRoleInfo {
	if o == nil || o.Roles == nil {
		var ret []BTTaskRbacRoleInfo
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetRolesOk() ([]BTTaskRbacRoleInfo, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *BTTaskInfo) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []BTTaskRbacRoleInfo and assigns it to the Roles field.
func (o *BTTaskInfo) SetRoles(v []BTTaskRbacRoleInfo) {
	o.Roles = v
}

// GetSimpleName returns the SimpleName field value if set, zero value otherwise.
func (o *BTTaskInfo) GetSimpleName() string {
	if o == nil || o.SimpleName == nil {
		var ret string
		return ret
	}
	return *o.SimpleName
}

// GetSimpleNameOk returns a tuple with the SimpleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetSimpleNameOk() (*string, bool) {
	if o == nil || o.SimpleName == nil {
		return nil, false
	}
	return o.SimpleName, true
}

// HasSimpleName returns a boolean if a field has been set.
func (o *BTTaskInfo) HasSimpleName() bool {
	if o != nil && o.SimpleName != nil {
		return true
	}

	return false
}

// SetSimpleName gets a reference to the given string and assigns it to the SimpleName field.
func (o *BTTaskInfo) SetSimpleName(v string) {
	o.SimpleName = &v
}

// GetSourceWorkspaceOrVersionName returns the SourceWorkspaceOrVersionName field value if set, zero value otherwise.
func (o *BTTaskInfo) GetSourceWorkspaceOrVersionName() string {
	if o == nil || o.SourceWorkspaceOrVersionName == nil {
		var ret string
		return ret
	}
	return *o.SourceWorkspaceOrVersionName
}

// GetSourceWorkspaceOrVersionNameOk returns a tuple with the SourceWorkspaceOrVersionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetSourceWorkspaceOrVersionNameOk() (*string, bool) {
	if o == nil || o.SourceWorkspaceOrVersionName == nil {
		return nil, false
	}
	return o.SourceWorkspaceOrVersionName, true
}

// HasSourceWorkspaceOrVersionName returns a boolean if a field has been set.
func (o *BTTaskInfo) HasSourceWorkspaceOrVersionName() bool {
	if o != nil && o.SourceWorkspaceOrVersionName != nil {
		return true
	}

	return false
}

// SetSourceWorkspaceOrVersionName gets a reference to the given string and assigns it to the SourceWorkspaceOrVersionName field.
func (o *BTTaskInfo) SetSourceWorkspaceOrVersionName(v string) {
	o.SourceWorkspaceOrVersionName = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *BTTaskInfo) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *BTTaskInfo) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *BTTaskInfo) SetState(v string) {
	o.State = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BTTaskInfo) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BTTaskInfo) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *BTTaskInfo) SetStatus(v int32) {
	o.Status = &v
}

// GetTaskItems returns the TaskItems field value if set, zero value otherwise.
func (o *BTTaskInfo) GetTaskItems() []BTTaskItemInfo {
	if o == nil || o.TaskItems == nil {
		var ret []BTTaskItemInfo
		return ret
	}
	return o.TaskItems
}

// GetTaskItemsOk returns a tuple with the TaskItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetTaskItemsOk() ([]BTTaskItemInfo, bool) {
	if o == nil || o.TaskItems == nil {
		return nil, false
	}
	return o.TaskItems, true
}

// HasTaskItems returns a boolean if a field has been set.
func (o *BTTaskInfo) HasTaskItems() bool {
	if o != nil && o.TaskItems != nil {
		return true
	}

	return false
}

// SetTaskItems gets a reference to the given []BTTaskItemInfo and assigns it to the TaskItems field.
func (o *BTTaskInfo) SetTaskItems(v []BTTaskItemInfo) {
	o.TaskItems = v
}

// GetTaskType returns the TaskType field value if set, zero value otherwise.
func (o *BTTaskInfo) GetTaskType() string {
	if o == nil || o.TaskType == nil {
		var ret string
		return ret
	}
	return *o.TaskType
}

// GetTaskTypeOk returns a tuple with the TaskType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetTaskTypeOk() (*string, bool) {
	if o == nil || o.TaskType == nil {
		return nil, false
	}
	return o.TaskType, true
}

// HasTaskType returns a boolean if a field has been set.
func (o *BTTaskInfo) HasTaskType() bool {
	if o != nil && o.TaskType != nil {
		return true
	}

	return false
}

// SetTaskType gets a reference to the given string and assigns it to the TaskType field.
func (o *BTTaskInfo) SetTaskType(v string) {
	o.TaskType = &v
}

// GetTeams returns the Teams field value if set, zero value otherwise.
func (o *BTTaskInfo) GetTeams() []BTTaskTeamSummaryInfo {
	if o == nil || o.Teams == nil {
		var ret []BTTaskTeamSummaryInfo
		return ret
	}
	return o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetTeamsOk() ([]BTTaskTeamSummaryInfo, bool) {
	if o == nil || o.Teams == nil {
		return nil, false
	}
	return o.Teams, true
}

// HasTeams returns a boolean if a field has been set.
func (o *BTTaskInfo) HasTeams() bool {
	if o != nil && o.Teams != nil {
		return true
	}

	return false
}

// SetTeams gets a reference to the given []BTTaskTeamSummaryInfo and assigns it to the Teams field.
func (o *BTTaskInfo) SetTeams(v []BTTaskTeamSummaryInfo) {
	o.Teams = v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise.
func (o *BTTaskInfo) GetThumbnail() BTThumbnailInfo {
	if o == nil || o.Thumbnail == nil {
		var ret BTThumbnailInfo
		return ret
	}
	return *o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetThumbnailOk() (*BTThumbnailInfo, bool) {
	if o == nil || o.Thumbnail == nil {
		return nil, false
	}
	return o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *BTTaskInfo) HasThumbnail() bool {
	if o != nil && o.Thumbnail != nil {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given BTThumbnailInfo and assigns it to the Thumbnail field.
func (o *BTTaskInfo) SetThumbnail(v BTThumbnailInfo) {
	o.Thumbnail = &v
}

// GetTransition returns the Transition field value if set, zero value otherwise.
func (o *BTTaskInfo) GetTransition() string {
	if o == nil || o.Transition == nil {
		var ret string
		return ret
	}
	return *o.Transition
}

// GetTransitionOk returns a tuple with the Transition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetTransitionOk() (*string, bool) {
	if o == nil || o.Transition == nil {
		return nil, false
	}
	return o.Transition, true
}

// HasTransition returns a boolean if a field has been set.
func (o *BTTaskInfo) HasTransition() bool {
	if o != nil && o.Transition != nil {
		return true
	}

	return false
}

// SetTransition gets a reference to the given string and assigns it to the Transition field.
func (o *BTTaskInfo) SetTransition(v string) {
	o.Transition = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *BTTaskInfo) GetUsers() []BTTaskUserSummaryInfo {
	if o == nil || o.Users == nil {
		var ret []BTTaskUserSummaryInfo
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetUsersOk() ([]BTTaskUserSummaryInfo, bool) {
	if o == nil || o.Users == nil {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *BTTaskInfo) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []BTTaskUserSummaryInfo and assigns it to the Users field.
func (o *BTTaskInfo) SetUsers(v []BTTaskUserSummaryInfo) {
	o.Users = v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *BTTaskInfo) GetVersionId() string {
	if o == nil || o.VersionId == nil {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetVersionIdOk() (*string, bool) {
	if o == nil || o.VersionId == nil {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *BTTaskInfo) HasVersionId() bool {
	if o != nil && o.VersionId != nil {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *BTTaskInfo) SetVersionId(v string) {
	o.VersionId = &v
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *BTTaskInfo) GetViewRef() string {
	if o == nil || o.ViewRef == nil {
		var ret string
		return ret
	}
	return *o.ViewRef
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetViewRefOk() (*string, bool) {
	if o == nil || o.ViewRef == nil {
		return nil, false
	}
	return o.ViewRef, true
}

// HasViewRef returns a boolean if a field has been set.
func (o *BTTaskInfo) HasViewRef() bool {
	if o != nil && o.ViewRef != nil {
		return true
	}

	return false
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *BTTaskInfo) SetViewRef(v string) {
	o.ViewRef = &v
}

// GetWorkflowInfo returns the WorkflowInfo field value if set, zero value otherwise.
func (o *BTTaskInfo) GetWorkflowInfo() BTWorkflowableObjectInfo {
	if o == nil || o.WorkflowInfo == nil {
		var ret BTWorkflowableObjectInfo
		return ret
	}
	return *o.WorkflowInfo
}

// GetWorkflowInfoOk returns a tuple with the WorkflowInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetWorkflowInfoOk() (*BTWorkflowableObjectInfo, bool) {
	if o == nil || o.WorkflowInfo == nil {
		return nil, false
	}
	return o.WorkflowInfo, true
}

// HasWorkflowInfo returns a boolean if a field has been set.
func (o *BTTaskInfo) HasWorkflowInfo() bool {
	if o != nil && o.WorkflowInfo != nil {
		return true
	}

	return false
}

// SetWorkflowInfo gets a reference to the given BTWorkflowableObjectInfo and assigns it to the WorkflowInfo field.
func (o *BTTaskInfo) SetWorkflowInfo(v BTWorkflowableObjectInfo) {
	o.WorkflowInfo = &v
}

// GetWorkflowableObjectType returns the WorkflowableObjectType field value if set, zero value otherwise.
func (o *BTTaskInfo) GetWorkflowableObjectType() int32 {
	if o == nil || o.WorkflowableObjectType == nil {
		var ret int32
		return ret
	}
	return *o.WorkflowableObjectType
}

// GetWorkflowableObjectTypeOk returns a tuple with the WorkflowableObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetWorkflowableObjectTypeOk() (*int32, bool) {
	if o == nil || o.WorkflowableObjectType == nil {
		return nil, false
	}
	return o.WorkflowableObjectType, true
}

// HasWorkflowableObjectType returns a boolean if a field has been set.
func (o *BTTaskInfo) HasWorkflowableObjectType() bool {
	if o != nil && o.WorkflowableObjectType != nil {
		return true
	}

	return false
}

// SetWorkflowableObjectType gets a reference to the given int32 and assigns it to the WorkflowableObjectType field.
func (o *BTTaskInfo) SetWorkflowableObjectType(v int32) {
	o.WorkflowableObjectType = &v
}

// GetWorkspaceId returns the WorkspaceId field value if set, zero value otherwise.
func (o *BTTaskInfo) GetWorkspaceId() string {
	if o == nil || o.WorkspaceId == nil {
		var ret string
		return ret
	}
	return *o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskInfo) GetWorkspaceIdOk() (*string, bool) {
	if o == nil || o.WorkspaceId == nil {
		return nil, false
	}
	return o.WorkspaceId, true
}

// HasWorkspaceId returns a boolean if a field has been set.
func (o *BTTaskInfo) HasWorkspaceId() bool {
	if o != nil && o.WorkspaceId != nil {
		return true
	}

	return false
}

// SetWorkspaceId gets a reference to the given string and assigns it to the WorkspaceId field.
func (o *BTTaskInfo) SetWorkspaceId(v string) {
	o.WorkspaceId = &v
}

func (o BTTaskInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.ApproverRole != nil {
		toSerialize["approverRole"] = o.ApproverRole
	}
	if o.Comments != nil {
		toSerialize["comments"] = o.Comments
	}
	if o.CompanyId != nil {
		toSerialize["companyId"] = o.CompanyId
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Creator != nil {
		toSerialize["creator"] = o.Creator
	}
	if o.Deletable != nil {
		toSerialize["deletable"] = o.Deletable
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DocumentId != nil {
		toSerialize["documentId"] = o.DocumentId
	}
	if o.DocumentName != nil {
		toSerialize["documentName"] = o.DocumentName
	}
	if o.DocumentType != nil {
		toSerialize["documentType"] = o.DocumentType
	}
	if o.Editable != nil {
		toSerialize["editable"] = o.Editable
	}
	if o.ElementId != nil {
		toSerialize["elementId"] = o.ElementId
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ObjectId != nil {
		toSerialize["objectId"] = o.ObjectId
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.PublishedWorkflow != nil {
		toSerialize["publishedWorkflow"] = o.PublishedWorkflow
	}
	if o.ResolvedAt != nil {
		toSerialize["resolvedAt"] = o.ResolvedAt
	}
	if o.ResolvedBy != nil {
		toSerialize["resolvedBy"] = o.ResolvedBy
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	if o.SimpleName != nil {
		toSerialize["simpleName"] = o.SimpleName
	}
	if o.SourceWorkspaceOrVersionName != nil {
		toSerialize["sourceWorkspaceOrVersionName"] = o.SourceWorkspaceOrVersionName
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.TaskItems != nil {
		toSerialize["taskItems"] = o.TaskItems
	}
	if o.TaskType != nil {
		toSerialize["taskType"] = o.TaskType
	}
	if o.Teams != nil {
		toSerialize["teams"] = o.Teams
	}
	if o.Thumbnail != nil {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	if o.Transition != nil {
		toSerialize["transition"] = o.Transition
	}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	if o.VersionId != nil {
		toSerialize["versionId"] = o.VersionId
	}
	if o.ViewRef != nil {
		toSerialize["viewRef"] = o.ViewRef
	}
	if o.WorkflowInfo != nil {
		toSerialize["workflowInfo"] = o.WorkflowInfo
	}
	if o.WorkflowableObjectType != nil {
		toSerialize["workflowableObjectType"] = o.WorkflowableObjectType
	}
	if o.WorkspaceId != nil {
		toSerialize["workspaceId"] = o.WorkspaceId
	}
	return json.Marshal(toSerialize)
}

type NullableBTTaskInfo struct {
	value *BTTaskInfo
	isSet bool
}

func (v NullableBTTaskInfo) Get() *BTTaskInfo {
	return v.value
}

func (v *NullableBTTaskInfo) Set(val *BTTaskInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTTaskInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTTaskInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTTaskInfo(val *BTTaskInfo) *NullableBTTaskInfo {
	return &NullableBTTaskInfo{value: val, isSet: true}
}

func (v NullableBTTaskInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTTaskInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
