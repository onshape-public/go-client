/*
Onshape REST API

The Onshape REST API consumed by all client. # Authorization The simplest way to authorize and enable the **Try it out** functionality is to sign in to Onshape and use the current session. The **Authorize** button enables other authorization techniques. To ensure the current session isn't used when trying other authentication techniques, make sure to remove the Onshape cookie as per the instructions for your particular browser. Alternatively, a private or incognito window may be used. Here's [how to remove a specific cookie on Chrome](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site). - **Current Session** authorization is enabled by default if the browser is already signed in to [Onshape](/). - **OAuth2** authorization uses an Onshape OAuth2 app created on the [Onshape Developer Portal](https://dev-portal.onshape.com/oauthApps). The redirect URL field should include `https://cad.onshape.com/glassworks/explorer/oauth2-redirect.html`. - **API Key** authorization using basic authentication is also available. The keys can be generated in the [Onshape Developer Portal](https://dev-portal.onshape.com/keys). In the authentication dialog, enter the access key in the `Username` field, and enter the secret key in the `Password` field. Basic authentication should only be used during the development process since sharing API Keys provides the same level of access as a username and password.

API version: 1.171.24257-687de06de652
Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTDiscount struct for BTDiscount
type BTDiscount struct {
	AccountBalance    *int32                            `json:"accountBalance,omitempty"`
	AmountOff         *int32                            `json:"amountOff,omitempty"`
	AmountOffCurrency *string                           `json:"amountOffCurrency,omitempty"`
	CouponType        *int32                            `json:"couponType,omitempty"`
	CouponValidMonths *int32                            `json:"couponValidMonths,omitempty"`
	CreatedAt         *JSONTime                         `json:"createdAt,omitempty"`
	CreatedBy         *string                           `json:"createdBy,omitempty"`
	Description       *string                           `json:"description,omitempty"`
	ExpiresAt         *JSONTime                         `json:"expiresAt,omitempty"`
	Id                *BTDiscountOwnerIdPlanId          `json:"id,omitempty"`
	Metadata          map[string]map[string]interface{} `json:"metadata,omitempty"`
	ModifiedAt        *JSONTime                         `json:"modifiedAt,omitempty"`
	ModifiedBy        *string                           `json:"modifiedBy,omitempty"`
	Name              *string                           `json:"name,omitempty"`
	New               *bool                             `json:"new,omitempty"`
	PercentOff        *int32                            `json:"percentOff,omitempty"`
	TrialEndDate      *string                           `json:"trialEndDate,omitempty"`
	UsedAt            *JSONTime                         `json:"usedAt,omitempty"`
}

// NewBTDiscount instantiates a new BTDiscount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTDiscount() *BTDiscount {
	this := BTDiscount{}
	return &this
}

// NewBTDiscountWithDefaults instantiates a new BTDiscount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTDiscountWithDefaults() *BTDiscount {
	this := BTDiscount{}
	return &this
}

// GetAccountBalance returns the AccountBalance field value if set, zero value otherwise.
func (o *BTDiscount) GetAccountBalance() int32 {
	if o == nil || o.AccountBalance == nil {
		var ret int32
		return ret
	}
	return *o.AccountBalance
}

// GetAccountBalanceOk returns a tuple with the AccountBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetAccountBalanceOk() (*int32, bool) {
	if o == nil || o.AccountBalance == nil {
		return nil, false
	}
	return o.AccountBalance, true
}

// HasAccountBalance returns a boolean if a field has been set.
func (o *BTDiscount) HasAccountBalance() bool {
	if o != nil && o.AccountBalance != nil {
		return true
	}

	return false
}

// SetAccountBalance gets a reference to the given int32 and assigns it to the AccountBalance field.
func (o *BTDiscount) SetAccountBalance(v int32) {
	o.AccountBalance = &v
}

// GetAmountOff returns the AmountOff field value if set, zero value otherwise.
func (o *BTDiscount) GetAmountOff() int32 {
	if o == nil || o.AmountOff == nil {
		var ret int32
		return ret
	}
	return *o.AmountOff
}

// GetAmountOffOk returns a tuple with the AmountOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetAmountOffOk() (*int32, bool) {
	if o == nil || o.AmountOff == nil {
		return nil, false
	}
	return o.AmountOff, true
}

// HasAmountOff returns a boolean if a field has been set.
func (o *BTDiscount) HasAmountOff() bool {
	if o != nil && o.AmountOff != nil {
		return true
	}

	return false
}

// SetAmountOff gets a reference to the given int32 and assigns it to the AmountOff field.
func (o *BTDiscount) SetAmountOff(v int32) {
	o.AmountOff = &v
}

// GetAmountOffCurrency returns the AmountOffCurrency field value if set, zero value otherwise.
func (o *BTDiscount) GetAmountOffCurrency() string {
	if o == nil || o.AmountOffCurrency == nil {
		var ret string
		return ret
	}
	return *o.AmountOffCurrency
}

// GetAmountOffCurrencyOk returns a tuple with the AmountOffCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetAmountOffCurrencyOk() (*string, bool) {
	if o == nil || o.AmountOffCurrency == nil {
		return nil, false
	}
	return o.AmountOffCurrency, true
}

// HasAmountOffCurrency returns a boolean if a field has been set.
func (o *BTDiscount) HasAmountOffCurrency() bool {
	if o != nil && o.AmountOffCurrency != nil {
		return true
	}

	return false
}

// SetAmountOffCurrency gets a reference to the given string and assigns it to the AmountOffCurrency field.
func (o *BTDiscount) SetAmountOffCurrency(v string) {
	o.AmountOffCurrency = &v
}

// GetCouponType returns the CouponType field value if set, zero value otherwise.
func (o *BTDiscount) GetCouponType() int32 {
	if o == nil || o.CouponType == nil {
		var ret int32
		return ret
	}
	return *o.CouponType
}

// GetCouponTypeOk returns a tuple with the CouponType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetCouponTypeOk() (*int32, bool) {
	if o == nil || o.CouponType == nil {
		return nil, false
	}
	return o.CouponType, true
}

// HasCouponType returns a boolean if a field has been set.
func (o *BTDiscount) HasCouponType() bool {
	if o != nil && o.CouponType != nil {
		return true
	}

	return false
}

// SetCouponType gets a reference to the given int32 and assigns it to the CouponType field.
func (o *BTDiscount) SetCouponType(v int32) {
	o.CouponType = &v
}

// GetCouponValidMonths returns the CouponValidMonths field value if set, zero value otherwise.
func (o *BTDiscount) GetCouponValidMonths() int32 {
	if o == nil || o.CouponValidMonths == nil {
		var ret int32
		return ret
	}
	return *o.CouponValidMonths
}

// GetCouponValidMonthsOk returns a tuple with the CouponValidMonths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetCouponValidMonthsOk() (*int32, bool) {
	if o == nil || o.CouponValidMonths == nil {
		return nil, false
	}
	return o.CouponValidMonths, true
}

// HasCouponValidMonths returns a boolean if a field has been set.
func (o *BTDiscount) HasCouponValidMonths() bool {
	if o != nil && o.CouponValidMonths != nil {
		return true
	}

	return false
}

// SetCouponValidMonths gets a reference to the given int32 and assigns it to the CouponValidMonths field.
func (o *BTDiscount) SetCouponValidMonths(v int32) {
	o.CouponValidMonths = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BTDiscount) GetCreatedAt() JSONTime {
	if o == nil || o.CreatedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetCreatedAtOk() (*JSONTime, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BTDiscount) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given JSONTime and assigns it to the CreatedAt field.
func (o *BTDiscount) SetCreatedAt(v JSONTime) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *BTDiscount) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *BTDiscount) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *BTDiscount) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BTDiscount) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BTDiscount) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BTDiscount) SetDescription(v string) {
	o.Description = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *BTDiscount) GetExpiresAt() JSONTime {
	if o == nil || o.ExpiresAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetExpiresAtOk() (*JSONTime, bool) {
	if o == nil || o.ExpiresAt == nil {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *BTDiscount) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt != nil {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given JSONTime and assigns it to the ExpiresAt field.
func (o *BTDiscount) SetExpiresAt(v JSONTime) {
	o.ExpiresAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTDiscount) GetId() BTDiscountOwnerIdPlanId {
	if o == nil || o.Id == nil {
		var ret BTDiscountOwnerIdPlanId
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetIdOk() (*BTDiscountOwnerIdPlanId, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTDiscount) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given BTDiscountOwnerIdPlanId and assigns it to the Id field.
func (o *BTDiscount) SetId(v BTDiscountOwnerIdPlanId) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *BTDiscount) GetMetadata() map[string]map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetMetadataOk() (map[string]map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *BTDiscount) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]map[string]interface{} and assigns it to the Metadata field.
func (o *BTDiscount) SetMetadata(v map[string]map[string]interface{}) {
	o.Metadata = v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *BTDiscount) GetModifiedAt() JSONTime {
	if o == nil || o.ModifiedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetModifiedAtOk() (*JSONTime, bool) {
	if o == nil || o.ModifiedAt == nil {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *BTDiscount) HasModifiedAt() bool {
	if o != nil && o.ModifiedAt != nil {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given JSONTime and assigns it to the ModifiedAt field.
func (o *BTDiscount) SetModifiedAt(v JSONTime) {
	o.ModifiedAt = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *BTDiscount) GetModifiedBy() string {
	if o == nil || o.ModifiedBy == nil {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetModifiedByOk() (*string, bool) {
	if o == nil || o.ModifiedBy == nil {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *BTDiscount) HasModifiedBy() bool {
	if o != nil && o.ModifiedBy != nil {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *BTDiscount) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTDiscount) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTDiscount) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTDiscount) SetName(v string) {
	o.Name = &v
}

// GetNew returns the New field value if set, zero value otherwise.
func (o *BTDiscount) GetNew() bool {
	if o == nil || o.New == nil {
		var ret bool
		return ret
	}
	return *o.New
}

// GetNewOk returns a tuple with the New field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetNewOk() (*bool, bool) {
	if o == nil || o.New == nil {
		return nil, false
	}
	return o.New, true
}

// HasNew returns a boolean if a field has been set.
func (o *BTDiscount) HasNew() bool {
	if o != nil && o.New != nil {
		return true
	}

	return false
}

// SetNew gets a reference to the given bool and assigns it to the New field.
func (o *BTDiscount) SetNew(v bool) {
	o.New = &v
}

// GetPercentOff returns the PercentOff field value if set, zero value otherwise.
func (o *BTDiscount) GetPercentOff() int32 {
	if o == nil || o.PercentOff == nil {
		var ret int32
		return ret
	}
	return *o.PercentOff
}

// GetPercentOffOk returns a tuple with the PercentOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetPercentOffOk() (*int32, bool) {
	if o == nil || o.PercentOff == nil {
		return nil, false
	}
	return o.PercentOff, true
}

// HasPercentOff returns a boolean if a field has been set.
func (o *BTDiscount) HasPercentOff() bool {
	if o != nil && o.PercentOff != nil {
		return true
	}

	return false
}

// SetPercentOff gets a reference to the given int32 and assigns it to the PercentOff field.
func (o *BTDiscount) SetPercentOff(v int32) {
	o.PercentOff = &v
}

// GetTrialEndDate returns the TrialEndDate field value if set, zero value otherwise.
func (o *BTDiscount) GetTrialEndDate() string {
	if o == nil || o.TrialEndDate == nil {
		var ret string
		return ret
	}
	return *o.TrialEndDate
}

// GetTrialEndDateOk returns a tuple with the TrialEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetTrialEndDateOk() (*string, bool) {
	if o == nil || o.TrialEndDate == nil {
		return nil, false
	}
	return o.TrialEndDate, true
}

// HasTrialEndDate returns a boolean if a field has been set.
func (o *BTDiscount) HasTrialEndDate() bool {
	if o != nil && o.TrialEndDate != nil {
		return true
	}

	return false
}

// SetTrialEndDate gets a reference to the given string and assigns it to the TrialEndDate field.
func (o *BTDiscount) SetTrialEndDate(v string) {
	o.TrialEndDate = &v
}

// GetUsedAt returns the UsedAt field value if set, zero value otherwise.
func (o *BTDiscount) GetUsedAt() JSONTime {
	if o == nil || o.UsedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.UsedAt
}

// GetUsedAtOk returns a tuple with the UsedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDiscount) GetUsedAtOk() (*JSONTime, bool) {
	if o == nil || o.UsedAt == nil {
		return nil, false
	}
	return o.UsedAt, true
}

// HasUsedAt returns a boolean if a field has been set.
func (o *BTDiscount) HasUsedAt() bool {
	if o != nil && o.UsedAt != nil {
		return true
	}

	return false
}

// SetUsedAt gets a reference to the given JSONTime and assigns it to the UsedAt field.
func (o *BTDiscount) SetUsedAt(v JSONTime) {
	o.UsedAt = &v
}

func (o BTDiscount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountBalance != nil {
		toSerialize["accountBalance"] = o.AccountBalance
	}
	if o.AmountOff != nil {
		toSerialize["amountOff"] = o.AmountOff
	}
	if o.AmountOffCurrency != nil {
		toSerialize["amountOffCurrency"] = o.AmountOffCurrency
	}
	if o.CouponType != nil {
		toSerialize["couponType"] = o.CouponType
	}
	if o.CouponValidMonths != nil {
		toSerialize["couponValidMonths"] = o.CouponValidMonths
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ExpiresAt != nil {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.ModifiedAt != nil {
		toSerialize["modifiedAt"] = o.ModifiedAt
	}
	if o.ModifiedBy != nil {
		toSerialize["modifiedBy"] = o.ModifiedBy
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.New != nil {
		toSerialize["new"] = o.New
	}
	if o.PercentOff != nil {
		toSerialize["percentOff"] = o.PercentOff
	}
	if o.TrialEndDate != nil {
		toSerialize["trialEndDate"] = o.TrialEndDate
	}
	if o.UsedAt != nil {
		toSerialize["usedAt"] = o.UsedAt
	}
	return json.Marshal(toSerialize)
}

type NullableBTDiscount struct {
	value *BTDiscount
	isSet bool
}

func (v NullableBTDiscount) Get() *BTDiscount {
	return v.value
}

func (v *NullableBTDiscount) Set(val *BTDiscount) {
	v.value = val
	v.isSet = true
}

func (v NullableBTDiscount) IsSet() bool {
	return v.isSet
}

func (v *NullableBTDiscount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTDiscount(val *BTDiscount) *NullableBTDiscount {
	return &NullableBTDiscount{value: val, isSet: true}
}

func (v NullableBTDiscount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTDiscount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
