/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTVariableTableRowMetadata3912 struct for BTVariableTableRowMetadata3912
type BTVariableTableRowMetadata3912 struct {
	BTTableBaseRowMetadata3181
	BtType                   *string                            `json:"btType,omitempty"`
	CrossHighlightDataIfAny  *BTTableBaseCrossHighlightData2609 `json:"crossHighlightDataIfAny,omitempty"`
	CrossHighlightData       *BTTableBaseCrossHighlightData2609 `json:"crossHighlightData,omitempty"`
	Info                     *string                            `json:"info,omitempty"`
	IsFullyEditable          *bool                              `json:"isFullyEditable,omitempty"`
	IsRecursiveImport        *bool                              `json:"isRecursiveImport,omitempty"`
	LastWritingFeatureNodeId *string                            `json:"lastWritingFeatureNodeId,omitempty"`
	// Type of JSON object.
	BtType *string `json:"btType,omitempty"`
}

// NewBTVariableTableRowMetadata3912 instantiates a new BTVariableTableRowMetadata3912 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTVariableTableRowMetadata3912() *BTVariableTableRowMetadata3912 {
	this := BTVariableTableRowMetadata3912{}
	return &this
}

// NewBTVariableTableRowMetadata3912WithDefaults instantiates a new BTVariableTableRowMetadata3912 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTVariableTableRowMetadata3912WithDefaults() *BTVariableTableRowMetadata3912 {
	this := BTVariableTableRowMetadata3912{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTVariableTableRowMetadata3912) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTVariableTableRowMetadata3912) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTVariableTableRowMetadata3912) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTVariableTableRowMetadata3912) SetBtType(v string) {
	o.BtType = &v
}

// GetCrossHighlightDataIfAny returns the CrossHighlightDataIfAny field value if set, zero value otherwise.
func (o *BTVariableTableRowMetadata3912) GetCrossHighlightDataIfAny() BTTableBaseCrossHighlightData2609 {
	if o == nil || o.CrossHighlightDataIfAny == nil {
		var ret BTTableBaseCrossHighlightData2609
		return ret
	}
	return *o.CrossHighlightDataIfAny
}

// GetCrossHighlightDataIfAnyOk returns a tuple with the CrossHighlightDataIfAny field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTVariableTableRowMetadata3912) GetCrossHighlightDataIfAnyOk() (*BTTableBaseCrossHighlightData2609, bool) {
	if o == nil || o.CrossHighlightDataIfAny == nil {
		return nil, false
	}
	return o.CrossHighlightDataIfAny, true
}

// HasCrossHighlightDataIfAny returns a boolean if a field has been set.
func (o *BTVariableTableRowMetadata3912) HasCrossHighlightDataIfAny() bool {
	if o != nil && o.CrossHighlightDataIfAny != nil {
		return true
	}

	return false
}

// SetCrossHighlightDataIfAny gets a reference to the given BTTableBaseCrossHighlightData2609 and assigns it to the CrossHighlightDataIfAny field.
func (o *BTVariableTableRowMetadata3912) SetCrossHighlightDataIfAny(v BTTableBaseCrossHighlightData2609) {
	o.CrossHighlightDataIfAny = &v
}

// GetCrossHighlightData returns the CrossHighlightData field value if set, zero value otherwise.
func (o *BTVariableTableRowMetadata3912) GetCrossHighlightData() BTTableBaseCrossHighlightData2609 {
	if o == nil || o.CrossHighlightData == nil {
		var ret BTTableBaseCrossHighlightData2609
		return ret
	}
	return *o.CrossHighlightData
}

// GetCrossHighlightDataOk returns a tuple with the CrossHighlightData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTVariableTableRowMetadata3912) GetCrossHighlightDataOk() (*BTTableBaseCrossHighlightData2609, bool) {
	if o == nil || o.CrossHighlightData == nil {
		return nil, false
	}
	return o.CrossHighlightData, true
}

// HasCrossHighlightData returns a boolean if a field has been set.
func (o *BTVariableTableRowMetadata3912) HasCrossHighlightData() bool {
	if o != nil && o.CrossHighlightData != nil {
		return true
	}

	return false
}

// SetCrossHighlightData gets a reference to the given BTTableBaseCrossHighlightData2609 and assigns it to the CrossHighlightData field.
func (o *BTVariableTableRowMetadata3912) SetCrossHighlightData(v BTTableBaseCrossHighlightData2609) {
	o.CrossHighlightData = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *BTVariableTableRowMetadata3912) GetInfo() string {
	if o == nil || o.Info == nil {
		var ret string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTVariableTableRowMetadata3912) GetInfoOk() (*string, bool) {
	if o == nil || o.Info == nil {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *BTVariableTableRowMetadata3912) HasInfo() bool {
	if o != nil && o.Info != nil {
		return true
	}

	return false
}

// SetInfo gets a reference to the given string and assigns it to the Info field.
func (o *BTVariableTableRowMetadata3912) SetInfo(v string) {
	o.Info = &v
}

// GetIsFullyEditable returns the IsFullyEditable field value if set, zero value otherwise.
func (o *BTVariableTableRowMetadata3912) GetIsFullyEditable() bool {
	if o == nil || o.IsFullyEditable == nil {
		var ret bool
		return ret
	}
	return *o.IsFullyEditable
}

// GetIsFullyEditableOk returns a tuple with the IsFullyEditable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTVariableTableRowMetadata3912) GetIsFullyEditableOk() (*bool, bool) {
	if o == nil || o.IsFullyEditable == nil {
		return nil, false
	}
	return o.IsFullyEditable, true
}

// HasIsFullyEditable returns a boolean if a field has been set.
func (o *BTVariableTableRowMetadata3912) HasIsFullyEditable() bool {
	if o != nil && o.IsFullyEditable != nil {
		return true
	}

	return false
}

// SetIsFullyEditable gets a reference to the given bool and assigns it to the IsFullyEditable field.
func (o *BTVariableTableRowMetadata3912) SetIsFullyEditable(v bool) {
	o.IsFullyEditable = &v
}

// GetIsRecursiveImport returns the IsRecursiveImport field value if set, zero value otherwise.
func (o *BTVariableTableRowMetadata3912) GetIsRecursiveImport() bool {
	if o == nil || o.IsRecursiveImport == nil {
		var ret bool
		return ret
	}
	return *o.IsRecursiveImport
}

// GetIsRecursiveImportOk returns a tuple with the IsRecursiveImport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTVariableTableRowMetadata3912) GetIsRecursiveImportOk() (*bool, bool) {
	if o == nil || o.IsRecursiveImport == nil {
		return nil, false
	}
	return o.IsRecursiveImport, true
}

// HasIsRecursiveImport returns a boolean if a field has been set.
func (o *BTVariableTableRowMetadata3912) HasIsRecursiveImport() bool {
	if o != nil && o.IsRecursiveImport != nil {
		return true
	}

	return false
}

// SetIsRecursiveImport gets a reference to the given bool and assigns it to the IsRecursiveImport field.
func (o *BTVariableTableRowMetadata3912) SetIsRecursiveImport(v bool) {
	o.IsRecursiveImport = &v
}

// GetLastWritingFeatureNodeId returns the LastWritingFeatureNodeId field value if set, zero value otherwise.
func (o *BTVariableTableRowMetadata3912) GetLastWritingFeatureNodeId() string {
	if o == nil || o.LastWritingFeatureNodeId == nil {
		var ret string
		return ret
	}
	return *o.LastWritingFeatureNodeId
}

// GetLastWritingFeatureNodeIdOk returns a tuple with the LastWritingFeatureNodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTVariableTableRowMetadata3912) GetLastWritingFeatureNodeIdOk() (*string, bool) {
	if o == nil || o.LastWritingFeatureNodeId == nil {
		return nil, false
	}
	return o.LastWritingFeatureNodeId, true
}

// HasLastWritingFeatureNodeId returns a boolean if a field has been set.
func (o *BTVariableTableRowMetadata3912) HasLastWritingFeatureNodeId() bool {
	if o != nil && o.LastWritingFeatureNodeId != nil {
		return true
	}

	return false
}

// SetLastWritingFeatureNodeId gets a reference to the given string and assigns it to the LastWritingFeatureNodeId field.
func (o *BTVariableTableRowMetadata3912) SetLastWritingFeatureNodeId(v string) {
	o.LastWritingFeatureNodeId = &v
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTVariableTableRowMetadata3912) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTVariableTableRowMetadata3912) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTVariableTableRowMetadata3912) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTVariableTableRowMetadata3912) SetBtType(v string) {
	o.BtType = &v
}

func (o BTVariableTableRowMetadata3912) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTTableBaseRowMetadata3181, errBTTableBaseRowMetadata3181 := json.Marshal(o.BTTableBaseRowMetadata3181)
	if errBTTableBaseRowMetadata3181 != nil {
		return []byte{}, errBTTableBaseRowMetadata3181
	}
	errBTTableBaseRowMetadata3181 = json.Unmarshal([]byte(serializedBTTableBaseRowMetadata3181), &toSerialize)
	if errBTTableBaseRowMetadata3181 != nil {
		return []byte{}, errBTTableBaseRowMetadata3181
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.CrossHighlightDataIfAny != nil {
		toSerialize["crossHighlightDataIfAny"] = o.CrossHighlightDataIfAny
	}
	if o.CrossHighlightData != nil {
		toSerialize["crossHighlightData"] = o.CrossHighlightData
	}
	if o.Info != nil {
		toSerialize["info"] = o.Info
	}
	if o.IsFullyEditable != nil {
		toSerialize["isFullyEditable"] = o.IsFullyEditable
	}
	if o.IsRecursiveImport != nil {
		toSerialize["isRecursiveImport"] = o.IsRecursiveImport
	}
	if o.LastWritingFeatureNodeId != nil {
		toSerialize["lastWritingFeatureNodeId"] = o.LastWritingFeatureNodeId
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	return json.Marshal(toSerialize)
}

type NullableBTVariableTableRowMetadata3912 struct {
	value *BTVariableTableRowMetadata3912
	isSet bool
}

func (v NullableBTVariableTableRowMetadata3912) Get() *BTVariableTableRowMetadata3912 {
	return v.value
}

func (v *NullableBTVariableTableRowMetadata3912) Set(val *BTVariableTableRowMetadata3912) {
	v.value = val
	v.isSet = true
}

func (v NullableBTVariableTableRowMetadata3912) IsSet() bool {
	return v.isSet
}

func (v *NullableBTVariableTableRowMetadata3912) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTVariableTableRowMetadata3912(val *BTVariableTableRowMetadata3912) *NullableBTVariableTableRowMetadata3912 {
	return &NullableBTVariableTableRowMetadata3912{value: val, isSet: true}
}

func (v NullableBTVariableTableRowMetadata3912) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTVariableTableRowMetadata3912) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
