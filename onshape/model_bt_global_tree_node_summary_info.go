/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTGlobalTreeNodeSummaryInfo struct for BTGlobalTreeNodeSummaryInfo
type BTGlobalTreeNodeSummaryInfo struct {
	CanMove         *bool                   `json:"canMove,omitempty"`
	ConnectionName  *string                 `json:"connectionName,omitempty"`
	ConnectionNames []string                `json:"connectionNames,omitempty"`
	CreatedAt       *JSONTime               `json:"createdAt,omitempty"`
	CreatedBy       *BTUserBasicSummaryInfo `json:"createdBy,omitempty"`
	Description     *string                 `json:"description,omitempty"`
	// URI to fetch complete information of the resource.
	Href *string `json:"href,omitempty"`
	// Id of the resource.
	Id                           *string                 `json:"id,omitempty"`
	IsContainer                  *bool                   `json:"isContainer,omitempty"`
	IsEnterpriseOwned            *bool                   `json:"isEnterpriseOwned,omitempty"`
	IsExternalConnectionResource *bool                   `json:"isExternalConnectionResource,omitempty"`
	IsMutable                    *bool                   `json:"isMutable,omitempty"`
	JsonType                     string                  `json:"jsonType"`
	ModifiedAt                   *JSONTime               `json:"modifiedAt,omitempty"`
	ModifiedBy                   *BTUserBasicSummaryInfo `json:"modifiedBy,omitempty"`
	// Name of the resource.
	Name         *string      `json:"name,omitempty"`
	Owner        *BTOwnerInfo `json:"owner,omitempty"`
	ProjectId    *string      `json:"projectId,omitempty"`
	ResourceType *string      `json:"resourceType,omitempty"`
	TreeHref     *string      `json:"treeHref,omitempty"`
	UnparentHref *string      `json:"unparentHref,omitempty"`
	// URI to visualize the resource in a webclient if applicable.
	ViewRef                             *string               `json:"viewRef,omitempty"`
	AnonymousAccessAllowed              *bool                 `json:"anonymousAccessAllowed,omitempty"`
	AnonymousAllowsExport               *bool                 `json:"anonymousAllowsExport,omitempty"`
	CanUnshare                          *bool                 `json:"canUnshare,omitempty"`
	CreatedWithEducationPlan            *bool                 `json:"createdWithEducationPlan,omitempty"`
	DefaultElementId                    *string               `json:"defaultElementId,omitempty"`
	DefaultVersionGraphMode             *BTVersionGraphMode   `json:"defaultVersionGraphMode,omitempty"`
	DefaultVersionGraphShowAutoVersions *bool                 `json:"defaultVersionGraphShowAutoVersions,omitempty"`
	DefaultVersionGraphShowMerges       *bool                 `json:"defaultVersionGraphShowMerges,omitempty"`
	DefaultWorkspace                    *BTWorkspaceInfo      `json:"defaultWorkspace,omitempty"`
	DocumentLabels                      []BTDocumentLabelInfo `json:"documentLabels,omitempty"`
	DocumentType                        *int32                `json:"documentType,omitempty"`
	ForceExportRules                    *bool                 `json:"forceExportRules,omitempty"`
	HasReleaseRevisionableObjects       *bool                 `json:"hasReleaseRevisionableObjects,omitempty"`
	HasRelevantInsertables              *bool                 `json:"hasRelevantInsertables,omitempty"`
	IsOrphaned                          *bool                 `json:"isOrphaned,omitempty"`
	IsUsingManagedWorkflow              *bool                 `json:"isUsingManagedWorkflow,omitempty"`
	LikedByCurrentUser                  *bool                 `json:"likedByCurrentUser,omitempty"`
	Likes                               *int64                `json:"likes,omitempty"`
	NotRevisionManaged                  *bool                 `json:"notRevisionManaged,omitempty"`
	Notes                               *string               `json:"notes,omitempty"`
	NumberOfTimesCopied                 *int64                `json:"numberOfTimesCopied,omitempty"`
	NumberOfTimesReferenced             *int64                `json:"numberOfTimesReferenced,omitempty"`
	ParentId                            *string               `json:"parentId,omitempty"`
	Permission                          *BTOldPermission      `json:"permission,omitempty"`
	PermissionSet                       []string              `json:"permissionSet,omitempty"`
	Public                              *bool                 `json:"public,omitempty"`
	PublishedVersionId                  *string               `json:"publishedVersionId,omitempty"`
	RecentVersion                       *BTBaseInfo           `json:"recentVersion,omitempty"`
	Sequence                            *string               `json:"sequence,omitempty"`
	SupportTeamUserAndShared            *bool                 `json:"supportTeamUserAndShared,omitempty"`
	Tags                                []string              `json:"tags,omitempty"`
	Thumbnail                           *BTThumbnailInfo      `json:"thumbnail,omitempty"`
	TotalWorkspacesScheduledForUpdate   *int32                `json:"totalWorkspacesScheduledForUpdate,omitempty"`
	TotalWorkspacesUpdating             *int32                `json:"totalWorkspacesUpdating,omitempty"`
	Trash                               *bool                 `json:"trash,omitempty"`
	TrashedAt                           *JSONTime             `json:"trashedAt,omitempty"`
	UserAccountLimitsBreached           *bool                 `json:"userAccountLimitsBreached,omitempty"`
}

// NewBTGlobalTreeNodeSummaryInfo instantiates a new BTGlobalTreeNodeSummaryInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTGlobalTreeNodeSummaryInfo(jsonType string) *BTGlobalTreeNodeSummaryInfo {
	this := BTGlobalTreeNodeSummaryInfo{}
	this.JsonType = jsonType
	return &this
}

// NewBTGlobalTreeNodeSummaryInfoWithDefaults instantiates a new BTGlobalTreeNodeSummaryInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTGlobalTreeNodeSummaryInfoWithDefaults() *BTGlobalTreeNodeSummaryInfo {
	this := BTGlobalTreeNodeSummaryInfo{}
	return &this
}

// GetCanMove returns the CanMove field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetCanMove() bool {
	if o == nil || o.CanMove == nil {
		var ret bool
		return ret
	}
	return *o.CanMove
}

// GetCanMoveOk returns a tuple with the CanMove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetCanMoveOk() (*bool, bool) {
	if o == nil || o.CanMove == nil {
		return nil, false
	}
	return o.CanMove, true
}

// HasCanMove returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasCanMove() bool {
	if o != nil && o.CanMove != nil {
		return true
	}

	return false
}

// SetCanMove gets a reference to the given bool and assigns it to the CanMove field.
func (o *BTGlobalTreeNodeSummaryInfo) SetCanMove(v bool) {
	o.CanMove = &v
}

// GetConnectionName returns the ConnectionName field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetConnectionName() string {
	if o == nil || o.ConnectionName == nil {
		var ret string
		return ret
	}
	return *o.ConnectionName
}

// GetConnectionNameOk returns a tuple with the ConnectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetConnectionNameOk() (*string, bool) {
	if o == nil || o.ConnectionName == nil {
		return nil, false
	}
	return o.ConnectionName, true
}

// HasConnectionName returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasConnectionName() bool {
	if o != nil && o.ConnectionName != nil {
		return true
	}

	return false
}

// SetConnectionName gets a reference to the given string and assigns it to the ConnectionName field.
func (o *BTGlobalTreeNodeSummaryInfo) SetConnectionName(v string) {
	o.ConnectionName = &v
}

// GetConnectionNames returns the ConnectionNames field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetConnectionNames() []string {
	if o == nil || o.ConnectionNames == nil {
		var ret []string
		return ret
	}
	return o.ConnectionNames
}

// GetConnectionNamesOk returns a tuple with the ConnectionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetConnectionNamesOk() ([]string, bool) {
	if o == nil || o.ConnectionNames == nil {
		return nil, false
	}
	return o.ConnectionNames, true
}

// HasConnectionNames returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasConnectionNames() bool {
	if o != nil && o.ConnectionNames != nil {
		return true
	}

	return false
}

// SetConnectionNames gets a reference to the given []string and assigns it to the ConnectionNames field.
func (o *BTGlobalTreeNodeSummaryInfo) SetConnectionNames(v []string) {
	o.ConnectionNames = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetCreatedAt() JSONTime {
	if o == nil || o.CreatedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetCreatedAtOk() (*JSONTime, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given JSONTime and assigns it to the CreatedAt field.
func (o *BTGlobalTreeNodeSummaryInfo) SetCreatedAt(v JSONTime) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetCreatedBy() BTUserBasicSummaryInfo {
	if o == nil || o.CreatedBy == nil {
		var ret BTUserBasicSummaryInfo
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetCreatedByOk() (*BTUserBasicSummaryInfo, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given BTUserBasicSummaryInfo and assigns it to the CreatedBy field.
func (o *BTGlobalTreeNodeSummaryInfo) SetCreatedBy(v BTUserBasicSummaryInfo) {
	o.CreatedBy = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BTGlobalTreeNodeSummaryInfo) SetDescription(v string) {
	o.Description = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTGlobalTreeNodeSummaryInfo) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTGlobalTreeNodeSummaryInfo) SetId(v string) {
	o.Id = &v
}

// GetIsContainer returns the IsContainer field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetIsContainer() bool {
	if o == nil || o.IsContainer == nil {
		var ret bool
		return ret
	}
	return *o.IsContainer
}

// GetIsContainerOk returns a tuple with the IsContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetIsContainerOk() (*bool, bool) {
	if o == nil || o.IsContainer == nil {
		return nil, false
	}
	return o.IsContainer, true
}

// HasIsContainer returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasIsContainer() bool {
	if o != nil && o.IsContainer != nil {
		return true
	}

	return false
}

// SetIsContainer gets a reference to the given bool and assigns it to the IsContainer field.
func (o *BTGlobalTreeNodeSummaryInfo) SetIsContainer(v bool) {
	o.IsContainer = &v
}

// GetIsEnterpriseOwned returns the IsEnterpriseOwned field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetIsEnterpriseOwned() bool {
	if o == nil || o.IsEnterpriseOwned == nil {
		var ret bool
		return ret
	}
	return *o.IsEnterpriseOwned
}

// GetIsEnterpriseOwnedOk returns a tuple with the IsEnterpriseOwned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetIsEnterpriseOwnedOk() (*bool, bool) {
	if o == nil || o.IsEnterpriseOwned == nil {
		return nil, false
	}
	return o.IsEnterpriseOwned, true
}

// HasIsEnterpriseOwned returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasIsEnterpriseOwned() bool {
	if o != nil && o.IsEnterpriseOwned != nil {
		return true
	}

	return false
}

// SetIsEnterpriseOwned gets a reference to the given bool and assigns it to the IsEnterpriseOwned field.
func (o *BTGlobalTreeNodeSummaryInfo) SetIsEnterpriseOwned(v bool) {
	o.IsEnterpriseOwned = &v
}

// GetIsExternalConnectionResource returns the IsExternalConnectionResource field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetIsExternalConnectionResource() bool {
	if o == nil || o.IsExternalConnectionResource == nil {
		var ret bool
		return ret
	}
	return *o.IsExternalConnectionResource
}

// GetIsExternalConnectionResourceOk returns a tuple with the IsExternalConnectionResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetIsExternalConnectionResourceOk() (*bool, bool) {
	if o == nil || o.IsExternalConnectionResource == nil {
		return nil, false
	}
	return o.IsExternalConnectionResource, true
}

// HasIsExternalConnectionResource returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasIsExternalConnectionResource() bool {
	if o != nil && o.IsExternalConnectionResource != nil {
		return true
	}

	return false
}

// SetIsExternalConnectionResource gets a reference to the given bool and assigns it to the IsExternalConnectionResource field.
func (o *BTGlobalTreeNodeSummaryInfo) SetIsExternalConnectionResource(v bool) {
	o.IsExternalConnectionResource = &v
}

// GetIsMutable returns the IsMutable field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetIsMutable() bool {
	if o == nil || o.IsMutable == nil {
		var ret bool
		return ret
	}
	return *o.IsMutable
}

// GetIsMutableOk returns a tuple with the IsMutable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetIsMutableOk() (*bool, bool) {
	if o == nil || o.IsMutable == nil {
		return nil, false
	}
	return o.IsMutable, true
}

// HasIsMutable returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasIsMutable() bool {
	if o != nil && o.IsMutable != nil {
		return true
	}

	return false
}

// SetIsMutable gets a reference to the given bool and assigns it to the IsMutable field.
func (o *BTGlobalTreeNodeSummaryInfo) SetIsMutable(v bool) {
	o.IsMutable = &v
}

// GetJsonType returns the JsonType field value
func (o *BTGlobalTreeNodeSummaryInfo) GetJsonType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JsonType
}

// GetJsonTypeOk returns a tuple with the JsonType field value
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetJsonTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JsonType, true
}

// SetJsonType sets field value
func (o *BTGlobalTreeNodeSummaryInfo) SetJsonType(v string) {
	o.JsonType = v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetModifiedAt() JSONTime {
	if o == nil || o.ModifiedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetModifiedAtOk() (*JSONTime, bool) {
	if o == nil || o.ModifiedAt == nil {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasModifiedAt() bool {
	if o != nil && o.ModifiedAt != nil {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given JSONTime and assigns it to the ModifiedAt field.
func (o *BTGlobalTreeNodeSummaryInfo) SetModifiedAt(v JSONTime) {
	o.ModifiedAt = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetModifiedBy() BTUserBasicSummaryInfo {
	if o == nil || o.ModifiedBy == nil {
		var ret BTUserBasicSummaryInfo
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetModifiedByOk() (*BTUserBasicSummaryInfo, bool) {
	if o == nil || o.ModifiedBy == nil {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasModifiedBy() bool {
	if o != nil && o.ModifiedBy != nil {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given BTUserBasicSummaryInfo and assigns it to the ModifiedBy field.
func (o *BTGlobalTreeNodeSummaryInfo) SetModifiedBy(v BTUserBasicSummaryInfo) {
	o.ModifiedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTGlobalTreeNodeSummaryInfo) SetName(v string) {
	o.Name = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetOwner() BTOwnerInfo {
	if o == nil || o.Owner == nil {
		var ret BTOwnerInfo
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetOwnerOk() (*BTOwnerInfo, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given BTOwnerInfo and assigns it to the Owner field.
func (o *BTGlobalTreeNodeSummaryInfo) SetOwner(v BTOwnerInfo) {
	o.Owner = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *BTGlobalTreeNodeSummaryInfo) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetResourceType() string {
	if o == nil || o.ResourceType == nil {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetResourceTypeOk() (*string, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *BTGlobalTreeNodeSummaryInfo) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetTreeHref returns the TreeHref field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetTreeHref() string {
	if o == nil || o.TreeHref == nil {
		var ret string
		return ret
	}
	return *o.TreeHref
}

// GetTreeHrefOk returns a tuple with the TreeHref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetTreeHrefOk() (*string, bool) {
	if o == nil || o.TreeHref == nil {
		return nil, false
	}
	return o.TreeHref, true
}

// HasTreeHref returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasTreeHref() bool {
	if o != nil && o.TreeHref != nil {
		return true
	}

	return false
}

// SetTreeHref gets a reference to the given string and assigns it to the TreeHref field.
func (o *BTGlobalTreeNodeSummaryInfo) SetTreeHref(v string) {
	o.TreeHref = &v
}

// GetUnparentHref returns the UnparentHref field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetUnparentHref() string {
	if o == nil || o.UnparentHref == nil {
		var ret string
		return ret
	}
	return *o.UnparentHref
}

// GetUnparentHrefOk returns a tuple with the UnparentHref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetUnparentHrefOk() (*string, bool) {
	if o == nil || o.UnparentHref == nil {
		return nil, false
	}
	return o.UnparentHref, true
}

// HasUnparentHref returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasUnparentHref() bool {
	if o != nil && o.UnparentHref != nil {
		return true
	}

	return false
}

// SetUnparentHref gets a reference to the given string and assigns it to the UnparentHref field.
func (o *BTGlobalTreeNodeSummaryInfo) SetUnparentHref(v string) {
	o.UnparentHref = &v
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetViewRef() string {
	if o == nil || o.ViewRef == nil {
		var ret string
		return ret
	}
	return *o.ViewRef
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetViewRefOk() (*string, bool) {
	if o == nil || o.ViewRef == nil {
		return nil, false
	}
	return o.ViewRef, true
}

// HasViewRef returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasViewRef() bool {
	if o != nil && o.ViewRef != nil {
		return true
	}

	return false
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *BTGlobalTreeNodeSummaryInfo) SetViewRef(v string) {
	o.ViewRef = &v
}

// GetAnonymousAccessAllowed returns the AnonymousAccessAllowed field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetAnonymousAccessAllowed() bool {
	if o == nil || o.AnonymousAccessAllowed == nil {
		var ret bool
		return ret
	}
	return *o.AnonymousAccessAllowed
}

// GetAnonymousAccessAllowedOk returns a tuple with the AnonymousAccessAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetAnonymousAccessAllowedOk() (*bool, bool) {
	if o == nil || o.AnonymousAccessAllowed == nil {
		return nil, false
	}
	return o.AnonymousAccessAllowed, true
}

// HasAnonymousAccessAllowed returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasAnonymousAccessAllowed() bool {
	if o != nil && o.AnonymousAccessAllowed != nil {
		return true
	}

	return false
}

// SetAnonymousAccessAllowed gets a reference to the given bool and assigns it to the AnonymousAccessAllowed field.
func (o *BTGlobalTreeNodeSummaryInfo) SetAnonymousAccessAllowed(v bool) {
	o.AnonymousAccessAllowed = &v
}

// GetAnonymousAllowsExport returns the AnonymousAllowsExport field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetAnonymousAllowsExport() bool {
	if o == nil || o.AnonymousAllowsExport == nil {
		var ret bool
		return ret
	}
	return *o.AnonymousAllowsExport
}

// GetAnonymousAllowsExportOk returns a tuple with the AnonymousAllowsExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetAnonymousAllowsExportOk() (*bool, bool) {
	if o == nil || o.AnonymousAllowsExport == nil {
		return nil, false
	}
	return o.AnonymousAllowsExport, true
}

// HasAnonymousAllowsExport returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasAnonymousAllowsExport() bool {
	if o != nil && o.AnonymousAllowsExport != nil {
		return true
	}

	return false
}

// SetAnonymousAllowsExport gets a reference to the given bool and assigns it to the AnonymousAllowsExport field.
func (o *BTGlobalTreeNodeSummaryInfo) SetAnonymousAllowsExport(v bool) {
	o.AnonymousAllowsExport = &v
}

// GetCanUnshare returns the CanUnshare field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetCanUnshare() bool {
	if o == nil || o.CanUnshare == nil {
		var ret bool
		return ret
	}
	return *o.CanUnshare
}

// GetCanUnshareOk returns a tuple with the CanUnshare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetCanUnshareOk() (*bool, bool) {
	if o == nil || o.CanUnshare == nil {
		return nil, false
	}
	return o.CanUnshare, true
}

// HasCanUnshare returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasCanUnshare() bool {
	if o != nil && o.CanUnshare != nil {
		return true
	}

	return false
}

// SetCanUnshare gets a reference to the given bool and assigns it to the CanUnshare field.
func (o *BTGlobalTreeNodeSummaryInfo) SetCanUnshare(v bool) {
	o.CanUnshare = &v
}

// GetCreatedWithEducationPlan returns the CreatedWithEducationPlan field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetCreatedWithEducationPlan() bool {
	if o == nil || o.CreatedWithEducationPlan == nil {
		var ret bool
		return ret
	}
	return *o.CreatedWithEducationPlan
}

// GetCreatedWithEducationPlanOk returns a tuple with the CreatedWithEducationPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetCreatedWithEducationPlanOk() (*bool, bool) {
	if o == nil || o.CreatedWithEducationPlan == nil {
		return nil, false
	}
	return o.CreatedWithEducationPlan, true
}

// HasCreatedWithEducationPlan returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasCreatedWithEducationPlan() bool {
	if o != nil && o.CreatedWithEducationPlan != nil {
		return true
	}

	return false
}

// SetCreatedWithEducationPlan gets a reference to the given bool and assigns it to the CreatedWithEducationPlan field.
func (o *BTGlobalTreeNodeSummaryInfo) SetCreatedWithEducationPlan(v bool) {
	o.CreatedWithEducationPlan = &v
}

// GetDefaultElementId returns the DefaultElementId field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetDefaultElementId() string {
	if o == nil || o.DefaultElementId == nil {
		var ret string
		return ret
	}
	return *o.DefaultElementId
}

// GetDefaultElementIdOk returns a tuple with the DefaultElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetDefaultElementIdOk() (*string, bool) {
	if o == nil || o.DefaultElementId == nil {
		return nil, false
	}
	return o.DefaultElementId, true
}

// HasDefaultElementId returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasDefaultElementId() bool {
	if o != nil && o.DefaultElementId != nil {
		return true
	}

	return false
}

// SetDefaultElementId gets a reference to the given string and assigns it to the DefaultElementId field.
func (o *BTGlobalTreeNodeSummaryInfo) SetDefaultElementId(v string) {
	o.DefaultElementId = &v
}

// GetDefaultVersionGraphMode returns the DefaultVersionGraphMode field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetDefaultVersionGraphMode() BTVersionGraphMode {
	if o == nil || o.DefaultVersionGraphMode == nil {
		var ret BTVersionGraphMode
		return ret
	}
	return *o.DefaultVersionGraphMode
}

// GetDefaultVersionGraphModeOk returns a tuple with the DefaultVersionGraphMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetDefaultVersionGraphModeOk() (*BTVersionGraphMode, bool) {
	if o == nil || o.DefaultVersionGraphMode == nil {
		return nil, false
	}
	return o.DefaultVersionGraphMode, true
}

// HasDefaultVersionGraphMode returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasDefaultVersionGraphMode() bool {
	if o != nil && o.DefaultVersionGraphMode != nil {
		return true
	}

	return false
}

// SetDefaultVersionGraphMode gets a reference to the given BTVersionGraphMode and assigns it to the DefaultVersionGraphMode field.
func (o *BTGlobalTreeNodeSummaryInfo) SetDefaultVersionGraphMode(v BTVersionGraphMode) {
	o.DefaultVersionGraphMode = &v
}

// GetDefaultVersionGraphShowAutoVersions returns the DefaultVersionGraphShowAutoVersions field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetDefaultVersionGraphShowAutoVersions() bool {
	if o == nil || o.DefaultVersionGraphShowAutoVersions == nil {
		var ret bool
		return ret
	}
	return *o.DefaultVersionGraphShowAutoVersions
}

// GetDefaultVersionGraphShowAutoVersionsOk returns a tuple with the DefaultVersionGraphShowAutoVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetDefaultVersionGraphShowAutoVersionsOk() (*bool, bool) {
	if o == nil || o.DefaultVersionGraphShowAutoVersions == nil {
		return nil, false
	}
	return o.DefaultVersionGraphShowAutoVersions, true
}

// HasDefaultVersionGraphShowAutoVersions returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasDefaultVersionGraphShowAutoVersions() bool {
	if o != nil && o.DefaultVersionGraphShowAutoVersions != nil {
		return true
	}

	return false
}

// SetDefaultVersionGraphShowAutoVersions gets a reference to the given bool and assigns it to the DefaultVersionGraphShowAutoVersions field.
func (o *BTGlobalTreeNodeSummaryInfo) SetDefaultVersionGraphShowAutoVersions(v bool) {
	o.DefaultVersionGraphShowAutoVersions = &v
}

// GetDefaultVersionGraphShowMerges returns the DefaultVersionGraphShowMerges field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetDefaultVersionGraphShowMerges() bool {
	if o == nil || o.DefaultVersionGraphShowMerges == nil {
		var ret bool
		return ret
	}
	return *o.DefaultVersionGraphShowMerges
}

// GetDefaultVersionGraphShowMergesOk returns a tuple with the DefaultVersionGraphShowMerges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetDefaultVersionGraphShowMergesOk() (*bool, bool) {
	if o == nil || o.DefaultVersionGraphShowMerges == nil {
		return nil, false
	}
	return o.DefaultVersionGraphShowMerges, true
}

// HasDefaultVersionGraphShowMerges returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasDefaultVersionGraphShowMerges() bool {
	if o != nil && o.DefaultVersionGraphShowMerges != nil {
		return true
	}

	return false
}

// SetDefaultVersionGraphShowMerges gets a reference to the given bool and assigns it to the DefaultVersionGraphShowMerges field.
func (o *BTGlobalTreeNodeSummaryInfo) SetDefaultVersionGraphShowMerges(v bool) {
	o.DefaultVersionGraphShowMerges = &v
}

// GetDefaultWorkspace returns the DefaultWorkspace field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetDefaultWorkspace() BTWorkspaceInfo {
	if o == nil || o.DefaultWorkspace == nil {
		var ret BTWorkspaceInfo
		return ret
	}
	return *o.DefaultWorkspace
}

// GetDefaultWorkspaceOk returns a tuple with the DefaultWorkspace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetDefaultWorkspaceOk() (*BTWorkspaceInfo, bool) {
	if o == nil || o.DefaultWorkspace == nil {
		return nil, false
	}
	return o.DefaultWorkspace, true
}

// HasDefaultWorkspace returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasDefaultWorkspace() bool {
	if o != nil && o.DefaultWorkspace != nil {
		return true
	}

	return false
}

// SetDefaultWorkspace gets a reference to the given BTWorkspaceInfo and assigns it to the DefaultWorkspace field.
func (o *BTGlobalTreeNodeSummaryInfo) SetDefaultWorkspace(v BTWorkspaceInfo) {
	o.DefaultWorkspace = &v
}

// GetDocumentLabels returns the DocumentLabels field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetDocumentLabels() []BTDocumentLabelInfo {
	if o == nil || o.DocumentLabels == nil {
		var ret []BTDocumentLabelInfo
		return ret
	}
	return o.DocumentLabels
}

// GetDocumentLabelsOk returns a tuple with the DocumentLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetDocumentLabelsOk() ([]BTDocumentLabelInfo, bool) {
	if o == nil || o.DocumentLabels == nil {
		return nil, false
	}
	return o.DocumentLabels, true
}

// HasDocumentLabels returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasDocumentLabels() bool {
	if o != nil && o.DocumentLabels != nil {
		return true
	}

	return false
}

// SetDocumentLabels gets a reference to the given []BTDocumentLabelInfo and assigns it to the DocumentLabels field.
func (o *BTGlobalTreeNodeSummaryInfo) SetDocumentLabels(v []BTDocumentLabelInfo) {
	o.DocumentLabels = v
}

// GetDocumentType returns the DocumentType field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetDocumentType() int32 {
	if o == nil || o.DocumentType == nil {
		var ret int32
		return ret
	}
	return *o.DocumentType
}

// GetDocumentTypeOk returns a tuple with the DocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetDocumentTypeOk() (*int32, bool) {
	if o == nil || o.DocumentType == nil {
		return nil, false
	}
	return o.DocumentType, true
}

// HasDocumentType returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasDocumentType() bool {
	if o != nil && o.DocumentType != nil {
		return true
	}

	return false
}

// SetDocumentType gets a reference to the given int32 and assigns it to the DocumentType field.
func (o *BTGlobalTreeNodeSummaryInfo) SetDocumentType(v int32) {
	o.DocumentType = &v
}

// GetForceExportRules returns the ForceExportRules field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetForceExportRules() bool {
	if o == nil || o.ForceExportRules == nil {
		var ret bool
		return ret
	}
	return *o.ForceExportRules
}

// GetForceExportRulesOk returns a tuple with the ForceExportRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetForceExportRulesOk() (*bool, bool) {
	if o == nil || o.ForceExportRules == nil {
		return nil, false
	}
	return o.ForceExportRules, true
}

// HasForceExportRules returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasForceExportRules() bool {
	if o != nil && o.ForceExportRules != nil {
		return true
	}

	return false
}

// SetForceExportRules gets a reference to the given bool and assigns it to the ForceExportRules field.
func (o *BTGlobalTreeNodeSummaryInfo) SetForceExportRules(v bool) {
	o.ForceExportRules = &v
}

// GetHasReleaseRevisionableObjects returns the HasReleaseRevisionableObjects field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetHasReleaseRevisionableObjects() bool {
	if o == nil || o.HasReleaseRevisionableObjects == nil {
		var ret bool
		return ret
	}
	return *o.HasReleaseRevisionableObjects
}

// GetHasReleaseRevisionableObjectsOk returns a tuple with the HasReleaseRevisionableObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetHasReleaseRevisionableObjectsOk() (*bool, bool) {
	if o == nil || o.HasReleaseRevisionableObjects == nil {
		return nil, false
	}
	return o.HasReleaseRevisionableObjects, true
}

// HasHasReleaseRevisionableObjects returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasHasReleaseRevisionableObjects() bool {
	if o != nil && o.HasReleaseRevisionableObjects != nil {
		return true
	}

	return false
}

// SetHasReleaseRevisionableObjects gets a reference to the given bool and assigns it to the HasReleaseRevisionableObjects field.
func (o *BTGlobalTreeNodeSummaryInfo) SetHasReleaseRevisionableObjects(v bool) {
	o.HasReleaseRevisionableObjects = &v
}

// GetHasRelevantInsertables returns the HasRelevantInsertables field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetHasRelevantInsertables() bool {
	if o == nil || o.HasRelevantInsertables == nil {
		var ret bool
		return ret
	}
	return *o.HasRelevantInsertables
}

// GetHasRelevantInsertablesOk returns a tuple with the HasRelevantInsertables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetHasRelevantInsertablesOk() (*bool, bool) {
	if o == nil || o.HasRelevantInsertables == nil {
		return nil, false
	}
	return o.HasRelevantInsertables, true
}

// HasHasRelevantInsertables returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasHasRelevantInsertables() bool {
	if o != nil && o.HasRelevantInsertables != nil {
		return true
	}

	return false
}

// SetHasRelevantInsertables gets a reference to the given bool and assigns it to the HasRelevantInsertables field.
func (o *BTGlobalTreeNodeSummaryInfo) SetHasRelevantInsertables(v bool) {
	o.HasRelevantInsertables = &v
}

// GetIsOrphaned returns the IsOrphaned field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetIsOrphaned() bool {
	if o == nil || o.IsOrphaned == nil {
		var ret bool
		return ret
	}
	return *o.IsOrphaned
}

// GetIsOrphanedOk returns a tuple with the IsOrphaned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetIsOrphanedOk() (*bool, bool) {
	if o == nil || o.IsOrphaned == nil {
		return nil, false
	}
	return o.IsOrphaned, true
}

// HasIsOrphaned returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasIsOrphaned() bool {
	if o != nil && o.IsOrphaned != nil {
		return true
	}

	return false
}

// SetIsOrphaned gets a reference to the given bool and assigns it to the IsOrphaned field.
func (o *BTGlobalTreeNodeSummaryInfo) SetIsOrphaned(v bool) {
	o.IsOrphaned = &v
}

// GetIsUsingManagedWorkflow returns the IsUsingManagedWorkflow field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetIsUsingManagedWorkflow() bool {
	if o == nil || o.IsUsingManagedWorkflow == nil {
		var ret bool
		return ret
	}
	return *o.IsUsingManagedWorkflow
}

// GetIsUsingManagedWorkflowOk returns a tuple with the IsUsingManagedWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetIsUsingManagedWorkflowOk() (*bool, bool) {
	if o == nil || o.IsUsingManagedWorkflow == nil {
		return nil, false
	}
	return o.IsUsingManagedWorkflow, true
}

// HasIsUsingManagedWorkflow returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasIsUsingManagedWorkflow() bool {
	if o != nil && o.IsUsingManagedWorkflow != nil {
		return true
	}

	return false
}

// SetIsUsingManagedWorkflow gets a reference to the given bool and assigns it to the IsUsingManagedWorkflow field.
func (o *BTGlobalTreeNodeSummaryInfo) SetIsUsingManagedWorkflow(v bool) {
	o.IsUsingManagedWorkflow = &v
}

// GetLikedByCurrentUser returns the LikedByCurrentUser field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetLikedByCurrentUser() bool {
	if o == nil || o.LikedByCurrentUser == nil {
		var ret bool
		return ret
	}
	return *o.LikedByCurrentUser
}

// GetLikedByCurrentUserOk returns a tuple with the LikedByCurrentUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetLikedByCurrentUserOk() (*bool, bool) {
	if o == nil || o.LikedByCurrentUser == nil {
		return nil, false
	}
	return o.LikedByCurrentUser, true
}

// HasLikedByCurrentUser returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasLikedByCurrentUser() bool {
	if o != nil && o.LikedByCurrentUser != nil {
		return true
	}

	return false
}

// SetLikedByCurrentUser gets a reference to the given bool and assigns it to the LikedByCurrentUser field.
func (o *BTGlobalTreeNodeSummaryInfo) SetLikedByCurrentUser(v bool) {
	o.LikedByCurrentUser = &v
}

// GetLikes returns the Likes field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetLikes() int64 {
	if o == nil || o.Likes == nil {
		var ret int64
		return ret
	}
	return *o.Likes
}

// GetLikesOk returns a tuple with the Likes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetLikesOk() (*int64, bool) {
	if o == nil || o.Likes == nil {
		return nil, false
	}
	return o.Likes, true
}

// HasLikes returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasLikes() bool {
	if o != nil && o.Likes != nil {
		return true
	}

	return false
}

// SetLikes gets a reference to the given int64 and assigns it to the Likes field.
func (o *BTGlobalTreeNodeSummaryInfo) SetLikes(v int64) {
	o.Likes = &v
}

// GetNotRevisionManaged returns the NotRevisionManaged field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetNotRevisionManaged() bool {
	if o == nil || o.NotRevisionManaged == nil {
		var ret bool
		return ret
	}
	return *o.NotRevisionManaged
}

// GetNotRevisionManagedOk returns a tuple with the NotRevisionManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetNotRevisionManagedOk() (*bool, bool) {
	if o == nil || o.NotRevisionManaged == nil {
		return nil, false
	}
	return o.NotRevisionManaged, true
}

// HasNotRevisionManaged returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasNotRevisionManaged() bool {
	if o != nil && o.NotRevisionManaged != nil {
		return true
	}

	return false
}

// SetNotRevisionManaged gets a reference to the given bool and assigns it to the NotRevisionManaged field.
func (o *BTGlobalTreeNodeSummaryInfo) SetNotRevisionManaged(v bool) {
	o.NotRevisionManaged = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetNotes() string {
	if o == nil || o.Notes == nil {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetNotesOk() (*string, bool) {
	if o == nil || o.Notes == nil {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *BTGlobalTreeNodeSummaryInfo) SetNotes(v string) {
	o.Notes = &v
}

// GetNumberOfTimesCopied returns the NumberOfTimesCopied field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetNumberOfTimesCopied() int64 {
	if o == nil || o.NumberOfTimesCopied == nil {
		var ret int64
		return ret
	}
	return *o.NumberOfTimesCopied
}

// GetNumberOfTimesCopiedOk returns a tuple with the NumberOfTimesCopied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetNumberOfTimesCopiedOk() (*int64, bool) {
	if o == nil || o.NumberOfTimesCopied == nil {
		return nil, false
	}
	return o.NumberOfTimesCopied, true
}

// HasNumberOfTimesCopied returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasNumberOfTimesCopied() bool {
	if o != nil && o.NumberOfTimesCopied != nil {
		return true
	}

	return false
}

// SetNumberOfTimesCopied gets a reference to the given int64 and assigns it to the NumberOfTimesCopied field.
func (o *BTGlobalTreeNodeSummaryInfo) SetNumberOfTimesCopied(v int64) {
	o.NumberOfTimesCopied = &v
}

// GetNumberOfTimesReferenced returns the NumberOfTimesReferenced field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetNumberOfTimesReferenced() int64 {
	if o == nil || o.NumberOfTimesReferenced == nil {
		var ret int64
		return ret
	}
	return *o.NumberOfTimesReferenced
}

// GetNumberOfTimesReferencedOk returns a tuple with the NumberOfTimesReferenced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetNumberOfTimesReferencedOk() (*int64, bool) {
	if o == nil || o.NumberOfTimesReferenced == nil {
		return nil, false
	}
	return o.NumberOfTimesReferenced, true
}

// HasNumberOfTimesReferenced returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasNumberOfTimesReferenced() bool {
	if o != nil && o.NumberOfTimesReferenced != nil {
		return true
	}

	return false
}

// SetNumberOfTimesReferenced gets a reference to the given int64 and assigns it to the NumberOfTimesReferenced field.
func (o *BTGlobalTreeNodeSummaryInfo) SetNumberOfTimesReferenced(v int64) {
	o.NumberOfTimesReferenced = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetParentIdOk() (*string, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *BTGlobalTreeNodeSummaryInfo) SetParentId(v string) {
	o.ParentId = &v
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetPermission() BTOldPermission {
	if o == nil || o.Permission == nil {
		var ret BTOldPermission
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetPermissionOk() (*BTOldPermission, bool) {
	if o == nil || o.Permission == nil {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasPermission() bool {
	if o != nil && o.Permission != nil {
		return true
	}

	return false
}

// SetPermission gets a reference to the given BTOldPermission and assigns it to the Permission field.
func (o *BTGlobalTreeNodeSummaryInfo) SetPermission(v BTOldPermission) {
	o.Permission = &v
}

// GetPermissionSet returns the PermissionSet field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetPermissionSet() []string {
	if o == nil || o.PermissionSet == nil {
		var ret []string
		return ret
	}
	return o.PermissionSet
}

// GetPermissionSetOk returns a tuple with the PermissionSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetPermissionSetOk() ([]string, bool) {
	if o == nil || o.PermissionSet == nil {
		return nil, false
	}
	return o.PermissionSet, true
}

// HasPermissionSet returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasPermissionSet() bool {
	if o != nil && o.PermissionSet != nil {
		return true
	}

	return false
}

// SetPermissionSet gets a reference to the given []string and assigns it to the PermissionSet field.
func (o *BTGlobalTreeNodeSummaryInfo) SetPermissionSet(v []string) {
	o.PermissionSet = v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetPublic() bool {
	if o == nil || o.Public == nil {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetPublicOk() (*bool, bool) {
	if o == nil || o.Public == nil {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasPublic() bool {
	if o != nil && o.Public != nil {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *BTGlobalTreeNodeSummaryInfo) SetPublic(v bool) {
	o.Public = &v
}

// GetPublishedVersionId returns the PublishedVersionId field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetPublishedVersionId() string {
	if o == nil || o.PublishedVersionId == nil {
		var ret string
		return ret
	}
	return *o.PublishedVersionId
}

// GetPublishedVersionIdOk returns a tuple with the PublishedVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetPublishedVersionIdOk() (*string, bool) {
	if o == nil || o.PublishedVersionId == nil {
		return nil, false
	}
	return o.PublishedVersionId, true
}

// HasPublishedVersionId returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasPublishedVersionId() bool {
	if o != nil && o.PublishedVersionId != nil {
		return true
	}

	return false
}

// SetPublishedVersionId gets a reference to the given string and assigns it to the PublishedVersionId field.
func (o *BTGlobalTreeNodeSummaryInfo) SetPublishedVersionId(v string) {
	o.PublishedVersionId = &v
}

// GetRecentVersion returns the RecentVersion field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetRecentVersion() BTBaseInfo {
	if o == nil || o.RecentVersion == nil {
		var ret BTBaseInfo
		return ret
	}
	return *o.RecentVersion
}

// GetRecentVersionOk returns a tuple with the RecentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetRecentVersionOk() (*BTBaseInfo, bool) {
	if o == nil || o.RecentVersion == nil {
		return nil, false
	}
	return o.RecentVersion, true
}

// HasRecentVersion returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasRecentVersion() bool {
	if o != nil && o.RecentVersion != nil {
		return true
	}

	return false
}

// SetRecentVersion gets a reference to the given BTBaseInfo and assigns it to the RecentVersion field.
func (o *BTGlobalTreeNodeSummaryInfo) SetRecentVersion(v BTBaseInfo) {
	o.RecentVersion = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetSequence() string {
	if o == nil || o.Sequence == nil {
		var ret string
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetSequenceOk() (*string, bool) {
	if o == nil || o.Sequence == nil {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasSequence() bool {
	if o != nil && o.Sequence != nil {
		return true
	}

	return false
}

// SetSequence gets a reference to the given string and assigns it to the Sequence field.
func (o *BTGlobalTreeNodeSummaryInfo) SetSequence(v string) {
	o.Sequence = &v
}

// GetSupportTeamUserAndShared returns the SupportTeamUserAndShared field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetSupportTeamUserAndShared() bool {
	if o == nil || o.SupportTeamUserAndShared == nil {
		var ret bool
		return ret
	}
	return *o.SupportTeamUserAndShared
}

// GetSupportTeamUserAndSharedOk returns a tuple with the SupportTeamUserAndShared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetSupportTeamUserAndSharedOk() (*bool, bool) {
	if o == nil || o.SupportTeamUserAndShared == nil {
		return nil, false
	}
	return o.SupportTeamUserAndShared, true
}

// HasSupportTeamUserAndShared returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasSupportTeamUserAndShared() bool {
	if o != nil && o.SupportTeamUserAndShared != nil {
		return true
	}

	return false
}

// SetSupportTeamUserAndShared gets a reference to the given bool and assigns it to the SupportTeamUserAndShared field.
func (o *BTGlobalTreeNodeSummaryInfo) SetSupportTeamUserAndShared(v bool) {
	o.SupportTeamUserAndShared = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *BTGlobalTreeNodeSummaryInfo) SetTags(v []string) {
	o.Tags = v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetThumbnail() BTThumbnailInfo {
	if o == nil || o.Thumbnail == nil {
		var ret BTThumbnailInfo
		return ret
	}
	return *o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetThumbnailOk() (*BTThumbnailInfo, bool) {
	if o == nil || o.Thumbnail == nil {
		return nil, false
	}
	return o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasThumbnail() bool {
	if o != nil && o.Thumbnail != nil {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given BTThumbnailInfo and assigns it to the Thumbnail field.
func (o *BTGlobalTreeNodeSummaryInfo) SetThumbnail(v BTThumbnailInfo) {
	o.Thumbnail = &v
}

// GetTotalWorkspacesScheduledForUpdate returns the TotalWorkspacesScheduledForUpdate field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetTotalWorkspacesScheduledForUpdate() int32 {
	if o == nil || o.TotalWorkspacesScheduledForUpdate == nil {
		var ret int32
		return ret
	}
	return *o.TotalWorkspacesScheduledForUpdate
}

// GetTotalWorkspacesScheduledForUpdateOk returns a tuple with the TotalWorkspacesScheduledForUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetTotalWorkspacesScheduledForUpdateOk() (*int32, bool) {
	if o == nil || o.TotalWorkspacesScheduledForUpdate == nil {
		return nil, false
	}
	return o.TotalWorkspacesScheduledForUpdate, true
}

// HasTotalWorkspacesScheduledForUpdate returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasTotalWorkspacesScheduledForUpdate() bool {
	if o != nil && o.TotalWorkspacesScheduledForUpdate != nil {
		return true
	}

	return false
}

// SetTotalWorkspacesScheduledForUpdate gets a reference to the given int32 and assigns it to the TotalWorkspacesScheduledForUpdate field.
func (o *BTGlobalTreeNodeSummaryInfo) SetTotalWorkspacesScheduledForUpdate(v int32) {
	o.TotalWorkspacesScheduledForUpdate = &v
}

// GetTotalWorkspacesUpdating returns the TotalWorkspacesUpdating field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetTotalWorkspacesUpdating() int32 {
	if o == nil || o.TotalWorkspacesUpdating == nil {
		var ret int32
		return ret
	}
	return *o.TotalWorkspacesUpdating
}

// GetTotalWorkspacesUpdatingOk returns a tuple with the TotalWorkspacesUpdating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetTotalWorkspacesUpdatingOk() (*int32, bool) {
	if o == nil || o.TotalWorkspacesUpdating == nil {
		return nil, false
	}
	return o.TotalWorkspacesUpdating, true
}

// HasTotalWorkspacesUpdating returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasTotalWorkspacesUpdating() bool {
	if o != nil && o.TotalWorkspacesUpdating != nil {
		return true
	}

	return false
}

// SetTotalWorkspacesUpdating gets a reference to the given int32 and assigns it to the TotalWorkspacesUpdating field.
func (o *BTGlobalTreeNodeSummaryInfo) SetTotalWorkspacesUpdating(v int32) {
	o.TotalWorkspacesUpdating = &v
}

// GetTrash returns the Trash field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetTrash() bool {
	if o == nil || o.Trash == nil {
		var ret bool
		return ret
	}
	return *o.Trash
}

// GetTrashOk returns a tuple with the Trash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetTrashOk() (*bool, bool) {
	if o == nil || o.Trash == nil {
		return nil, false
	}
	return o.Trash, true
}

// HasTrash returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasTrash() bool {
	if o != nil && o.Trash != nil {
		return true
	}

	return false
}

// SetTrash gets a reference to the given bool and assigns it to the Trash field.
func (o *BTGlobalTreeNodeSummaryInfo) SetTrash(v bool) {
	o.Trash = &v
}

// GetTrashedAt returns the TrashedAt field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetTrashedAt() JSONTime {
	if o == nil || o.TrashedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.TrashedAt
}

// GetTrashedAtOk returns a tuple with the TrashedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetTrashedAtOk() (*JSONTime, bool) {
	if o == nil || o.TrashedAt == nil {
		return nil, false
	}
	return o.TrashedAt, true
}

// HasTrashedAt returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasTrashedAt() bool {
	if o != nil && o.TrashedAt != nil {
		return true
	}

	return false
}

// SetTrashedAt gets a reference to the given JSONTime and assigns it to the TrashedAt field.
func (o *BTGlobalTreeNodeSummaryInfo) SetTrashedAt(v JSONTime) {
	o.TrashedAt = &v
}

// GetUserAccountLimitsBreached returns the UserAccountLimitsBreached field value if set, zero value otherwise.
func (o *BTGlobalTreeNodeSummaryInfo) GetUserAccountLimitsBreached() bool {
	if o == nil || o.UserAccountLimitsBreached == nil {
		var ret bool
		return ret
	}
	return *o.UserAccountLimitsBreached
}

// GetUserAccountLimitsBreachedOk returns a tuple with the UserAccountLimitsBreached field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodeSummaryInfo) GetUserAccountLimitsBreachedOk() (*bool, bool) {
	if o == nil || o.UserAccountLimitsBreached == nil {
		return nil, false
	}
	return o.UserAccountLimitsBreached, true
}

// HasUserAccountLimitsBreached returns a boolean if a field has been set.
func (o *BTGlobalTreeNodeSummaryInfo) HasUserAccountLimitsBreached() bool {
	if o != nil && o.UserAccountLimitsBreached != nil {
		return true
	}

	return false
}

// SetUserAccountLimitsBreached gets a reference to the given bool and assigns it to the UserAccountLimitsBreached field.
func (o *BTGlobalTreeNodeSummaryInfo) SetUserAccountLimitsBreached(v bool) {
	o.UserAccountLimitsBreached = &v
}

func (o BTGlobalTreeNodeSummaryInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanMove != nil {
		toSerialize["canMove"] = o.CanMove
	}
	if o.ConnectionName != nil {
		toSerialize["connectionName"] = o.ConnectionName
	}
	if o.ConnectionNames != nil {
		toSerialize["connectionNames"] = o.ConnectionNames
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsContainer != nil {
		toSerialize["isContainer"] = o.IsContainer
	}
	if o.IsEnterpriseOwned != nil {
		toSerialize["isEnterpriseOwned"] = o.IsEnterpriseOwned
	}
	if o.IsExternalConnectionResource != nil {
		toSerialize["isExternalConnectionResource"] = o.IsExternalConnectionResource
	}
	if o.IsMutable != nil {
		toSerialize["isMutable"] = o.IsMutable
	}
	if true {
		toSerialize["jsonType"] = o.JsonType
	}
	if o.ModifiedAt != nil {
		toSerialize["modifiedAt"] = o.ModifiedAt
	}
	if o.ModifiedBy != nil {
		toSerialize["modifiedBy"] = o.ModifiedBy
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.ResourceType != nil {
		toSerialize["resourceType"] = o.ResourceType
	}
	if o.TreeHref != nil {
		toSerialize["treeHref"] = o.TreeHref
	}
	if o.UnparentHref != nil {
		toSerialize["unparentHref"] = o.UnparentHref
	}
	if o.ViewRef != nil {
		toSerialize["viewRef"] = o.ViewRef
	}
	if o.AnonymousAccessAllowed != nil {
		toSerialize["anonymousAccessAllowed"] = o.AnonymousAccessAllowed
	}
	if o.AnonymousAllowsExport != nil {
		toSerialize["anonymousAllowsExport"] = o.AnonymousAllowsExport
	}
	if o.CanUnshare != nil {
		toSerialize["canUnshare"] = o.CanUnshare
	}
	if o.CreatedWithEducationPlan != nil {
		toSerialize["createdWithEducationPlan"] = o.CreatedWithEducationPlan
	}
	if o.DefaultElementId != nil {
		toSerialize["defaultElementId"] = o.DefaultElementId
	}
	if o.DefaultVersionGraphMode != nil {
		toSerialize["defaultVersionGraphMode"] = o.DefaultVersionGraphMode
	}
	if o.DefaultVersionGraphShowAutoVersions != nil {
		toSerialize["defaultVersionGraphShowAutoVersions"] = o.DefaultVersionGraphShowAutoVersions
	}
	if o.DefaultVersionGraphShowMerges != nil {
		toSerialize["defaultVersionGraphShowMerges"] = o.DefaultVersionGraphShowMerges
	}
	if o.DefaultWorkspace != nil {
		toSerialize["defaultWorkspace"] = o.DefaultWorkspace
	}
	if o.DocumentLabels != nil {
		toSerialize["documentLabels"] = o.DocumentLabels
	}
	if o.DocumentType != nil {
		toSerialize["documentType"] = o.DocumentType
	}
	if o.ForceExportRules != nil {
		toSerialize["forceExportRules"] = o.ForceExportRules
	}
	if o.HasReleaseRevisionableObjects != nil {
		toSerialize["hasReleaseRevisionableObjects"] = o.HasReleaseRevisionableObjects
	}
	if o.HasRelevantInsertables != nil {
		toSerialize["hasRelevantInsertables"] = o.HasRelevantInsertables
	}
	if o.IsOrphaned != nil {
		toSerialize["isOrphaned"] = o.IsOrphaned
	}
	if o.IsUsingManagedWorkflow != nil {
		toSerialize["isUsingManagedWorkflow"] = o.IsUsingManagedWorkflow
	}
	if o.LikedByCurrentUser != nil {
		toSerialize["likedByCurrentUser"] = o.LikedByCurrentUser
	}
	if o.Likes != nil {
		toSerialize["likes"] = o.Likes
	}
	if o.NotRevisionManaged != nil {
		toSerialize["notRevisionManaged"] = o.NotRevisionManaged
	}
	if o.Notes != nil {
		toSerialize["notes"] = o.Notes
	}
	if o.NumberOfTimesCopied != nil {
		toSerialize["numberOfTimesCopied"] = o.NumberOfTimesCopied
	}
	if o.NumberOfTimesReferenced != nil {
		toSerialize["numberOfTimesReferenced"] = o.NumberOfTimesReferenced
	}
	if o.ParentId != nil {
		toSerialize["parentId"] = o.ParentId
	}
	if o.Permission != nil {
		toSerialize["permission"] = o.Permission
	}
	if o.PermissionSet != nil {
		toSerialize["permissionSet"] = o.PermissionSet
	}
	if o.Public != nil {
		toSerialize["public"] = o.Public
	}
	if o.PublishedVersionId != nil {
		toSerialize["publishedVersionId"] = o.PublishedVersionId
	}
	if o.RecentVersion != nil {
		toSerialize["recentVersion"] = o.RecentVersion
	}
	if o.Sequence != nil {
		toSerialize["sequence"] = o.Sequence
	}
	if o.SupportTeamUserAndShared != nil {
		toSerialize["supportTeamUserAndShared"] = o.SupportTeamUserAndShared
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Thumbnail != nil {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	if o.TotalWorkspacesScheduledForUpdate != nil {
		toSerialize["totalWorkspacesScheduledForUpdate"] = o.TotalWorkspacesScheduledForUpdate
	}
	if o.TotalWorkspacesUpdating != nil {
		toSerialize["totalWorkspacesUpdating"] = o.TotalWorkspacesUpdating
	}
	if o.Trash != nil {
		toSerialize["trash"] = o.Trash
	}
	if o.TrashedAt != nil {
		toSerialize["trashedAt"] = o.TrashedAt
	}
	if o.UserAccountLimitsBreached != nil {
		toSerialize["userAccountLimitsBreached"] = o.UserAccountLimitsBreached
	}
	return json.Marshal(toSerialize)
}

type NullableBTGlobalTreeNodeSummaryInfo struct {
	value *BTGlobalTreeNodeSummaryInfo
	isSet bool
}

func (v NullableBTGlobalTreeNodeSummaryInfo) Get() *BTGlobalTreeNodeSummaryInfo {
	return v.value
}

func (v *NullableBTGlobalTreeNodeSummaryInfo) Set(val *BTGlobalTreeNodeSummaryInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTGlobalTreeNodeSummaryInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTGlobalTreeNodeSummaryInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTGlobalTreeNodeSummaryInfo(val *BTGlobalTreeNodeSummaryInfo) *NullableBTGlobalTreeNodeSummaryInfo {
	return &NullableBTGlobalTreeNodeSummaryInfo{value: val, isSet: true}
}

func (v NullableBTGlobalTreeNodeSummaryInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTGlobalTreeNodeSummaryInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
