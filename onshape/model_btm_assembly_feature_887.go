/*
Onshape REST API

The Onshape REST API consumed by all client. # Authorization The simplest way to authorize and enable the **Try it out** functionality is to sign in to Onshape and use the current session. The **Authorize** button enables other authorization techniques. To ensure the current session isn't used when trying other authentication techniques, make sure to remove the Onshape cookie as per the instructions for your particular browser. Alternatively, a private or incognito window may be used. Here's [how to remove a specific cookie on Chrome](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site). - **Current Session** authorization is enabled by default if the browser is already signed in to [Onshape](/). - **OAuth2** authorization uses an Onshape OAuth2 app created on the [Onshape Developer Portal](https://dev-portal.onshape.com/oauthApps). The redirect URL field should include `https://cad.onshape.com/glassworks/explorer/oauth2-redirect.html`. - **API Key** authorization using basic authentication is also available. The keys can be generated in the [Onshape Developer Portal](https://dev-portal.onshape.com/keys). In the authentication dialog, enter the access key in the `Username` field, and enter the secret key in the `Password` field. Basic authentication should only be used during the development process since sharing API Keys provides the same level of access as a username and password.

API version: 1.171.24257-687de06de652
Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
	"fmt"
)

// BTMAssemblyFeature887 - struct for BTMAssemblyFeature887
type BTMAssemblyFeature887 struct {
	implBTMAssemblyFeature887 interface{}
}

// BTMAssemblyFeatureFolder2543AsBTMAssemblyFeature887 is a convenience function that returns BTMAssemblyFeatureFolder2543 wrapped in BTMAssemblyFeature887
func (o *BTMAssemblyFeatureFolder2543) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTMMateConnector66AsBTMAssemblyFeature887 is a convenience function that returns BTMMateConnector66 wrapped in BTMAssemblyFeature887
func (o *BTMMateConnector66) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTAssemblySimulation2246AsBTMAssemblyFeature887 is a convenience function that returns BTAssemblySimulation2246 wrapped in BTMAssemblyFeature887
func (o *BTAssemblySimulation2246) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTMAssemblyFeature21022AsBTMAssemblyFeature887 is a convenience function that returns BTMAssemblyFeature21022 wrapped in BTMAssemblyFeature887
func (o *BTMAssemblyFeature21022) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTMMate64AsBTMAssemblyFeature887 is a convenience function that returns BTMMate64 wrapped in BTMAssemblyFeature887
func (o *BTMMate64) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTMAssemblyFeature12218AsBTMAssemblyFeature887 is a convenience function that returns BTMAssemblyFeature12218 wrapped in BTMAssemblyFeature887
func (o *BTMAssemblyFeature12218) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTMMateRelation1412AsBTMAssemblyFeature887 is a convenience function that returns BTMMateRelation1412 wrapped in BTMAssemblyFeature887
func (o *BTMMateRelation1412) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTMParametricPartStudioFeature3883AsBTMAssemblyFeature887 is a convenience function that returns BTMParametricPartStudioFeature3883 wrapped in BTMAssemblyFeature887
func (o *BTMParametricPartStudioFeature3883) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTExplosion2754AsBTMAssemblyFeature887 is a convenience function that returns BTExplosion2754 wrapped in BTMAssemblyFeature887
func (o *BTExplosion2754) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTExplosionStepFeature3008AsBTMAssemblyFeature887 is a convenience function that returns BTExplosionStepFeature3008 wrapped in BTMAssemblyFeature887
func (o *BTExplosionStepFeature3008) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTMAssemblyPatternFeature2241AsBTMAssemblyFeature887 is a convenience function that returns BTMAssemblyPatternFeature2241 wrapped in BTMAssemblyFeature887
func (o *BTMAssemblyPatternFeature2241) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTMGenerativeDesignFeature3195AsBTMAssemblyFeature887 is a convenience function that returns BTMGenerativeDesignFeature3195 wrapped in BTMAssemblyFeature887
func (o *BTMGenerativeDesignFeature3195) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTMLoad3538AsBTMAssemblyFeature887 is a convenience function that returns BTMLoad3538 wrapped in BTMAssemblyFeature887
func (o *BTMLoad3538) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTMMateGroup65AsBTMAssemblyFeature887 is a convenience function that returns BTMMateGroup65 wrapped in BTMAssemblyFeature887
func (o *BTMMateGroup65) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTMNonGeometricItem1864AsBTMAssemblyFeature887 is a convenience function that returns BTMNonGeometricItem1864 wrapped in BTMAssemblyFeature887
func (o *BTMNonGeometricItem1864) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTMAssemblyReplicateFeature1351AsBTMAssemblyFeature887 is a convenience function that returns BTMAssemblyReplicateFeature1351 wrapped in BTMAssemblyFeature887
func (o *BTMAssemblyReplicateFeature1351) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// BTMGeometryMate1260AsBTMAssemblyFeature887 is a convenience function that returns BTMGeometryMate1260 wrapped in BTMAssemblyFeature887
func (o *BTMGeometryMate1260) AsBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	return &BTMAssemblyFeature887{o}
}

// NewBTMAssemblyFeature887 instantiates a new BTMAssemblyFeature887 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMAssemblyFeature887() *BTMAssemblyFeature887 {
	this := BTMAssemblyFeature887{Newbase_BTMAssemblyFeature887()}
	return &this
}

// NewBTMAssemblyFeature887WithDefaults instantiates a new BTMAssemblyFeature887 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMAssemblyFeature887WithDefaults() *BTMAssemblyFeature887 {
	this := BTMAssemblyFeature887{Newbase_BTMAssemblyFeature887WithDefaults()}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetBtType() string {
	type getResult interface {
		GetBtType() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtType()
	} else {
		var de string
		return de
	}
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetBtTypeOk() (*string, bool) {
	type getResult interface {
		GetBtTypeOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtTypeOk()
	} else {
		return nil, false
	}
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasBtType() bool {
	type getResult interface {
		HasBtType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasBtType()
	} else {
		return false
	}
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMAssemblyFeature887) SetBtType(v string) {
	type getResult interface {
		SetBtType(v string)
	}

	o.GetActualInstance().(getResult).SetBtType(v)
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetFeatureId() string {
	type getResult interface {
		GetFeatureId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFeatureId()
	} else {
		var de string
		return de
	}
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetFeatureIdOk() (*string, bool) {
	type getResult interface {
		GetFeatureIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFeatureIdOk()
	} else {
		return nil, false
	}
}

// HasFeatureId returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasFeatureId() bool {
	type getResult interface {
		HasFeatureId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasFeatureId()
	} else {
		return false
	}
}

// SetFeatureId gets a reference to the given string and assigns it to the FeatureId field.
func (o *BTMAssemblyFeature887) SetFeatureId(v string) {
	type getResult interface {
		SetFeatureId(v string)
	}

	o.GetActualInstance().(getResult).SetFeatureId(v)
}

// GetFeatureType returns the FeatureType field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetFeatureType() string {
	type getResult interface {
		GetFeatureType() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFeatureType()
	} else {
		var de string
		return de
	}
}

// GetFeatureTypeOk returns a tuple with the FeatureType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetFeatureTypeOk() (*string, bool) {
	type getResult interface {
		GetFeatureTypeOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFeatureTypeOk()
	} else {
		return nil, false
	}
}

// HasFeatureType returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasFeatureType() bool {
	type getResult interface {
		HasFeatureType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasFeatureType()
	} else {
		return false
	}
}

// SetFeatureType gets a reference to the given string and assigns it to the FeatureType field.
func (o *BTMAssemblyFeature887) SetFeatureType(v string) {
	type getResult interface {
		SetFeatureType(v string)
	}

	o.GetActualInstance().(getResult).SetFeatureType(v)
}

// GetImportMicroversion returns the ImportMicroversion field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetImportMicroversion() string {
	type getResult interface {
		GetImportMicroversion() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetImportMicroversion()
	} else {
		var de string
		return de
	}
}

// GetImportMicroversionOk returns a tuple with the ImportMicroversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetImportMicroversionOk() (*string, bool) {
	type getResult interface {
		GetImportMicroversionOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetImportMicroversionOk()
	} else {
		return nil, false
	}
}

// HasImportMicroversion returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasImportMicroversion() bool {
	type getResult interface {
		HasImportMicroversion() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasImportMicroversion()
	} else {
		return false
	}
}

// SetImportMicroversion gets a reference to the given string and assigns it to the ImportMicroversion field.
func (o *BTMAssemblyFeature887) SetImportMicroversion(v string) {
	type getResult interface {
		SetImportMicroversion(v string)
	}

	o.GetActualInstance().(getResult).SetImportMicroversion(v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetName() string {
	type getResult interface {
		GetName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetName()
	} else {
		var de string
		return de
	}
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetNameOk() (*string, bool) {
	type getResult interface {
		GetNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNameOk()
	} else {
		return nil, false
	}
}

// HasName returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasName() bool {
	type getResult interface {
		HasName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasName()
	} else {
		return false
	}
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTMAssemblyFeature887) SetName(v string) {
	type getResult interface {
		SetName(v string)
	}

	o.GetActualInstance().(getResult).SetName(v)
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetNamespace() string {
	type getResult interface {
		GetNamespace() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNamespace()
	} else {
		var de string
		return de
	}
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetNamespaceOk() (*string, bool) {
	type getResult interface {
		GetNamespaceOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNamespaceOk()
	} else {
		return nil, false
	}
}

// HasNamespace returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasNamespace() bool {
	type getResult interface {
		HasNamespace() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasNamespace()
	} else {
		return false
	}
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *BTMAssemblyFeature887) SetNamespace(v string) {
	type getResult interface {
		SetNamespace(v string)
	}

	o.GetActualInstance().(getResult).SetNamespace(v)
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetNodeId() string {
	type getResult interface {
		GetNodeId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNodeId()
	} else {
		var de string
		return de
	}
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetNodeIdOk() (*string, bool) {
	type getResult interface {
		GetNodeIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNodeIdOk()
	} else {
		return nil, false
	}
}

// HasNodeId returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasNodeId() bool {
	type getResult interface {
		HasNodeId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasNodeId()
	} else {
		return false
	}
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *BTMAssemblyFeature887) SetNodeId(v string) {
	type getResult interface {
		SetNodeId(v string)
	}

	o.GetActualInstance().(getResult).SetNodeId(v)
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetParameters() []BTMParameter1 {
	type getResult interface {
		GetParameters() []BTMParameter1
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParameters()
	} else {
		var de []BTMParameter1
		return de
	}
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetParametersOk() ([]BTMParameter1, bool) {
	type getResult interface {
		GetParametersOk() ([]BTMParameter1, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParametersOk()
	} else {
		return nil, false
	}
}

// HasParameters returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasParameters() bool {
	type getResult interface {
		HasParameters() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasParameters()
	} else {
		return false
	}
}

// SetParameters gets a reference to the given []BTMParameter1 and assigns it to the Parameters field.
func (o *BTMAssemblyFeature887) SetParameters(v []BTMParameter1) {
	type getResult interface {
		SetParameters(v []BTMParameter1)
	}

	o.GetActualInstance().(getResult).SetParameters(v)
}

// GetReturnAfterSubfeatures returns the ReturnAfterSubfeatures field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetReturnAfterSubfeatures() bool {
	type getResult interface {
		GetReturnAfterSubfeatures() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetReturnAfterSubfeatures()
	} else {
		var de bool
		return de
	}
}

// GetReturnAfterSubfeaturesOk returns a tuple with the ReturnAfterSubfeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetReturnAfterSubfeaturesOk() (*bool, bool) {
	type getResult interface {
		GetReturnAfterSubfeaturesOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetReturnAfterSubfeaturesOk()
	} else {
		return nil, false
	}
}

// HasReturnAfterSubfeatures returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasReturnAfterSubfeatures() bool {
	type getResult interface {
		HasReturnAfterSubfeatures() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasReturnAfterSubfeatures()
	} else {
		return false
	}
}

// SetReturnAfterSubfeatures gets a reference to the given bool and assigns it to the ReturnAfterSubfeatures field.
func (o *BTMAssemblyFeature887) SetReturnAfterSubfeatures(v bool) {
	type getResult interface {
		SetReturnAfterSubfeatures(v bool)
	}

	o.GetActualInstance().(getResult).SetReturnAfterSubfeatures(v)
}

// GetSubFeatures returns the SubFeatures field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetSubFeatures() []BTMFeature134 {
	type getResult interface {
		GetSubFeatures() []BTMFeature134
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSubFeatures()
	} else {
		var de []BTMFeature134
		return de
	}
}

// GetSubFeaturesOk returns a tuple with the SubFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetSubFeaturesOk() ([]BTMFeature134, bool) {
	type getResult interface {
		GetSubFeaturesOk() ([]BTMFeature134, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSubFeaturesOk()
	} else {
		return nil, false
	}
}

// HasSubFeatures returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasSubFeatures() bool {
	type getResult interface {
		HasSubFeatures() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSubFeatures()
	} else {
		return false
	}
}

// SetSubFeatures gets a reference to the given []BTMFeature134 and assigns it to the SubFeatures field.
func (o *BTMAssemblyFeature887) SetSubFeatures(v []BTMFeature134) {
	type getResult interface {
		SetSubFeatures(v []BTMFeature134)
	}

	o.GetActualInstance().(getResult).SetSubFeatures(v)
}

// GetSuppressed returns the Suppressed field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetSuppressed() bool {
	type getResult interface {
		GetSuppressed() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSuppressed()
	} else {
		var de bool
		return de
	}
}

// GetSuppressedOk returns a tuple with the Suppressed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetSuppressedOk() (*bool, bool) {
	type getResult interface {
		GetSuppressedOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSuppressedOk()
	} else {
		return nil, false
	}
}

// HasSuppressed returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasSuppressed() bool {
	type getResult interface {
		HasSuppressed() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSuppressed()
	} else {
		return false
	}
}

// SetSuppressed gets a reference to the given bool and assigns it to the Suppressed field.
func (o *BTMAssemblyFeature887) SetSuppressed(v bool) {
	type getResult interface {
		SetSuppressed(v bool)
	}

	o.GetActualInstance().(getResult).SetSuppressed(v)
}

// GetSuppressionConfigured returns the SuppressionConfigured field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetSuppressionConfigured() bool {
	type getResult interface {
		GetSuppressionConfigured() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSuppressionConfigured()
	} else {
		var de bool
		return de
	}
}

// GetSuppressionConfiguredOk returns a tuple with the SuppressionConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetSuppressionConfiguredOk() (*bool, bool) {
	type getResult interface {
		GetSuppressionConfiguredOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSuppressionConfiguredOk()
	} else {
		return nil, false
	}
}

// HasSuppressionConfigured returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasSuppressionConfigured() bool {
	type getResult interface {
		HasSuppressionConfigured() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSuppressionConfigured()
	} else {
		return false
	}
}

// SetSuppressionConfigured gets a reference to the given bool and assigns it to the SuppressionConfigured field.
func (o *BTMAssemblyFeature887) SetSuppressionConfigured(v bool) {
	type getResult interface {
		SetSuppressionConfigured(v bool)
	}

	o.GetActualInstance().(getResult).SetSuppressionConfigured(v)
}

// GetVariableStudioReference returns the VariableStudioReference field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetVariableStudioReference() bool {
	type getResult interface {
		GetVariableStudioReference() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVariableStudioReference()
	} else {
		var de bool
		return de
	}
}

// GetVariableStudioReferenceOk returns a tuple with the VariableStudioReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetVariableStudioReferenceOk() (*bool, bool) {
	type getResult interface {
		GetVariableStudioReferenceOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVariableStudioReferenceOk()
	} else {
		return nil, false
	}
}

// HasVariableStudioReference returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasVariableStudioReference() bool {
	type getResult interface {
		HasVariableStudioReference() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasVariableStudioReference()
	} else {
		return false
	}
}

// SetVariableStudioReference gets a reference to the given bool and assigns it to the VariableStudioReference field.
func (o *BTMAssemblyFeature887) SetVariableStudioReference(v bool) {
	type getResult interface {
		SetVariableStudioReference(v bool)
	}

	o.GetActualInstance().(getResult).SetVariableStudioReference(v)
}

// GetAuxiliaryTreeFeature returns the AuxiliaryTreeFeature field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetAuxiliaryTreeFeature() bool {
	type getResult interface {
		GetAuxiliaryTreeFeature() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetAuxiliaryTreeFeature()
	} else {
		var de bool
		return de
	}
}

// GetAuxiliaryTreeFeatureOk returns a tuple with the AuxiliaryTreeFeature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetAuxiliaryTreeFeatureOk() (*bool, bool) {
	type getResult interface {
		GetAuxiliaryTreeFeatureOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetAuxiliaryTreeFeatureOk()
	} else {
		return nil, false
	}
}

// HasAuxiliaryTreeFeature returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasAuxiliaryTreeFeature() bool {
	type getResult interface {
		HasAuxiliaryTreeFeature() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasAuxiliaryTreeFeature()
	} else {
		return false
	}
}

// SetAuxiliaryTreeFeature gets a reference to the given bool and assigns it to the AuxiliaryTreeFeature field.
func (o *BTMAssemblyFeature887) SetAuxiliaryTreeFeature(v bool) {
	type getResult interface {
		SetAuxiliaryTreeFeature(v bool)
	}

	o.GetActualInstance().(getResult).SetAuxiliaryTreeFeature(v)
}

// GetFeatureFolder returns the FeatureFolder field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetFeatureFolder() bool {
	type getResult interface {
		GetFeatureFolder() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFeatureFolder()
	} else {
		var de bool
		return de
	}
}

// GetFeatureFolderOk returns a tuple with the FeatureFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetFeatureFolderOk() (*bool, bool) {
	type getResult interface {
		GetFeatureFolderOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFeatureFolderOk()
	} else {
		return nil, false
	}
}

// HasFeatureFolder returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasFeatureFolder() bool {
	type getResult interface {
		HasFeatureFolder() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasFeatureFolder()
	} else {
		return false
	}
}

// SetFeatureFolder gets a reference to the given bool and assigns it to the FeatureFolder field.
func (o *BTMAssemblyFeature887) SetFeatureFolder(v bool) {
	type getResult interface {
		SetFeatureFolder(v bool)
	}

	o.GetActualInstance().(getResult).SetFeatureFolder(v)
}

// GetFeatureListFieldIndex returns the FeatureListFieldIndex field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetFeatureListFieldIndex() int32 {
	type getResult interface {
		GetFeatureListFieldIndex() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFeatureListFieldIndex()
	} else {
		var de int32
		return de
	}
}

// GetFeatureListFieldIndexOk returns a tuple with the FeatureListFieldIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetFeatureListFieldIndexOk() (*int32, bool) {
	type getResult interface {
		GetFeatureListFieldIndexOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFeatureListFieldIndexOk()
	} else {
		return nil, false
	}
}

// HasFeatureListFieldIndex returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasFeatureListFieldIndex() bool {
	type getResult interface {
		HasFeatureListFieldIndex() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasFeatureListFieldIndex()
	} else {
		return false
	}
}

// SetFeatureListFieldIndex gets a reference to the given int32 and assigns it to the FeatureListFieldIndex field.
func (o *BTMAssemblyFeature887) SetFeatureListFieldIndex(v int32) {
	type getResult interface {
		SetFeatureListFieldIndex(v int32)
	}

	o.GetActualInstance().(getResult).SetFeatureListFieldIndex(v)
}

// GetFieldIndexForOwnedMateConnectors returns the FieldIndexForOwnedMateConnectors field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetFieldIndexForOwnedMateConnectors() int32 {
	type getResult interface {
		GetFieldIndexForOwnedMateConnectors() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFieldIndexForOwnedMateConnectors()
	} else {
		var de int32
		return de
	}
}

// GetFieldIndexForOwnedMateConnectorsOk returns a tuple with the FieldIndexForOwnedMateConnectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetFieldIndexForOwnedMateConnectorsOk() (*int32, bool) {
	type getResult interface {
		GetFieldIndexForOwnedMateConnectorsOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFieldIndexForOwnedMateConnectorsOk()
	} else {
		return nil, false
	}
}

// HasFieldIndexForOwnedMateConnectors returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasFieldIndexForOwnedMateConnectors() bool {
	type getResult interface {
		HasFieldIndexForOwnedMateConnectors() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasFieldIndexForOwnedMateConnectors()
	} else {
		return false
	}
}

// SetFieldIndexForOwnedMateConnectors gets a reference to the given int32 and assigns it to the FieldIndexForOwnedMateConnectors field.
func (o *BTMAssemblyFeature887) SetFieldIndexForOwnedMateConnectors(v int32) {
	type getResult interface {
		SetFieldIndexForOwnedMateConnectors(v int32)
	}

	o.GetActualInstance().(getResult).SetFieldIndexForOwnedMateConnectors(v)
}

// GetOccurrenceQueriesFromAllConfigurations returns the OccurrenceQueriesFromAllConfigurations field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetOccurrenceQueriesFromAllConfigurations() []BTMIndividualQueryWithOccurrenceBase904 {
	type getResult interface {
		GetOccurrenceQueriesFromAllConfigurations() []BTMIndividualQueryWithOccurrenceBase904
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetOccurrenceQueriesFromAllConfigurations()
	} else {
		var de []BTMIndividualQueryWithOccurrenceBase904
		return de
	}
}

// GetOccurrenceQueriesFromAllConfigurationsOk returns a tuple with the OccurrenceQueriesFromAllConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetOccurrenceQueriesFromAllConfigurationsOk() ([]BTMIndividualQueryWithOccurrenceBase904, bool) {
	type getResult interface {
		GetOccurrenceQueriesFromAllConfigurationsOk() ([]BTMIndividualQueryWithOccurrenceBase904, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetOccurrenceQueriesFromAllConfigurationsOk()
	} else {
		return nil, false
	}
}

// HasOccurrenceQueriesFromAllConfigurations returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasOccurrenceQueriesFromAllConfigurations() bool {
	type getResult interface {
		HasOccurrenceQueriesFromAllConfigurations() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasOccurrenceQueriesFromAllConfigurations()
	} else {
		return false
	}
}

// SetOccurrenceQueriesFromAllConfigurations gets a reference to the given []BTMIndividualQueryWithOccurrenceBase904 and assigns it to the OccurrenceQueriesFromAllConfigurations field.
func (o *BTMAssemblyFeature887) SetOccurrenceQueriesFromAllConfigurations(v []BTMIndividualQueryWithOccurrenceBase904) {
	type getResult interface {
		SetOccurrenceQueriesFromAllConfigurations(v []BTMIndividualQueryWithOccurrenceBase904)
	}

	o.GetActualInstance().(getResult).SetOccurrenceQueriesFromAllConfigurations(v)
}

// GetParametricInstanceFeature returns the ParametricInstanceFeature field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetParametricInstanceFeature() bool {
	type getResult interface {
		GetParametricInstanceFeature() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParametricInstanceFeature()
	} else {
		var de bool
		return de
	}
}

// GetParametricInstanceFeatureOk returns a tuple with the ParametricInstanceFeature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetParametricInstanceFeatureOk() (*bool, bool) {
	type getResult interface {
		GetParametricInstanceFeatureOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParametricInstanceFeatureOk()
	} else {
		return nil, false
	}
}

// HasParametricInstanceFeature returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasParametricInstanceFeature() bool {
	type getResult interface {
		HasParametricInstanceFeature() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasParametricInstanceFeature()
	} else {
		return false
	}
}

// SetParametricInstanceFeature gets a reference to the given bool and assigns it to the ParametricInstanceFeature field.
func (o *BTMAssemblyFeature887) SetParametricInstanceFeature(v bool) {
	type getResult interface {
		SetParametricInstanceFeature(v bool)
	}

	o.GetActualInstance().(getResult).SetParametricInstanceFeature(v)
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *BTMAssemblyFeature887) GetVersion() int32 {
	type getResult interface {
		GetVersion() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVersion()
	} else {
		var de int32
		return de
	}
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMAssemblyFeature887) GetVersionOk() (*int32, bool) {
	type getResult interface {
		GetVersionOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVersionOk()
	} else {
		return nil, false
	}
}

// HasVersion returns a boolean if a field has been set.
func (o *BTMAssemblyFeature887) HasVersion() bool {
	type getResult interface {
		HasVersion() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasVersion()
	} else {
		return false
	}
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *BTMAssemblyFeature887) SetVersion(v int32) {
	type getResult interface {
		SetVersion(v int32)
	}

	o.GetActualInstance().(getResult).SetVersion(v)
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *BTMAssemblyFeature887) UnmarshalJSON(data []byte) error {
	var err error
	// use discriminator value to speed up the lookup
	var jsonDict map[string]interface{}
	err = newStrictDecoder(data).Decode(&jsonDict)
	if err != nil {
		return fmt.Errorf("Failed to unmarshal JSON into map for the discriminator lookup.")
	}

	// check if the discriminator value is 'BTAssemblySimulation-2246'
	if jsonDict["btType"] == "BTAssemblySimulation-2246" {
		// try to unmarshal JSON data into BTAssemblySimulation2246
		var qr *BTAssemblySimulation2246
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTAssemblySimulation2246: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTExplosion-2754'
	if jsonDict["btType"] == "BTExplosion-2754" {
		// try to unmarshal JSON data into BTExplosion2754
		var qr *BTExplosion2754
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTExplosion2754: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTExplosionStepFeature-3008'
	if jsonDict["btType"] == "BTExplosionStepFeature-3008" {
		// try to unmarshal JSON data into BTExplosionStepFeature3008
		var qr *BTExplosionStepFeature3008
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTExplosionStepFeature3008: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMAssemblyFeature1-2218'
	if jsonDict["btType"] == "BTMAssemblyFeature1-2218" {
		// try to unmarshal JSON data into BTMAssemblyFeature12218
		var qr *BTMAssemblyFeature12218
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTMAssemblyFeature12218: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMAssemblyFeature2-1022'
	if jsonDict["btType"] == "BTMAssemblyFeature2-1022" {
		// try to unmarshal JSON data into BTMAssemblyFeature21022
		var qr *BTMAssemblyFeature21022
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTMAssemblyFeature21022: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMAssemblyFeatureFolder-2543'
	if jsonDict["btType"] == "BTMAssemblyFeatureFolder-2543" {
		// try to unmarshal JSON data into BTMAssemblyFeatureFolder2543
		var qr *BTMAssemblyFeatureFolder2543
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTMAssemblyFeatureFolder2543: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMAssemblyPatternFeature-2241'
	if jsonDict["btType"] == "BTMAssemblyPatternFeature-2241" {
		// try to unmarshal JSON data into BTMAssemblyPatternFeature2241
		var qr *BTMAssemblyPatternFeature2241
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTMAssemblyPatternFeature2241: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMAssemblyReplicateFeature-1351'
	if jsonDict["btType"] == "BTMAssemblyReplicateFeature-1351" {
		// try to unmarshal JSON data into BTMAssemblyReplicateFeature1351
		var qr *BTMAssemblyReplicateFeature1351
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTMAssemblyReplicateFeature1351: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMGenerativeDesignFeature-3195'
	if jsonDict["btType"] == "BTMGenerativeDesignFeature-3195" {
		// try to unmarshal JSON data into BTMGenerativeDesignFeature3195
		var qr *BTMGenerativeDesignFeature3195
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTMGenerativeDesignFeature3195: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMGeometryMate-1260'
	if jsonDict["btType"] == "BTMGeometryMate-1260" {
		// try to unmarshal JSON data into BTMGeometryMate1260
		var qr *BTMGeometryMate1260
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTMGeometryMate1260: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMLoad-3538'
	if jsonDict["btType"] == "BTMLoad-3538" {
		// try to unmarshal JSON data into BTMLoad3538
		var qr *BTMLoad3538
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTMLoad3538: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMMate-64'
	if jsonDict["btType"] == "BTMMate-64" {
		// try to unmarshal JSON data into BTMMate64
		var qr *BTMMate64
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTMMate64: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMMateConnector-66'
	if jsonDict["btType"] == "BTMMateConnector-66" {
		// try to unmarshal JSON data into BTMMateConnector66
		var qr *BTMMateConnector66
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTMMateConnector66: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMMateGroup-65'
	if jsonDict["btType"] == "BTMMateGroup-65" {
		// try to unmarshal JSON data into BTMMateGroup65
		var qr *BTMMateGroup65
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTMMateGroup65: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMMateRelation-1412'
	if jsonDict["btType"] == "BTMMateRelation-1412" {
		// try to unmarshal JSON data into BTMMateRelation1412
		var qr *BTMMateRelation1412
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTMMateRelation1412: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMNonGeometricItem-1864'
	if jsonDict["btType"] == "BTMNonGeometricItem-1864" {
		// try to unmarshal JSON data into BTMNonGeometricItem1864
		var qr *BTMNonGeometricItem1864
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTMNonGeometricItem1864: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTMParametricPartStudioFeature-3883'
	if jsonDict["btType"] == "BTMParametricPartStudioFeature-3883" {
		// try to unmarshal JSON data into BTMParametricPartStudioFeature3883
		var qr *BTMParametricPartStudioFeature3883
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTMAssemblyFeature887 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTMAssemblyFeature887 = nil
			return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as BTMParametricPartStudioFeature3883: %s", err.Error())
		}
	}

	var qtx *base_BTMAssemblyFeature887
	err = json.Unmarshal(data, &qtx)
	if err == nil {
		dst.implBTMAssemblyFeature887 = qtx
		return nil // data stored in dst.base_BTMAssemblyFeature887, return on the first match
	} else {
		dst.implBTMAssemblyFeature887 = nil
		return fmt.Errorf("Failed to unmarshal BTMAssemblyFeature887 as base_BTMAssemblyFeature887: %s", err.Error())
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BTMAssemblyFeature887) MarshalJSON() ([]byte, error) {
	ret := src.GetActualInstance()
	if ret == nil {
		return nil, nil // no data in oneOf schemas
	} else {
		return json.Marshal(&ret)
	}
}

// Get the actual instance
func (obj *BTMAssemblyFeature887) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	return obj.implBTMAssemblyFeature887
}

type NullableBTMAssemblyFeature887 struct {
	value *BTMAssemblyFeature887
	isSet bool
}

func (v NullableBTMAssemblyFeature887) Get() *BTMAssemblyFeature887 {
	return v.value
}

func (v *NullableBTMAssemblyFeature887) Set(val *BTMAssemblyFeature887) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMAssemblyFeature887) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMAssemblyFeature887) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMAssemblyFeature887(val *BTMAssemblyFeature887) *NullableBTMAssemblyFeature887 {
	return &NullableBTMAssemblyFeature887{value: val, isSet: true}
}

func (v NullableBTMAssemblyFeature887) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMAssemblyFeature887) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type base_BTMAssemblyFeature887 struct {
	BtType                                 *string                                   `json:"btType,omitempty"`
	FeatureId                              *string                                   `json:"featureId,omitempty"`
	FeatureType                            *string                                   `json:"featureType,omitempty"`
	ImportMicroversion                     *string                                   `json:"importMicroversion,omitempty"`
	Name                                   *string                                   `json:"name,omitempty"`
	Namespace                              *string                                   `json:"namespace,omitempty"`
	NodeId                                 *string                                   `json:"nodeId,omitempty"`
	Parameters                             []BTMParameter1                           `json:"parameters,omitempty"`
	ReturnAfterSubfeatures                 *bool                                     `json:"returnAfterSubfeatures,omitempty"`
	SubFeatures                            []BTMFeature134                           `json:"subFeatures,omitempty"`
	Suppressed                             *bool                                     `json:"suppressed,omitempty"`
	SuppressionConfigured                  *bool                                     `json:"suppressionConfigured,omitempty"`
	VariableStudioReference                *bool                                     `json:"variableStudioReference,omitempty"`
	AuxiliaryTreeFeature                   *bool                                     `json:"auxiliaryTreeFeature,omitempty"`
	FeatureFolder                          *bool                                     `json:"featureFolder,omitempty"`
	FeatureListFieldIndex                  *int32                                    `json:"featureListFieldIndex,omitempty"`
	FieldIndexForOwnedMateConnectors       *int32                                    `json:"fieldIndexForOwnedMateConnectors,omitempty"`
	OccurrenceQueriesFromAllConfigurations []BTMIndividualQueryWithOccurrenceBase904 `json:"occurrenceQueriesFromAllConfigurations,omitempty"`
	ParametricInstanceFeature              *bool                                     `json:"parametricInstanceFeature,omitempty"`
	Version                                *int32                                    `json:"version,omitempty"`
}

// Newbase_BTMAssemblyFeature887 instantiates a new base_BTMAssemblyFeature887 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func Newbase_BTMAssemblyFeature887() *base_BTMAssemblyFeature887 {
	this := base_BTMAssemblyFeature887{}
	return &this
}

// Newbase_BTMAssemblyFeature887WithDefaults instantiates a new base_BTMAssemblyFeature887 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func Newbase_BTMAssemblyFeature887WithDefaults() *base_BTMAssemblyFeature887 {
	this := base_BTMAssemblyFeature887{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *base_BTMAssemblyFeature887) SetBtType(v string) {
	o.BtType = &v
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetFeatureId() string {
	if o == nil || o.FeatureId == nil {
		var ret string
		return ret
	}
	return *o.FeatureId
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetFeatureIdOk() (*string, bool) {
	if o == nil || o.FeatureId == nil {
		return nil, false
	}
	return o.FeatureId, true
}

// HasFeatureId returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasFeatureId() bool {
	if o != nil && o.FeatureId != nil {
		return true
	}

	return false
}

// SetFeatureId gets a reference to the given string and assigns it to the FeatureId field.
func (o *base_BTMAssemblyFeature887) SetFeatureId(v string) {
	o.FeatureId = &v
}

// GetFeatureType returns the FeatureType field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetFeatureType() string {
	if o == nil || o.FeatureType == nil {
		var ret string
		return ret
	}
	return *o.FeatureType
}

// GetFeatureTypeOk returns a tuple with the FeatureType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetFeatureTypeOk() (*string, bool) {
	if o == nil || o.FeatureType == nil {
		return nil, false
	}
	return o.FeatureType, true
}

// HasFeatureType returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasFeatureType() bool {
	if o != nil && o.FeatureType != nil {
		return true
	}

	return false
}

// SetFeatureType gets a reference to the given string and assigns it to the FeatureType field.
func (o *base_BTMAssemblyFeature887) SetFeatureType(v string) {
	o.FeatureType = &v
}

// GetImportMicroversion returns the ImportMicroversion field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetImportMicroversion() string {
	if o == nil || o.ImportMicroversion == nil {
		var ret string
		return ret
	}
	return *o.ImportMicroversion
}

// GetImportMicroversionOk returns a tuple with the ImportMicroversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetImportMicroversionOk() (*string, bool) {
	if o == nil || o.ImportMicroversion == nil {
		return nil, false
	}
	return o.ImportMicroversion, true
}

// HasImportMicroversion returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasImportMicroversion() bool {
	if o != nil && o.ImportMicroversion != nil {
		return true
	}

	return false
}

// SetImportMicroversion gets a reference to the given string and assigns it to the ImportMicroversion field.
func (o *base_BTMAssemblyFeature887) SetImportMicroversion(v string) {
	o.ImportMicroversion = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *base_BTMAssemblyFeature887) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *base_BTMAssemblyFeature887) SetNamespace(v string) {
	o.Namespace = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetNodeId() string {
	if o == nil || o.NodeId == nil {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetNodeIdOk() (*string, bool) {
	if o == nil || o.NodeId == nil {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasNodeId() bool {
	if o != nil && o.NodeId != nil {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *base_BTMAssemblyFeature887) SetNodeId(v string) {
	o.NodeId = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetParameters() []BTMParameter1 {
	if o == nil || o.Parameters == nil {
		var ret []BTMParameter1
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetParametersOk() ([]BTMParameter1, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []BTMParameter1 and assigns it to the Parameters field.
func (o *base_BTMAssemblyFeature887) SetParameters(v []BTMParameter1) {
	o.Parameters = v
}

// GetReturnAfterSubfeatures returns the ReturnAfterSubfeatures field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetReturnAfterSubfeatures() bool {
	if o == nil || o.ReturnAfterSubfeatures == nil {
		var ret bool
		return ret
	}
	return *o.ReturnAfterSubfeatures
}

// GetReturnAfterSubfeaturesOk returns a tuple with the ReturnAfterSubfeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetReturnAfterSubfeaturesOk() (*bool, bool) {
	if o == nil || o.ReturnAfterSubfeatures == nil {
		return nil, false
	}
	return o.ReturnAfterSubfeatures, true
}

// HasReturnAfterSubfeatures returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasReturnAfterSubfeatures() bool {
	if o != nil && o.ReturnAfterSubfeatures != nil {
		return true
	}

	return false
}

// SetReturnAfterSubfeatures gets a reference to the given bool and assigns it to the ReturnAfterSubfeatures field.
func (o *base_BTMAssemblyFeature887) SetReturnAfterSubfeatures(v bool) {
	o.ReturnAfterSubfeatures = &v
}

// GetSubFeatures returns the SubFeatures field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetSubFeatures() []BTMFeature134 {
	if o == nil || o.SubFeatures == nil {
		var ret []BTMFeature134
		return ret
	}
	return o.SubFeatures
}

// GetSubFeaturesOk returns a tuple with the SubFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetSubFeaturesOk() ([]BTMFeature134, bool) {
	if o == nil || o.SubFeatures == nil {
		return nil, false
	}
	return o.SubFeatures, true
}

// HasSubFeatures returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasSubFeatures() bool {
	if o != nil && o.SubFeatures != nil {
		return true
	}

	return false
}

// SetSubFeatures gets a reference to the given []BTMFeature134 and assigns it to the SubFeatures field.
func (o *base_BTMAssemblyFeature887) SetSubFeatures(v []BTMFeature134) {
	o.SubFeatures = v
}

// GetSuppressed returns the Suppressed field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetSuppressed() bool {
	if o == nil || o.Suppressed == nil {
		var ret bool
		return ret
	}
	return *o.Suppressed
}

// GetSuppressedOk returns a tuple with the Suppressed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetSuppressedOk() (*bool, bool) {
	if o == nil || o.Suppressed == nil {
		return nil, false
	}
	return o.Suppressed, true
}

// HasSuppressed returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasSuppressed() bool {
	if o != nil && o.Suppressed != nil {
		return true
	}

	return false
}

// SetSuppressed gets a reference to the given bool and assigns it to the Suppressed field.
func (o *base_BTMAssemblyFeature887) SetSuppressed(v bool) {
	o.Suppressed = &v
}

// GetSuppressionConfigured returns the SuppressionConfigured field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetSuppressionConfigured() bool {
	if o == nil || o.SuppressionConfigured == nil {
		var ret bool
		return ret
	}
	return *o.SuppressionConfigured
}

// GetSuppressionConfiguredOk returns a tuple with the SuppressionConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetSuppressionConfiguredOk() (*bool, bool) {
	if o == nil || o.SuppressionConfigured == nil {
		return nil, false
	}
	return o.SuppressionConfigured, true
}

// HasSuppressionConfigured returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasSuppressionConfigured() bool {
	if o != nil && o.SuppressionConfigured != nil {
		return true
	}

	return false
}

// SetSuppressionConfigured gets a reference to the given bool and assigns it to the SuppressionConfigured field.
func (o *base_BTMAssemblyFeature887) SetSuppressionConfigured(v bool) {
	o.SuppressionConfigured = &v
}

// GetVariableStudioReference returns the VariableStudioReference field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetVariableStudioReference() bool {
	if o == nil || o.VariableStudioReference == nil {
		var ret bool
		return ret
	}
	return *o.VariableStudioReference
}

// GetVariableStudioReferenceOk returns a tuple with the VariableStudioReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetVariableStudioReferenceOk() (*bool, bool) {
	if o == nil || o.VariableStudioReference == nil {
		return nil, false
	}
	return o.VariableStudioReference, true
}

// HasVariableStudioReference returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasVariableStudioReference() bool {
	if o != nil && o.VariableStudioReference != nil {
		return true
	}

	return false
}

// SetVariableStudioReference gets a reference to the given bool and assigns it to the VariableStudioReference field.
func (o *base_BTMAssemblyFeature887) SetVariableStudioReference(v bool) {
	o.VariableStudioReference = &v
}

// GetAuxiliaryTreeFeature returns the AuxiliaryTreeFeature field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetAuxiliaryTreeFeature() bool {
	if o == nil || o.AuxiliaryTreeFeature == nil {
		var ret bool
		return ret
	}
	return *o.AuxiliaryTreeFeature
}

// GetAuxiliaryTreeFeatureOk returns a tuple with the AuxiliaryTreeFeature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetAuxiliaryTreeFeatureOk() (*bool, bool) {
	if o == nil || o.AuxiliaryTreeFeature == nil {
		return nil, false
	}
	return o.AuxiliaryTreeFeature, true
}

// HasAuxiliaryTreeFeature returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasAuxiliaryTreeFeature() bool {
	if o != nil && o.AuxiliaryTreeFeature != nil {
		return true
	}

	return false
}

// SetAuxiliaryTreeFeature gets a reference to the given bool and assigns it to the AuxiliaryTreeFeature field.
func (o *base_BTMAssemblyFeature887) SetAuxiliaryTreeFeature(v bool) {
	o.AuxiliaryTreeFeature = &v
}

// GetFeatureFolder returns the FeatureFolder field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetFeatureFolder() bool {
	if o == nil || o.FeatureFolder == nil {
		var ret bool
		return ret
	}
	return *o.FeatureFolder
}

// GetFeatureFolderOk returns a tuple with the FeatureFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetFeatureFolderOk() (*bool, bool) {
	if o == nil || o.FeatureFolder == nil {
		return nil, false
	}
	return o.FeatureFolder, true
}

// HasFeatureFolder returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasFeatureFolder() bool {
	if o != nil && o.FeatureFolder != nil {
		return true
	}

	return false
}

// SetFeatureFolder gets a reference to the given bool and assigns it to the FeatureFolder field.
func (o *base_BTMAssemblyFeature887) SetFeatureFolder(v bool) {
	o.FeatureFolder = &v
}

// GetFeatureListFieldIndex returns the FeatureListFieldIndex field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetFeatureListFieldIndex() int32 {
	if o == nil || o.FeatureListFieldIndex == nil {
		var ret int32
		return ret
	}
	return *o.FeatureListFieldIndex
}

// GetFeatureListFieldIndexOk returns a tuple with the FeatureListFieldIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetFeatureListFieldIndexOk() (*int32, bool) {
	if o == nil || o.FeatureListFieldIndex == nil {
		return nil, false
	}
	return o.FeatureListFieldIndex, true
}

// HasFeatureListFieldIndex returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasFeatureListFieldIndex() bool {
	if o != nil && o.FeatureListFieldIndex != nil {
		return true
	}

	return false
}

// SetFeatureListFieldIndex gets a reference to the given int32 and assigns it to the FeatureListFieldIndex field.
func (o *base_BTMAssemblyFeature887) SetFeatureListFieldIndex(v int32) {
	o.FeatureListFieldIndex = &v
}

// GetFieldIndexForOwnedMateConnectors returns the FieldIndexForOwnedMateConnectors field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetFieldIndexForOwnedMateConnectors() int32 {
	if o == nil || o.FieldIndexForOwnedMateConnectors == nil {
		var ret int32
		return ret
	}
	return *o.FieldIndexForOwnedMateConnectors
}

// GetFieldIndexForOwnedMateConnectorsOk returns a tuple with the FieldIndexForOwnedMateConnectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetFieldIndexForOwnedMateConnectorsOk() (*int32, bool) {
	if o == nil || o.FieldIndexForOwnedMateConnectors == nil {
		return nil, false
	}
	return o.FieldIndexForOwnedMateConnectors, true
}

// HasFieldIndexForOwnedMateConnectors returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasFieldIndexForOwnedMateConnectors() bool {
	if o != nil && o.FieldIndexForOwnedMateConnectors != nil {
		return true
	}

	return false
}

// SetFieldIndexForOwnedMateConnectors gets a reference to the given int32 and assigns it to the FieldIndexForOwnedMateConnectors field.
func (o *base_BTMAssemblyFeature887) SetFieldIndexForOwnedMateConnectors(v int32) {
	o.FieldIndexForOwnedMateConnectors = &v
}

// GetOccurrenceQueriesFromAllConfigurations returns the OccurrenceQueriesFromAllConfigurations field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetOccurrenceQueriesFromAllConfigurations() []BTMIndividualQueryWithOccurrenceBase904 {
	if o == nil || o.OccurrenceQueriesFromAllConfigurations == nil {
		var ret []BTMIndividualQueryWithOccurrenceBase904
		return ret
	}
	return o.OccurrenceQueriesFromAllConfigurations
}

// GetOccurrenceQueriesFromAllConfigurationsOk returns a tuple with the OccurrenceQueriesFromAllConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetOccurrenceQueriesFromAllConfigurationsOk() ([]BTMIndividualQueryWithOccurrenceBase904, bool) {
	if o == nil || o.OccurrenceQueriesFromAllConfigurations == nil {
		return nil, false
	}
	return o.OccurrenceQueriesFromAllConfigurations, true
}

// HasOccurrenceQueriesFromAllConfigurations returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasOccurrenceQueriesFromAllConfigurations() bool {
	if o != nil && o.OccurrenceQueriesFromAllConfigurations != nil {
		return true
	}

	return false
}

// SetOccurrenceQueriesFromAllConfigurations gets a reference to the given []BTMIndividualQueryWithOccurrenceBase904 and assigns it to the OccurrenceQueriesFromAllConfigurations field.
func (o *base_BTMAssemblyFeature887) SetOccurrenceQueriesFromAllConfigurations(v []BTMIndividualQueryWithOccurrenceBase904) {
	o.OccurrenceQueriesFromAllConfigurations = v
}

// GetParametricInstanceFeature returns the ParametricInstanceFeature field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetParametricInstanceFeature() bool {
	if o == nil || o.ParametricInstanceFeature == nil {
		var ret bool
		return ret
	}
	return *o.ParametricInstanceFeature
}

// GetParametricInstanceFeatureOk returns a tuple with the ParametricInstanceFeature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetParametricInstanceFeatureOk() (*bool, bool) {
	if o == nil || o.ParametricInstanceFeature == nil {
		return nil, false
	}
	return o.ParametricInstanceFeature, true
}

// HasParametricInstanceFeature returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasParametricInstanceFeature() bool {
	if o != nil && o.ParametricInstanceFeature != nil {
		return true
	}

	return false
}

// SetParametricInstanceFeature gets a reference to the given bool and assigns it to the ParametricInstanceFeature field.
func (o *base_BTMAssemblyFeature887) SetParametricInstanceFeature(v bool) {
	o.ParametricInstanceFeature = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *base_BTMAssemblyFeature887) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTMAssemblyFeature887) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *base_BTMAssemblyFeature887) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *base_BTMAssemblyFeature887) SetVersion(v int32) {
	o.Version = &v
}

func (o base_BTMAssemblyFeature887) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.FeatureId != nil {
		toSerialize["featureId"] = o.FeatureId
	}
	if o.FeatureType != nil {
		toSerialize["featureType"] = o.FeatureType
	}
	if o.ImportMicroversion != nil {
		toSerialize["importMicroversion"] = o.ImportMicroversion
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.NodeId != nil {
		toSerialize["nodeId"] = o.NodeId
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.ReturnAfterSubfeatures != nil {
		toSerialize["returnAfterSubfeatures"] = o.ReturnAfterSubfeatures
	}
	if o.SubFeatures != nil {
		toSerialize["subFeatures"] = o.SubFeatures
	}
	if o.Suppressed != nil {
		toSerialize["suppressed"] = o.Suppressed
	}
	if o.SuppressionConfigured != nil {
		toSerialize["suppressionConfigured"] = o.SuppressionConfigured
	}
	if o.VariableStudioReference != nil {
		toSerialize["variableStudioReference"] = o.VariableStudioReference
	}
	if o.AuxiliaryTreeFeature != nil {
		toSerialize["auxiliaryTreeFeature"] = o.AuxiliaryTreeFeature
	}
	if o.FeatureFolder != nil {
		toSerialize["featureFolder"] = o.FeatureFolder
	}
	if o.FeatureListFieldIndex != nil {
		toSerialize["featureListFieldIndex"] = o.FeatureListFieldIndex
	}
	if o.FieldIndexForOwnedMateConnectors != nil {
		toSerialize["fieldIndexForOwnedMateConnectors"] = o.FieldIndexForOwnedMateConnectors
	}
	if o.OccurrenceQueriesFromAllConfigurations != nil {
		toSerialize["occurrenceQueriesFromAllConfigurations"] = o.OccurrenceQueriesFromAllConfigurations
	}
	if o.ParametricInstanceFeature != nil {
		toSerialize["parametricInstanceFeature"] = o.ParametricInstanceFeature
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}
