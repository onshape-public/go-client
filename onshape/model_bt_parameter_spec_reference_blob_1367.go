/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
	"fmt"
)

// BTParameterSpecReferenceBlob1367 - struct for BTParameterSpecReferenceBlob1367
type BTParameterSpecReferenceBlob1367 struct {
	implBTParameterSpecReferenceBlob1367 interface{}
}

// BTParameterSpecReferenceCADImport1792AsBTParameterSpecReferenceBlob1367 is a convenience function that returns BTParameterSpecReferenceCADImport1792 wrapped in BTParameterSpecReferenceBlob1367
func (o *BTParameterSpecReferenceCADImport1792) AsBTParameterSpecReferenceBlob1367() *BTParameterSpecReferenceBlob1367 {
	return &BTParameterSpecReferenceBlob1367{o}
}

// BTParameterSpecReferenceTable1520AsBTParameterSpecReferenceBlob1367 is a convenience function that returns BTParameterSpecReferenceTable1520 wrapped in BTParameterSpecReferenceBlob1367
func (o *BTParameterSpecReferenceTable1520) AsBTParameterSpecReferenceBlob1367() *BTParameterSpecReferenceBlob1367 {
	return &BTParameterSpecReferenceBlob1367{o}
}

// BTParameterSpecReferenceImage1722AsBTParameterSpecReferenceBlob1367 is a convenience function that returns BTParameterSpecReferenceImage1722 wrapped in BTParameterSpecReferenceBlob1367
func (o *BTParameterSpecReferenceImage1722) AsBTParameterSpecReferenceBlob1367() *BTParameterSpecReferenceBlob1367 {
	return &BTParameterSpecReferenceBlob1367{o}
}

// BTParameterSpecReferenceJSON1816AsBTParameterSpecReferenceBlob1367 is a convenience function that returns BTParameterSpecReferenceJSON1816 wrapped in BTParameterSpecReferenceBlob1367
func (o *BTParameterSpecReferenceJSON1816) AsBTParameterSpecReferenceBlob1367() *BTParameterSpecReferenceBlob1367 {
	return &BTParameterSpecReferenceBlob1367{o}
}

// NewBTParameterSpecReferenceBlob1367 instantiates a new BTParameterSpecReferenceBlob1367 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTParameterSpecReferenceBlob1367() *BTParameterSpecReferenceBlob1367 {
	this := BTParameterSpecReferenceBlob1367{Newbase_BTParameterSpecReferenceBlob1367()}
	return &this
}

// NewBTParameterSpecReferenceBlob1367WithDefaults instantiates a new BTParameterSpecReferenceBlob1367 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTParameterSpecReferenceBlob1367WithDefaults() *BTParameterSpecReferenceBlob1367 {
	this := BTParameterSpecReferenceBlob1367{Newbase_BTParameterSpecReferenceBlob1367WithDefaults()}
	return &this
}

// GetAdditionalLocalizedStrings returns the AdditionalLocalizedStrings field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetAdditionalLocalizedStrings() int32 {
	type getResult interface {
		GetAdditionalLocalizedStrings() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetAdditionalLocalizedStrings()
	} else {
		var de int32
		return de
	}
}

// GetAdditionalLocalizedStringsOk returns a tuple with the AdditionalLocalizedStrings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetAdditionalLocalizedStringsOk() (*int32, bool) {
	type getResult interface {
		GetAdditionalLocalizedStringsOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetAdditionalLocalizedStringsOk()
	} else {
		return nil, false
	}
}

// HasAdditionalLocalizedStrings returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasAdditionalLocalizedStrings() bool {
	type getResult interface {
		HasAdditionalLocalizedStrings() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasAdditionalLocalizedStrings()
	} else {
		return false
	}
}

// SetAdditionalLocalizedStrings gets a reference to the given int32 and assigns it to the AdditionalLocalizedStrings field.
func (o *BTParameterSpecReferenceBlob1367) SetAdditionalLocalizedStrings(v int32) {
	type getResult interface {
		SetAdditionalLocalizedStrings(v int32)
	}

	o.GetActualInstance().(getResult).SetAdditionalLocalizedStrings(v)
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetBtType() string {
	type getResult interface {
		GetBtType() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtType()
	} else {
		var de string
		return de
	}
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetBtTypeOk() (*string, bool) {
	type getResult interface {
		GetBtTypeOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtTypeOk()
	} else {
		return nil, false
	}
}

// HasBtType returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasBtType() bool {
	type getResult interface {
		HasBtType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasBtType()
	} else {
		return false
	}
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTParameterSpecReferenceBlob1367) SetBtType(v string) {
	type getResult interface {
		SetBtType(v string)
	}

	o.GetActualInstance().(getResult).SetBtType(v)
}

// GetColumnName returns the ColumnName field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetColumnName() string {
	type getResult interface {
		GetColumnName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetColumnName()
	} else {
		var de string
		return de
	}
}

// GetColumnNameOk returns a tuple with the ColumnName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetColumnNameOk() (*string, bool) {
	type getResult interface {
		GetColumnNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetColumnNameOk()
	} else {
		return nil, false
	}
}

// HasColumnName returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasColumnName() bool {
	type getResult interface {
		HasColumnName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasColumnName()
	} else {
		return false
	}
}

// SetColumnName gets a reference to the given string and assigns it to the ColumnName field.
func (o *BTParameterSpecReferenceBlob1367) SetColumnName(v string) {
	type getResult interface {
		SetColumnName(v string)
	}

	o.GetActualInstance().(getResult).SetColumnName(v)
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetDefaultValue() BTMParameter1 {
	type getResult interface {
		GetDefaultValue() BTMParameter1
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDefaultValue()
	} else {
		var de BTMParameter1
		return de
	}
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetDefaultValueOk() (*BTMParameter1, bool) {
	type getResult interface {
		GetDefaultValueOk() (*BTMParameter1, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDefaultValueOk()
	} else {
		return nil, false
	}
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasDefaultValue() bool {
	type getResult interface {
		HasDefaultValue() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDefaultValue()
	} else {
		return false
	}
}

// SetDefaultValue gets a reference to the given BTMParameter1 and assigns it to the DefaultValue field.
func (o *BTParameterSpecReferenceBlob1367) SetDefaultValue(v BTMParameter1) {
	type getResult interface {
		SetDefaultValue(v BTMParameter1)
	}

	o.GetActualInstance().(getResult).SetDefaultValue(v)
}

// GetIconUri returns the IconUri field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetIconUri() string {
	type getResult interface {
		GetIconUri() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIconUri()
	} else {
		var de string
		return de
	}
}

// GetIconUriOk returns a tuple with the IconUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetIconUriOk() (*string, bool) {
	type getResult interface {
		GetIconUriOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIconUriOk()
	} else {
		return nil, false
	}
}

// HasIconUri returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasIconUri() bool {
	type getResult interface {
		HasIconUri() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIconUri()
	} else {
		return false
	}
}

// SetIconUri gets a reference to the given string and assigns it to the IconUri field.
func (o *BTParameterSpecReferenceBlob1367) SetIconUri(v string) {
	type getResult interface {
		SetIconUri(v string)
	}

	o.GetActualInstance().(getResult).SetIconUri(v)
}

// GetLocalizableName returns the LocalizableName field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetLocalizableName() string {
	type getResult interface {
		GetLocalizableName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLocalizableName()
	} else {
		var de string
		return de
	}
}

// GetLocalizableNameOk returns a tuple with the LocalizableName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetLocalizableNameOk() (*string, bool) {
	type getResult interface {
		GetLocalizableNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLocalizableNameOk()
	} else {
		return nil, false
	}
}

// HasLocalizableName returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasLocalizableName() bool {
	type getResult interface {
		HasLocalizableName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasLocalizableName()
	} else {
		return false
	}
}

// SetLocalizableName gets a reference to the given string and assigns it to the LocalizableName field.
func (o *BTParameterSpecReferenceBlob1367) SetLocalizableName(v string) {
	type getResult interface {
		SetLocalizableName(v string)
	}

	o.GetActualInstance().(getResult).SetLocalizableName(v)
}

// GetLocalizedName returns the LocalizedName field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetLocalizedName() string {
	type getResult interface {
		GetLocalizedName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLocalizedName()
	} else {
		var de string
		return de
	}
}

// GetLocalizedNameOk returns a tuple with the LocalizedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetLocalizedNameOk() (*string, bool) {
	type getResult interface {
		GetLocalizedNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLocalizedNameOk()
	} else {
		return nil, false
	}
}

// HasLocalizedName returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasLocalizedName() bool {
	type getResult interface {
		HasLocalizedName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasLocalizedName()
	} else {
		return false
	}
}

// SetLocalizedName gets a reference to the given string and assigns it to the LocalizedName field.
func (o *BTParameterSpecReferenceBlob1367) SetLocalizedName(v string) {
	type getResult interface {
		SetLocalizedName(v string)
	}

	o.GetActualInstance().(getResult).SetLocalizedName(v)
}

// GetParameterDescription returns the ParameterDescription field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetParameterDescription() string {
	type getResult interface {
		GetParameterDescription() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParameterDescription()
	} else {
		var de string
		return de
	}
}

// GetParameterDescriptionOk returns a tuple with the ParameterDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetParameterDescriptionOk() (*string, bool) {
	type getResult interface {
		GetParameterDescriptionOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParameterDescriptionOk()
	} else {
		return nil, false
	}
}

// HasParameterDescription returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasParameterDescription() bool {
	type getResult interface {
		HasParameterDescription() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasParameterDescription()
	} else {
		return false
	}
}

// SetParameterDescription gets a reference to the given string and assigns it to the ParameterDescription field.
func (o *BTParameterSpecReferenceBlob1367) SetParameterDescription(v string) {
	type getResult interface {
		SetParameterDescription(v string)
	}

	o.GetActualInstance().(getResult).SetParameterDescription(v)
}

// GetParameterId returns the ParameterId field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetParameterId() string {
	type getResult interface {
		GetParameterId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParameterId()
	} else {
		var de string
		return de
	}
}

// GetParameterIdOk returns a tuple with the ParameterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetParameterIdOk() (*string, bool) {
	type getResult interface {
		GetParameterIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParameterIdOk()
	} else {
		return nil, false
	}
}

// HasParameterId returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasParameterId() bool {
	type getResult interface {
		HasParameterId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasParameterId()
	} else {
		return false
	}
}

// SetParameterId gets a reference to the given string and assigns it to the ParameterId field.
func (o *BTParameterSpecReferenceBlob1367) SetParameterId(v string) {
	type getResult interface {
		SetParameterId(v string)
	}

	o.GetActualInstance().(getResult).SetParameterId(v)
}

// GetParameterName returns the ParameterName field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetParameterName() string {
	type getResult interface {
		GetParameterName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParameterName()
	} else {
		var de string
		return de
	}
}

// GetParameterNameOk returns a tuple with the ParameterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetParameterNameOk() (*string, bool) {
	type getResult interface {
		GetParameterNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParameterNameOk()
	} else {
		return nil, false
	}
}

// HasParameterName returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasParameterName() bool {
	type getResult interface {
		HasParameterName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasParameterName()
	} else {
		return false
	}
}

// SetParameterName gets a reference to the given string and assigns it to the ParameterName field.
func (o *BTParameterSpecReferenceBlob1367) SetParameterName(v string) {
	type getResult interface {
		SetParameterName(v string)
	}

	o.GetActualInstance().(getResult).SetParameterName(v)
}

// GetQuantityType returns the QuantityType field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetQuantityType() GBTQuantityType {
	type getResult interface {
		GetQuantityType() GBTQuantityType
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetQuantityType()
	} else {
		var de GBTQuantityType
		return de
	}
}

// GetQuantityTypeOk returns a tuple with the QuantityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetQuantityTypeOk() (*GBTQuantityType, bool) {
	type getResult interface {
		GetQuantityTypeOk() (*GBTQuantityType, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetQuantityTypeOk()
	} else {
		return nil, false
	}
}

// HasQuantityType returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasQuantityType() bool {
	type getResult interface {
		HasQuantityType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasQuantityType()
	} else {
		return false
	}
}

// SetQuantityType gets a reference to the given GBTQuantityType and assigns it to the QuantityType field.
func (o *BTParameterSpecReferenceBlob1367) SetQuantityType(v GBTQuantityType) {
	type getResult interface {
		SetQuantityType(v GBTQuantityType)
	}

	o.GetActualInstance().(getResult).SetQuantityType(v)
}

// GetStringsToLocalize returns the StringsToLocalize field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetStringsToLocalize() []string {
	type getResult interface {
		GetStringsToLocalize() []string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetStringsToLocalize()
	} else {
		var de []string
		return de
	}
}

// GetStringsToLocalizeOk returns a tuple with the StringsToLocalize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetStringsToLocalizeOk() ([]string, bool) {
	type getResult interface {
		GetStringsToLocalizeOk() ([]string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetStringsToLocalizeOk()
	} else {
		return nil, false
	}
}

// HasStringsToLocalize returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasStringsToLocalize() bool {
	type getResult interface {
		HasStringsToLocalize() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasStringsToLocalize()
	} else {
		return false
	}
}

// SetStringsToLocalize gets a reference to the given []string and assigns it to the StringsToLocalize field.
func (o *BTParameterSpecReferenceBlob1367) SetStringsToLocalize(v []string) {
	type getResult interface {
		SetStringsToLocalize(v []string)
	}

	o.GetActualInstance().(getResult).SetStringsToLocalize(v)
}

// GetUiHint returns the UiHint field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetUiHint() string {
	type getResult interface {
		GetUiHint() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetUiHint()
	} else {
		var de string
		return de
	}
}

// GetUiHintOk returns a tuple with the UiHint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetUiHintOk() (*string, bool) {
	type getResult interface {
		GetUiHintOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetUiHintOk()
	} else {
		return nil, false
	}
}

// HasUiHint returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasUiHint() bool {
	type getResult interface {
		HasUiHint() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasUiHint()
	} else {
		return false
	}
}

// SetUiHint gets a reference to the given string and assigns it to the UiHint field.
func (o *BTParameterSpecReferenceBlob1367) SetUiHint(v string) {
	type getResult interface {
		SetUiHint(v string)
	}

	o.GetActualInstance().(getResult).SetUiHint(v)
}

// GetUiHints returns the UiHints field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetUiHints() []GBTUIHint {
	type getResult interface {
		GetUiHints() []GBTUIHint
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetUiHints()
	} else {
		var de []GBTUIHint
		return de
	}
}

// GetUiHintsOk returns a tuple with the UiHints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetUiHintsOk() ([]GBTUIHint, bool) {
	type getResult interface {
		GetUiHintsOk() ([]GBTUIHint, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetUiHintsOk()
	} else {
		return nil, false
	}
}

// HasUiHints returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasUiHints() bool {
	type getResult interface {
		HasUiHints() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasUiHints()
	} else {
		return false
	}
}

// SetUiHints gets a reference to the given []GBTUIHint and assigns it to the UiHints field.
func (o *BTParameterSpecReferenceBlob1367) SetUiHints(v []GBTUIHint) {
	type getResult interface {
		SetUiHints(v []GBTUIHint)
	}

	o.GetActualInstance().(getResult).SetUiHints(v)
}

// GetVisibilityCondition returns the VisibilityCondition field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetVisibilityCondition() BTParameterVisibilityCondition177 {
	type getResult interface {
		GetVisibilityCondition() BTParameterVisibilityCondition177
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVisibilityCondition()
	} else {
		var de BTParameterVisibilityCondition177
		return de
	}
}

// GetVisibilityConditionOk returns a tuple with the VisibilityCondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetVisibilityConditionOk() (*BTParameterVisibilityCondition177, bool) {
	type getResult interface {
		GetVisibilityConditionOk() (*BTParameterVisibilityCondition177, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVisibilityConditionOk()
	} else {
		return nil, false
	}
}

// HasVisibilityCondition returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasVisibilityCondition() bool {
	type getResult interface {
		HasVisibilityCondition() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasVisibilityCondition()
	} else {
		return false
	}
}

// SetVisibilityCondition gets a reference to the given BTParameterVisibilityCondition177 and assigns it to the VisibilityCondition field.
func (o *BTParameterSpecReferenceBlob1367) SetVisibilityCondition(v BTParameterVisibilityCondition177) {
	type getResult interface {
		SetVisibilityCondition(v BTParameterVisibilityCondition177)
	}

	o.GetActualInstance().(getResult).SetVisibilityCondition(v)
}

// GetDefaultPurpose returns the DefaultPurpose field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetDefaultPurpose() BTElementLibraryPurpose3353 {
	type getResult interface {
		GetDefaultPurpose() BTElementLibraryPurpose3353
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDefaultPurpose()
	} else {
		var de BTElementLibraryPurpose3353
		return de
	}
}

// GetDefaultPurposeOk returns a tuple with the DefaultPurpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetDefaultPurposeOk() (*BTElementLibraryPurpose3353, bool) {
	type getResult interface {
		GetDefaultPurposeOk() (*BTElementLibraryPurpose3353, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDefaultPurposeOk()
	} else {
		return nil, false
	}
}

// HasDefaultPurpose returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasDefaultPurpose() bool {
	type getResult interface {
		HasDefaultPurpose() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDefaultPurpose()
	} else {
		return false
	}
}

// SetDefaultPurpose gets a reference to the given BTElementLibraryPurpose3353 and assigns it to the DefaultPurpose field.
func (o *BTParameterSpecReferenceBlob1367) SetDefaultPurpose(v BTElementLibraryPurpose3353) {
	type getResult interface {
		SetDefaultPurpose(v BTElementLibraryPurpose3353)
	}

	o.GetActualInstance().(getResult).SetDefaultPurpose(v)
}

// GetLibraryDefinitionId returns the LibraryDefinitionId field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceBlob1367) GetLibraryDefinitionId() string {
	type getResult interface {
		GetLibraryDefinitionId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLibraryDefinitionId()
	} else {
		var de string
		return de
	}
}

// GetLibraryDefinitionIdOk returns a tuple with the LibraryDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceBlob1367) GetLibraryDefinitionIdOk() (*string, bool) {
	type getResult interface {
		GetLibraryDefinitionIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLibraryDefinitionIdOk()
	} else {
		return nil, false
	}
}

// HasLibraryDefinitionId returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceBlob1367) HasLibraryDefinitionId() bool {
	type getResult interface {
		HasLibraryDefinitionId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasLibraryDefinitionId()
	} else {
		return false
	}
}

// SetLibraryDefinitionId gets a reference to the given string and assigns it to the LibraryDefinitionId field.
func (o *BTParameterSpecReferenceBlob1367) SetLibraryDefinitionId(v string) {
	type getResult interface {
		SetLibraryDefinitionId(v string)
	}

	o.GetActualInstance().(getResult).SetLibraryDefinitionId(v)
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *BTParameterSpecReferenceBlob1367) UnmarshalJSON(data []byte) error {
	var err error
	// use discriminator value to speed up the lookup
	var jsonDict map[string]interface{}
	err = newStrictDecoder(data).Decode(&jsonDict)
	if err != nil {
		return fmt.Errorf("Failed to unmarshal JSON into map for the discriminator lookup.")
	}

	// check if the discriminator value is 'BTParameterSpecReferenceCADImport-1792'
	if jsonDict["btType"] == "BTParameterSpecReferenceCADImport-1792" {
		// try to unmarshal JSON data into BTParameterSpecReferenceCADImport1792
		var qr *BTParameterSpecReferenceCADImport1792
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTParameterSpecReferenceBlob1367 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTParameterSpecReferenceBlob1367 = nil
			return fmt.Errorf("Failed to unmarshal BTParameterSpecReferenceBlob1367 as BTParameterSpecReferenceCADImport1792: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTParameterSpecReferenceImage-1722'
	if jsonDict["btType"] == "BTParameterSpecReferenceImage-1722" {
		// try to unmarshal JSON data into BTParameterSpecReferenceImage1722
		var qr *BTParameterSpecReferenceImage1722
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTParameterSpecReferenceBlob1367 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTParameterSpecReferenceBlob1367 = nil
			return fmt.Errorf("Failed to unmarshal BTParameterSpecReferenceBlob1367 as BTParameterSpecReferenceImage1722: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTParameterSpecReferenceJSON-1816'
	if jsonDict["btType"] == "BTParameterSpecReferenceJSON-1816" {
		// try to unmarshal JSON data into BTParameterSpecReferenceJSON1816
		var qr *BTParameterSpecReferenceJSON1816
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTParameterSpecReferenceBlob1367 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTParameterSpecReferenceBlob1367 = nil
			return fmt.Errorf("Failed to unmarshal BTParameterSpecReferenceBlob1367 as BTParameterSpecReferenceJSON1816: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTParameterSpecReferenceTable-1520'
	if jsonDict["btType"] == "BTParameterSpecReferenceTable-1520" {
		// try to unmarshal JSON data into BTParameterSpecReferenceTable1520
		var qr *BTParameterSpecReferenceTable1520
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTParameterSpecReferenceBlob1367 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTParameterSpecReferenceBlob1367 = nil
			return fmt.Errorf("Failed to unmarshal BTParameterSpecReferenceBlob1367 as BTParameterSpecReferenceTable1520: %s", err.Error())
		}
	}

	var qtx *base_BTParameterSpecReferenceBlob1367
	err = json.Unmarshal(data, &qtx)
	if err == nil {
		dst.implBTParameterSpecReferenceBlob1367 = qtx
		return nil // data stored in dst.base_BTParameterSpecReferenceBlob1367, return on the first match
	} else {
		dst.implBTParameterSpecReferenceBlob1367 = nil
		return fmt.Errorf("Failed to unmarshal BTParameterSpecReferenceBlob1367 as base_BTParameterSpecReferenceBlob1367: %s", err.Error())
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BTParameterSpecReferenceBlob1367) MarshalJSON() ([]byte, error) {
	ret := src.GetActualInstance()
	if ret == nil {
		return nil, nil // no data in oneOf schemas
	} else {
		return json.Marshal(&ret)
	}
}

// Get the actual instance
func (obj *BTParameterSpecReferenceBlob1367) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	return obj.implBTParameterSpecReferenceBlob1367
}

type NullableBTParameterSpecReferenceBlob1367 struct {
	value *BTParameterSpecReferenceBlob1367
	isSet bool
}

func (v NullableBTParameterSpecReferenceBlob1367) Get() *BTParameterSpecReferenceBlob1367 {
	return v.value
}

func (v *NullableBTParameterSpecReferenceBlob1367) Set(val *BTParameterSpecReferenceBlob1367) {
	v.value = val
	v.isSet = true
}

func (v NullableBTParameterSpecReferenceBlob1367) IsSet() bool {
	return v.isSet
}

func (v *NullableBTParameterSpecReferenceBlob1367) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTParameterSpecReferenceBlob1367(val *BTParameterSpecReferenceBlob1367) *NullableBTParameterSpecReferenceBlob1367 {
	return &NullableBTParameterSpecReferenceBlob1367{value: val, isSet: true}
}

func (v NullableBTParameterSpecReferenceBlob1367) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTParameterSpecReferenceBlob1367) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type base_BTParameterSpecReferenceBlob1367 struct {
	AdditionalLocalizedStrings *int32                             `json:"additionalLocalizedStrings,omitempty"`
	BtType                     *string                            `json:"btType,omitempty"`
	ColumnName                 *string                            `json:"columnName,omitempty"`
	DefaultValue               *BTMParameter1                     `json:"defaultValue,omitempty"`
	IconUri                    *string                            `json:"iconUri,omitempty"`
	LocalizableName            *string                            `json:"localizableName,omitempty"`
	LocalizedName              *string                            `json:"localizedName,omitempty"`
	ParameterDescription       *string                            `json:"parameterDescription,omitempty"`
	ParameterId                *string                            `json:"parameterId,omitempty"`
	ParameterName              *string                            `json:"parameterName,omitempty"`
	QuantityType               *GBTQuantityType                   `json:"quantityType,omitempty"`
	StringsToLocalize          []string                           `json:"stringsToLocalize,omitempty"`
	UiHint                     *string                            `json:"uiHint,omitempty"`
	UiHints                    []GBTUIHint                        `json:"uiHints,omitempty"`
	VisibilityCondition        *BTParameterVisibilityCondition177 `json:"visibilityCondition,omitempty"`
	DefaultPurpose             *BTElementLibraryPurpose3353       `json:"defaultPurpose,omitempty"`
	LibraryDefinitionId        *string                            `json:"libraryDefinitionId,omitempty"`
}

// Newbase_BTParameterSpecReferenceBlob1367 instantiates a new base_BTParameterSpecReferenceBlob1367 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func Newbase_BTParameterSpecReferenceBlob1367() *base_BTParameterSpecReferenceBlob1367 {
	this := base_BTParameterSpecReferenceBlob1367{}
	return &this
}

// Newbase_BTParameterSpecReferenceBlob1367WithDefaults instantiates a new base_BTParameterSpecReferenceBlob1367 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func Newbase_BTParameterSpecReferenceBlob1367WithDefaults() *base_BTParameterSpecReferenceBlob1367 {
	this := base_BTParameterSpecReferenceBlob1367{}
	return &this
}

// GetAdditionalLocalizedStrings returns the AdditionalLocalizedStrings field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetAdditionalLocalizedStrings() int32 {
	if o == nil || o.AdditionalLocalizedStrings == nil {
		var ret int32
		return ret
	}
	return *o.AdditionalLocalizedStrings
}

// GetAdditionalLocalizedStringsOk returns a tuple with the AdditionalLocalizedStrings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetAdditionalLocalizedStringsOk() (*int32, bool) {
	if o == nil || o.AdditionalLocalizedStrings == nil {
		return nil, false
	}
	return o.AdditionalLocalizedStrings, true
}

// HasAdditionalLocalizedStrings returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasAdditionalLocalizedStrings() bool {
	if o != nil && o.AdditionalLocalizedStrings != nil {
		return true
	}

	return false
}

// SetAdditionalLocalizedStrings gets a reference to the given int32 and assigns it to the AdditionalLocalizedStrings field.
func (o *base_BTParameterSpecReferenceBlob1367) SetAdditionalLocalizedStrings(v int32) {
	o.AdditionalLocalizedStrings = &v
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *base_BTParameterSpecReferenceBlob1367) SetBtType(v string) {
	o.BtType = &v
}

// GetColumnName returns the ColumnName field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetColumnName() string {
	if o == nil || o.ColumnName == nil {
		var ret string
		return ret
	}
	return *o.ColumnName
}

// GetColumnNameOk returns a tuple with the ColumnName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetColumnNameOk() (*string, bool) {
	if o == nil || o.ColumnName == nil {
		return nil, false
	}
	return o.ColumnName, true
}

// HasColumnName returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasColumnName() bool {
	if o != nil && o.ColumnName != nil {
		return true
	}

	return false
}

// SetColumnName gets a reference to the given string and assigns it to the ColumnName field.
func (o *base_BTParameterSpecReferenceBlob1367) SetColumnName(v string) {
	o.ColumnName = &v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetDefaultValue() BTMParameter1 {
	if o == nil || o.DefaultValue == nil {
		var ret BTMParameter1
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetDefaultValueOk() (*BTMParameter1, bool) {
	if o == nil || o.DefaultValue == nil {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasDefaultValue() bool {
	if o != nil && o.DefaultValue != nil {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given BTMParameter1 and assigns it to the DefaultValue field.
func (o *base_BTParameterSpecReferenceBlob1367) SetDefaultValue(v BTMParameter1) {
	o.DefaultValue = &v
}

// GetIconUri returns the IconUri field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetIconUri() string {
	if o == nil || o.IconUri == nil {
		var ret string
		return ret
	}
	return *o.IconUri
}

// GetIconUriOk returns a tuple with the IconUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetIconUriOk() (*string, bool) {
	if o == nil || o.IconUri == nil {
		return nil, false
	}
	return o.IconUri, true
}

// HasIconUri returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasIconUri() bool {
	if o != nil && o.IconUri != nil {
		return true
	}

	return false
}

// SetIconUri gets a reference to the given string and assigns it to the IconUri field.
func (o *base_BTParameterSpecReferenceBlob1367) SetIconUri(v string) {
	o.IconUri = &v
}

// GetLocalizableName returns the LocalizableName field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetLocalizableName() string {
	if o == nil || o.LocalizableName == nil {
		var ret string
		return ret
	}
	return *o.LocalizableName
}

// GetLocalizableNameOk returns a tuple with the LocalizableName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetLocalizableNameOk() (*string, bool) {
	if o == nil || o.LocalizableName == nil {
		return nil, false
	}
	return o.LocalizableName, true
}

// HasLocalizableName returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasLocalizableName() bool {
	if o != nil && o.LocalizableName != nil {
		return true
	}

	return false
}

// SetLocalizableName gets a reference to the given string and assigns it to the LocalizableName field.
func (o *base_BTParameterSpecReferenceBlob1367) SetLocalizableName(v string) {
	o.LocalizableName = &v
}

// GetLocalizedName returns the LocalizedName field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetLocalizedName() string {
	if o == nil || o.LocalizedName == nil {
		var ret string
		return ret
	}
	return *o.LocalizedName
}

// GetLocalizedNameOk returns a tuple with the LocalizedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetLocalizedNameOk() (*string, bool) {
	if o == nil || o.LocalizedName == nil {
		return nil, false
	}
	return o.LocalizedName, true
}

// HasLocalizedName returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasLocalizedName() bool {
	if o != nil && o.LocalizedName != nil {
		return true
	}

	return false
}

// SetLocalizedName gets a reference to the given string and assigns it to the LocalizedName field.
func (o *base_BTParameterSpecReferenceBlob1367) SetLocalizedName(v string) {
	o.LocalizedName = &v
}

// GetParameterDescription returns the ParameterDescription field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetParameterDescription() string {
	if o == nil || o.ParameterDescription == nil {
		var ret string
		return ret
	}
	return *o.ParameterDescription
}

// GetParameterDescriptionOk returns a tuple with the ParameterDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetParameterDescriptionOk() (*string, bool) {
	if o == nil || o.ParameterDescription == nil {
		return nil, false
	}
	return o.ParameterDescription, true
}

// HasParameterDescription returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasParameterDescription() bool {
	if o != nil && o.ParameterDescription != nil {
		return true
	}

	return false
}

// SetParameterDescription gets a reference to the given string and assigns it to the ParameterDescription field.
func (o *base_BTParameterSpecReferenceBlob1367) SetParameterDescription(v string) {
	o.ParameterDescription = &v
}

// GetParameterId returns the ParameterId field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetParameterId() string {
	if o == nil || o.ParameterId == nil {
		var ret string
		return ret
	}
	return *o.ParameterId
}

// GetParameterIdOk returns a tuple with the ParameterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetParameterIdOk() (*string, bool) {
	if o == nil || o.ParameterId == nil {
		return nil, false
	}
	return o.ParameterId, true
}

// HasParameterId returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasParameterId() bool {
	if o != nil && o.ParameterId != nil {
		return true
	}

	return false
}

// SetParameterId gets a reference to the given string and assigns it to the ParameterId field.
func (o *base_BTParameterSpecReferenceBlob1367) SetParameterId(v string) {
	o.ParameterId = &v
}

// GetParameterName returns the ParameterName field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetParameterName() string {
	if o == nil || o.ParameterName == nil {
		var ret string
		return ret
	}
	return *o.ParameterName
}

// GetParameterNameOk returns a tuple with the ParameterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetParameterNameOk() (*string, bool) {
	if o == nil || o.ParameterName == nil {
		return nil, false
	}
	return o.ParameterName, true
}

// HasParameterName returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasParameterName() bool {
	if o != nil && o.ParameterName != nil {
		return true
	}

	return false
}

// SetParameterName gets a reference to the given string and assigns it to the ParameterName field.
func (o *base_BTParameterSpecReferenceBlob1367) SetParameterName(v string) {
	o.ParameterName = &v
}

// GetQuantityType returns the QuantityType field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetQuantityType() GBTQuantityType {
	if o == nil || o.QuantityType == nil {
		var ret GBTQuantityType
		return ret
	}
	return *o.QuantityType
}

// GetQuantityTypeOk returns a tuple with the QuantityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetQuantityTypeOk() (*GBTQuantityType, bool) {
	if o == nil || o.QuantityType == nil {
		return nil, false
	}
	return o.QuantityType, true
}

// HasQuantityType returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasQuantityType() bool {
	if o != nil && o.QuantityType != nil {
		return true
	}

	return false
}

// SetQuantityType gets a reference to the given GBTQuantityType and assigns it to the QuantityType field.
func (o *base_BTParameterSpecReferenceBlob1367) SetQuantityType(v GBTQuantityType) {
	o.QuantityType = &v
}

// GetStringsToLocalize returns the StringsToLocalize field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetStringsToLocalize() []string {
	if o == nil || o.StringsToLocalize == nil {
		var ret []string
		return ret
	}
	return o.StringsToLocalize
}

// GetStringsToLocalizeOk returns a tuple with the StringsToLocalize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetStringsToLocalizeOk() ([]string, bool) {
	if o == nil || o.StringsToLocalize == nil {
		return nil, false
	}
	return o.StringsToLocalize, true
}

// HasStringsToLocalize returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasStringsToLocalize() bool {
	if o != nil && o.StringsToLocalize != nil {
		return true
	}

	return false
}

// SetStringsToLocalize gets a reference to the given []string and assigns it to the StringsToLocalize field.
func (o *base_BTParameterSpecReferenceBlob1367) SetStringsToLocalize(v []string) {
	o.StringsToLocalize = v
}

// GetUiHint returns the UiHint field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetUiHint() string {
	if o == nil || o.UiHint == nil {
		var ret string
		return ret
	}
	return *o.UiHint
}

// GetUiHintOk returns a tuple with the UiHint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetUiHintOk() (*string, bool) {
	if o == nil || o.UiHint == nil {
		return nil, false
	}
	return o.UiHint, true
}

// HasUiHint returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasUiHint() bool {
	if o != nil && o.UiHint != nil {
		return true
	}

	return false
}

// SetUiHint gets a reference to the given string and assigns it to the UiHint field.
func (o *base_BTParameterSpecReferenceBlob1367) SetUiHint(v string) {
	o.UiHint = &v
}

// GetUiHints returns the UiHints field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetUiHints() []GBTUIHint {
	if o == nil || o.UiHints == nil {
		var ret []GBTUIHint
		return ret
	}
	return o.UiHints
}

// GetUiHintsOk returns a tuple with the UiHints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetUiHintsOk() ([]GBTUIHint, bool) {
	if o == nil || o.UiHints == nil {
		return nil, false
	}
	return o.UiHints, true
}

// HasUiHints returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasUiHints() bool {
	if o != nil && o.UiHints != nil {
		return true
	}

	return false
}

// SetUiHints gets a reference to the given []GBTUIHint and assigns it to the UiHints field.
func (o *base_BTParameterSpecReferenceBlob1367) SetUiHints(v []GBTUIHint) {
	o.UiHints = v
}

// GetVisibilityCondition returns the VisibilityCondition field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetVisibilityCondition() BTParameterVisibilityCondition177 {
	if o == nil || o.VisibilityCondition == nil {
		var ret BTParameterVisibilityCondition177
		return ret
	}
	return *o.VisibilityCondition
}

// GetVisibilityConditionOk returns a tuple with the VisibilityCondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetVisibilityConditionOk() (*BTParameterVisibilityCondition177, bool) {
	if o == nil || o.VisibilityCondition == nil {
		return nil, false
	}
	return o.VisibilityCondition, true
}

// HasVisibilityCondition returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasVisibilityCondition() bool {
	if o != nil && o.VisibilityCondition != nil {
		return true
	}

	return false
}

// SetVisibilityCondition gets a reference to the given BTParameterVisibilityCondition177 and assigns it to the VisibilityCondition field.
func (o *base_BTParameterSpecReferenceBlob1367) SetVisibilityCondition(v BTParameterVisibilityCondition177) {
	o.VisibilityCondition = &v
}

// GetDefaultPurpose returns the DefaultPurpose field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetDefaultPurpose() BTElementLibraryPurpose3353 {
	if o == nil || o.DefaultPurpose == nil {
		var ret BTElementLibraryPurpose3353
		return ret
	}
	return *o.DefaultPurpose
}

// GetDefaultPurposeOk returns a tuple with the DefaultPurpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetDefaultPurposeOk() (*BTElementLibraryPurpose3353, bool) {
	if o == nil || o.DefaultPurpose == nil {
		return nil, false
	}
	return o.DefaultPurpose, true
}

// HasDefaultPurpose returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasDefaultPurpose() bool {
	if o != nil && o.DefaultPurpose != nil {
		return true
	}

	return false
}

// SetDefaultPurpose gets a reference to the given BTElementLibraryPurpose3353 and assigns it to the DefaultPurpose field.
func (o *base_BTParameterSpecReferenceBlob1367) SetDefaultPurpose(v BTElementLibraryPurpose3353) {
	o.DefaultPurpose = &v
}

// GetLibraryDefinitionId returns the LibraryDefinitionId field value if set, zero value otherwise.
func (o *base_BTParameterSpecReferenceBlob1367) GetLibraryDefinitionId() string {
	if o == nil || o.LibraryDefinitionId == nil {
		var ret string
		return ret
	}
	return *o.LibraryDefinitionId
}

// GetLibraryDefinitionIdOk returns a tuple with the LibraryDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTParameterSpecReferenceBlob1367) GetLibraryDefinitionIdOk() (*string, bool) {
	if o == nil || o.LibraryDefinitionId == nil {
		return nil, false
	}
	return o.LibraryDefinitionId, true
}

// HasLibraryDefinitionId returns a boolean if a field has been set.
func (o *base_BTParameterSpecReferenceBlob1367) HasLibraryDefinitionId() bool {
	if o != nil && o.LibraryDefinitionId != nil {
		return true
	}

	return false
}

// SetLibraryDefinitionId gets a reference to the given string and assigns it to the LibraryDefinitionId field.
func (o *base_BTParameterSpecReferenceBlob1367) SetLibraryDefinitionId(v string) {
	o.LibraryDefinitionId = &v
}

func (o base_BTParameterSpecReferenceBlob1367) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalLocalizedStrings != nil {
		toSerialize["additionalLocalizedStrings"] = o.AdditionalLocalizedStrings
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.ColumnName != nil {
		toSerialize["columnName"] = o.ColumnName
	}
	if o.DefaultValue != nil {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	if o.IconUri != nil {
		toSerialize["iconUri"] = o.IconUri
	}
	if o.LocalizableName != nil {
		toSerialize["localizableName"] = o.LocalizableName
	}
	if o.LocalizedName != nil {
		toSerialize["localizedName"] = o.LocalizedName
	}
	if o.ParameterDescription != nil {
		toSerialize["parameterDescription"] = o.ParameterDescription
	}
	if o.ParameterId != nil {
		toSerialize["parameterId"] = o.ParameterId
	}
	if o.ParameterName != nil {
		toSerialize["parameterName"] = o.ParameterName
	}
	if o.QuantityType != nil {
		toSerialize["quantityType"] = o.QuantityType
	}
	if o.StringsToLocalize != nil {
		toSerialize["stringsToLocalize"] = o.StringsToLocalize
	}
	if o.UiHint != nil {
		toSerialize["uiHint"] = o.UiHint
	}
	if o.UiHints != nil {
		toSerialize["uiHints"] = o.UiHints
	}
	if o.VisibilityCondition != nil {
		toSerialize["visibilityCondition"] = o.VisibilityCondition
	}
	if o.DefaultPurpose != nil {
		toSerialize["defaultPurpose"] = o.DefaultPurpose
	}
	if o.LibraryDefinitionId != nil {
		toSerialize["libraryDefinitionId"] = o.LibraryDefinitionId
	}
	return json.Marshal(toSerialize)
}
