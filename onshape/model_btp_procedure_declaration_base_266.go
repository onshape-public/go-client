/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
	"fmt"
)

// BTPProcedureDeclarationBase266 - struct for BTPProcedureDeclarationBase266
type BTPProcedureDeclarationBase266 struct {
	implBTPProcedureDeclarationBase266 interface{}
}

// BTPFunctionOrPredicateDeclaration247AsBTPProcedureDeclarationBase266 is a convenience function that returns BTPFunctionOrPredicateDeclaration247 wrapped in BTPProcedureDeclarationBase266
func (o *BTPFunctionOrPredicateDeclaration247) AsBTPProcedureDeclarationBase266() *BTPProcedureDeclarationBase266 {
	return &BTPProcedureDeclarationBase266{o}
}

// BTPOperatorDeclaration264AsBTPProcedureDeclarationBase266 is a convenience function that returns BTPOperatorDeclaration264 wrapped in BTPProcedureDeclarationBase266
func (o *BTPOperatorDeclaration264) AsBTPProcedureDeclarationBase266() *BTPProcedureDeclarationBase266 {
	return &BTPProcedureDeclarationBase266{o}
}

// BTPConversionFunction1362AsBTPProcedureDeclarationBase266 is a convenience function that returns BTPConversionFunction1362 wrapped in BTPProcedureDeclarationBase266
func (o *BTPConversionFunction1362) AsBTPProcedureDeclarationBase266() *BTPProcedureDeclarationBase266 {
	return &BTPProcedureDeclarationBase266{o}
}

// BTPPredicateDeclaration265AsBTPProcedureDeclarationBase266 is a convenience function that returns BTPPredicateDeclaration265 wrapped in BTPProcedureDeclarationBase266
func (o *BTPPredicateDeclaration265) AsBTPProcedureDeclarationBase266() *BTPProcedureDeclarationBase266 {
	return &BTPProcedureDeclarationBase266{o}
}

// NewBTPProcedureDeclarationBase266 instantiates a new BTPProcedureDeclarationBase266 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTPProcedureDeclarationBase266() *BTPProcedureDeclarationBase266 {
	this := BTPProcedureDeclarationBase266{Newbase_BTPProcedureDeclarationBase266()}
	return &this
}

// NewBTPProcedureDeclarationBase266WithDefaults instantiates a new BTPProcedureDeclarationBase266 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTPProcedureDeclarationBase266WithDefaults() *BTPProcedureDeclarationBase266 {
	this := BTPProcedureDeclarationBase266{Newbase_BTPProcedureDeclarationBase266WithDefaults()}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetBtType() string {
	type getResult interface {
		GetBtType() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtType()
	} else {
		var de string
		return de
	}
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetBtTypeOk() (*string, bool) {
	type getResult interface {
		GetBtTypeOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtTypeOk()
	} else {
		return nil, false
	}
}

// HasBtType returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasBtType() bool {
	type getResult interface {
		HasBtType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasBtType()
	} else {
		return false
	}
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTPProcedureDeclarationBase266) SetBtType(v string) {
	type getResult interface {
		SetBtType(v string)
	}

	o.GetActualInstance().(getResult).SetBtType(v)
}

// GetAtomic returns the Atomic field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetAtomic() bool {
	type getResult interface {
		GetAtomic() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetAtomic()
	} else {
		var de bool
		return de
	}
}

// GetAtomicOk returns a tuple with the Atomic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetAtomicOk() (*bool, bool) {
	type getResult interface {
		GetAtomicOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetAtomicOk()
	} else {
		return nil, false
	}
}

// HasAtomic returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasAtomic() bool {
	type getResult interface {
		HasAtomic() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasAtomic()
	} else {
		return false
	}
}

// SetAtomic gets a reference to the given bool and assigns it to the Atomic field.
func (o *BTPProcedureDeclarationBase266) SetAtomic(v bool) {
	type getResult interface {
		SetAtomic(v bool)
	}

	o.GetActualInstance().(getResult).SetAtomic(v)
}

// GetDocumentationType returns the DocumentationType field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetDocumentationType() GBTPDefinitionType {
	type getResult interface {
		GetDocumentationType() GBTPDefinitionType
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDocumentationType()
	} else {
		var de GBTPDefinitionType
		return de
	}
}

// GetDocumentationTypeOk returns a tuple with the DocumentationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetDocumentationTypeOk() (*GBTPDefinitionType, bool) {
	type getResult interface {
		GetDocumentationTypeOk() (*GBTPDefinitionType, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDocumentationTypeOk()
	} else {
		return nil, false
	}
}

// HasDocumentationType returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasDocumentationType() bool {
	type getResult interface {
		HasDocumentationType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDocumentationType()
	} else {
		return false
	}
}

// SetDocumentationType gets a reference to the given GBTPDefinitionType and assigns it to the DocumentationType field.
func (o *BTPProcedureDeclarationBase266) SetDocumentationType(v GBTPDefinitionType) {
	type getResult interface {
		SetDocumentationType(v GBTPDefinitionType)
	}

	o.GetActualInstance().(getResult).SetDocumentationType(v)
}

// GetEndSourceLocation returns the EndSourceLocation field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetEndSourceLocation() int32 {
	type getResult interface {
		GetEndSourceLocation() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetEndSourceLocation()
	} else {
		var de int32
		return de
	}
}

// GetEndSourceLocationOk returns a tuple with the EndSourceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetEndSourceLocationOk() (*int32, bool) {
	type getResult interface {
		GetEndSourceLocationOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetEndSourceLocationOk()
	} else {
		return nil, false
	}
}

// HasEndSourceLocation returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasEndSourceLocation() bool {
	type getResult interface {
		HasEndSourceLocation() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasEndSourceLocation()
	} else {
		return false
	}
}

// SetEndSourceLocation gets a reference to the given int32 and assigns it to the EndSourceLocation field.
func (o *BTPProcedureDeclarationBase266) SetEndSourceLocation(v int32) {
	type getResult interface {
		SetEndSourceLocation(v int32)
	}

	o.GetActualInstance().(getResult).SetEndSourceLocation(v)
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetNodeId() string {
	type getResult interface {
		GetNodeId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNodeId()
	} else {
		var de string
		return de
	}
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetNodeIdOk() (*string, bool) {
	type getResult interface {
		GetNodeIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNodeIdOk()
	} else {
		return nil, false
	}
}

// HasNodeId returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasNodeId() bool {
	type getResult interface {
		HasNodeId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasNodeId()
	} else {
		return false
	}
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *BTPProcedureDeclarationBase266) SetNodeId(v string) {
	type getResult interface {
		SetNodeId(v string)
	}

	o.GetActualInstance().(getResult).SetNodeId(v)
}

// GetShortDescriptor returns the ShortDescriptor field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetShortDescriptor() string {
	type getResult interface {
		GetShortDescriptor() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetShortDescriptor()
	} else {
		var de string
		return de
	}
}

// GetShortDescriptorOk returns a tuple with the ShortDescriptor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetShortDescriptorOk() (*string, bool) {
	type getResult interface {
		GetShortDescriptorOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetShortDescriptorOk()
	} else {
		return nil, false
	}
}

// HasShortDescriptor returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasShortDescriptor() bool {
	type getResult interface {
		HasShortDescriptor() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasShortDescriptor()
	} else {
		return false
	}
}

// SetShortDescriptor gets a reference to the given string and assigns it to the ShortDescriptor field.
func (o *BTPProcedureDeclarationBase266) SetShortDescriptor(v string) {
	type getResult interface {
		SetShortDescriptor(v string)
	}

	o.GetActualInstance().(getResult).SetShortDescriptor(v)
}

// GetSpaceAfter returns the SpaceAfter field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetSpaceAfter() BTPSpace10 {
	type getResult interface {
		GetSpaceAfter() BTPSpace10
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSpaceAfter()
	} else {
		var de BTPSpace10
		return de
	}
}

// GetSpaceAfterOk returns a tuple with the SpaceAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetSpaceAfterOk() (*BTPSpace10, bool) {
	type getResult interface {
		GetSpaceAfterOk() (*BTPSpace10, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSpaceAfterOk()
	} else {
		return nil, false
	}
}

// HasSpaceAfter returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasSpaceAfter() bool {
	type getResult interface {
		HasSpaceAfter() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSpaceAfter()
	} else {
		return false
	}
}

// SetSpaceAfter gets a reference to the given BTPSpace10 and assigns it to the SpaceAfter field.
func (o *BTPProcedureDeclarationBase266) SetSpaceAfter(v BTPSpace10) {
	type getResult interface {
		SetSpaceAfter(v BTPSpace10)
	}

	o.GetActualInstance().(getResult).SetSpaceAfter(v)
}

// GetSpaceBefore returns the SpaceBefore field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetSpaceBefore() BTPSpace10 {
	type getResult interface {
		GetSpaceBefore() BTPSpace10
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSpaceBefore()
	} else {
		var de BTPSpace10
		return de
	}
}

// GetSpaceBeforeOk returns a tuple with the SpaceBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetSpaceBeforeOk() (*BTPSpace10, bool) {
	type getResult interface {
		GetSpaceBeforeOk() (*BTPSpace10, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSpaceBeforeOk()
	} else {
		return nil, false
	}
}

// HasSpaceBefore returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasSpaceBefore() bool {
	type getResult interface {
		HasSpaceBefore() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSpaceBefore()
	} else {
		return false
	}
}

// SetSpaceBefore gets a reference to the given BTPSpace10 and assigns it to the SpaceBefore field.
func (o *BTPProcedureDeclarationBase266) SetSpaceBefore(v BTPSpace10) {
	type getResult interface {
		SetSpaceBefore(v BTPSpace10)
	}

	o.GetActualInstance().(getResult).SetSpaceBefore(v)
}

// GetSpaceDefault returns the SpaceDefault field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetSpaceDefault() bool {
	type getResult interface {
		GetSpaceDefault() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSpaceDefault()
	} else {
		var de bool
		return de
	}
}

// GetSpaceDefaultOk returns a tuple with the SpaceDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetSpaceDefaultOk() (*bool, bool) {
	type getResult interface {
		GetSpaceDefaultOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSpaceDefaultOk()
	} else {
		return nil, false
	}
}

// HasSpaceDefault returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasSpaceDefault() bool {
	type getResult interface {
		HasSpaceDefault() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSpaceDefault()
	} else {
		return false
	}
}

// SetSpaceDefault gets a reference to the given bool and assigns it to the SpaceDefault field.
func (o *BTPProcedureDeclarationBase266) SetSpaceDefault(v bool) {
	type getResult interface {
		SetSpaceDefault(v bool)
	}

	o.GetActualInstance().(getResult).SetSpaceDefault(v)
}

// GetStartSourceLocation returns the StartSourceLocation field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetStartSourceLocation() int32 {
	type getResult interface {
		GetStartSourceLocation() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetStartSourceLocation()
	} else {
		var de int32
		return de
	}
}

// GetStartSourceLocationOk returns a tuple with the StartSourceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetStartSourceLocationOk() (*int32, bool) {
	type getResult interface {
		GetStartSourceLocationOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetStartSourceLocationOk()
	} else {
		return nil, false
	}
}

// HasStartSourceLocation returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasStartSourceLocation() bool {
	type getResult interface {
		HasStartSourceLocation() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasStartSourceLocation()
	} else {
		return false
	}
}

// SetStartSourceLocation gets a reference to the given int32 and assigns it to the StartSourceLocation field.
func (o *BTPProcedureDeclarationBase266) SetStartSourceLocation(v int32) {
	type getResult interface {
		SetStartSourceLocation(v int32)
	}

	o.GetActualInstance().(getResult).SetStartSourceLocation(v)
}

// GetAnnotation returns the Annotation field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetAnnotation() BTPAnnotation231 {
	type getResult interface {
		GetAnnotation() BTPAnnotation231
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetAnnotation()
	} else {
		var de BTPAnnotation231
		return de
	}
}

// GetAnnotationOk returns a tuple with the Annotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetAnnotationOk() (*BTPAnnotation231, bool) {
	type getResult interface {
		GetAnnotationOk() (*BTPAnnotation231, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetAnnotationOk()
	} else {
		return nil, false
	}
}

// HasAnnotation returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasAnnotation() bool {
	type getResult interface {
		HasAnnotation() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasAnnotation()
	} else {
		return false
	}
}

// SetAnnotation gets a reference to the given BTPAnnotation231 and assigns it to the Annotation field.
func (o *BTPProcedureDeclarationBase266) SetAnnotation(v BTPAnnotation231) {
	type getResult interface {
		SetAnnotation(v BTPAnnotation231)
	}

	o.GetActualInstance().(getResult).SetAnnotation(v)
}

// GetArgumentsToDocument returns the ArgumentsToDocument field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetArgumentsToDocument() []BTPArgumentDeclaration232 {
	type getResult interface {
		GetArgumentsToDocument() []BTPArgumentDeclaration232
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetArgumentsToDocument()
	} else {
		var de []BTPArgumentDeclaration232
		return de
	}
}

// GetArgumentsToDocumentOk returns a tuple with the ArgumentsToDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetArgumentsToDocumentOk() ([]BTPArgumentDeclaration232, bool) {
	type getResult interface {
		GetArgumentsToDocumentOk() ([]BTPArgumentDeclaration232, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetArgumentsToDocumentOk()
	} else {
		return nil, false
	}
}

// HasArgumentsToDocument returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasArgumentsToDocument() bool {
	type getResult interface {
		HasArgumentsToDocument() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasArgumentsToDocument()
	} else {
		return false
	}
}

// SetArgumentsToDocument gets a reference to the given []BTPArgumentDeclaration232 and assigns it to the ArgumentsToDocument field.
func (o *BTPProcedureDeclarationBase266) SetArgumentsToDocument(v []BTPArgumentDeclaration232) {
	type getResult interface {
		SetArgumentsToDocument(v []BTPArgumentDeclaration232)
	}

	o.GetActualInstance().(getResult).SetArgumentsToDocument(v)
}

// GetDeprecated returns the Deprecated field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetDeprecated() bool {
	type getResult interface {
		GetDeprecated() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDeprecated()
	} else {
		var de bool
		return de
	}
}

// GetDeprecatedOk returns a tuple with the Deprecated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetDeprecatedOk() (*bool, bool) {
	type getResult interface {
		GetDeprecatedOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDeprecatedOk()
	} else {
		return nil, false
	}
}

// HasDeprecated returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasDeprecated() bool {
	type getResult interface {
		HasDeprecated() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDeprecated()
	} else {
		return false
	}
}

// SetDeprecated gets a reference to the given bool and assigns it to the Deprecated field.
func (o *BTPProcedureDeclarationBase266) SetDeprecated(v bool) {
	type getResult interface {
		SetDeprecated(v bool)
	}

	o.GetActualInstance().(getResult).SetDeprecated(v)
}

// GetDeprecatedExplanation returns the DeprecatedExplanation field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetDeprecatedExplanation() string {
	type getResult interface {
		GetDeprecatedExplanation() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDeprecatedExplanation()
	} else {
		var de string
		return de
	}
}

// GetDeprecatedExplanationOk returns a tuple with the DeprecatedExplanation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetDeprecatedExplanationOk() (*string, bool) {
	type getResult interface {
		GetDeprecatedExplanationOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDeprecatedExplanationOk()
	} else {
		return nil, false
	}
}

// HasDeprecatedExplanation returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasDeprecatedExplanation() bool {
	type getResult interface {
		HasDeprecatedExplanation() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDeprecatedExplanation()
	} else {
		return false
	}
}

// SetDeprecatedExplanation gets a reference to the given string and assigns it to the DeprecatedExplanation field.
func (o *BTPProcedureDeclarationBase266) SetDeprecatedExplanation(v string) {
	type getResult interface {
		SetDeprecatedExplanation(v string)
	}

	o.GetActualInstance().(getResult).SetDeprecatedExplanation(v)
}

// GetForExport returns the ForExport field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetForExport() bool {
	type getResult interface {
		GetForExport() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetForExport()
	} else {
		var de bool
		return de
	}
}

// GetForExportOk returns a tuple with the ForExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetForExportOk() (*bool, bool) {
	type getResult interface {
		GetForExportOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetForExportOk()
	} else {
		return nil, false
	}
}

// HasForExport returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasForExport() bool {
	type getResult interface {
		HasForExport() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasForExport()
	} else {
		return false
	}
}

// SetForExport gets a reference to the given bool and assigns it to the ForExport field.
func (o *BTPProcedureDeclarationBase266) SetForExport(v bool) {
	type getResult interface {
		SetForExport(v bool)
	}

	o.GetActualInstance().(getResult).SetForExport(v)
}

// GetSpaceAfterExport returns the SpaceAfterExport field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetSpaceAfterExport() BTPSpace10 {
	type getResult interface {
		GetSpaceAfterExport() BTPSpace10
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSpaceAfterExport()
	} else {
		var de BTPSpace10
		return de
	}
}

// GetSpaceAfterExportOk returns a tuple with the SpaceAfterExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetSpaceAfterExportOk() (*BTPSpace10, bool) {
	type getResult interface {
		GetSpaceAfterExportOk() (*BTPSpace10, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSpaceAfterExportOk()
	} else {
		return nil, false
	}
}

// HasSpaceAfterExport returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasSpaceAfterExport() bool {
	type getResult interface {
		HasSpaceAfterExport() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSpaceAfterExport()
	} else {
		return false
	}
}

// SetSpaceAfterExport gets a reference to the given BTPSpace10 and assigns it to the SpaceAfterExport field.
func (o *BTPProcedureDeclarationBase266) SetSpaceAfterExport(v BTPSpace10) {
	type getResult interface {
		SetSpaceAfterExport(v BTPSpace10)
	}

	o.GetActualInstance().(getResult).SetSpaceAfterExport(v)
}

// GetSymbolName returns the SymbolName field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetSymbolName() BTPIdentifier8 {
	type getResult interface {
		GetSymbolName() BTPIdentifier8
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSymbolName()
	} else {
		var de BTPIdentifier8
		return de
	}
}

// GetSymbolNameOk returns a tuple with the SymbolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetSymbolNameOk() (*BTPIdentifier8, bool) {
	type getResult interface {
		GetSymbolNameOk() (*BTPIdentifier8, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSymbolNameOk()
	} else {
		return nil, false
	}
}

// HasSymbolName returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasSymbolName() bool {
	type getResult interface {
		HasSymbolName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSymbolName()
	} else {
		return false
	}
}

// SetSymbolName gets a reference to the given BTPIdentifier8 and assigns it to the SymbolName field.
func (o *BTPProcedureDeclarationBase266) SetSymbolName(v BTPIdentifier8) {
	type getResult interface {
		SetSymbolName(v BTPIdentifier8)
	}

	o.GetActualInstance().(getResult).SetSymbolName(v)
}

// GetArguments returns the Arguments field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetArguments() []BTPArgumentDeclaration232 {
	type getResult interface {
		GetArguments() []BTPArgumentDeclaration232
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetArguments()
	} else {
		var de []BTPArgumentDeclaration232
		return de
	}
}

// GetArgumentsOk returns a tuple with the Arguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetArgumentsOk() ([]BTPArgumentDeclaration232, bool) {
	type getResult interface {
		GetArgumentsOk() ([]BTPArgumentDeclaration232, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetArgumentsOk()
	} else {
		return nil, false
	}
}

// HasArguments returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasArguments() bool {
	type getResult interface {
		HasArguments() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasArguments()
	} else {
		return false
	}
}

// SetArguments gets a reference to the given []BTPArgumentDeclaration232 and assigns it to the Arguments field.
func (o *BTPProcedureDeclarationBase266) SetArguments(v []BTPArgumentDeclaration232) {
	type getResult interface {
		SetArguments(v []BTPArgumentDeclaration232)
	}

	o.GetActualInstance().(getResult).SetArguments(v)
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetBody() BTPStatementBlock271 {
	type getResult interface {
		GetBody() BTPStatementBlock271
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBody()
	} else {
		var de BTPStatementBlock271
		return de
	}
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetBodyOk() (*BTPStatementBlock271, bool) {
	type getResult interface {
		GetBodyOk() (*BTPStatementBlock271, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBodyOk()
	} else {
		return nil, false
	}
}

// HasBody returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasBody() bool {
	type getResult interface {
		HasBody() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasBody()
	} else {
		return false
	}
}

// SetBody gets a reference to the given BTPStatementBlock271 and assigns it to the Body field.
func (o *BTPProcedureDeclarationBase266) SetBody(v BTPStatementBlock271) {
	type getResult interface {
		SetBody(v BTPStatementBlock271)
	}

	o.GetActualInstance().(getResult).SetBody(v)
}

// GetPrecondition returns the Precondition field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetPrecondition() BTPStatement269 {
	type getResult interface {
		GetPrecondition() BTPStatement269
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPrecondition()
	} else {
		var de BTPStatement269
		return de
	}
}

// GetPreconditionOk returns a tuple with the Precondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetPreconditionOk() (*BTPStatement269, bool) {
	type getResult interface {
		GetPreconditionOk() (*BTPStatement269, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPreconditionOk()
	} else {
		return nil, false
	}
}

// HasPrecondition returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasPrecondition() bool {
	type getResult interface {
		HasPrecondition() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasPrecondition()
	} else {
		return false
	}
}

// SetPrecondition gets a reference to the given BTPStatement269 and assigns it to the Precondition field.
func (o *BTPProcedureDeclarationBase266) SetPrecondition(v BTPStatement269) {
	type getResult interface {
		SetPrecondition(v BTPStatement269)
	}

	o.GetActualInstance().(getResult).SetPrecondition(v)
}

// GetReturnType returns the ReturnType field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetReturnType() BTPTypeName290 {
	type getResult interface {
		GetReturnType() BTPTypeName290
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetReturnType()
	} else {
		var de BTPTypeName290
		return de
	}
}

// GetReturnTypeOk returns a tuple with the ReturnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetReturnTypeOk() (*BTPTypeName290, bool) {
	type getResult interface {
		GetReturnTypeOk() (*BTPTypeName290, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetReturnTypeOk()
	} else {
		return nil, false
	}
}

// HasReturnType returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasReturnType() bool {
	type getResult interface {
		HasReturnType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasReturnType()
	} else {
		return false
	}
}

// SetReturnType gets a reference to the given BTPTypeName290 and assigns it to the ReturnType field.
func (o *BTPProcedureDeclarationBase266) SetReturnType(v BTPTypeName290) {
	type getResult interface {
		SetReturnType(v BTPTypeName290)
	}

	o.GetActualInstance().(getResult).SetReturnType(v)
}

// GetSpaceAfterArglist returns the SpaceAfterArglist field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetSpaceAfterArglist() BTPSpace10 {
	type getResult interface {
		GetSpaceAfterArglist() BTPSpace10
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSpaceAfterArglist()
	} else {
		var de BTPSpace10
		return de
	}
}

// GetSpaceAfterArglistOk returns a tuple with the SpaceAfterArglist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetSpaceAfterArglistOk() (*BTPSpace10, bool) {
	type getResult interface {
		GetSpaceAfterArglistOk() (*BTPSpace10, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSpaceAfterArglistOk()
	} else {
		return nil, false
	}
}

// HasSpaceAfterArglist returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasSpaceAfterArglist() bool {
	type getResult interface {
		HasSpaceAfterArglist() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSpaceAfterArglist()
	} else {
		return false
	}
}

// SetSpaceAfterArglist gets a reference to the given BTPSpace10 and assigns it to the SpaceAfterArglist field.
func (o *BTPProcedureDeclarationBase266) SetSpaceAfterArglist(v BTPSpace10) {
	type getResult interface {
		SetSpaceAfterArglist(v BTPSpace10)
	}

	o.GetActualInstance().(getResult).SetSpaceAfterArglist(v)
}

// GetSpaceInEmptyList returns the SpaceInEmptyList field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetSpaceInEmptyList() BTPSpace10 {
	type getResult interface {
		GetSpaceInEmptyList() BTPSpace10
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSpaceInEmptyList()
	} else {
		var de BTPSpace10
		return de
	}
}

// GetSpaceInEmptyListOk returns a tuple with the SpaceInEmptyList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetSpaceInEmptyListOk() (*BTPSpace10, bool) {
	type getResult interface {
		GetSpaceInEmptyListOk() (*BTPSpace10, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSpaceInEmptyListOk()
	} else {
		return nil, false
	}
}

// HasSpaceInEmptyList returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasSpaceInEmptyList() bool {
	type getResult interface {
		HasSpaceInEmptyList() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSpaceInEmptyList()
	} else {
		return false
	}
}

// SetSpaceInEmptyList gets a reference to the given BTPSpace10 and assigns it to the SpaceInEmptyList field.
func (o *BTPProcedureDeclarationBase266) SetSpaceInEmptyList(v BTPSpace10) {
	type getResult interface {
		SetSpaceInEmptyList(v BTPSpace10)
	}

	o.GetActualInstance().(getResult).SetSpaceInEmptyList(v)
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTPProcedureDeclarationBase266) GetBtType() string {
	type getResult interface {
		GetBtType() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtType()
	} else {
		var de string
		return de
	}
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPProcedureDeclarationBase266) GetBtTypeOk() (*string, bool) {
	type getResult interface {
		GetBtTypeOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtTypeOk()
	} else {
		return nil, false
	}
}

// HasBtType returns a boolean if a field has been set.
func (o *BTPProcedureDeclarationBase266) HasBtType() bool {
	type getResult interface {
		HasBtType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasBtType()
	} else {
		return false
	}
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTPProcedureDeclarationBase266) SetBtType(v string) {
	type getResult interface {
		SetBtType(v string)
	}

	o.GetActualInstance().(getResult).SetBtType(v)
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *BTPProcedureDeclarationBase266) UnmarshalJSON(data []byte) error {
	var err error
	// use discriminator value to speed up the lookup
	var jsonDict map[string]interface{}
	err = newStrictDecoder(data).Decode(&jsonDict)
	if err != nil {
		return fmt.Errorf("failed to unmarshal JSON into map for the discriminator lookup")
	}

	// check if the discriminator value is 'BTPConversionFunction-1362'
	if jsonDict["btType"] == "BTPConversionFunction-1362" {
		// try to unmarshal JSON data into BTPConversionFunction1362
		var qr *BTPConversionFunction1362
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPProcedureDeclarationBase266 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPProcedureDeclarationBase266 = nil
			return fmt.Errorf("failed to unmarshal BTPProcedureDeclarationBase266 as BTPConversionFunction1362: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTPFunctionOrPredicateDeclaration-247'
	if jsonDict["btType"] == "BTPFunctionOrPredicateDeclaration-247" {
		// try to unmarshal JSON data into BTPFunctionOrPredicateDeclaration247
		var qr *BTPFunctionOrPredicateDeclaration247
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPProcedureDeclarationBase266 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPProcedureDeclarationBase266 = nil
			return fmt.Errorf("failed to unmarshal BTPProcedureDeclarationBase266 as BTPFunctionOrPredicateDeclaration247: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTPOperatorDeclaration-264'
	if jsonDict["btType"] == "BTPOperatorDeclaration-264" {
		// try to unmarshal JSON data into BTPOperatorDeclaration264
		var qr *BTPOperatorDeclaration264
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPProcedureDeclarationBase266 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPProcedureDeclarationBase266 = nil
			return fmt.Errorf("failed to unmarshal BTPProcedureDeclarationBase266 as BTPOperatorDeclaration264: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTPPredicateDeclaration-265'
	if jsonDict["btType"] == "BTPPredicateDeclaration-265" {
		// try to unmarshal JSON data into BTPPredicateDeclaration265
		var qr *BTPPredicateDeclaration265
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPProcedureDeclarationBase266 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPProcedureDeclarationBase266 = nil
			return fmt.Errorf("failed to unmarshal BTPProcedureDeclarationBase266 as BTPPredicateDeclaration265: %s", err.Error())
		}
	}

	var qtx *base_BTPProcedureDeclarationBase266
	err = json.Unmarshal(data, &qtx)
	if err == nil {
		dst.implBTPProcedureDeclarationBase266 = qtx
		return nil // data stored in dst.base_BTPProcedureDeclarationBase266, return on the first match
	} else {
		dst.implBTPProcedureDeclarationBase266 = nil
		return fmt.Errorf("failed to unmarshal BTPProcedureDeclarationBase266 as base_BTPProcedureDeclarationBase266: %s", err.Error())
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BTPProcedureDeclarationBase266) MarshalJSON() ([]byte, error) {
	ret := src.GetActualInstance()
	if ret == nil {
		return nil, nil // no data in oneOf schemas
	} else {
		return json.Marshal(&ret)
	}
}

// Get the actual instance
func (obj *BTPProcedureDeclarationBase266) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	return obj.implBTPProcedureDeclarationBase266
}

type NullableBTPProcedureDeclarationBase266 struct {
	value *BTPProcedureDeclarationBase266
	isSet bool
}

func (v NullableBTPProcedureDeclarationBase266) Get() *BTPProcedureDeclarationBase266 {
	return v.value
}

func (v *NullableBTPProcedureDeclarationBase266) Set(val *BTPProcedureDeclarationBase266) {
	v.value = val
	v.isSet = true
}

func (v NullableBTPProcedureDeclarationBase266) IsSet() bool {
	return v.isSet
}

func (v *NullableBTPProcedureDeclarationBase266) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTPProcedureDeclarationBase266(val *BTPProcedureDeclarationBase266) *NullableBTPProcedureDeclarationBase266 {
	return &NullableBTPProcedureDeclarationBase266{value: val, isSet: true}
}

func (v NullableBTPProcedureDeclarationBase266) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTPProcedureDeclarationBase266) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type base_BTPProcedureDeclarationBase266 struct {
	BTPTopLevelNode286
	BtType                *string                     `json:"btType,omitempty"`
	Atomic                *bool                       `json:"atomic,omitempty"`
	DocumentationType     *GBTPDefinitionType         `json:"documentationType,omitempty"`
	EndSourceLocation     *int32                      `json:"endSourceLocation,omitempty"`
	NodeId                *string                     `json:"nodeId,omitempty"`
	ShortDescriptor       *string                     `json:"shortDescriptor,omitempty"`
	SpaceAfter            *BTPSpace10                 `json:"spaceAfter,omitempty"`
	SpaceBefore           *BTPSpace10                 `json:"spaceBefore,omitempty"`
	SpaceDefault          *bool                       `json:"spaceDefault,omitempty"`
	StartSourceLocation   *int32                      `json:"startSourceLocation,omitempty"`
	Annotation            *BTPAnnotation231           `json:"annotation,omitempty"`
	ArgumentsToDocument   []BTPArgumentDeclaration232 `json:"argumentsToDocument,omitempty"`
	Deprecated            *bool                       `json:"deprecated,omitempty"`
	DeprecatedExplanation *string                     `json:"deprecatedExplanation,omitempty"`
	ForExport             *bool                       `json:"forExport,omitempty"`
	SpaceAfterExport      *BTPSpace10                 `json:"spaceAfterExport,omitempty"`
	SymbolName            *BTPIdentifier8             `json:"symbolName,omitempty"`
	Arguments             []BTPArgumentDeclaration232 `json:"arguments,omitempty"`
	Body                  *BTPStatementBlock271       `json:"body,omitempty"`
	Precondition          *BTPStatement269            `json:"precondition,omitempty"`
	ReturnType            *BTPTypeName290             `json:"returnType,omitempty"`
	SpaceAfterArglist     *BTPSpace10                 `json:"spaceAfterArglist,omitempty"`
	SpaceInEmptyList      *BTPSpace10                 `json:"spaceInEmptyList,omitempty"`
	// Type of JSON object.
	BtType *string `json:"btType,omitempty"`
}

// Newbase_BTPProcedureDeclarationBase266 instantiates a new base_BTPProcedureDeclarationBase266 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func Newbase_BTPProcedureDeclarationBase266() *base_BTPProcedureDeclarationBase266 {
	this := base_BTPProcedureDeclarationBase266{}
	return &this
}

// Newbase_BTPProcedureDeclarationBase266WithDefaults instantiates a new base_BTPProcedureDeclarationBase266 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func Newbase_BTPProcedureDeclarationBase266WithDefaults() *base_BTPProcedureDeclarationBase266 {
	this := base_BTPProcedureDeclarationBase266{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *base_BTPProcedureDeclarationBase266) SetBtType(v string) {
	o.BtType = &v
}

// GetAtomic returns the Atomic field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetAtomic() bool {
	if o == nil || o.Atomic == nil {
		var ret bool
		return ret
	}
	return *o.Atomic
}

// GetAtomicOk returns a tuple with the Atomic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetAtomicOk() (*bool, bool) {
	if o == nil || o.Atomic == nil {
		return nil, false
	}
	return o.Atomic, true
}

// HasAtomic returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasAtomic() bool {
	if o != nil && o.Atomic != nil {
		return true
	}

	return false
}

// SetAtomic gets a reference to the given bool and assigns it to the Atomic field.
func (o *base_BTPProcedureDeclarationBase266) SetAtomic(v bool) {
	o.Atomic = &v
}

// GetDocumentationType returns the DocumentationType field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetDocumentationType() GBTPDefinitionType {
	if o == nil || o.DocumentationType == nil {
		var ret GBTPDefinitionType
		return ret
	}
	return *o.DocumentationType
}

// GetDocumentationTypeOk returns a tuple with the DocumentationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetDocumentationTypeOk() (*GBTPDefinitionType, bool) {
	if o == nil || o.DocumentationType == nil {
		return nil, false
	}
	return o.DocumentationType, true
}

// HasDocumentationType returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasDocumentationType() bool {
	if o != nil && o.DocumentationType != nil {
		return true
	}

	return false
}

// SetDocumentationType gets a reference to the given GBTPDefinitionType and assigns it to the DocumentationType field.
func (o *base_BTPProcedureDeclarationBase266) SetDocumentationType(v GBTPDefinitionType) {
	o.DocumentationType = &v
}

// GetEndSourceLocation returns the EndSourceLocation field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetEndSourceLocation() int32 {
	if o == nil || o.EndSourceLocation == nil {
		var ret int32
		return ret
	}
	return *o.EndSourceLocation
}

// GetEndSourceLocationOk returns a tuple with the EndSourceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetEndSourceLocationOk() (*int32, bool) {
	if o == nil || o.EndSourceLocation == nil {
		return nil, false
	}
	return o.EndSourceLocation, true
}

// HasEndSourceLocation returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasEndSourceLocation() bool {
	if o != nil && o.EndSourceLocation != nil {
		return true
	}

	return false
}

// SetEndSourceLocation gets a reference to the given int32 and assigns it to the EndSourceLocation field.
func (o *base_BTPProcedureDeclarationBase266) SetEndSourceLocation(v int32) {
	o.EndSourceLocation = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetNodeId() string {
	if o == nil || o.NodeId == nil {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetNodeIdOk() (*string, bool) {
	if o == nil || o.NodeId == nil {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasNodeId() bool {
	if o != nil && o.NodeId != nil {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *base_BTPProcedureDeclarationBase266) SetNodeId(v string) {
	o.NodeId = &v
}

// GetShortDescriptor returns the ShortDescriptor field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetShortDescriptor() string {
	if o == nil || o.ShortDescriptor == nil {
		var ret string
		return ret
	}
	return *o.ShortDescriptor
}

// GetShortDescriptorOk returns a tuple with the ShortDescriptor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetShortDescriptorOk() (*string, bool) {
	if o == nil || o.ShortDescriptor == nil {
		return nil, false
	}
	return o.ShortDescriptor, true
}

// HasShortDescriptor returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasShortDescriptor() bool {
	if o != nil && o.ShortDescriptor != nil {
		return true
	}

	return false
}

// SetShortDescriptor gets a reference to the given string and assigns it to the ShortDescriptor field.
func (o *base_BTPProcedureDeclarationBase266) SetShortDescriptor(v string) {
	o.ShortDescriptor = &v
}

// GetSpaceAfter returns the SpaceAfter field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetSpaceAfter() BTPSpace10 {
	if o == nil || o.SpaceAfter == nil {
		var ret BTPSpace10
		return ret
	}
	return *o.SpaceAfter
}

// GetSpaceAfterOk returns a tuple with the SpaceAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetSpaceAfterOk() (*BTPSpace10, bool) {
	if o == nil || o.SpaceAfter == nil {
		return nil, false
	}
	return o.SpaceAfter, true
}

// HasSpaceAfter returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasSpaceAfter() bool {
	if o != nil && o.SpaceAfter != nil {
		return true
	}

	return false
}

// SetSpaceAfter gets a reference to the given BTPSpace10 and assigns it to the SpaceAfter field.
func (o *base_BTPProcedureDeclarationBase266) SetSpaceAfter(v BTPSpace10) {
	o.SpaceAfter = &v
}

// GetSpaceBefore returns the SpaceBefore field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetSpaceBefore() BTPSpace10 {
	if o == nil || o.SpaceBefore == nil {
		var ret BTPSpace10
		return ret
	}
	return *o.SpaceBefore
}

// GetSpaceBeforeOk returns a tuple with the SpaceBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetSpaceBeforeOk() (*BTPSpace10, bool) {
	if o == nil || o.SpaceBefore == nil {
		return nil, false
	}
	return o.SpaceBefore, true
}

// HasSpaceBefore returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasSpaceBefore() bool {
	if o != nil && o.SpaceBefore != nil {
		return true
	}

	return false
}

// SetSpaceBefore gets a reference to the given BTPSpace10 and assigns it to the SpaceBefore field.
func (o *base_BTPProcedureDeclarationBase266) SetSpaceBefore(v BTPSpace10) {
	o.SpaceBefore = &v
}

// GetSpaceDefault returns the SpaceDefault field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetSpaceDefault() bool {
	if o == nil || o.SpaceDefault == nil {
		var ret bool
		return ret
	}
	return *o.SpaceDefault
}

// GetSpaceDefaultOk returns a tuple with the SpaceDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetSpaceDefaultOk() (*bool, bool) {
	if o == nil || o.SpaceDefault == nil {
		return nil, false
	}
	return o.SpaceDefault, true
}

// HasSpaceDefault returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasSpaceDefault() bool {
	if o != nil && o.SpaceDefault != nil {
		return true
	}

	return false
}

// SetSpaceDefault gets a reference to the given bool and assigns it to the SpaceDefault field.
func (o *base_BTPProcedureDeclarationBase266) SetSpaceDefault(v bool) {
	o.SpaceDefault = &v
}

// GetStartSourceLocation returns the StartSourceLocation field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetStartSourceLocation() int32 {
	if o == nil || o.StartSourceLocation == nil {
		var ret int32
		return ret
	}
	return *o.StartSourceLocation
}

// GetStartSourceLocationOk returns a tuple with the StartSourceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetStartSourceLocationOk() (*int32, bool) {
	if o == nil || o.StartSourceLocation == nil {
		return nil, false
	}
	return o.StartSourceLocation, true
}

// HasStartSourceLocation returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasStartSourceLocation() bool {
	if o != nil && o.StartSourceLocation != nil {
		return true
	}

	return false
}

// SetStartSourceLocation gets a reference to the given int32 and assigns it to the StartSourceLocation field.
func (o *base_BTPProcedureDeclarationBase266) SetStartSourceLocation(v int32) {
	o.StartSourceLocation = &v
}

// GetAnnotation returns the Annotation field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetAnnotation() BTPAnnotation231 {
	if o == nil || o.Annotation == nil {
		var ret BTPAnnotation231
		return ret
	}
	return *o.Annotation
}

// GetAnnotationOk returns a tuple with the Annotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetAnnotationOk() (*BTPAnnotation231, bool) {
	if o == nil || o.Annotation == nil {
		return nil, false
	}
	return o.Annotation, true
}

// HasAnnotation returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasAnnotation() bool {
	if o != nil && o.Annotation != nil {
		return true
	}

	return false
}

// SetAnnotation gets a reference to the given BTPAnnotation231 and assigns it to the Annotation field.
func (o *base_BTPProcedureDeclarationBase266) SetAnnotation(v BTPAnnotation231) {
	o.Annotation = &v
}

// GetArgumentsToDocument returns the ArgumentsToDocument field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetArgumentsToDocument() []BTPArgumentDeclaration232 {
	if o == nil || o.ArgumentsToDocument == nil {
		var ret []BTPArgumentDeclaration232
		return ret
	}
	return o.ArgumentsToDocument
}

// GetArgumentsToDocumentOk returns a tuple with the ArgumentsToDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetArgumentsToDocumentOk() ([]BTPArgumentDeclaration232, bool) {
	if o == nil || o.ArgumentsToDocument == nil {
		return nil, false
	}
	return o.ArgumentsToDocument, true
}

// HasArgumentsToDocument returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasArgumentsToDocument() bool {
	if o != nil && o.ArgumentsToDocument != nil {
		return true
	}

	return false
}

// SetArgumentsToDocument gets a reference to the given []BTPArgumentDeclaration232 and assigns it to the ArgumentsToDocument field.
func (o *base_BTPProcedureDeclarationBase266) SetArgumentsToDocument(v []BTPArgumentDeclaration232) {
	o.ArgumentsToDocument = v
}

// GetDeprecated returns the Deprecated field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetDeprecated() bool {
	if o == nil || o.Deprecated == nil {
		var ret bool
		return ret
	}
	return *o.Deprecated
}

// GetDeprecatedOk returns a tuple with the Deprecated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetDeprecatedOk() (*bool, bool) {
	if o == nil || o.Deprecated == nil {
		return nil, false
	}
	return o.Deprecated, true
}

// HasDeprecated returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasDeprecated() bool {
	if o != nil && o.Deprecated != nil {
		return true
	}

	return false
}

// SetDeprecated gets a reference to the given bool and assigns it to the Deprecated field.
func (o *base_BTPProcedureDeclarationBase266) SetDeprecated(v bool) {
	o.Deprecated = &v
}

// GetDeprecatedExplanation returns the DeprecatedExplanation field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetDeprecatedExplanation() string {
	if o == nil || o.DeprecatedExplanation == nil {
		var ret string
		return ret
	}
	return *o.DeprecatedExplanation
}

// GetDeprecatedExplanationOk returns a tuple with the DeprecatedExplanation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetDeprecatedExplanationOk() (*string, bool) {
	if o == nil || o.DeprecatedExplanation == nil {
		return nil, false
	}
	return o.DeprecatedExplanation, true
}

// HasDeprecatedExplanation returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasDeprecatedExplanation() bool {
	if o != nil && o.DeprecatedExplanation != nil {
		return true
	}

	return false
}

// SetDeprecatedExplanation gets a reference to the given string and assigns it to the DeprecatedExplanation field.
func (o *base_BTPProcedureDeclarationBase266) SetDeprecatedExplanation(v string) {
	o.DeprecatedExplanation = &v
}

// GetForExport returns the ForExport field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetForExport() bool {
	if o == nil || o.ForExport == nil {
		var ret bool
		return ret
	}
	return *o.ForExport
}

// GetForExportOk returns a tuple with the ForExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetForExportOk() (*bool, bool) {
	if o == nil || o.ForExport == nil {
		return nil, false
	}
	return o.ForExport, true
}

// HasForExport returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasForExport() bool {
	if o != nil && o.ForExport != nil {
		return true
	}

	return false
}

// SetForExport gets a reference to the given bool and assigns it to the ForExport field.
func (o *base_BTPProcedureDeclarationBase266) SetForExport(v bool) {
	o.ForExport = &v
}

// GetSpaceAfterExport returns the SpaceAfterExport field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetSpaceAfterExport() BTPSpace10 {
	if o == nil || o.SpaceAfterExport == nil {
		var ret BTPSpace10
		return ret
	}
	return *o.SpaceAfterExport
}

// GetSpaceAfterExportOk returns a tuple with the SpaceAfterExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetSpaceAfterExportOk() (*BTPSpace10, bool) {
	if o == nil || o.SpaceAfterExport == nil {
		return nil, false
	}
	return o.SpaceAfterExport, true
}

// HasSpaceAfterExport returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasSpaceAfterExport() bool {
	if o != nil && o.SpaceAfterExport != nil {
		return true
	}

	return false
}

// SetSpaceAfterExport gets a reference to the given BTPSpace10 and assigns it to the SpaceAfterExport field.
func (o *base_BTPProcedureDeclarationBase266) SetSpaceAfterExport(v BTPSpace10) {
	o.SpaceAfterExport = &v
}

// GetSymbolName returns the SymbolName field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetSymbolName() BTPIdentifier8 {
	if o == nil || o.SymbolName == nil {
		var ret BTPIdentifier8
		return ret
	}
	return *o.SymbolName
}

// GetSymbolNameOk returns a tuple with the SymbolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetSymbolNameOk() (*BTPIdentifier8, bool) {
	if o == nil || o.SymbolName == nil {
		return nil, false
	}
	return o.SymbolName, true
}

// HasSymbolName returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasSymbolName() bool {
	if o != nil && o.SymbolName != nil {
		return true
	}

	return false
}

// SetSymbolName gets a reference to the given BTPIdentifier8 and assigns it to the SymbolName field.
func (o *base_BTPProcedureDeclarationBase266) SetSymbolName(v BTPIdentifier8) {
	o.SymbolName = &v
}

// GetArguments returns the Arguments field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetArguments() []BTPArgumentDeclaration232 {
	if o == nil || o.Arguments == nil {
		var ret []BTPArgumentDeclaration232
		return ret
	}
	return o.Arguments
}

// GetArgumentsOk returns a tuple with the Arguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetArgumentsOk() ([]BTPArgumentDeclaration232, bool) {
	if o == nil || o.Arguments == nil {
		return nil, false
	}
	return o.Arguments, true
}

// HasArguments returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasArguments() bool {
	if o != nil && o.Arguments != nil {
		return true
	}

	return false
}

// SetArguments gets a reference to the given []BTPArgumentDeclaration232 and assigns it to the Arguments field.
func (o *base_BTPProcedureDeclarationBase266) SetArguments(v []BTPArgumentDeclaration232) {
	o.Arguments = v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetBody() BTPStatementBlock271 {
	if o == nil || o.Body == nil {
		var ret BTPStatementBlock271
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetBodyOk() (*BTPStatementBlock271, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given BTPStatementBlock271 and assigns it to the Body field.
func (o *base_BTPProcedureDeclarationBase266) SetBody(v BTPStatementBlock271) {
	o.Body = &v
}

// GetPrecondition returns the Precondition field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetPrecondition() BTPStatement269 {
	if o == nil || o.Precondition == nil {
		var ret BTPStatement269
		return ret
	}
	return *o.Precondition
}

// GetPreconditionOk returns a tuple with the Precondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetPreconditionOk() (*BTPStatement269, bool) {
	if o == nil || o.Precondition == nil {
		return nil, false
	}
	return o.Precondition, true
}

// HasPrecondition returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasPrecondition() bool {
	if o != nil && o.Precondition != nil {
		return true
	}

	return false
}

// SetPrecondition gets a reference to the given BTPStatement269 and assigns it to the Precondition field.
func (o *base_BTPProcedureDeclarationBase266) SetPrecondition(v BTPStatement269) {
	o.Precondition = &v
}

// GetReturnType returns the ReturnType field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetReturnType() BTPTypeName290 {
	if o == nil || o.ReturnType == nil {
		var ret BTPTypeName290
		return ret
	}
	return *o.ReturnType
}

// GetReturnTypeOk returns a tuple with the ReturnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetReturnTypeOk() (*BTPTypeName290, bool) {
	if o == nil || o.ReturnType == nil {
		return nil, false
	}
	return o.ReturnType, true
}

// HasReturnType returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasReturnType() bool {
	if o != nil && o.ReturnType != nil {
		return true
	}

	return false
}

// SetReturnType gets a reference to the given BTPTypeName290 and assigns it to the ReturnType field.
func (o *base_BTPProcedureDeclarationBase266) SetReturnType(v BTPTypeName290) {
	o.ReturnType = &v
}

// GetSpaceAfterArglist returns the SpaceAfterArglist field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetSpaceAfterArglist() BTPSpace10 {
	if o == nil || o.SpaceAfterArglist == nil {
		var ret BTPSpace10
		return ret
	}
	return *o.SpaceAfterArglist
}

// GetSpaceAfterArglistOk returns a tuple with the SpaceAfterArglist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetSpaceAfterArglistOk() (*BTPSpace10, bool) {
	if o == nil || o.SpaceAfterArglist == nil {
		return nil, false
	}
	return o.SpaceAfterArglist, true
}

// HasSpaceAfterArglist returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasSpaceAfterArglist() bool {
	if o != nil && o.SpaceAfterArglist != nil {
		return true
	}

	return false
}

// SetSpaceAfterArglist gets a reference to the given BTPSpace10 and assigns it to the SpaceAfterArglist field.
func (o *base_BTPProcedureDeclarationBase266) SetSpaceAfterArglist(v BTPSpace10) {
	o.SpaceAfterArglist = &v
}

// GetSpaceInEmptyList returns the SpaceInEmptyList field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetSpaceInEmptyList() BTPSpace10 {
	if o == nil || o.SpaceInEmptyList == nil {
		var ret BTPSpace10
		return ret
	}
	return *o.SpaceInEmptyList
}

// GetSpaceInEmptyListOk returns a tuple with the SpaceInEmptyList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetSpaceInEmptyListOk() (*BTPSpace10, bool) {
	if o == nil || o.SpaceInEmptyList == nil {
		return nil, false
	}
	return o.SpaceInEmptyList, true
}

// HasSpaceInEmptyList returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasSpaceInEmptyList() bool {
	if o != nil && o.SpaceInEmptyList != nil {
		return true
	}

	return false
}

// SetSpaceInEmptyList gets a reference to the given BTPSpace10 and assigns it to the SpaceInEmptyList field.
func (o *base_BTPProcedureDeclarationBase266) SetSpaceInEmptyList(v BTPSpace10) {
	o.SpaceInEmptyList = &v
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *base_BTPProcedureDeclarationBase266) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPProcedureDeclarationBase266) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *base_BTPProcedureDeclarationBase266) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *base_BTPProcedureDeclarationBase266) SetBtType(v string) {
	o.BtType = &v
}

func (o base_BTPProcedureDeclarationBase266) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTPTopLevelNode286, errBTPTopLevelNode286 := json.Marshal(o.BTPTopLevelNode286)
	if errBTPTopLevelNode286 != nil {
		return []byte{}, errBTPTopLevelNode286
	}
	errBTPTopLevelNode286 = json.Unmarshal([]byte(serializedBTPTopLevelNode286), &toSerialize)
	if errBTPTopLevelNode286 != nil {
		return []byte{}, errBTPTopLevelNode286
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.Atomic != nil {
		toSerialize["atomic"] = o.Atomic
	}
	if o.DocumentationType != nil {
		toSerialize["documentationType"] = o.DocumentationType
	}
	if o.EndSourceLocation != nil {
		toSerialize["endSourceLocation"] = o.EndSourceLocation
	}
	if o.NodeId != nil {
		toSerialize["nodeId"] = o.NodeId
	}
	if o.ShortDescriptor != nil {
		toSerialize["shortDescriptor"] = o.ShortDescriptor
	}
	if o.SpaceAfter != nil {
		toSerialize["spaceAfter"] = o.SpaceAfter
	}
	if o.SpaceBefore != nil {
		toSerialize["spaceBefore"] = o.SpaceBefore
	}
	if o.SpaceDefault != nil {
		toSerialize["spaceDefault"] = o.SpaceDefault
	}
	if o.StartSourceLocation != nil {
		toSerialize["startSourceLocation"] = o.StartSourceLocation
	}
	if o.Annotation != nil {
		toSerialize["annotation"] = o.Annotation
	}
	if o.ArgumentsToDocument != nil {
		toSerialize["argumentsToDocument"] = o.ArgumentsToDocument
	}
	if o.Deprecated != nil {
		toSerialize["deprecated"] = o.Deprecated
	}
	if o.DeprecatedExplanation != nil {
		toSerialize["deprecatedExplanation"] = o.DeprecatedExplanation
	}
	if o.ForExport != nil {
		toSerialize["forExport"] = o.ForExport
	}
	if o.SpaceAfterExport != nil {
		toSerialize["spaceAfterExport"] = o.SpaceAfterExport
	}
	if o.SymbolName != nil {
		toSerialize["symbolName"] = o.SymbolName
	}
	if o.Arguments != nil {
		toSerialize["arguments"] = o.Arguments
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.Precondition != nil {
		toSerialize["precondition"] = o.Precondition
	}
	if o.ReturnType != nil {
		toSerialize["returnType"] = o.ReturnType
	}
	if o.SpaceAfterArglist != nil {
		toSerialize["spaceAfterArglist"] = o.SpaceAfterArglist
	}
	if o.SpaceInEmptyList != nil {
		toSerialize["spaceInEmptyList"] = o.SpaceInEmptyList
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	return json.Marshal(toSerialize)
}
