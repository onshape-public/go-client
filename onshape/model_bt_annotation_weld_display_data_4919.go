/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTAnnotationWeldDisplayData4919 struct for BTAnnotationWeldDisplayData4919
type BTAnnotationWeldDisplayData4919 struct {
	BTAnnotationDisplayData3225
	AnnotationPlane  *BTCoordinateSystem387 `json:"annotationPlane,omitempty"`
	BasePlane        *BTCoordinateSystem387 `json:"basePlane,omitempty"`
	BtType           *string                `json:"btType,omitempty"`
	DeterministicId  *string                `json:"deterministicId,omitempty"`
	DxdySegments     []BTVector2d1812       `json:"dxdySegments,omitempty"`
	IsoFlip          *bool                  `json:"isoFlip,omitempty"`
	JointType        *GBTWeldJointType      `json:"jointType,omitempty"`
	LowerGroove      *float64               `json:"lowerGroove,omitempty"`
	LowerRootOpening *float64               `json:"lowerRootOpening,omitempty"`
	LowerValueFour   *float64               `json:"lowerValueFour,omitempty"`
	LowerValueOne    *float64               `json:"lowerValueOne,omitempty"`
	LowerValueThree  *float64               `json:"lowerValueThree,omitempty"`
	LowerValueTwo    *float64               `json:"lowerValueTwo,omitempty"`
	LowerWeldType    *GBTWeldType           `json:"lowerWeldType,omitempty"`
	Reference        *string                `json:"reference,omitempty"`
	UpperGroove      *float64               `json:"upperGroove,omitempty"`
	UpperRootOpening *float64               `json:"upperRootOpening,omitempty"`
	UpperValueFour   *float64               `json:"upperValueFour,omitempty"`
	UpperValueOne    *float64               `json:"upperValueOne,omitempty"`
	UpperValueThree  *float64               `json:"upperValueThree,omitempty"`
	UpperValueTwo    *float64               `json:"upperValueTwo,omitempty"`
	UpperWeldType    *GBTWeldType           `json:"upperWeldType,omitempty"`
}

// NewBTAnnotationWeldDisplayData4919 instantiates a new BTAnnotationWeldDisplayData4919 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTAnnotationWeldDisplayData4919() *BTAnnotationWeldDisplayData4919 {
	this := BTAnnotationWeldDisplayData4919{}
	return &this
}

// NewBTAnnotationWeldDisplayData4919WithDefaults instantiates a new BTAnnotationWeldDisplayData4919 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTAnnotationWeldDisplayData4919WithDefaults() *BTAnnotationWeldDisplayData4919 {
	this := BTAnnotationWeldDisplayData4919{}
	return &this
}

// GetAnnotationPlane returns the AnnotationPlane field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetAnnotationPlane() BTCoordinateSystem387 {
	if o == nil || o.AnnotationPlane == nil {
		var ret BTCoordinateSystem387
		return ret
	}
	return *o.AnnotationPlane
}

// GetAnnotationPlaneOk returns a tuple with the AnnotationPlane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetAnnotationPlaneOk() (*BTCoordinateSystem387, bool) {
	if o == nil || o.AnnotationPlane == nil {
		return nil, false
	}
	return o.AnnotationPlane, true
}

// HasAnnotationPlane returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasAnnotationPlane() bool {
	if o != nil && o.AnnotationPlane != nil {
		return true
	}

	return false
}

// SetAnnotationPlane gets a reference to the given BTCoordinateSystem387 and assigns it to the AnnotationPlane field.
func (o *BTAnnotationWeldDisplayData4919) SetAnnotationPlane(v BTCoordinateSystem387) {
	o.AnnotationPlane = &v
}

// GetBasePlane returns the BasePlane field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetBasePlane() BTCoordinateSystem387 {
	if o == nil || o.BasePlane == nil {
		var ret BTCoordinateSystem387
		return ret
	}
	return *o.BasePlane
}

// GetBasePlaneOk returns a tuple with the BasePlane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetBasePlaneOk() (*BTCoordinateSystem387, bool) {
	if o == nil || o.BasePlane == nil {
		return nil, false
	}
	return o.BasePlane, true
}

// HasBasePlane returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasBasePlane() bool {
	if o != nil && o.BasePlane != nil {
		return true
	}

	return false
}

// SetBasePlane gets a reference to the given BTCoordinateSystem387 and assigns it to the BasePlane field.
func (o *BTAnnotationWeldDisplayData4919) SetBasePlane(v BTCoordinateSystem387) {
	o.BasePlane = &v
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTAnnotationWeldDisplayData4919) SetBtType(v string) {
	o.BtType = &v
}

// GetDeterministicId returns the DeterministicId field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetDeterministicId() string {
	if o == nil || o.DeterministicId == nil {
		var ret string
		return ret
	}
	return *o.DeterministicId
}

// GetDeterministicIdOk returns a tuple with the DeterministicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetDeterministicIdOk() (*string, bool) {
	if o == nil || o.DeterministicId == nil {
		return nil, false
	}
	return o.DeterministicId, true
}

// HasDeterministicId returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasDeterministicId() bool {
	if o != nil && o.DeterministicId != nil {
		return true
	}

	return false
}

// SetDeterministicId gets a reference to the given string and assigns it to the DeterministicId field.
func (o *BTAnnotationWeldDisplayData4919) SetDeterministicId(v string) {
	o.DeterministicId = &v
}

// GetDxdySegments returns the DxdySegments field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetDxdySegments() []BTVector2d1812 {
	if o == nil || o.DxdySegments == nil {
		var ret []BTVector2d1812
		return ret
	}
	return o.DxdySegments
}

// GetDxdySegmentsOk returns a tuple with the DxdySegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetDxdySegmentsOk() ([]BTVector2d1812, bool) {
	if o == nil || o.DxdySegments == nil {
		return nil, false
	}
	return o.DxdySegments, true
}

// HasDxdySegments returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasDxdySegments() bool {
	if o != nil && o.DxdySegments != nil {
		return true
	}

	return false
}

// SetDxdySegments gets a reference to the given []BTVector2d1812 and assigns it to the DxdySegments field.
func (o *BTAnnotationWeldDisplayData4919) SetDxdySegments(v []BTVector2d1812) {
	o.DxdySegments = v
}

// GetIsoFlip returns the IsoFlip field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetIsoFlip() bool {
	if o == nil || o.IsoFlip == nil {
		var ret bool
		return ret
	}
	return *o.IsoFlip
}

// GetIsoFlipOk returns a tuple with the IsoFlip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetIsoFlipOk() (*bool, bool) {
	if o == nil || o.IsoFlip == nil {
		return nil, false
	}
	return o.IsoFlip, true
}

// HasIsoFlip returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasIsoFlip() bool {
	if o != nil && o.IsoFlip != nil {
		return true
	}

	return false
}

// SetIsoFlip gets a reference to the given bool and assigns it to the IsoFlip field.
func (o *BTAnnotationWeldDisplayData4919) SetIsoFlip(v bool) {
	o.IsoFlip = &v
}

// GetJointType returns the JointType field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetJointType() GBTWeldJointType {
	if o == nil || o.JointType == nil {
		var ret GBTWeldJointType
		return ret
	}
	return *o.JointType
}

// GetJointTypeOk returns a tuple with the JointType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetJointTypeOk() (*GBTWeldJointType, bool) {
	if o == nil || o.JointType == nil {
		return nil, false
	}
	return o.JointType, true
}

// HasJointType returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasJointType() bool {
	if o != nil && o.JointType != nil {
		return true
	}

	return false
}

// SetJointType gets a reference to the given GBTWeldJointType and assigns it to the JointType field.
func (o *BTAnnotationWeldDisplayData4919) SetJointType(v GBTWeldJointType) {
	o.JointType = &v
}

// GetLowerGroove returns the LowerGroove field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetLowerGroove() float64 {
	if o == nil || o.LowerGroove == nil {
		var ret float64
		return ret
	}
	return *o.LowerGroove
}

// GetLowerGrooveOk returns a tuple with the LowerGroove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetLowerGrooveOk() (*float64, bool) {
	if o == nil || o.LowerGroove == nil {
		return nil, false
	}
	return o.LowerGroove, true
}

// HasLowerGroove returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasLowerGroove() bool {
	if o != nil && o.LowerGroove != nil {
		return true
	}

	return false
}

// SetLowerGroove gets a reference to the given float64 and assigns it to the LowerGroove field.
func (o *BTAnnotationWeldDisplayData4919) SetLowerGroove(v float64) {
	o.LowerGroove = &v
}

// GetLowerRootOpening returns the LowerRootOpening field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetLowerRootOpening() float64 {
	if o == nil || o.LowerRootOpening == nil {
		var ret float64
		return ret
	}
	return *o.LowerRootOpening
}

// GetLowerRootOpeningOk returns a tuple with the LowerRootOpening field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetLowerRootOpeningOk() (*float64, bool) {
	if o == nil || o.LowerRootOpening == nil {
		return nil, false
	}
	return o.LowerRootOpening, true
}

// HasLowerRootOpening returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasLowerRootOpening() bool {
	if o != nil && o.LowerRootOpening != nil {
		return true
	}

	return false
}

// SetLowerRootOpening gets a reference to the given float64 and assigns it to the LowerRootOpening field.
func (o *BTAnnotationWeldDisplayData4919) SetLowerRootOpening(v float64) {
	o.LowerRootOpening = &v
}

// GetLowerValueFour returns the LowerValueFour field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetLowerValueFour() float64 {
	if o == nil || o.LowerValueFour == nil {
		var ret float64
		return ret
	}
	return *o.LowerValueFour
}

// GetLowerValueFourOk returns a tuple with the LowerValueFour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetLowerValueFourOk() (*float64, bool) {
	if o == nil || o.LowerValueFour == nil {
		return nil, false
	}
	return o.LowerValueFour, true
}

// HasLowerValueFour returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasLowerValueFour() bool {
	if o != nil && o.LowerValueFour != nil {
		return true
	}

	return false
}

// SetLowerValueFour gets a reference to the given float64 and assigns it to the LowerValueFour field.
func (o *BTAnnotationWeldDisplayData4919) SetLowerValueFour(v float64) {
	o.LowerValueFour = &v
}

// GetLowerValueOne returns the LowerValueOne field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetLowerValueOne() float64 {
	if o == nil || o.LowerValueOne == nil {
		var ret float64
		return ret
	}
	return *o.LowerValueOne
}

// GetLowerValueOneOk returns a tuple with the LowerValueOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetLowerValueOneOk() (*float64, bool) {
	if o == nil || o.LowerValueOne == nil {
		return nil, false
	}
	return o.LowerValueOne, true
}

// HasLowerValueOne returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasLowerValueOne() bool {
	if o != nil && o.LowerValueOne != nil {
		return true
	}

	return false
}

// SetLowerValueOne gets a reference to the given float64 and assigns it to the LowerValueOne field.
func (o *BTAnnotationWeldDisplayData4919) SetLowerValueOne(v float64) {
	o.LowerValueOne = &v
}

// GetLowerValueThree returns the LowerValueThree field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetLowerValueThree() float64 {
	if o == nil || o.LowerValueThree == nil {
		var ret float64
		return ret
	}
	return *o.LowerValueThree
}

// GetLowerValueThreeOk returns a tuple with the LowerValueThree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetLowerValueThreeOk() (*float64, bool) {
	if o == nil || o.LowerValueThree == nil {
		return nil, false
	}
	return o.LowerValueThree, true
}

// HasLowerValueThree returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasLowerValueThree() bool {
	if o != nil && o.LowerValueThree != nil {
		return true
	}

	return false
}

// SetLowerValueThree gets a reference to the given float64 and assigns it to the LowerValueThree field.
func (o *BTAnnotationWeldDisplayData4919) SetLowerValueThree(v float64) {
	o.LowerValueThree = &v
}

// GetLowerValueTwo returns the LowerValueTwo field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetLowerValueTwo() float64 {
	if o == nil || o.LowerValueTwo == nil {
		var ret float64
		return ret
	}
	return *o.LowerValueTwo
}

// GetLowerValueTwoOk returns a tuple with the LowerValueTwo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetLowerValueTwoOk() (*float64, bool) {
	if o == nil || o.LowerValueTwo == nil {
		return nil, false
	}
	return o.LowerValueTwo, true
}

// HasLowerValueTwo returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasLowerValueTwo() bool {
	if o != nil && o.LowerValueTwo != nil {
		return true
	}

	return false
}

// SetLowerValueTwo gets a reference to the given float64 and assigns it to the LowerValueTwo field.
func (o *BTAnnotationWeldDisplayData4919) SetLowerValueTwo(v float64) {
	o.LowerValueTwo = &v
}

// GetLowerWeldType returns the LowerWeldType field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetLowerWeldType() GBTWeldType {
	if o == nil || o.LowerWeldType == nil {
		var ret GBTWeldType
		return ret
	}
	return *o.LowerWeldType
}

// GetLowerWeldTypeOk returns a tuple with the LowerWeldType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetLowerWeldTypeOk() (*GBTWeldType, bool) {
	if o == nil || o.LowerWeldType == nil {
		return nil, false
	}
	return o.LowerWeldType, true
}

// HasLowerWeldType returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasLowerWeldType() bool {
	if o != nil && o.LowerWeldType != nil {
		return true
	}

	return false
}

// SetLowerWeldType gets a reference to the given GBTWeldType and assigns it to the LowerWeldType field.
func (o *BTAnnotationWeldDisplayData4919) SetLowerWeldType(v GBTWeldType) {
	o.LowerWeldType = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *BTAnnotationWeldDisplayData4919) SetReference(v string) {
	o.Reference = &v
}

// GetUpperGroove returns the UpperGroove field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetUpperGroove() float64 {
	if o == nil || o.UpperGroove == nil {
		var ret float64
		return ret
	}
	return *o.UpperGroove
}

// GetUpperGrooveOk returns a tuple with the UpperGroove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetUpperGrooveOk() (*float64, bool) {
	if o == nil || o.UpperGroove == nil {
		return nil, false
	}
	return o.UpperGroove, true
}

// HasUpperGroove returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasUpperGroove() bool {
	if o != nil && o.UpperGroove != nil {
		return true
	}

	return false
}

// SetUpperGroove gets a reference to the given float64 and assigns it to the UpperGroove field.
func (o *BTAnnotationWeldDisplayData4919) SetUpperGroove(v float64) {
	o.UpperGroove = &v
}

// GetUpperRootOpening returns the UpperRootOpening field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetUpperRootOpening() float64 {
	if o == nil || o.UpperRootOpening == nil {
		var ret float64
		return ret
	}
	return *o.UpperRootOpening
}

// GetUpperRootOpeningOk returns a tuple with the UpperRootOpening field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetUpperRootOpeningOk() (*float64, bool) {
	if o == nil || o.UpperRootOpening == nil {
		return nil, false
	}
	return o.UpperRootOpening, true
}

// HasUpperRootOpening returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasUpperRootOpening() bool {
	if o != nil && o.UpperRootOpening != nil {
		return true
	}

	return false
}

// SetUpperRootOpening gets a reference to the given float64 and assigns it to the UpperRootOpening field.
func (o *BTAnnotationWeldDisplayData4919) SetUpperRootOpening(v float64) {
	o.UpperRootOpening = &v
}

// GetUpperValueFour returns the UpperValueFour field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetUpperValueFour() float64 {
	if o == nil || o.UpperValueFour == nil {
		var ret float64
		return ret
	}
	return *o.UpperValueFour
}

// GetUpperValueFourOk returns a tuple with the UpperValueFour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetUpperValueFourOk() (*float64, bool) {
	if o == nil || o.UpperValueFour == nil {
		return nil, false
	}
	return o.UpperValueFour, true
}

// HasUpperValueFour returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasUpperValueFour() bool {
	if o != nil && o.UpperValueFour != nil {
		return true
	}

	return false
}

// SetUpperValueFour gets a reference to the given float64 and assigns it to the UpperValueFour field.
func (o *BTAnnotationWeldDisplayData4919) SetUpperValueFour(v float64) {
	o.UpperValueFour = &v
}

// GetUpperValueOne returns the UpperValueOne field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetUpperValueOne() float64 {
	if o == nil || o.UpperValueOne == nil {
		var ret float64
		return ret
	}
	return *o.UpperValueOne
}

// GetUpperValueOneOk returns a tuple with the UpperValueOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetUpperValueOneOk() (*float64, bool) {
	if o == nil || o.UpperValueOne == nil {
		return nil, false
	}
	return o.UpperValueOne, true
}

// HasUpperValueOne returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasUpperValueOne() bool {
	if o != nil && o.UpperValueOne != nil {
		return true
	}

	return false
}

// SetUpperValueOne gets a reference to the given float64 and assigns it to the UpperValueOne field.
func (o *BTAnnotationWeldDisplayData4919) SetUpperValueOne(v float64) {
	o.UpperValueOne = &v
}

// GetUpperValueThree returns the UpperValueThree field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetUpperValueThree() float64 {
	if o == nil || o.UpperValueThree == nil {
		var ret float64
		return ret
	}
	return *o.UpperValueThree
}

// GetUpperValueThreeOk returns a tuple with the UpperValueThree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetUpperValueThreeOk() (*float64, bool) {
	if o == nil || o.UpperValueThree == nil {
		return nil, false
	}
	return o.UpperValueThree, true
}

// HasUpperValueThree returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasUpperValueThree() bool {
	if o != nil && o.UpperValueThree != nil {
		return true
	}

	return false
}

// SetUpperValueThree gets a reference to the given float64 and assigns it to the UpperValueThree field.
func (o *BTAnnotationWeldDisplayData4919) SetUpperValueThree(v float64) {
	o.UpperValueThree = &v
}

// GetUpperValueTwo returns the UpperValueTwo field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetUpperValueTwo() float64 {
	if o == nil || o.UpperValueTwo == nil {
		var ret float64
		return ret
	}
	return *o.UpperValueTwo
}

// GetUpperValueTwoOk returns a tuple with the UpperValueTwo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetUpperValueTwoOk() (*float64, bool) {
	if o == nil || o.UpperValueTwo == nil {
		return nil, false
	}
	return o.UpperValueTwo, true
}

// HasUpperValueTwo returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasUpperValueTwo() bool {
	if o != nil && o.UpperValueTwo != nil {
		return true
	}

	return false
}

// SetUpperValueTwo gets a reference to the given float64 and assigns it to the UpperValueTwo field.
func (o *BTAnnotationWeldDisplayData4919) SetUpperValueTwo(v float64) {
	o.UpperValueTwo = &v
}

// GetUpperWeldType returns the UpperWeldType field value if set, zero value otherwise.
func (o *BTAnnotationWeldDisplayData4919) GetUpperWeldType() GBTWeldType {
	if o == nil || o.UpperWeldType == nil {
		var ret GBTWeldType
		return ret
	}
	return *o.UpperWeldType
}

// GetUpperWeldTypeOk returns a tuple with the UpperWeldType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAnnotationWeldDisplayData4919) GetUpperWeldTypeOk() (*GBTWeldType, bool) {
	if o == nil || o.UpperWeldType == nil {
		return nil, false
	}
	return o.UpperWeldType, true
}

// HasUpperWeldType returns a boolean if a field has been set.
func (o *BTAnnotationWeldDisplayData4919) HasUpperWeldType() bool {
	if o != nil && o.UpperWeldType != nil {
		return true
	}

	return false
}

// SetUpperWeldType gets a reference to the given GBTWeldType and assigns it to the UpperWeldType field.
func (o *BTAnnotationWeldDisplayData4919) SetUpperWeldType(v GBTWeldType) {
	o.UpperWeldType = &v
}

func (o BTAnnotationWeldDisplayData4919) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTAnnotationDisplayData3225, errBTAnnotationDisplayData3225 := json.Marshal(o.BTAnnotationDisplayData3225)
	if errBTAnnotationDisplayData3225 != nil {
		return []byte{}, errBTAnnotationDisplayData3225
	}
	errBTAnnotationDisplayData3225 = json.Unmarshal([]byte(serializedBTAnnotationDisplayData3225), &toSerialize)
	if errBTAnnotationDisplayData3225 != nil {
		return []byte{}, errBTAnnotationDisplayData3225
	}
	if o.AnnotationPlane != nil {
		toSerialize["annotationPlane"] = o.AnnotationPlane
	}
	if o.BasePlane != nil {
		toSerialize["basePlane"] = o.BasePlane
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.DeterministicId != nil {
		toSerialize["deterministicId"] = o.DeterministicId
	}
	if o.DxdySegments != nil {
		toSerialize["dxdySegments"] = o.DxdySegments
	}
	if o.IsoFlip != nil {
		toSerialize["isoFlip"] = o.IsoFlip
	}
	if o.JointType != nil {
		toSerialize["jointType"] = o.JointType
	}
	if o.LowerGroove != nil {
		toSerialize["lowerGroove"] = o.LowerGroove
	}
	if o.LowerRootOpening != nil {
		toSerialize["lowerRootOpening"] = o.LowerRootOpening
	}
	if o.LowerValueFour != nil {
		toSerialize["lowerValueFour"] = o.LowerValueFour
	}
	if o.LowerValueOne != nil {
		toSerialize["lowerValueOne"] = o.LowerValueOne
	}
	if o.LowerValueThree != nil {
		toSerialize["lowerValueThree"] = o.LowerValueThree
	}
	if o.LowerValueTwo != nil {
		toSerialize["lowerValueTwo"] = o.LowerValueTwo
	}
	if o.LowerWeldType != nil {
		toSerialize["lowerWeldType"] = o.LowerWeldType
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.UpperGroove != nil {
		toSerialize["upperGroove"] = o.UpperGroove
	}
	if o.UpperRootOpening != nil {
		toSerialize["upperRootOpening"] = o.UpperRootOpening
	}
	if o.UpperValueFour != nil {
		toSerialize["upperValueFour"] = o.UpperValueFour
	}
	if o.UpperValueOne != nil {
		toSerialize["upperValueOne"] = o.UpperValueOne
	}
	if o.UpperValueThree != nil {
		toSerialize["upperValueThree"] = o.UpperValueThree
	}
	if o.UpperValueTwo != nil {
		toSerialize["upperValueTwo"] = o.UpperValueTwo
	}
	if o.UpperWeldType != nil {
		toSerialize["upperWeldType"] = o.UpperWeldType
	}
	return json.Marshal(toSerialize)
}

type NullableBTAnnotationWeldDisplayData4919 struct {
	value *BTAnnotationWeldDisplayData4919
	isSet bool
}

func (v NullableBTAnnotationWeldDisplayData4919) Get() *BTAnnotationWeldDisplayData4919 {
	return v.value
}

func (v *NullableBTAnnotationWeldDisplayData4919) Set(val *BTAnnotationWeldDisplayData4919) {
	v.value = val
	v.isSet = true
}

func (v NullableBTAnnotationWeldDisplayData4919) IsSet() bool {
	return v.isSet
}

func (v *NullableBTAnnotationWeldDisplayData4919) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTAnnotationWeldDisplayData4919(val *BTAnnotationWeldDisplayData4919) *NullableBTAnnotationWeldDisplayData4919 {
	return &NullableBTAnnotationWeldDisplayData4919{value: val, isSet: true}
}

func (v NullableBTAnnotationWeldDisplayData4919) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTAnnotationWeldDisplayData4919) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
