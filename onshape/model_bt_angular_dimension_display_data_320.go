/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
	"fmt"
)

// BTAngularDimensionDisplayData320 - struct for BTAngularDimensionDisplayData320
type BTAngularDimensionDisplayData320 struct {
	implBTAngularDimensionDisplayData320 interface{}
}

// BTArcLengthDimensionDisplayData1018AsBTAngularDimensionDisplayData320 is a convenience function that returns BTArcLengthDimensionDisplayData1018 wrapped in BTAngularDimensionDisplayData320
func (o *BTArcLengthDimensionDisplayData1018) AsBTAngularDimensionDisplayData320() *BTAngularDimensionDisplayData320 {
	return &BTAngularDimensionDisplayData320{o}
}

// NewBTAngularDimensionDisplayData320 instantiates a new BTAngularDimensionDisplayData320 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTAngularDimensionDisplayData320() *BTAngularDimensionDisplayData320 {
	this := BTAngularDimensionDisplayData320{Newbase_BTAngularDimensionDisplayData320()}
	return &this
}

// NewBTAngularDimensionDisplayData320WithDefaults instantiates a new BTAngularDimensionDisplayData320 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTAngularDimensionDisplayData320WithDefaults() *BTAngularDimensionDisplayData320 {
	this := BTAngularDimensionDisplayData320{Newbase_BTAngularDimensionDisplayData320WithDefaults()}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetBtType() string {
	type getResult interface {
		GetBtType() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtType()
	} else {
		var de string
		return de
	}
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetBtTypeOk() (*string, bool) {
	type getResult interface {
		GetBtTypeOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtTypeOk()
	} else {
		return nil, false
	}
}

// HasBtType returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasBtType() bool {
	type getResult interface {
		HasBtType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasBtType()
	} else {
		return false
	}
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTAngularDimensionDisplayData320) SetBtType(v string) {
	type getResult interface {
		SetBtType(v string)
	}

	o.GetActualInstance().(getResult).SetBtType(v)
}

// GetCoordinateSystem returns the CoordinateSystem field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetCoordinateSystem() BTMatrix3x3340 {
	type getResult interface {
		GetCoordinateSystem() BTMatrix3x3340
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCoordinateSystem()
	} else {
		var de BTMatrix3x3340
		return de
	}
}

// GetCoordinateSystemOk returns a tuple with the CoordinateSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetCoordinateSystemOk() (*BTMatrix3x3340, bool) {
	type getResult interface {
		GetCoordinateSystemOk() (*BTMatrix3x3340, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCoordinateSystemOk()
	} else {
		return nil, false
	}
}

// HasCoordinateSystem returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasCoordinateSystem() bool {
	type getResult interface {
		HasCoordinateSystem() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasCoordinateSystem()
	} else {
		return false
	}
}

// SetCoordinateSystem gets a reference to the given BTMatrix3x3340 and assigns it to the CoordinateSystem field.
func (o *BTAngularDimensionDisplayData320) SetCoordinateSystem(v BTMatrix3x3340) {
	type getResult interface {
		SetCoordinateSystem(v BTMatrix3x3340)
	}

	o.GetActualInstance().(getResult).SetCoordinateSystem(v)
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetFeatureId() string {
	type getResult interface {
		GetFeatureId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFeatureId()
	} else {
		var de string
		return de
	}
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetFeatureIdOk() (*string, bool) {
	type getResult interface {
		GetFeatureIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFeatureIdOk()
	} else {
		return nil, false
	}
}

// HasFeatureId returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasFeatureId() bool {
	type getResult interface {
		HasFeatureId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasFeatureId()
	} else {
		return false
	}
}

// SetFeatureId gets a reference to the given string and assigns it to the FeatureId field.
func (o *BTAngularDimensionDisplayData320) SetFeatureId(v string) {
	type getResult interface {
		SetFeatureId(v string)
	}

	o.GetActualInstance().(getResult).SetFeatureId(v)
}

// GetHasMaximumLimit_ returns the HasMaximumLimit_ field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetHasMaximumLimit_() bool {
	type getResult interface {
		GetHasMaximumLimit_() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetHasMaximumLimit_()
	} else {
		var de bool
		return de
	}
}

// GetHasMaximumLimit_Ok returns a tuple with the HasMaximumLimit_ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetHasMaximumLimit_Ok() (*bool, bool) {
	type getResult interface {
		GetHasMaximumLimit_Ok() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetHasMaximumLimit_Ok()
	} else {
		return nil, false
	}
}

// HasHasMaximumLimit_ returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasHasMaximumLimit_() bool {
	type getResult interface {
		HasHasMaximumLimit_() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasHasMaximumLimit_()
	} else {
		return false
	}
}

// SetHasMaximumLimit_ gets a reference to the given bool and assigns it to the HasMaximumLimit_ field.
func (o *BTAngularDimensionDisplayData320) SetHasMaximumLimit_(v bool) {
	type getResult interface {
		SetHasMaximumLimit_(v bool)
	}

	o.GetActualInstance().(getResult).SetHasMaximumLimit_(v)
}

// GetHasMinimumLimit_ returns the HasMinimumLimit_ field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetHasMinimumLimit_() bool {
	type getResult interface {
		GetHasMinimumLimit_() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetHasMinimumLimit_()
	} else {
		var de bool
		return de
	}
}

// GetHasMinimumLimit_Ok returns a tuple with the HasMinimumLimit_ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetHasMinimumLimit_Ok() (*bool, bool) {
	type getResult interface {
		GetHasMinimumLimit_Ok() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetHasMinimumLimit_Ok()
	} else {
		return nil, false
	}
}

// HasHasMinimumLimit_ returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasHasMinimumLimit_() bool {
	type getResult interface {
		HasHasMinimumLimit_() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasHasMinimumLimit_()
	} else {
		return false
	}
}

// SetHasMinimumLimit_ gets a reference to the given bool and assigns it to the HasMinimumLimit_ field.
func (o *BTAngularDimensionDisplayData320) SetHasMinimumLimit_(v bool) {
	type getResult interface {
		SetHasMinimumLimit_(v bool)
	}

	o.GetActualInstance().(getResult).SetHasMinimumLimit_(v)
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetId() string {
	type getResult interface {
		GetId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetId()
	} else {
		var de string
		return de
	}
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetIdOk() (*string, bool) {
	type getResult interface {
		GetIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIdOk()
	} else {
		return nil, false
	}
}

// HasId returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasId() bool {
	type getResult interface {
		HasId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasId()
	} else {
		return false
	}
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTAngularDimensionDisplayData320) SetId(v string) {
	type getResult interface {
		SetId(v string)
	}

	o.GetActualInstance().(getResult).SetId(v)
}

// GetIsAssociatedWithFlat returns the IsAssociatedWithFlat field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetIsAssociatedWithFlat() bool {
	type getResult interface {
		GetIsAssociatedWithFlat() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsAssociatedWithFlat()
	} else {
		var de bool
		return de
	}
}

// GetIsAssociatedWithFlatOk returns a tuple with the IsAssociatedWithFlat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetIsAssociatedWithFlatOk() (*bool, bool) {
	type getResult interface {
		GetIsAssociatedWithFlatOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsAssociatedWithFlatOk()
	} else {
		return nil, false
	}
}

// HasIsAssociatedWithFlat returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasIsAssociatedWithFlat() bool {
	type getResult interface {
		HasIsAssociatedWithFlat() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIsAssociatedWithFlat()
	} else {
		return false
	}
}

// SetIsAssociatedWithFlat gets a reference to the given bool and assigns it to the IsAssociatedWithFlat field.
func (o *BTAngularDimensionDisplayData320) SetIsAssociatedWithFlat(v bool) {
	type getResult interface {
		SetIsAssociatedWithFlat(v bool)
	}

	o.GetActualInstance().(getResult).SetIsAssociatedWithFlat(v)
}

// GetIsDriven returns the IsDriven field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetIsDriven() bool {
	type getResult interface {
		GetIsDriven() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsDriven()
	} else {
		var de bool
		return de
	}
}

// GetIsDrivenOk returns a tuple with the IsDriven field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetIsDrivenOk() (*bool, bool) {
	type getResult interface {
		GetIsDrivenOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsDrivenOk()
	} else {
		return nil, false
	}
}

// HasIsDriven returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasIsDriven() bool {
	type getResult interface {
		HasIsDriven() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIsDriven()
	} else {
		return false
	}
}

// SetIsDriven gets a reference to the given bool and assigns it to the IsDriven field.
func (o *BTAngularDimensionDisplayData320) SetIsDriven(v bool) {
	type getResult interface {
		SetIsDriven(v bool)
	}

	o.GetActualInstance().(getResult).SetIsDriven(v)
}

// GetIsOverDefined returns the IsOverDefined field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetIsOverDefined() bool {
	type getResult interface {
		GetIsOverDefined() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsOverDefined()
	} else {
		var de bool
		return de
	}
}

// GetIsOverDefinedOk returns a tuple with the IsOverDefined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetIsOverDefinedOk() (*bool, bool) {
	type getResult interface {
		GetIsOverDefinedOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsOverDefinedOk()
	} else {
		return nil, false
	}
}

// HasIsOverDefined returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasIsOverDefined() bool {
	type getResult interface {
		HasIsOverDefined() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIsOverDefined()
	} else {
		return false
	}
}

// SetIsOverDefined gets a reference to the given bool and assigns it to the IsOverDefined field.
func (o *BTAngularDimensionDisplayData320) SetIsOverDefined(v bool) {
	type getResult interface {
		SetIsOverDefined(v bool)
	}

	o.GetActualInstance().(getResult).SetIsOverDefined(v)
}

// GetMaximumLimit returns the MaximumLimit field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetMaximumLimit() float64 {
	type getResult interface {
		GetMaximumLimit() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetMaximumLimit()
	} else {
		var de float64
		return de
	}
}

// GetMaximumLimitOk returns a tuple with the MaximumLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetMaximumLimitOk() (*float64, bool) {
	type getResult interface {
		GetMaximumLimitOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetMaximumLimitOk()
	} else {
		return nil, false
	}
}

// HasMaximumLimit returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasMaximumLimit() bool {
	type getResult interface {
		HasMaximumLimit() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasMaximumLimit()
	} else {
		return false
	}
}

// SetMaximumLimit gets a reference to the given float64 and assigns it to the MaximumLimit field.
func (o *BTAngularDimensionDisplayData320) SetMaximumLimit(v float64) {
	type getResult interface {
		SetMaximumLimit(v float64)
	}

	o.GetActualInstance().(getResult).SetMaximumLimit(v)
}

// GetMinimumLimit returns the MinimumLimit field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetMinimumLimit() float64 {
	type getResult interface {
		GetMinimumLimit() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetMinimumLimit()
	} else {
		var de float64
		return de
	}
}

// GetMinimumLimitOk returns a tuple with the MinimumLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetMinimumLimitOk() (*float64, bool) {
	type getResult interface {
		GetMinimumLimitOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetMinimumLimitOk()
	} else {
		return nil, false
	}
}

// HasMinimumLimit returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasMinimumLimit() bool {
	type getResult interface {
		HasMinimumLimit() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasMinimumLimit()
	} else {
		return false
	}
}

// SetMinimumLimit gets a reference to the given float64 and assigns it to the MinimumLimit field.
func (o *BTAngularDimensionDisplayData320) SetMinimumLimit(v float64) {
	type getResult interface {
		SetMinimumLimit(v float64)
	}

	o.GetActualInstance().(getResult).SetMinimumLimit(v)
}

// GetParameterId returns the ParameterId field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetParameterId() string {
	type getResult interface {
		GetParameterId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParameterId()
	} else {
		var de string
		return de
	}
}

// GetParameterIdOk returns a tuple with the ParameterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetParameterIdOk() (*string, bool) {
	type getResult interface {
		GetParameterIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParameterIdOk()
	} else {
		return nil, false
	}
}

// HasParameterId returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasParameterId() bool {
	type getResult interface {
		HasParameterId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasParameterId()
	} else {
		return false
	}
}

// SetParameterId gets a reference to the given string and assigns it to the ParameterId field.
func (o *BTAngularDimensionDisplayData320) SetParameterId(v string) {
	type getResult interface {
		SetParameterId(v string)
	}

	o.GetActualInstance().(getResult).SetParameterId(v)
}

// GetPlaneMatrix returns the PlaneMatrix field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetPlaneMatrix() BTBSMatrix386 {
	type getResult interface {
		GetPlaneMatrix() BTBSMatrix386
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPlaneMatrix()
	} else {
		var de BTBSMatrix386
		return de
	}
}

// GetPlaneMatrixOk returns a tuple with the PlaneMatrix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetPlaneMatrixOk() (*BTBSMatrix386, bool) {
	type getResult interface {
		GetPlaneMatrixOk() (*BTBSMatrix386, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPlaneMatrixOk()
	} else {
		return nil, false
	}
}

// HasPlaneMatrix returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasPlaneMatrix() bool {
	type getResult interface {
		HasPlaneMatrix() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasPlaneMatrix()
	} else {
		return false
	}
}

// SetPlaneMatrix gets a reference to the given BTBSMatrix386 and assigns it to the PlaneMatrix field.
func (o *BTAngularDimensionDisplayData320) SetPlaneMatrix(v BTBSMatrix386) {
	type getResult interface {
		SetPlaneMatrix(v BTBSMatrix386)
	}

	o.GetActualInstance().(getResult).SetPlaneMatrix(v)
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetValue() float64 {
	type getResult interface {
		GetValue() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetValue()
	} else {
		var de float64
		return de
	}
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetValueOk() (*float64, bool) {
	type getResult interface {
		GetValueOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetValueOk()
	} else {
		return nil, false
	}
}

// HasValue returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasValue() bool {
	type getResult interface {
		HasValue() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasValue()
	} else {
		return false
	}
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *BTAngularDimensionDisplayData320) SetValue(v float64) {
	type getResult interface {
		SetValue(v float64)
	}

	o.GetActualInstance().(getResult).SetValue(v)
}

// GetClockwise returns the Clockwise field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetClockwise() bool {
	type getResult interface {
		GetClockwise() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetClockwise()
	} else {
		var de bool
		return de
	}
}

// GetClockwiseOk returns a tuple with the Clockwise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetClockwiseOk() (*bool, bool) {
	type getResult interface {
		GetClockwiseOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetClockwiseOk()
	} else {
		return nil, false
	}
}

// HasClockwise returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasClockwise() bool {
	type getResult interface {
		HasClockwise() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasClockwise()
	} else {
		return false
	}
}

// SetClockwise gets a reference to the given bool and assigns it to the Clockwise field.
func (o *BTAngularDimensionDisplayData320) SetClockwise(v bool) {
	type getResult interface {
		SetClockwise(v bool)
	}

	o.GetActualInstance().(getResult).SetClockwise(v)
}

// GetPositionR returns the PositionR field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetPositionR() float64 {
	type getResult interface {
		GetPositionR() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPositionR()
	} else {
		var de float64
		return de
	}
}

// GetPositionROk returns a tuple with the PositionR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetPositionROk() (*float64, bool) {
	type getResult interface {
		GetPositionROk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPositionROk()
	} else {
		return nil, false
	}
}

// HasPositionR returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasPositionR() bool {
	type getResult interface {
		HasPositionR() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasPositionR()
	} else {
		return false
	}
}

// SetPositionR gets a reference to the given float64 and assigns it to the PositionR field.
func (o *BTAngularDimensionDisplayData320) SetPositionR(v float64) {
	type getResult interface {
		SetPositionR(v float64)
	}

	o.GetActualInstance().(getResult).SetPositionR(v)
}

// GetPositionT returns the PositionT field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetPositionT() float64 {
	type getResult interface {
		GetPositionT() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPositionT()
	} else {
		var de float64
		return de
	}
}

// GetPositionTOk returns a tuple with the PositionT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetPositionTOk() (*float64, bool) {
	type getResult interface {
		GetPositionTOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPositionTOk()
	} else {
		return nil, false
	}
}

// HasPositionT returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasPositionT() bool {
	type getResult interface {
		HasPositionT() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasPositionT()
	} else {
		return false
	}
}

// SetPositionT gets a reference to the given float64 and assigns it to the PositionT field.
func (o *BTAngularDimensionDisplayData320) SetPositionT(v float64) {
	type getResult interface {
		SetPositionT(v float64)
	}

	o.GetActualInstance().(getResult).SetPositionT(v)
}

// GetWitnessEndPoint0r returns the WitnessEndPoint0r field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetWitnessEndPoint0r() float64 {
	type getResult interface {
		GetWitnessEndPoint0r() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint0r()
	} else {
		var de float64
		return de
	}
}

// GetWitnessEndPoint0rOk returns a tuple with the WitnessEndPoint0r field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetWitnessEndPoint0rOk() (*float64, bool) {
	type getResult interface {
		GetWitnessEndPoint0rOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint0rOk()
	} else {
		return nil, false
	}
}

// HasWitnessEndPoint0r returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasWitnessEndPoint0r() bool {
	type getResult interface {
		HasWitnessEndPoint0r() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasWitnessEndPoint0r()
	} else {
		return false
	}
}

// SetWitnessEndPoint0r gets a reference to the given float64 and assigns it to the WitnessEndPoint0r field.
func (o *BTAngularDimensionDisplayData320) SetWitnessEndPoint0r(v float64) {
	type getResult interface {
		SetWitnessEndPoint0r(v float64)
	}

	o.GetActualInstance().(getResult).SetWitnessEndPoint0r(v)
}

// GetWitnessEndPoint0t returns the WitnessEndPoint0t field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetWitnessEndPoint0t() float64 {
	type getResult interface {
		GetWitnessEndPoint0t() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint0t()
	} else {
		var de float64
		return de
	}
}

// GetWitnessEndPoint0tOk returns a tuple with the WitnessEndPoint0t field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetWitnessEndPoint0tOk() (*float64, bool) {
	type getResult interface {
		GetWitnessEndPoint0tOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint0tOk()
	} else {
		return nil, false
	}
}

// HasWitnessEndPoint0t returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasWitnessEndPoint0t() bool {
	type getResult interface {
		HasWitnessEndPoint0t() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasWitnessEndPoint0t()
	} else {
		return false
	}
}

// SetWitnessEndPoint0t gets a reference to the given float64 and assigns it to the WitnessEndPoint0t field.
func (o *BTAngularDimensionDisplayData320) SetWitnessEndPoint0t(v float64) {
	type getResult interface {
		SetWitnessEndPoint0t(v float64)
	}

	o.GetActualInstance().(getResult).SetWitnessEndPoint0t(v)
}

// GetWitnessEndPoint1r returns the WitnessEndPoint1r field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetWitnessEndPoint1r() float64 {
	type getResult interface {
		GetWitnessEndPoint1r() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint1r()
	} else {
		var de float64
		return de
	}
}

// GetWitnessEndPoint1rOk returns a tuple with the WitnessEndPoint1r field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetWitnessEndPoint1rOk() (*float64, bool) {
	type getResult interface {
		GetWitnessEndPoint1rOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint1rOk()
	} else {
		return nil, false
	}
}

// HasWitnessEndPoint1r returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasWitnessEndPoint1r() bool {
	type getResult interface {
		HasWitnessEndPoint1r() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasWitnessEndPoint1r()
	} else {
		return false
	}
}

// SetWitnessEndPoint1r gets a reference to the given float64 and assigns it to the WitnessEndPoint1r field.
func (o *BTAngularDimensionDisplayData320) SetWitnessEndPoint1r(v float64) {
	type getResult interface {
		SetWitnessEndPoint1r(v float64)
	}

	o.GetActualInstance().(getResult).SetWitnessEndPoint1r(v)
}

// GetWitnessEndPoint1t returns the WitnessEndPoint1t field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetWitnessEndPoint1t() float64 {
	type getResult interface {
		GetWitnessEndPoint1t() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint1t()
	} else {
		var de float64
		return de
	}
}

// GetWitnessEndPoint1tOk returns a tuple with the WitnessEndPoint1t field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetWitnessEndPoint1tOk() (*float64, bool) {
	type getResult interface {
		GetWitnessEndPoint1tOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint1tOk()
	} else {
		return nil, false
	}
}

// HasWitnessEndPoint1t returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasWitnessEndPoint1t() bool {
	type getResult interface {
		HasWitnessEndPoint1t() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasWitnessEndPoint1t()
	} else {
		return false
	}
}

// SetWitnessEndPoint1t gets a reference to the given float64 and assigns it to the WitnessEndPoint1t field.
func (o *BTAngularDimensionDisplayData320) SetWitnessEndPoint1t(v float64) {
	type getResult interface {
		SetWitnessEndPoint1t(v float64)
	}

	o.GetActualInstance().(getResult).SetWitnessEndPoint1t(v)
}

// GetWitnessMaxPoint0r returns the WitnessMaxPoint0r field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetWitnessMaxPoint0r() float64 {
	type getResult interface {
		GetWitnessMaxPoint0r() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessMaxPoint0r()
	} else {
		var de float64
		return de
	}
}

// GetWitnessMaxPoint0rOk returns a tuple with the WitnessMaxPoint0r field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetWitnessMaxPoint0rOk() (*float64, bool) {
	type getResult interface {
		GetWitnessMaxPoint0rOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessMaxPoint0rOk()
	} else {
		return nil, false
	}
}

// HasWitnessMaxPoint0r returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasWitnessMaxPoint0r() bool {
	type getResult interface {
		HasWitnessMaxPoint0r() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasWitnessMaxPoint0r()
	} else {
		return false
	}
}

// SetWitnessMaxPoint0r gets a reference to the given float64 and assigns it to the WitnessMaxPoint0r field.
func (o *BTAngularDimensionDisplayData320) SetWitnessMaxPoint0r(v float64) {
	type getResult interface {
		SetWitnessMaxPoint0r(v float64)
	}

	o.GetActualInstance().(getResult).SetWitnessMaxPoint0r(v)
}

// GetWitnessMaxPoint1r returns the WitnessMaxPoint1r field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetWitnessMaxPoint1r() float64 {
	type getResult interface {
		GetWitnessMaxPoint1r() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessMaxPoint1r()
	} else {
		var de float64
		return de
	}
}

// GetWitnessMaxPoint1rOk returns a tuple with the WitnessMaxPoint1r field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetWitnessMaxPoint1rOk() (*float64, bool) {
	type getResult interface {
		GetWitnessMaxPoint1rOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessMaxPoint1rOk()
	} else {
		return nil, false
	}
}

// HasWitnessMaxPoint1r returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasWitnessMaxPoint1r() bool {
	type getResult interface {
		HasWitnessMaxPoint1r() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasWitnessMaxPoint1r()
	} else {
		return false
	}
}

// SetWitnessMaxPoint1r gets a reference to the given float64 and assigns it to the WitnessMaxPoint1r field.
func (o *BTAngularDimensionDisplayData320) SetWitnessMaxPoint1r(v float64) {
	type getResult interface {
		SetWitnessMaxPoint1r(v float64)
	}

	o.GetActualInstance().(getResult).SetWitnessMaxPoint1r(v)
}

// GetWitnessMinPoint0r returns the WitnessMinPoint0r field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetWitnessMinPoint0r() float64 {
	type getResult interface {
		GetWitnessMinPoint0r() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessMinPoint0r()
	} else {
		var de float64
		return de
	}
}

// GetWitnessMinPoint0rOk returns a tuple with the WitnessMinPoint0r field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetWitnessMinPoint0rOk() (*float64, bool) {
	type getResult interface {
		GetWitnessMinPoint0rOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessMinPoint0rOk()
	} else {
		return nil, false
	}
}

// HasWitnessMinPoint0r returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasWitnessMinPoint0r() bool {
	type getResult interface {
		HasWitnessMinPoint0r() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasWitnessMinPoint0r()
	} else {
		return false
	}
}

// SetWitnessMinPoint0r gets a reference to the given float64 and assigns it to the WitnessMinPoint0r field.
func (o *BTAngularDimensionDisplayData320) SetWitnessMinPoint0r(v float64) {
	type getResult interface {
		SetWitnessMinPoint0r(v float64)
	}

	o.GetActualInstance().(getResult).SetWitnessMinPoint0r(v)
}

// GetWitnessMinPoint1r returns the WitnessMinPoint1r field value if set, zero value otherwise.
func (o *BTAngularDimensionDisplayData320) GetWitnessMinPoint1r() float64 {
	type getResult interface {
		GetWitnessMinPoint1r() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessMinPoint1r()
	} else {
		var de float64
		return de
	}
}

// GetWitnessMinPoint1rOk returns a tuple with the WitnessMinPoint1r field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAngularDimensionDisplayData320) GetWitnessMinPoint1rOk() (*float64, bool) {
	type getResult interface {
		GetWitnessMinPoint1rOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessMinPoint1rOk()
	} else {
		return nil, false
	}
}

// HasWitnessMinPoint1r returns a boolean if a field has been set.
func (o *BTAngularDimensionDisplayData320) HasWitnessMinPoint1r() bool {
	type getResult interface {
		HasWitnessMinPoint1r() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasWitnessMinPoint1r()
	} else {
		return false
	}
}

// SetWitnessMinPoint1r gets a reference to the given float64 and assigns it to the WitnessMinPoint1r field.
func (o *BTAngularDimensionDisplayData320) SetWitnessMinPoint1r(v float64) {
	type getResult interface {
		SetWitnessMinPoint1r(v float64)
	}

	o.GetActualInstance().(getResult).SetWitnessMinPoint1r(v)
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *BTAngularDimensionDisplayData320) UnmarshalJSON(data []byte) error {
	var err error
	// use discriminator value to speed up the lookup
	var jsonDict map[string]interface{}
	err = newStrictDecoder(data).Decode(&jsonDict)
	if err != nil {
		return fmt.Errorf("Failed to unmarshal JSON into map for the discriminator lookup.")
	}

	// check if the discriminator value is 'BTArcLengthDimensionDisplayData-1018'
	if jsonDict["btType"] == "BTArcLengthDimensionDisplayData-1018" {
		// try to unmarshal JSON data into BTArcLengthDimensionDisplayData1018
		var qr *BTArcLengthDimensionDisplayData1018
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTAngularDimensionDisplayData320 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTAngularDimensionDisplayData320 = nil
			return fmt.Errorf("Failed to unmarshal BTAngularDimensionDisplayData320 as BTArcLengthDimensionDisplayData1018: %s", err.Error())
		}
	}

	var qtx *base_BTAngularDimensionDisplayData320
	err = json.Unmarshal(data, &qtx)
	if err == nil {
		dst.implBTAngularDimensionDisplayData320 = qtx
		return nil // data stored in dst.base_BTAngularDimensionDisplayData320, return on the first match
	} else {
		dst.implBTAngularDimensionDisplayData320 = nil
		return fmt.Errorf("Failed to unmarshal BTAngularDimensionDisplayData320 as base_BTAngularDimensionDisplayData320: %s", err.Error())
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BTAngularDimensionDisplayData320) MarshalJSON() ([]byte, error) {
	ret := src.GetActualInstance()
	if ret == nil {
		return nil, nil // no data in oneOf schemas
	} else {
		return json.Marshal(&ret)
	}
}

// Get the actual instance
func (obj *BTAngularDimensionDisplayData320) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	return obj.implBTAngularDimensionDisplayData320
}

type NullableBTAngularDimensionDisplayData320 struct {
	value *BTAngularDimensionDisplayData320
	isSet bool
}

func (v NullableBTAngularDimensionDisplayData320) Get() *BTAngularDimensionDisplayData320 {
	return v.value
}

func (v *NullableBTAngularDimensionDisplayData320) Set(val *BTAngularDimensionDisplayData320) {
	v.value = val
	v.isSet = true
}

func (v NullableBTAngularDimensionDisplayData320) IsSet() bool {
	return v.isSet
}

func (v *NullableBTAngularDimensionDisplayData320) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTAngularDimensionDisplayData320(val *BTAngularDimensionDisplayData320) *NullableBTAngularDimensionDisplayData320 {
	return &NullableBTAngularDimensionDisplayData320{value: val, isSet: true}
}

func (v NullableBTAngularDimensionDisplayData320) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTAngularDimensionDisplayData320) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type base_BTAngularDimensionDisplayData320 struct {
	BtType               *string         `json:"btType,omitempty"`
	CoordinateSystem     *BTMatrix3x3340 `json:"coordinateSystem,omitempty"`
	FeatureId            *string         `json:"featureId,omitempty"`
	HasMaximumLimit_     *bool           `json:"hasMaximumLimit,omitempty"`
	HasMinimumLimit_     *bool           `json:"hasMinimumLimit,omitempty"`
	Id                   *string         `json:"id,omitempty"`
	IsAssociatedWithFlat *bool           `json:"isAssociatedWithFlat,omitempty"`
	IsDriven             *bool           `json:"isDriven,omitempty"`
	IsOverDefined        *bool           `json:"isOverDefined,omitempty"`
	MaximumLimit         *float64        `json:"maximumLimit,omitempty"`
	MinimumLimit         *float64        `json:"minimumLimit,omitempty"`
	ParameterId          *string         `json:"parameterId,omitempty"`
	PlaneMatrix          *BTBSMatrix386  `json:"planeMatrix,omitempty"`
	Value                *float64        `json:"value,omitempty"`
	Clockwise            *bool           `json:"clockwise,omitempty"`
	PositionR            *float64        `json:"positionR,omitempty"`
	PositionT            *float64        `json:"positionT,omitempty"`
	WitnessEndPoint0r    *float64        `json:"witnessEndPoint0r,omitempty"`
	WitnessEndPoint0t    *float64        `json:"witnessEndPoint0t,omitempty"`
	WitnessEndPoint1r    *float64        `json:"witnessEndPoint1r,omitempty"`
	WitnessEndPoint1t    *float64        `json:"witnessEndPoint1t,omitempty"`
	WitnessMaxPoint0r    *float64        `json:"witnessMaxPoint0r,omitempty"`
	WitnessMaxPoint1r    *float64        `json:"witnessMaxPoint1r,omitempty"`
	WitnessMinPoint0r    *float64        `json:"witnessMinPoint0r,omitempty"`
	WitnessMinPoint1r    *float64        `json:"witnessMinPoint1r,omitempty"`
}

// Newbase_BTAngularDimensionDisplayData320 instantiates a new base_BTAngularDimensionDisplayData320 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func Newbase_BTAngularDimensionDisplayData320() *base_BTAngularDimensionDisplayData320 {
	this := base_BTAngularDimensionDisplayData320{}
	return &this
}

// Newbase_BTAngularDimensionDisplayData320WithDefaults instantiates a new base_BTAngularDimensionDisplayData320 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func Newbase_BTAngularDimensionDisplayData320WithDefaults() *base_BTAngularDimensionDisplayData320 {
	this := base_BTAngularDimensionDisplayData320{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *base_BTAngularDimensionDisplayData320) SetBtType(v string) {
	o.BtType = &v
}

// GetCoordinateSystem returns the CoordinateSystem field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetCoordinateSystem() BTMatrix3x3340 {
	if o == nil || o.CoordinateSystem == nil {
		var ret BTMatrix3x3340
		return ret
	}
	return *o.CoordinateSystem
}

// GetCoordinateSystemOk returns a tuple with the CoordinateSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetCoordinateSystemOk() (*BTMatrix3x3340, bool) {
	if o == nil || o.CoordinateSystem == nil {
		return nil, false
	}
	return o.CoordinateSystem, true
}

// HasCoordinateSystem returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasCoordinateSystem() bool {
	if o != nil && o.CoordinateSystem != nil {
		return true
	}

	return false
}

// SetCoordinateSystem gets a reference to the given BTMatrix3x3340 and assigns it to the CoordinateSystem field.
func (o *base_BTAngularDimensionDisplayData320) SetCoordinateSystem(v BTMatrix3x3340) {
	o.CoordinateSystem = &v
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetFeatureId() string {
	if o == nil || o.FeatureId == nil {
		var ret string
		return ret
	}
	return *o.FeatureId
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetFeatureIdOk() (*string, bool) {
	if o == nil || o.FeatureId == nil {
		return nil, false
	}
	return o.FeatureId, true
}

// HasFeatureId returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasFeatureId() bool {
	if o != nil && o.FeatureId != nil {
		return true
	}

	return false
}

// SetFeatureId gets a reference to the given string and assigns it to the FeatureId field.
func (o *base_BTAngularDimensionDisplayData320) SetFeatureId(v string) {
	o.FeatureId = &v
}

// GetHasMaximumLimit_ returns the HasMaximumLimit_ field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetHasMaximumLimit_() bool {
	if o == nil || o.HasMaximumLimit_ == nil {
		var ret bool
		return ret
	}
	return *o.HasMaximumLimit_
}

// GetHasMaximumLimit_Ok returns a tuple with the HasMaximumLimit_ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetHasMaximumLimit_Ok() (*bool, bool) {
	if o == nil || o.HasMaximumLimit_ == nil {
		return nil, false
	}
	return o.HasMaximumLimit_, true
}

// HasHasMaximumLimit_ returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasHasMaximumLimit_() bool {
	if o != nil && o.HasMaximumLimit_ != nil {
		return true
	}

	return false
}

// SetHasMaximumLimit_ gets a reference to the given bool and assigns it to the HasMaximumLimit_ field.
func (o *base_BTAngularDimensionDisplayData320) SetHasMaximumLimit_(v bool) {
	o.HasMaximumLimit_ = &v
}

// GetHasMinimumLimit_ returns the HasMinimumLimit_ field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetHasMinimumLimit_() bool {
	if o == nil || o.HasMinimumLimit_ == nil {
		var ret bool
		return ret
	}
	return *o.HasMinimumLimit_
}

// GetHasMinimumLimit_Ok returns a tuple with the HasMinimumLimit_ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetHasMinimumLimit_Ok() (*bool, bool) {
	if o == nil || o.HasMinimumLimit_ == nil {
		return nil, false
	}
	return o.HasMinimumLimit_, true
}

// HasHasMinimumLimit_ returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasHasMinimumLimit_() bool {
	if o != nil && o.HasMinimumLimit_ != nil {
		return true
	}

	return false
}

// SetHasMinimumLimit_ gets a reference to the given bool and assigns it to the HasMinimumLimit_ field.
func (o *base_BTAngularDimensionDisplayData320) SetHasMinimumLimit_(v bool) {
	o.HasMinimumLimit_ = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *base_BTAngularDimensionDisplayData320) SetId(v string) {
	o.Id = &v
}

// GetIsAssociatedWithFlat returns the IsAssociatedWithFlat field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetIsAssociatedWithFlat() bool {
	if o == nil || o.IsAssociatedWithFlat == nil {
		var ret bool
		return ret
	}
	return *o.IsAssociatedWithFlat
}

// GetIsAssociatedWithFlatOk returns a tuple with the IsAssociatedWithFlat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetIsAssociatedWithFlatOk() (*bool, bool) {
	if o == nil || o.IsAssociatedWithFlat == nil {
		return nil, false
	}
	return o.IsAssociatedWithFlat, true
}

// HasIsAssociatedWithFlat returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasIsAssociatedWithFlat() bool {
	if o != nil && o.IsAssociatedWithFlat != nil {
		return true
	}

	return false
}

// SetIsAssociatedWithFlat gets a reference to the given bool and assigns it to the IsAssociatedWithFlat field.
func (o *base_BTAngularDimensionDisplayData320) SetIsAssociatedWithFlat(v bool) {
	o.IsAssociatedWithFlat = &v
}

// GetIsDriven returns the IsDriven field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetIsDriven() bool {
	if o == nil || o.IsDriven == nil {
		var ret bool
		return ret
	}
	return *o.IsDriven
}

// GetIsDrivenOk returns a tuple with the IsDriven field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetIsDrivenOk() (*bool, bool) {
	if o == nil || o.IsDriven == nil {
		return nil, false
	}
	return o.IsDriven, true
}

// HasIsDriven returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasIsDriven() bool {
	if o != nil && o.IsDriven != nil {
		return true
	}

	return false
}

// SetIsDriven gets a reference to the given bool and assigns it to the IsDriven field.
func (o *base_BTAngularDimensionDisplayData320) SetIsDriven(v bool) {
	o.IsDriven = &v
}

// GetIsOverDefined returns the IsOverDefined field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetIsOverDefined() bool {
	if o == nil || o.IsOverDefined == nil {
		var ret bool
		return ret
	}
	return *o.IsOverDefined
}

// GetIsOverDefinedOk returns a tuple with the IsOverDefined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetIsOverDefinedOk() (*bool, bool) {
	if o == nil || o.IsOverDefined == nil {
		return nil, false
	}
	return o.IsOverDefined, true
}

// HasIsOverDefined returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasIsOverDefined() bool {
	if o != nil && o.IsOverDefined != nil {
		return true
	}

	return false
}

// SetIsOverDefined gets a reference to the given bool and assigns it to the IsOverDefined field.
func (o *base_BTAngularDimensionDisplayData320) SetIsOverDefined(v bool) {
	o.IsOverDefined = &v
}

// GetMaximumLimit returns the MaximumLimit field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetMaximumLimit() float64 {
	if o == nil || o.MaximumLimit == nil {
		var ret float64
		return ret
	}
	return *o.MaximumLimit
}

// GetMaximumLimitOk returns a tuple with the MaximumLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetMaximumLimitOk() (*float64, bool) {
	if o == nil || o.MaximumLimit == nil {
		return nil, false
	}
	return o.MaximumLimit, true
}

// HasMaximumLimit returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasMaximumLimit() bool {
	if o != nil && o.MaximumLimit != nil {
		return true
	}

	return false
}

// SetMaximumLimit gets a reference to the given float64 and assigns it to the MaximumLimit field.
func (o *base_BTAngularDimensionDisplayData320) SetMaximumLimit(v float64) {
	o.MaximumLimit = &v
}

// GetMinimumLimit returns the MinimumLimit field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetMinimumLimit() float64 {
	if o == nil || o.MinimumLimit == nil {
		var ret float64
		return ret
	}
	return *o.MinimumLimit
}

// GetMinimumLimitOk returns a tuple with the MinimumLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetMinimumLimitOk() (*float64, bool) {
	if o == nil || o.MinimumLimit == nil {
		return nil, false
	}
	return o.MinimumLimit, true
}

// HasMinimumLimit returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasMinimumLimit() bool {
	if o != nil && o.MinimumLimit != nil {
		return true
	}

	return false
}

// SetMinimumLimit gets a reference to the given float64 and assigns it to the MinimumLimit field.
func (o *base_BTAngularDimensionDisplayData320) SetMinimumLimit(v float64) {
	o.MinimumLimit = &v
}

// GetParameterId returns the ParameterId field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetParameterId() string {
	if o == nil || o.ParameterId == nil {
		var ret string
		return ret
	}
	return *o.ParameterId
}

// GetParameterIdOk returns a tuple with the ParameterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetParameterIdOk() (*string, bool) {
	if o == nil || o.ParameterId == nil {
		return nil, false
	}
	return o.ParameterId, true
}

// HasParameterId returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasParameterId() bool {
	if o != nil && o.ParameterId != nil {
		return true
	}

	return false
}

// SetParameterId gets a reference to the given string and assigns it to the ParameterId field.
func (o *base_BTAngularDimensionDisplayData320) SetParameterId(v string) {
	o.ParameterId = &v
}

// GetPlaneMatrix returns the PlaneMatrix field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetPlaneMatrix() BTBSMatrix386 {
	if o == nil || o.PlaneMatrix == nil {
		var ret BTBSMatrix386
		return ret
	}
	return *o.PlaneMatrix
}

// GetPlaneMatrixOk returns a tuple with the PlaneMatrix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetPlaneMatrixOk() (*BTBSMatrix386, bool) {
	if o == nil || o.PlaneMatrix == nil {
		return nil, false
	}
	return o.PlaneMatrix, true
}

// HasPlaneMatrix returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasPlaneMatrix() bool {
	if o != nil && o.PlaneMatrix != nil {
		return true
	}

	return false
}

// SetPlaneMatrix gets a reference to the given BTBSMatrix386 and assigns it to the PlaneMatrix field.
func (o *base_BTAngularDimensionDisplayData320) SetPlaneMatrix(v BTBSMatrix386) {
	o.PlaneMatrix = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetValue() float64 {
	if o == nil || o.Value == nil {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetValueOk() (*float64, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *base_BTAngularDimensionDisplayData320) SetValue(v float64) {
	o.Value = &v
}

// GetClockwise returns the Clockwise field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetClockwise() bool {
	if o == nil || o.Clockwise == nil {
		var ret bool
		return ret
	}
	return *o.Clockwise
}

// GetClockwiseOk returns a tuple with the Clockwise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetClockwiseOk() (*bool, bool) {
	if o == nil || o.Clockwise == nil {
		return nil, false
	}
	return o.Clockwise, true
}

// HasClockwise returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasClockwise() bool {
	if o != nil && o.Clockwise != nil {
		return true
	}

	return false
}

// SetClockwise gets a reference to the given bool and assigns it to the Clockwise field.
func (o *base_BTAngularDimensionDisplayData320) SetClockwise(v bool) {
	o.Clockwise = &v
}

// GetPositionR returns the PositionR field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetPositionR() float64 {
	if o == nil || o.PositionR == nil {
		var ret float64
		return ret
	}
	return *o.PositionR
}

// GetPositionROk returns a tuple with the PositionR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetPositionROk() (*float64, bool) {
	if o == nil || o.PositionR == nil {
		return nil, false
	}
	return o.PositionR, true
}

// HasPositionR returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasPositionR() bool {
	if o != nil && o.PositionR != nil {
		return true
	}

	return false
}

// SetPositionR gets a reference to the given float64 and assigns it to the PositionR field.
func (o *base_BTAngularDimensionDisplayData320) SetPositionR(v float64) {
	o.PositionR = &v
}

// GetPositionT returns the PositionT field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetPositionT() float64 {
	if o == nil || o.PositionT == nil {
		var ret float64
		return ret
	}
	return *o.PositionT
}

// GetPositionTOk returns a tuple with the PositionT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetPositionTOk() (*float64, bool) {
	if o == nil || o.PositionT == nil {
		return nil, false
	}
	return o.PositionT, true
}

// HasPositionT returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasPositionT() bool {
	if o != nil && o.PositionT != nil {
		return true
	}

	return false
}

// SetPositionT gets a reference to the given float64 and assigns it to the PositionT field.
func (o *base_BTAngularDimensionDisplayData320) SetPositionT(v float64) {
	o.PositionT = &v
}

// GetWitnessEndPoint0r returns the WitnessEndPoint0r field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessEndPoint0r() float64 {
	if o == nil || o.WitnessEndPoint0r == nil {
		var ret float64
		return ret
	}
	return *o.WitnessEndPoint0r
}

// GetWitnessEndPoint0rOk returns a tuple with the WitnessEndPoint0r field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessEndPoint0rOk() (*float64, bool) {
	if o == nil || o.WitnessEndPoint0r == nil {
		return nil, false
	}
	return o.WitnessEndPoint0r, true
}

// HasWitnessEndPoint0r returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasWitnessEndPoint0r() bool {
	if o != nil && o.WitnessEndPoint0r != nil {
		return true
	}

	return false
}

// SetWitnessEndPoint0r gets a reference to the given float64 and assigns it to the WitnessEndPoint0r field.
func (o *base_BTAngularDimensionDisplayData320) SetWitnessEndPoint0r(v float64) {
	o.WitnessEndPoint0r = &v
}

// GetWitnessEndPoint0t returns the WitnessEndPoint0t field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessEndPoint0t() float64 {
	if o == nil || o.WitnessEndPoint0t == nil {
		var ret float64
		return ret
	}
	return *o.WitnessEndPoint0t
}

// GetWitnessEndPoint0tOk returns a tuple with the WitnessEndPoint0t field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessEndPoint0tOk() (*float64, bool) {
	if o == nil || o.WitnessEndPoint0t == nil {
		return nil, false
	}
	return o.WitnessEndPoint0t, true
}

// HasWitnessEndPoint0t returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasWitnessEndPoint0t() bool {
	if o != nil && o.WitnessEndPoint0t != nil {
		return true
	}

	return false
}

// SetWitnessEndPoint0t gets a reference to the given float64 and assigns it to the WitnessEndPoint0t field.
func (o *base_BTAngularDimensionDisplayData320) SetWitnessEndPoint0t(v float64) {
	o.WitnessEndPoint0t = &v
}

// GetWitnessEndPoint1r returns the WitnessEndPoint1r field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessEndPoint1r() float64 {
	if o == nil || o.WitnessEndPoint1r == nil {
		var ret float64
		return ret
	}
	return *o.WitnessEndPoint1r
}

// GetWitnessEndPoint1rOk returns a tuple with the WitnessEndPoint1r field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessEndPoint1rOk() (*float64, bool) {
	if o == nil || o.WitnessEndPoint1r == nil {
		return nil, false
	}
	return o.WitnessEndPoint1r, true
}

// HasWitnessEndPoint1r returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasWitnessEndPoint1r() bool {
	if o != nil && o.WitnessEndPoint1r != nil {
		return true
	}

	return false
}

// SetWitnessEndPoint1r gets a reference to the given float64 and assigns it to the WitnessEndPoint1r field.
func (o *base_BTAngularDimensionDisplayData320) SetWitnessEndPoint1r(v float64) {
	o.WitnessEndPoint1r = &v
}

// GetWitnessEndPoint1t returns the WitnessEndPoint1t field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessEndPoint1t() float64 {
	if o == nil || o.WitnessEndPoint1t == nil {
		var ret float64
		return ret
	}
	return *o.WitnessEndPoint1t
}

// GetWitnessEndPoint1tOk returns a tuple with the WitnessEndPoint1t field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessEndPoint1tOk() (*float64, bool) {
	if o == nil || o.WitnessEndPoint1t == nil {
		return nil, false
	}
	return o.WitnessEndPoint1t, true
}

// HasWitnessEndPoint1t returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasWitnessEndPoint1t() bool {
	if o != nil && o.WitnessEndPoint1t != nil {
		return true
	}

	return false
}

// SetWitnessEndPoint1t gets a reference to the given float64 and assigns it to the WitnessEndPoint1t field.
func (o *base_BTAngularDimensionDisplayData320) SetWitnessEndPoint1t(v float64) {
	o.WitnessEndPoint1t = &v
}

// GetWitnessMaxPoint0r returns the WitnessMaxPoint0r field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessMaxPoint0r() float64 {
	if o == nil || o.WitnessMaxPoint0r == nil {
		var ret float64
		return ret
	}
	return *o.WitnessMaxPoint0r
}

// GetWitnessMaxPoint0rOk returns a tuple with the WitnessMaxPoint0r field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessMaxPoint0rOk() (*float64, bool) {
	if o == nil || o.WitnessMaxPoint0r == nil {
		return nil, false
	}
	return o.WitnessMaxPoint0r, true
}

// HasWitnessMaxPoint0r returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasWitnessMaxPoint0r() bool {
	if o != nil && o.WitnessMaxPoint0r != nil {
		return true
	}

	return false
}

// SetWitnessMaxPoint0r gets a reference to the given float64 and assigns it to the WitnessMaxPoint0r field.
func (o *base_BTAngularDimensionDisplayData320) SetWitnessMaxPoint0r(v float64) {
	o.WitnessMaxPoint0r = &v
}

// GetWitnessMaxPoint1r returns the WitnessMaxPoint1r field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessMaxPoint1r() float64 {
	if o == nil || o.WitnessMaxPoint1r == nil {
		var ret float64
		return ret
	}
	return *o.WitnessMaxPoint1r
}

// GetWitnessMaxPoint1rOk returns a tuple with the WitnessMaxPoint1r field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessMaxPoint1rOk() (*float64, bool) {
	if o == nil || o.WitnessMaxPoint1r == nil {
		return nil, false
	}
	return o.WitnessMaxPoint1r, true
}

// HasWitnessMaxPoint1r returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasWitnessMaxPoint1r() bool {
	if o != nil && o.WitnessMaxPoint1r != nil {
		return true
	}

	return false
}

// SetWitnessMaxPoint1r gets a reference to the given float64 and assigns it to the WitnessMaxPoint1r field.
func (o *base_BTAngularDimensionDisplayData320) SetWitnessMaxPoint1r(v float64) {
	o.WitnessMaxPoint1r = &v
}

// GetWitnessMinPoint0r returns the WitnessMinPoint0r field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessMinPoint0r() float64 {
	if o == nil || o.WitnessMinPoint0r == nil {
		var ret float64
		return ret
	}
	return *o.WitnessMinPoint0r
}

// GetWitnessMinPoint0rOk returns a tuple with the WitnessMinPoint0r field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessMinPoint0rOk() (*float64, bool) {
	if o == nil || o.WitnessMinPoint0r == nil {
		return nil, false
	}
	return o.WitnessMinPoint0r, true
}

// HasWitnessMinPoint0r returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasWitnessMinPoint0r() bool {
	if o != nil && o.WitnessMinPoint0r != nil {
		return true
	}

	return false
}

// SetWitnessMinPoint0r gets a reference to the given float64 and assigns it to the WitnessMinPoint0r field.
func (o *base_BTAngularDimensionDisplayData320) SetWitnessMinPoint0r(v float64) {
	o.WitnessMinPoint0r = &v
}

// GetWitnessMinPoint1r returns the WitnessMinPoint1r field value if set, zero value otherwise.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessMinPoint1r() float64 {
	if o == nil || o.WitnessMinPoint1r == nil {
		var ret float64
		return ret
	}
	return *o.WitnessMinPoint1r
}

// GetWitnessMinPoint1rOk returns a tuple with the WitnessMinPoint1r field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTAngularDimensionDisplayData320) GetWitnessMinPoint1rOk() (*float64, bool) {
	if o == nil || o.WitnessMinPoint1r == nil {
		return nil, false
	}
	return o.WitnessMinPoint1r, true
}

// HasWitnessMinPoint1r returns a boolean if a field has been set.
func (o *base_BTAngularDimensionDisplayData320) HasWitnessMinPoint1r() bool {
	if o != nil && o.WitnessMinPoint1r != nil {
		return true
	}

	return false
}

// SetWitnessMinPoint1r gets a reference to the given float64 and assigns it to the WitnessMinPoint1r field.
func (o *base_BTAngularDimensionDisplayData320) SetWitnessMinPoint1r(v float64) {
	o.WitnessMinPoint1r = &v
}

func (o base_BTAngularDimensionDisplayData320) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.CoordinateSystem != nil {
		toSerialize["coordinateSystem"] = o.CoordinateSystem
	}
	if o.FeatureId != nil {
		toSerialize["featureId"] = o.FeatureId
	}
	if o.HasMaximumLimit_ != nil {
		toSerialize["hasMaximumLimit"] = o.HasMaximumLimit_
	}
	if o.HasMinimumLimit_ != nil {
		toSerialize["hasMinimumLimit"] = o.HasMinimumLimit_
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsAssociatedWithFlat != nil {
		toSerialize["isAssociatedWithFlat"] = o.IsAssociatedWithFlat
	}
	if o.IsDriven != nil {
		toSerialize["isDriven"] = o.IsDriven
	}
	if o.IsOverDefined != nil {
		toSerialize["isOverDefined"] = o.IsOverDefined
	}
	if o.MaximumLimit != nil {
		toSerialize["maximumLimit"] = o.MaximumLimit
	}
	if o.MinimumLimit != nil {
		toSerialize["minimumLimit"] = o.MinimumLimit
	}
	if o.ParameterId != nil {
		toSerialize["parameterId"] = o.ParameterId
	}
	if o.PlaneMatrix != nil {
		toSerialize["planeMatrix"] = o.PlaneMatrix
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Clockwise != nil {
		toSerialize["clockwise"] = o.Clockwise
	}
	if o.PositionR != nil {
		toSerialize["positionR"] = o.PositionR
	}
	if o.PositionT != nil {
		toSerialize["positionT"] = o.PositionT
	}
	if o.WitnessEndPoint0r != nil {
		toSerialize["witnessEndPoint0r"] = o.WitnessEndPoint0r
	}
	if o.WitnessEndPoint0t != nil {
		toSerialize["witnessEndPoint0t"] = o.WitnessEndPoint0t
	}
	if o.WitnessEndPoint1r != nil {
		toSerialize["witnessEndPoint1r"] = o.WitnessEndPoint1r
	}
	if o.WitnessEndPoint1t != nil {
		toSerialize["witnessEndPoint1t"] = o.WitnessEndPoint1t
	}
	if o.WitnessMaxPoint0r != nil {
		toSerialize["witnessMaxPoint0r"] = o.WitnessMaxPoint0r
	}
	if o.WitnessMaxPoint1r != nil {
		toSerialize["witnessMaxPoint1r"] = o.WitnessMaxPoint1r
	}
	if o.WitnessMinPoint0r != nil {
		toSerialize["witnessMinPoint0r"] = o.WitnessMinPoint0r
	}
	if o.WitnessMinPoint1r != nil {
		toSerialize["witnessMinPoint1r"] = o.WitnessMinPoint1r
	}
	return json.Marshal(toSerialize)
}
