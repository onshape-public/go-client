/*
Onshape REST API

The Onshape REST API consumed by all client. # Authorization The simplest way to authorize and enable the **Try it out** functionality is to sign in to Onshape and use the current session. The **Authorize** button enables other authorization techniques. To ensure the current session isn't used when trying other authentication techniques, make sure to remove the Onshape cookie as per the instructions for your particular browser. Alternatively, a private or incognito window may be used. Here's [how to remove a specific cookie on Chrome](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site). - **Current Session** authorization is enabled by default if the browser is already signed in to [Onshape](/). - **OAuth2** authorization uses an Onshape OAuth2 app created on the [Onshape Developer Portal](https://dev-portal.onshape.com/oauthApps). The redirect URL field should include `https://cad.onshape.com/glassworks/explorer/oauth2-redirect.html`. - **API Key** authorization using basic authentication is also available. The keys can be generated in the [Onshape Developer Portal](https://dev-portal.onshape.com/keys). In the authentication dialog, enter the access key in the `Username` field, and enter the secret key in the `Password` field. Basic authentication should only be used during the development process since sharing API Keys provides the same level of access as a username and password.

API version: 1.171.24257-687de06de652
Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTPurchaseInfo struct for BTPurchaseInfo
type BTPurchaseInfo struct {
	AccountId             *string                      `json:"accountId,omitempty"`
	ActualAmountPaidCents *int64                       `json:"actualAmountPaidCents,omitempty"`
	AmountCents           *int64                       `json:"amountCents,omitempty"`
	Application           *BTAPIApplicationSummaryInfo `json:"application,omitempty"`
	CanceledAt            *JSONTime                    `json:"canceledAt,omitempty"`
	Card                  *BTCardInfo                  `json:"card,omitempty"`
	ClientId              *string                      `json:"clientId,omitempty"`
	CouponAmountOff       *int64                       `json:"couponAmountOff,omitempty"`
	CouponPercentOff      *int32                       `json:"couponPercentOff,omitempty"`
	CreatedBy             *string                      `json:"createdBy,omitempty"`
	Currency              *string                      `json:"currency,omitempty"`
	Duration              *int32                       `json:"duration,omitempty"`
	DurationMonths        *int32                       `json:"durationMonths,omitempty"`
	Group                 *string                      `json:"group,omitempty"`
	// URI to fetch complete information of the resource.
	Href *string `json:"href,omitempty"`
	// Id of the resource.
	Id             *string   `json:"id,omitempty"`
	LastModified   *JSONTime `json:"lastModified,omitempty"`
	LastModifiedBy *string   `json:"lastModifiedBy,omitempty"`
	LightSeats     *int64    `json:"lightSeats,omitempty"`
	// Name of the resource.
	Name                *string                `json:"name,omitempty"`
	NextCharge          *NextCharge            `json:"nextCharge,omitempty"`
	PaymentType         *int32                 `json:"paymentType,omitempty"`
	PendingCancelation  *bool                  `json:"pendingCancelation,omitempty"`
	Plan                *BTBillingPlanInfo     `json:"plan,omitempty"`
	PlanId              *string                `json:"planId,omitempty"`
	PlanName            *string                `json:"planName,omitempty"`
	PlanType            *int32                 `json:"planType,omitempty"`
	PreTrialPlanId      *string                `json:"preTrialPlanId,omitempty"`
	ProratedCharges     []ProratedCharges      `json:"proratedCharges,omitempty"`
	ProratedTotal       *int64                 `json:"proratedTotal,omitempty"`
	PurchaseDate        *JSONTime              `json:"purchaseDate,omitempty"`
	ResellerName        *string                `json:"resellerName,omitempty"`
	Seats               *int64                 `json:"seats,omitempty"`
	State               *int32                 `json:"state,omitempty"`
	Subscribers         []BTPlanSubscriberInfo `json:"subscribers,omitempty"`
	SubscriptionBeginAt *JSONTime              `json:"subscriptionBeginAt,omitempty"`
	SubscriptionEndAt   *JSONTime              `json:"subscriptionEndAt,omitempty"`
	SubscriptionFields  *Subscription          `json:"subscriptionFields,omitempty"`
	SubscriptionId      *string                `json:"subscriptionId,omitempty"`
	SubscriptionType    *int32                 `json:"subscriptionType,omitempty"`
	TaxAmountCents      *int64                 `json:"taxAmountCents,omitempty"`
	TrialEnd            *JSONTime              `json:"trialEnd,omitempty"`
	TrialInitiatedBy    *string                `json:"trialInitiatedBy,omitempty"`
	// URI to visualize the resource in a webclient if applicable.
	ViewRef *string `json:"viewRef,omitempty"`
}

// NewBTPurchaseInfo instantiates a new BTPurchaseInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTPurchaseInfo() *BTPurchaseInfo {
	this := BTPurchaseInfo{}
	return &this
}

// NewBTPurchaseInfoWithDefaults instantiates a new BTPurchaseInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTPurchaseInfoWithDefaults() *BTPurchaseInfo {
	this := BTPurchaseInfo{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *BTPurchaseInfo) SetAccountId(v string) {
	o.AccountId = &v
}

// GetActualAmountPaidCents returns the ActualAmountPaidCents field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetActualAmountPaidCents() int64 {
	if o == nil || o.ActualAmountPaidCents == nil {
		var ret int64
		return ret
	}
	return *o.ActualAmountPaidCents
}

// GetActualAmountPaidCentsOk returns a tuple with the ActualAmountPaidCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetActualAmountPaidCentsOk() (*int64, bool) {
	if o == nil || o.ActualAmountPaidCents == nil {
		return nil, false
	}
	return o.ActualAmountPaidCents, true
}

// HasActualAmountPaidCents returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasActualAmountPaidCents() bool {
	if o != nil && o.ActualAmountPaidCents != nil {
		return true
	}

	return false
}

// SetActualAmountPaidCents gets a reference to the given int64 and assigns it to the ActualAmountPaidCents field.
func (o *BTPurchaseInfo) SetActualAmountPaidCents(v int64) {
	o.ActualAmountPaidCents = &v
}

// GetAmountCents returns the AmountCents field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetAmountCents() int64 {
	if o == nil || o.AmountCents == nil {
		var ret int64
		return ret
	}
	return *o.AmountCents
}

// GetAmountCentsOk returns a tuple with the AmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetAmountCentsOk() (*int64, bool) {
	if o == nil || o.AmountCents == nil {
		return nil, false
	}
	return o.AmountCents, true
}

// HasAmountCents returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasAmountCents() bool {
	if o != nil && o.AmountCents != nil {
		return true
	}

	return false
}

// SetAmountCents gets a reference to the given int64 and assigns it to the AmountCents field.
func (o *BTPurchaseInfo) SetAmountCents(v int64) {
	o.AmountCents = &v
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetApplication() BTAPIApplicationSummaryInfo {
	if o == nil || o.Application == nil {
		var ret BTAPIApplicationSummaryInfo
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetApplicationOk() (*BTAPIApplicationSummaryInfo, bool) {
	if o == nil || o.Application == nil {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasApplication() bool {
	if o != nil && o.Application != nil {
		return true
	}

	return false
}

// SetApplication gets a reference to the given BTAPIApplicationSummaryInfo and assigns it to the Application field.
func (o *BTPurchaseInfo) SetApplication(v BTAPIApplicationSummaryInfo) {
	o.Application = &v
}

// GetCanceledAt returns the CanceledAt field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetCanceledAt() JSONTime {
	if o == nil || o.CanceledAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.CanceledAt
}

// GetCanceledAtOk returns a tuple with the CanceledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetCanceledAtOk() (*JSONTime, bool) {
	if o == nil || o.CanceledAt == nil {
		return nil, false
	}
	return o.CanceledAt, true
}

// HasCanceledAt returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasCanceledAt() bool {
	if o != nil && o.CanceledAt != nil {
		return true
	}

	return false
}

// SetCanceledAt gets a reference to the given JSONTime and assigns it to the CanceledAt field.
func (o *BTPurchaseInfo) SetCanceledAt(v JSONTime) {
	o.CanceledAt = &v
}

// GetCard returns the Card field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetCard() BTCardInfo {
	if o == nil || o.Card == nil {
		var ret BTCardInfo
		return ret
	}
	return *o.Card
}

// GetCardOk returns a tuple with the Card field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetCardOk() (*BTCardInfo, bool) {
	if o == nil || o.Card == nil {
		return nil, false
	}
	return o.Card, true
}

// HasCard returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasCard() bool {
	if o != nil && o.Card != nil {
		return true
	}

	return false
}

// SetCard gets a reference to the given BTCardInfo and assigns it to the Card field.
func (o *BTPurchaseInfo) SetCard(v BTCardInfo) {
	o.Card = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *BTPurchaseInfo) SetClientId(v string) {
	o.ClientId = &v
}

// GetCouponAmountOff returns the CouponAmountOff field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetCouponAmountOff() int64 {
	if o == nil || o.CouponAmountOff == nil {
		var ret int64
		return ret
	}
	return *o.CouponAmountOff
}

// GetCouponAmountOffOk returns a tuple with the CouponAmountOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetCouponAmountOffOk() (*int64, bool) {
	if o == nil || o.CouponAmountOff == nil {
		return nil, false
	}
	return o.CouponAmountOff, true
}

// HasCouponAmountOff returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasCouponAmountOff() bool {
	if o != nil && o.CouponAmountOff != nil {
		return true
	}

	return false
}

// SetCouponAmountOff gets a reference to the given int64 and assigns it to the CouponAmountOff field.
func (o *BTPurchaseInfo) SetCouponAmountOff(v int64) {
	o.CouponAmountOff = &v
}

// GetCouponPercentOff returns the CouponPercentOff field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetCouponPercentOff() int32 {
	if o == nil || o.CouponPercentOff == nil {
		var ret int32
		return ret
	}
	return *o.CouponPercentOff
}

// GetCouponPercentOffOk returns a tuple with the CouponPercentOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetCouponPercentOffOk() (*int32, bool) {
	if o == nil || o.CouponPercentOff == nil {
		return nil, false
	}
	return o.CouponPercentOff, true
}

// HasCouponPercentOff returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasCouponPercentOff() bool {
	if o != nil && o.CouponPercentOff != nil {
		return true
	}

	return false
}

// SetCouponPercentOff gets a reference to the given int32 and assigns it to the CouponPercentOff field.
func (o *BTPurchaseInfo) SetCouponPercentOff(v int32) {
	o.CouponPercentOff = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *BTPurchaseInfo) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *BTPurchaseInfo) SetCurrency(v string) {
	o.Currency = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetDuration() int32 {
	if o == nil || o.Duration == nil {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetDurationOk() (*int32, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *BTPurchaseInfo) SetDuration(v int32) {
	o.Duration = &v
}

// GetDurationMonths returns the DurationMonths field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetDurationMonths() int32 {
	if o == nil || o.DurationMonths == nil {
		var ret int32
		return ret
	}
	return *o.DurationMonths
}

// GetDurationMonthsOk returns a tuple with the DurationMonths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetDurationMonthsOk() (*int32, bool) {
	if o == nil || o.DurationMonths == nil {
		return nil, false
	}
	return o.DurationMonths, true
}

// HasDurationMonths returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasDurationMonths() bool {
	if o != nil && o.DurationMonths != nil {
		return true
	}

	return false
}

// SetDurationMonths gets a reference to the given int32 and assigns it to the DurationMonths field.
func (o *BTPurchaseInfo) SetDurationMonths(v int32) {
	o.DurationMonths = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetGroup() string {
	if o == nil || o.Group == nil {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetGroupOk() (*string, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *BTPurchaseInfo) SetGroup(v string) {
	o.Group = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTPurchaseInfo) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTPurchaseInfo) SetId(v string) {
	o.Id = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetLastModified() JSONTime {
	if o == nil || o.LastModified == nil {
		var ret JSONTime
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetLastModifiedOk() (*JSONTime, bool) {
	if o == nil || o.LastModified == nil {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasLastModified() bool {
	if o != nil && o.LastModified != nil {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given JSONTime and assigns it to the LastModified field.
func (o *BTPurchaseInfo) SetLastModified(v JSONTime) {
	o.LastModified = &v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetLastModifiedBy() string {
	if o == nil || o.LastModifiedBy == nil {
		var ret string
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetLastModifiedByOk() (*string, bool) {
	if o == nil || o.LastModifiedBy == nil {
		return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy != nil {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given string and assigns it to the LastModifiedBy field.
func (o *BTPurchaseInfo) SetLastModifiedBy(v string) {
	o.LastModifiedBy = &v
}

// GetLightSeats returns the LightSeats field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetLightSeats() int64 {
	if o == nil || o.LightSeats == nil {
		var ret int64
		return ret
	}
	return *o.LightSeats
}

// GetLightSeatsOk returns a tuple with the LightSeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetLightSeatsOk() (*int64, bool) {
	if o == nil || o.LightSeats == nil {
		return nil, false
	}
	return o.LightSeats, true
}

// HasLightSeats returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasLightSeats() bool {
	if o != nil && o.LightSeats != nil {
		return true
	}

	return false
}

// SetLightSeats gets a reference to the given int64 and assigns it to the LightSeats field.
func (o *BTPurchaseInfo) SetLightSeats(v int64) {
	o.LightSeats = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTPurchaseInfo) SetName(v string) {
	o.Name = &v
}

// GetNextCharge returns the NextCharge field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetNextCharge() NextCharge {
	if o == nil || o.NextCharge == nil {
		var ret NextCharge
		return ret
	}
	return *o.NextCharge
}

// GetNextChargeOk returns a tuple with the NextCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetNextChargeOk() (*NextCharge, bool) {
	if o == nil || o.NextCharge == nil {
		return nil, false
	}
	return o.NextCharge, true
}

// HasNextCharge returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasNextCharge() bool {
	if o != nil && o.NextCharge != nil {
		return true
	}

	return false
}

// SetNextCharge gets a reference to the given NextCharge and assigns it to the NextCharge field.
func (o *BTPurchaseInfo) SetNextCharge(v NextCharge) {
	o.NextCharge = &v
}

// GetPaymentType returns the PaymentType field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetPaymentType() int32 {
	if o == nil || o.PaymentType == nil {
		var ret int32
		return ret
	}
	return *o.PaymentType
}

// GetPaymentTypeOk returns a tuple with the PaymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetPaymentTypeOk() (*int32, bool) {
	if o == nil || o.PaymentType == nil {
		return nil, false
	}
	return o.PaymentType, true
}

// HasPaymentType returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasPaymentType() bool {
	if o != nil && o.PaymentType != nil {
		return true
	}

	return false
}

// SetPaymentType gets a reference to the given int32 and assigns it to the PaymentType field.
func (o *BTPurchaseInfo) SetPaymentType(v int32) {
	o.PaymentType = &v
}

// GetPendingCancelation returns the PendingCancelation field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetPendingCancelation() bool {
	if o == nil || o.PendingCancelation == nil {
		var ret bool
		return ret
	}
	return *o.PendingCancelation
}

// GetPendingCancelationOk returns a tuple with the PendingCancelation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetPendingCancelationOk() (*bool, bool) {
	if o == nil || o.PendingCancelation == nil {
		return nil, false
	}
	return o.PendingCancelation, true
}

// HasPendingCancelation returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasPendingCancelation() bool {
	if o != nil && o.PendingCancelation != nil {
		return true
	}

	return false
}

// SetPendingCancelation gets a reference to the given bool and assigns it to the PendingCancelation field.
func (o *BTPurchaseInfo) SetPendingCancelation(v bool) {
	o.PendingCancelation = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetPlan() BTBillingPlanInfo {
	if o == nil || o.Plan == nil {
		var ret BTBillingPlanInfo
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetPlanOk() (*BTBillingPlanInfo, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given BTBillingPlanInfo and assigns it to the Plan field.
func (o *BTPurchaseInfo) SetPlan(v BTBillingPlanInfo) {
	o.Plan = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetPlanId() string {
	if o == nil || o.PlanId == nil {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetPlanIdOk() (*string, bool) {
	if o == nil || o.PlanId == nil {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasPlanId() bool {
	if o != nil && o.PlanId != nil {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *BTPurchaseInfo) SetPlanId(v string) {
	o.PlanId = &v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetPlanName() string {
	if o == nil || o.PlanName == nil {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetPlanNameOk() (*string, bool) {
	if o == nil || o.PlanName == nil {
		return nil, false
	}
	return o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasPlanName() bool {
	if o != nil && o.PlanName != nil {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *BTPurchaseInfo) SetPlanName(v string) {
	o.PlanName = &v
}

// GetPlanType returns the PlanType field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetPlanType() int32 {
	if o == nil || o.PlanType == nil {
		var ret int32
		return ret
	}
	return *o.PlanType
}

// GetPlanTypeOk returns a tuple with the PlanType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetPlanTypeOk() (*int32, bool) {
	if o == nil || o.PlanType == nil {
		return nil, false
	}
	return o.PlanType, true
}

// HasPlanType returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasPlanType() bool {
	if o != nil && o.PlanType != nil {
		return true
	}

	return false
}

// SetPlanType gets a reference to the given int32 and assigns it to the PlanType field.
func (o *BTPurchaseInfo) SetPlanType(v int32) {
	o.PlanType = &v
}

// GetPreTrialPlanId returns the PreTrialPlanId field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetPreTrialPlanId() string {
	if o == nil || o.PreTrialPlanId == nil {
		var ret string
		return ret
	}
	return *o.PreTrialPlanId
}

// GetPreTrialPlanIdOk returns a tuple with the PreTrialPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetPreTrialPlanIdOk() (*string, bool) {
	if o == nil || o.PreTrialPlanId == nil {
		return nil, false
	}
	return o.PreTrialPlanId, true
}

// HasPreTrialPlanId returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasPreTrialPlanId() bool {
	if o != nil && o.PreTrialPlanId != nil {
		return true
	}

	return false
}

// SetPreTrialPlanId gets a reference to the given string and assigns it to the PreTrialPlanId field.
func (o *BTPurchaseInfo) SetPreTrialPlanId(v string) {
	o.PreTrialPlanId = &v
}

// GetProratedCharges returns the ProratedCharges field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetProratedCharges() []ProratedCharges {
	if o == nil || o.ProratedCharges == nil {
		var ret []ProratedCharges
		return ret
	}
	return o.ProratedCharges
}

// GetProratedChargesOk returns a tuple with the ProratedCharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetProratedChargesOk() ([]ProratedCharges, bool) {
	if o == nil || o.ProratedCharges == nil {
		return nil, false
	}
	return o.ProratedCharges, true
}

// HasProratedCharges returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasProratedCharges() bool {
	if o != nil && o.ProratedCharges != nil {
		return true
	}

	return false
}

// SetProratedCharges gets a reference to the given []ProratedCharges and assigns it to the ProratedCharges field.
func (o *BTPurchaseInfo) SetProratedCharges(v []ProratedCharges) {
	o.ProratedCharges = v
}

// GetProratedTotal returns the ProratedTotal field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetProratedTotal() int64 {
	if o == nil || o.ProratedTotal == nil {
		var ret int64
		return ret
	}
	return *o.ProratedTotal
}

// GetProratedTotalOk returns a tuple with the ProratedTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetProratedTotalOk() (*int64, bool) {
	if o == nil || o.ProratedTotal == nil {
		return nil, false
	}
	return o.ProratedTotal, true
}

// HasProratedTotal returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasProratedTotal() bool {
	if o != nil && o.ProratedTotal != nil {
		return true
	}

	return false
}

// SetProratedTotal gets a reference to the given int64 and assigns it to the ProratedTotal field.
func (o *BTPurchaseInfo) SetProratedTotal(v int64) {
	o.ProratedTotal = &v
}

// GetPurchaseDate returns the PurchaseDate field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetPurchaseDate() JSONTime {
	if o == nil || o.PurchaseDate == nil {
		var ret JSONTime
		return ret
	}
	return *o.PurchaseDate
}

// GetPurchaseDateOk returns a tuple with the PurchaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetPurchaseDateOk() (*JSONTime, bool) {
	if o == nil || o.PurchaseDate == nil {
		return nil, false
	}
	return o.PurchaseDate, true
}

// HasPurchaseDate returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasPurchaseDate() bool {
	if o != nil && o.PurchaseDate != nil {
		return true
	}

	return false
}

// SetPurchaseDate gets a reference to the given JSONTime and assigns it to the PurchaseDate field.
func (o *BTPurchaseInfo) SetPurchaseDate(v JSONTime) {
	o.PurchaseDate = &v
}

// GetResellerName returns the ResellerName field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetResellerName() string {
	if o == nil || o.ResellerName == nil {
		var ret string
		return ret
	}
	return *o.ResellerName
}

// GetResellerNameOk returns a tuple with the ResellerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetResellerNameOk() (*string, bool) {
	if o == nil || o.ResellerName == nil {
		return nil, false
	}
	return o.ResellerName, true
}

// HasResellerName returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasResellerName() bool {
	if o != nil && o.ResellerName != nil {
		return true
	}

	return false
}

// SetResellerName gets a reference to the given string and assigns it to the ResellerName field.
func (o *BTPurchaseInfo) SetResellerName(v string) {
	o.ResellerName = &v
}

// GetSeats returns the Seats field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetSeats() int64 {
	if o == nil || o.Seats == nil {
		var ret int64
		return ret
	}
	return *o.Seats
}

// GetSeatsOk returns a tuple with the Seats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetSeatsOk() (*int64, bool) {
	if o == nil || o.Seats == nil {
		return nil, false
	}
	return o.Seats, true
}

// HasSeats returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasSeats() bool {
	if o != nil && o.Seats != nil {
		return true
	}

	return false
}

// SetSeats gets a reference to the given int64 and assigns it to the Seats field.
func (o *BTPurchaseInfo) SetSeats(v int64) {
	o.Seats = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetState() int32 {
	if o == nil || o.State == nil {
		var ret int32
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetStateOk() (*int32, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given int32 and assigns it to the State field.
func (o *BTPurchaseInfo) SetState(v int32) {
	o.State = &v
}

// GetSubscribers returns the Subscribers field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetSubscribers() []BTPlanSubscriberInfo {
	if o == nil || o.Subscribers == nil {
		var ret []BTPlanSubscriberInfo
		return ret
	}
	return o.Subscribers
}

// GetSubscribersOk returns a tuple with the Subscribers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetSubscribersOk() ([]BTPlanSubscriberInfo, bool) {
	if o == nil || o.Subscribers == nil {
		return nil, false
	}
	return o.Subscribers, true
}

// HasSubscribers returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasSubscribers() bool {
	if o != nil && o.Subscribers != nil {
		return true
	}

	return false
}

// SetSubscribers gets a reference to the given []BTPlanSubscriberInfo and assigns it to the Subscribers field.
func (o *BTPurchaseInfo) SetSubscribers(v []BTPlanSubscriberInfo) {
	o.Subscribers = v
}

// GetSubscriptionBeginAt returns the SubscriptionBeginAt field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetSubscriptionBeginAt() JSONTime {
	if o == nil || o.SubscriptionBeginAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.SubscriptionBeginAt
}

// GetSubscriptionBeginAtOk returns a tuple with the SubscriptionBeginAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetSubscriptionBeginAtOk() (*JSONTime, bool) {
	if o == nil || o.SubscriptionBeginAt == nil {
		return nil, false
	}
	return o.SubscriptionBeginAt, true
}

// HasSubscriptionBeginAt returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasSubscriptionBeginAt() bool {
	if o != nil && o.SubscriptionBeginAt != nil {
		return true
	}

	return false
}

// SetSubscriptionBeginAt gets a reference to the given JSONTime and assigns it to the SubscriptionBeginAt field.
func (o *BTPurchaseInfo) SetSubscriptionBeginAt(v JSONTime) {
	o.SubscriptionBeginAt = &v
}

// GetSubscriptionEndAt returns the SubscriptionEndAt field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetSubscriptionEndAt() JSONTime {
	if o == nil || o.SubscriptionEndAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.SubscriptionEndAt
}

// GetSubscriptionEndAtOk returns a tuple with the SubscriptionEndAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetSubscriptionEndAtOk() (*JSONTime, bool) {
	if o == nil || o.SubscriptionEndAt == nil {
		return nil, false
	}
	return o.SubscriptionEndAt, true
}

// HasSubscriptionEndAt returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasSubscriptionEndAt() bool {
	if o != nil && o.SubscriptionEndAt != nil {
		return true
	}

	return false
}

// SetSubscriptionEndAt gets a reference to the given JSONTime and assigns it to the SubscriptionEndAt field.
func (o *BTPurchaseInfo) SetSubscriptionEndAt(v JSONTime) {
	o.SubscriptionEndAt = &v
}

// GetSubscriptionFields returns the SubscriptionFields field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetSubscriptionFields() Subscription {
	if o == nil || o.SubscriptionFields == nil {
		var ret Subscription
		return ret
	}
	return *o.SubscriptionFields
}

// GetSubscriptionFieldsOk returns a tuple with the SubscriptionFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetSubscriptionFieldsOk() (*Subscription, bool) {
	if o == nil || o.SubscriptionFields == nil {
		return nil, false
	}
	return o.SubscriptionFields, true
}

// HasSubscriptionFields returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasSubscriptionFields() bool {
	if o != nil && o.SubscriptionFields != nil {
		return true
	}

	return false
}

// SetSubscriptionFields gets a reference to the given Subscription and assigns it to the SubscriptionFields field.
func (o *BTPurchaseInfo) SetSubscriptionFields(v Subscription) {
	o.SubscriptionFields = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || o.SubscriptionId == nil {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId != nil {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *BTPurchaseInfo) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetSubscriptionType returns the SubscriptionType field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetSubscriptionType() int32 {
	if o == nil || o.SubscriptionType == nil {
		var ret int32
		return ret
	}
	return *o.SubscriptionType
}

// GetSubscriptionTypeOk returns a tuple with the SubscriptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetSubscriptionTypeOk() (*int32, bool) {
	if o == nil || o.SubscriptionType == nil {
		return nil, false
	}
	return o.SubscriptionType, true
}

// HasSubscriptionType returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasSubscriptionType() bool {
	if o != nil && o.SubscriptionType != nil {
		return true
	}

	return false
}

// SetSubscriptionType gets a reference to the given int32 and assigns it to the SubscriptionType field.
func (o *BTPurchaseInfo) SetSubscriptionType(v int32) {
	o.SubscriptionType = &v
}

// GetTaxAmountCents returns the TaxAmountCents field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetTaxAmountCents() int64 {
	if o == nil || o.TaxAmountCents == nil {
		var ret int64
		return ret
	}
	return *o.TaxAmountCents
}

// GetTaxAmountCentsOk returns a tuple with the TaxAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetTaxAmountCentsOk() (*int64, bool) {
	if o == nil || o.TaxAmountCents == nil {
		return nil, false
	}
	return o.TaxAmountCents, true
}

// HasTaxAmountCents returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasTaxAmountCents() bool {
	if o != nil && o.TaxAmountCents != nil {
		return true
	}

	return false
}

// SetTaxAmountCents gets a reference to the given int64 and assigns it to the TaxAmountCents field.
func (o *BTPurchaseInfo) SetTaxAmountCents(v int64) {
	o.TaxAmountCents = &v
}

// GetTrialEnd returns the TrialEnd field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetTrialEnd() JSONTime {
	if o == nil || o.TrialEnd == nil {
		var ret JSONTime
		return ret
	}
	return *o.TrialEnd
}

// GetTrialEndOk returns a tuple with the TrialEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetTrialEndOk() (*JSONTime, bool) {
	if o == nil || o.TrialEnd == nil {
		return nil, false
	}
	return o.TrialEnd, true
}

// HasTrialEnd returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasTrialEnd() bool {
	if o != nil && o.TrialEnd != nil {
		return true
	}

	return false
}

// SetTrialEnd gets a reference to the given JSONTime and assigns it to the TrialEnd field.
func (o *BTPurchaseInfo) SetTrialEnd(v JSONTime) {
	o.TrialEnd = &v
}

// GetTrialInitiatedBy returns the TrialInitiatedBy field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetTrialInitiatedBy() string {
	if o == nil || o.TrialInitiatedBy == nil {
		var ret string
		return ret
	}
	return *o.TrialInitiatedBy
}

// GetTrialInitiatedByOk returns a tuple with the TrialInitiatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetTrialInitiatedByOk() (*string, bool) {
	if o == nil || o.TrialInitiatedBy == nil {
		return nil, false
	}
	return o.TrialInitiatedBy, true
}

// HasTrialInitiatedBy returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasTrialInitiatedBy() bool {
	if o != nil && o.TrialInitiatedBy != nil {
		return true
	}

	return false
}

// SetTrialInitiatedBy gets a reference to the given string and assigns it to the TrialInitiatedBy field.
func (o *BTPurchaseInfo) SetTrialInitiatedBy(v string) {
	o.TrialInitiatedBy = &v
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *BTPurchaseInfo) GetViewRef() string {
	if o == nil || o.ViewRef == nil {
		var ret string
		return ret
	}
	return *o.ViewRef
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPurchaseInfo) GetViewRefOk() (*string, bool) {
	if o == nil || o.ViewRef == nil {
		return nil, false
	}
	return o.ViewRef, true
}

// HasViewRef returns a boolean if a field has been set.
func (o *BTPurchaseInfo) HasViewRef() bool {
	if o != nil && o.ViewRef != nil {
		return true
	}

	return false
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *BTPurchaseInfo) SetViewRef(v string) {
	o.ViewRef = &v
}

func (o BTPurchaseInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.ActualAmountPaidCents != nil {
		toSerialize["actualAmountPaidCents"] = o.ActualAmountPaidCents
	}
	if o.AmountCents != nil {
		toSerialize["amountCents"] = o.AmountCents
	}
	if o.Application != nil {
		toSerialize["application"] = o.Application
	}
	if o.CanceledAt != nil {
		toSerialize["canceledAt"] = o.CanceledAt
	}
	if o.Card != nil {
		toSerialize["card"] = o.Card
	}
	if o.ClientId != nil {
		toSerialize["clientId"] = o.ClientId
	}
	if o.CouponAmountOff != nil {
		toSerialize["couponAmountOff"] = o.CouponAmountOff
	}
	if o.CouponPercentOff != nil {
		toSerialize["couponPercentOff"] = o.CouponPercentOff
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.DurationMonths != nil {
		toSerialize["durationMonths"] = o.DurationMonths
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LastModified != nil {
		toSerialize["lastModified"] = o.LastModified
	}
	if o.LastModifiedBy != nil {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if o.LightSeats != nil {
		toSerialize["lightSeats"] = o.LightSeats
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NextCharge != nil {
		toSerialize["nextCharge"] = o.NextCharge
	}
	if o.PaymentType != nil {
		toSerialize["paymentType"] = o.PaymentType
	}
	if o.PendingCancelation != nil {
		toSerialize["pendingCancelation"] = o.PendingCancelation
	}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	if o.PlanId != nil {
		toSerialize["planId"] = o.PlanId
	}
	if o.PlanName != nil {
		toSerialize["planName"] = o.PlanName
	}
	if o.PlanType != nil {
		toSerialize["planType"] = o.PlanType
	}
	if o.PreTrialPlanId != nil {
		toSerialize["preTrialPlanId"] = o.PreTrialPlanId
	}
	if o.ProratedCharges != nil {
		toSerialize["proratedCharges"] = o.ProratedCharges
	}
	if o.ProratedTotal != nil {
		toSerialize["proratedTotal"] = o.ProratedTotal
	}
	if o.PurchaseDate != nil {
		toSerialize["purchaseDate"] = o.PurchaseDate
	}
	if o.ResellerName != nil {
		toSerialize["resellerName"] = o.ResellerName
	}
	if o.Seats != nil {
		toSerialize["seats"] = o.Seats
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Subscribers != nil {
		toSerialize["subscribers"] = o.Subscribers
	}
	if o.SubscriptionBeginAt != nil {
		toSerialize["subscriptionBeginAt"] = o.SubscriptionBeginAt
	}
	if o.SubscriptionEndAt != nil {
		toSerialize["subscriptionEndAt"] = o.SubscriptionEndAt
	}
	if o.SubscriptionFields != nil {
		toSerialize["subscriptionFields"] = o.SubscriptionFields
	}
	if o.SubscriptionId != nil {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if o.SubscriptionType != nil {
		toSerialize["subscriptionType"] = o.SubscriptionType
	}
	if o.TaxAmountCents != nil {
		toSerialize["taxAmountCents"] = o.TaxAmountCents
	}
	if o.TrialEnd != nil {
		toSerialize["trialEnd"] = o.TrialEnd
	}
	if o.TrialInitiatedBy != nil {
		toSerialize["trialInitiatedBy"] = o.TrialInitiatedBy
	}
	if o.ViewRef != nil {
		toSerialize["viewRef"] = o.ViewRef
	}
	return json.Marshal(toSerialize)
}

type NullableBTPurchaseInfo struct {
	value *BTPurchaseInfo
	isSet bool
}

func (v NullableBTPurchaseInfo) Get() *BTPurchaseInfo {
	return v.value
}

func (v *NullableBTPurchaseInfo) Set(val *BTPurchaseInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTPurchaseInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTPurchaseInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTPurchaseInfo(val *BTPurchaseInfo) *NullableBTPurchaseInfo {
	return &NullableBTPurchaseInfo{value: val, isSet: true}
}

func (v NullableBTPurchaseInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTPurchaseInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
