/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTConfigurationInfo struct for BTConfigurationInfo
type BTConfigurationInfo struct {
	IsStandardContent *bool                    `json:"isStandardContent,omitempty"`
	Parameters        []ConfigurationInfoEntry `json:"parameters,omitempty"`
}

// NewBTConfigurationInfo instantiates a new BTConfigurationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTConfigurationInfo() *BTConfigurationInfo {
	this := BTConfigurationInfo{}
	return &this
}

// NewBTConfigurationInfoWithDefaults instantiates a new BTConfigurationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTConfigurationInfoWithDefaults() *BTConfigurationInfo {
	this := BTConfigurationInfo{}
	return &this
}

// GetIsStandardContent returns the IsStandardContent field value if set, zero value otherwise.
func (o *BTConfigurationInfo) GetIsStandardContent() bool {
	if o == nil || o.IsStandardContent == nil {
		var ret bool
		return ret
	}
	return *o.IsStandardContent
}

// GetIsStandardContentOk returns a tuple with the IsStandardContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTConfigurationInfo) GetIsStandardContentOk() (*bool, bool) {
	if o == nil || o.IsStandardContent == nil {
		return nil, false
	}
	return o.IsStandardContent, true
}

// HasIsStandardContent returns a boolean if a field has been set.
func (o *BTConfigurationInfo) HasIsStandardContent() bool {
	if o != nil && o.IsStandardContent != nil {
		return true
	}

	return false
}

// SetIsStandardContent gets a reference to the given bool and assigns it to the IsStandardContent field.
func (o *BTConfigurationInfo) SetIsStandardContent(v bool) {
	o.IsStandardContent = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *BTConfigurationInfo) GetParameters() []ConfigurationInfoEntry {
	if o == nil || o.Parameters == nil {
		var ret []ConfigurationInfoEntry
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTConfigurationInfo) GetParametersOk() ([]ConfigurationInfoEntry, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *BTConfigurationInfo) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []ConfigurationInfoEntry and assigns it to the Parameters field.
func (o *BTConfigurationInfo) SetParameters(v []ConfigurationInfoEntry) {
	o.Parameters = v
}

func (o BTConfigurationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsStandardContent != nil {
		toSerialize["isStandardContent"] = o.IsStandardContent
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	return json.Marshal(toSerialize)
}

type NullableBTConfigurationInfo struct {
	value *BTConfigurationInfo
	isSet bool
}

func (v NullableBTConfigurationInfo) Get() *BTConfigurationInfo {
	return v.value
}

func (v *NullableBTConfigurationInfo) Set(val *BTConfigurationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTConfigurationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTConfigurationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTConfigurationInfo(val *BTConfigurationInfo) *NullableBTConfigurationInfo {
	return &NullableBTConfigurationInfo{value: val, isSet: true}
}

func (v NullableBTConfigurationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTConfigurationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
