/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTAppElementBulkModifyInfo struct for BTAppElementBulkModifyInfo
type BTAppElementBulkModifyInfo struct {
	// The latest change id for the element, after the edit was committed. Deprecated in favor of elementChangeResults.
	// Deprecated
	ChangeId *string `json:"changeId,omitempty"`
	// The latest change id for the document, after the edit was committed.
	DocumentMicroversionId *string `json:"documentMicroversionId,omitempty"`
	// The results of editing each element affected by the edit.
	ElementChangeResults []BTAppElementModifyInfo `json:"elementChangeResults,omitempty"`
	// The id of the edited element, if a single element was edited. Deprecated in favor of elementChangeResults.
	// Deprecated
	ElementId *string `json:"elementId,omitempty"`
	// The ids of the edited elements. Deprecated in favor of elementChangeResults.
	// Deprecated
	ElementIds []string `json:"elementIds,omitempty"`
	// `0: OK (healthy) | 1: INFO | 2: WARNING | 3: ERROR (dangling or view generation call failed) | 4: UNKNOWN`
	ErrorCode *int32 `json:"errorCode,omitempty"`
	// A human-readable value for the error that occurred, if one occurred.
	ErrorDescription *string                `json:"errorDescription,omitempty"`
	ErrorValue       *BTAppElementErrorCode `json:"errorValue,omitempty"`
	// The latest change id for the element, before the edit was made. Deprecated in favor of elementChangeResults.
	// Deprecated
	ParentChangeId *string `json:"parentChangeId,omitempty"`
	// The latest change id for the document, before the edit was made.
	ParentDocumentMicroversionId *string `json:"parentDocumentMicroversionId,omitempty"`
	// Whether the properties of any edited application element were changed after the transaction was created. Deprecated in favor of elementChangeResults.
	// Deprecated
	PropertyEditsMerged *bool `json:"propertyEditsMerged,omitempty"`
	// The id of the transaction in which the edit was applied. Deprecated in favor of elementChangeResults.
	// Deprecated
	TransactionId *string `json:"transactionId,omitempty"`
}

// NewBTAppElementBulkModifyInfo instantiates a new BTAppElementBulkModifyInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTAppElementBulkModifyInfo() *BTAppElementBulkModifyInfo {
	this := BTAppElementBulkModifyInfo{}
	return &this
}

// NewBTAppElementBulkModifyInfoWithDefaults instantiates a new BTAppElementBulkModifyInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTAppElementBulkModifyInfoWithDefaults() *BTAppElementBulkModifyInfo {
	this := BTAppElementBulkModifyInfo{}
	return &this
}

// GetChangeId returns the ChangeId field value if set, zero value otherwise.
// Deprecated
func (o *BTAppElementBulkModifyInfo) GetChangeId() string {
	if o == nil || o.ChangeId == nil {
		var ret string
		return ret
	}
	return *o.ChangeId
}

// GetChangeIdOk returns a tuple with the ChangeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *BTAppElementBulkModifyInfo) GetChangeIdOk() (*string, bool) {
	if o == nil || o.ChangeId == nil {
		return nil, false
	}
	return o.ChangeId, true
}

// HasChangeId returns a boolean if a field has been set.
func (o *BTAppElementBulkModifyInfo) HasChangeId() bool {
	if o != nil && o.ChangeId != nil {
		return true
	}

	return false
}

// SetChangeId gets a reference to the given string and assigns it to the ChangeId field.
// Deprecated
func (o *BTAppElementBulkModifyInfo) SetChangeId(v string) {
	o.ChangeId = &v
}

// GetDocumentMicroversionId returns the DocumentMicroversionId field value if set, zero value otherwise.
func (o *BTAppElementBulkModifyInfo) GetDocumentMicroversionId() string {
	if o == nil || o.DocumentMicroversionId == nil {
		var ret string
		return ret
	}
	return *o.DocumentMicroversionId
}

// GetDocumentMicroversionIdOk returns a tuple with the DocumentMicroversionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppElementBulkModifyInfo) GetDocumentMicroversionIdOk() (*string, bool) {
	if o == nil || o.DocumentMicroversionId == nil {
		return nil, false
	}
	return o.DocumentMicroversionId, true
}

// HasDocumentMicroversionId returns a boolean if a field has been set.
func (o *BTAppElementBulkModifyInfo) HasDocumentMicroversionId() bool {
	if o != nil && o.DocumentMicroversionId != nil {
		return true
	}

	return false
}

// SetDocumentMicroversionId gets a reference to the given string and assigns it to the DocumentMicroversionId field.
func (o *BTAppElementBulkModifyInfo) SetDocumentMicroversionId(v string) {
	o.DocumentMicroversionId = &v
}

// GetElementChangeResults returns the ElementChangeResults field value if set, zero value otherwise.
func (o *BTAppElementBulkModifyInfo) GetElementChangeResults() []BTAppElementModifyInfo {
	if o == nil || o.ElementChangeResults == nil {
		var ret []BTAppElementModifyInfo
		return ret
	}
	return o.ElementChangeResults
}

// GetElementChangeResultsOk returns a tuple with the ElementChangeResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppElementBulkModifyInfo) GetElementChangeResultsOk() ([]BTAppElementModifyInfo, bool) {
	if o == nil || o.ElementChangeResults == nil {
		return nil, false
	}
	return o.ElementChangeResults, true
}

// HasElementChangeResults returns a boolean if a field has been set.
func (o *BTAppElementBulkModifyInfo) HasElementChangeResults() bool {
	if o != nil && o.ElementChangeResults != nil {
		return true
	}

	return false
}

// SetElementChangeResults gets a reference to the given []BTAppElementModifyInfo and assigns it to the ElementChangeResults field.
func (o *BTAppElementBulkModifyInfo) SetElementChangeResults(v []BTAppElementModifyInfo) {
	o.ElementChangeResults = v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
// Deprecated
func (o *BTAppElementBulkModifyInfo) GetElementId() string {
	if o == nil || o.ElementId == nil {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *BTAppElementBulkModifyInfo) GetElementIdOk() (*string, bool) {
	if o == nil || o.ElementId == nil {
		return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *BTAppElementBulkModifyInfo) HasElementId() bool {
	if o != nil && o.ElementId != nil {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
// Deprecated
func (o *BTAppElementBulkModifyInfo) SetElementId(v string) {
	o.ElementId = &v
}

// GetElementIds returns the ElementIds field value if set, zero value otherwise.
// Deprecated
func (o *BTAppElementBulkModifyInfo) GetElementIds() []string {
	if o == nil || o.ElementIds == nil {
		var ret []string
		return ret
	}
	return o.ElementIds
}

// GetElementIdsOk returns a tuple with the ElementIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *BTAppElementBulkModifyInfo) GetElementIdsOk() ([]string, bool) {
	if o == nil || o.ElementIds == nil {
		return nil, false
	}
	return o.ElementIds, true
}

// HasElementIds returns a boolean if a field has been set.
func (o *BTAppElementBulkModifyInfo) HasElementIds() bool {
	if o != nil && o.ElementIds != nil {
		return true
	}

	return false
}

// SetElementIds gets a reference to the given []string and assigns it to the ElementIds field.
// Deprecated
func (o *BTAppElementBulkModifyInfo) SetElementIds(v []string) {
	o.ElementIds = v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *BTAppElementBulkModifyInfo) GetErrorCode() int32 {
	if o == nil || o.ErrorCode == nil {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppElementBulkModifyInfo) GetErrorCodeOk() (*int32, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *BTAppElementBulkModifyInfo) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *BTAppElementBulkModifyInfo) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *BTAppElementBulkModifyInfo) GetErrorDescription() string {
	if o == nil || o.ErrorDescription == nil {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppElementBulkModifyInfo) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || o.ErrorDescription == nil {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *BTAppElementBulkModifyInfo) HasErrorDescription() bool {
	if o != nil && o.ErrorDescription != nil {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *BTAppElementBulkModifyInfo) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetErrorValue returns the ErrorValue field value if set, zero value otherwise.
func (o *BTAppElementBulkModifyInfo) GetErrorValue() BTAppElementErrorCode {
	if o == nil || o.ErrorValue == nil {
		var ret BTAppElementErrorCode
		return ret
	}
	return *o.ErrorValue
}

// GetErrorValueOk returns a tuple with the ErrorValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppElementBulkModifyInfo) GetErrorValueOk() (*BTAppElementErrorCode, bool) {
	if o == nil || o.ErrorValue == nil {
		return nil, false
	}
	return o.ErrorValue, true
}

// HasErrorValue returns a boolean if a field has been set.
func (o *BTAppElementBulkModifyInfo) HasErrorValue() bool {
	if o != nil && o.ErrorValue != nil {
		return true
	}

	return false
}

// SetErrorValue gets a reference to the given BTAppElementErrorCode and assigns it to the ErrorValue field.
func (o *BTAppElementBulkModifyInfo) SetErrorValue(v BTAppElementErrorCode) {
	o.ErrorValue = &v
}

// GetParentChangeId returns the ParentChangeId field value if set, zero value otherwise.
// Deprecated
func (o *BTAppElementBulkModifyInfo) GetParentChangeId() string {
	if o == nil || o.ParentChangeId == nil {
		var ret string
		return ret
	}
	return *o.ParentChangeId
}

// GetParentChangeIdOk returns a tuple with the ParentChangeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *BTAppElementBulkModifyInfo) GetParentChangeIdOk() (*string, bool) {
	if o == nil || o.ParentChangeId == nil {
		return nil, false
	}
	return o.ParentChangeId, true
}

// HasParentChangeId returns a boolean if a field has been set.
func (o *BTAppElementBulkModifyInfo) HasParentChangeId() bool {
	if o != nil && o.ParentChangeId != nil {
		return true
	}

	return false
}

// SetParentChangeId gets a reference to the given string and assigns it to the ParentChangeId field.
// Deprecated
func (o *BTAppElementBulkModifyInfo) SetParentChangeId(v string) {
	o.ParentChangeId = &v
}

// GetParentDocumentMicroversionId returns the ParentDocumentMicroversionId field value if set, zero value otherwise.
func (o *BTAppElementBulkModifyInfo) GetParentDocumentMicroversionId() string {
	if o == nil || o.ParentDocumentMicroversionId == nil {
		var ret string
		return ret
	}
	return *o.ParentDocumentMicroversionId
}

// GetParentDocumentMicroversionIdOk returns a tuple with the ParentDocumentMicroversionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppElementBulkModifyInfo) GetParentDocumentMicroversionIdOk() (*string, bool) {
	if o == nil || o.ParentDocumentMicroversionId == nil {
		return nil, false
	}
	return o.ParentDocumentMicroversionId, true
}

// HasParentDocumentMicroversionId returns a boolean if a field has been set.
func (o *BTAppElementBulkModifyInfo) HasParentDocumentMicroversionId() bool {
	if o != nil && o.ParentDocumentMicroversionId != nil {
		return true
	}

	return false
}

// SetParentDocumentMicroversionId gets a reference to the given string and assigns it to the ParentDocumentMicroversionId field.
func (o *BTAppElementBulkModifyInfo) SetParentDocumentMicroversionId(v string) {
	o.ParentDocumentMicroversionId = &v
}

// GetPropertyEditsMerged returns the PropertyEditsMerged field value if set, zero value otherwise.
// Deprecated
func (o *BTAppElementBulkModifyInfo) GetPropertyEditsMerged() bool {
	if o == nil || o.PropertyEditsMerged == nil {
		var ret bool
		return ret
	}
	return *o.PropertyEditsMerged
}

// GetPropertyEditsMergedOk returns a tuple with the PropertyEditsMerged field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *BTAppElementBulkModifyInfo) GetPropertyEditsMergedOk() (*bool, bool) {
	if o == nil || o.PropertyEditsMerged == nil {
		return nil, false
	}
	return o.PropertyEditsMerged, true
}

// HasPropertyEditsMerged returns a boolean if a field has been set.
func (o *BTAppElementBulkModifyInfo) HasPropertyEditsMerged() bool {
	if o != nil && o.PropertyEditsMerged != nil {
		return true
	}

	return false
}

// SetPropertyEditsMerged gets a reference to the given bool and assigns it to the PropertyEditsMerged field.
// Deprecated
func (o *BTAppElementBulkModifyInfo) SetPropertyEditsMerged(v bool) {
	o.PropertyEditsMerged = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
// Deprecated
func (o *BTAppElementBulkModifyInfo) GetTransactionId() string {
	if o == nil || o.TransactionId == nil {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *BTAppElementBulkModifyInfo) GetTransactionIdOk() (*string, bool) {
	if o == nil || o.TransactionId == nil {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *BTAppElementBulkModifyInfo) HasTransactionId() bool {
	if o != nil && o.TransactionId != nil {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
// Deprecated
func (o *BTAppElementBulkModifyInfo) SetTransactionId(v string) {
	o.TransactionId = &v
}

func (o BTAppElementBulkModifyInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChangeId != nil {
		toSerialize["changeId"] = o.ChangeId
	}
	if o.DocumentMicroversionId != nil {
		toSerialize["documentMicroversionId"] = o.DocumentMicroversionId
	}
	if o.ElementChangeResults != nil {
		toSerialize["elementChangeResults"] = o.ElementChangeResults
	}
	if o.ElementId != nil {
		toSerialize["elementId"] = o.ElementId
	}
	if o.ElementIds != nil {
		toSerialize["elementIds"] = o.ElementIds
	}
	if o.ErrorCode != nil {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if o.ErrorDescription != nil {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	if o.ErrorValue != nil {
		toSerialize["errorValue"] = o.ErrorValue
	}
	if o.ParentChangeId != nil {
		toSerialize["parentChangeId"] = o.ParentChangeId
	}
	if o.ParentDocumentMicroversionId != nil {
		toSerialize["parentDocumentMicroversionId"] = o.ParentDocumentMicroversionId
	}
	if o.PropertyEditsMerged != nil {
		toSerialize["propertyEditsMerged"] = o.PropertyEditsMerged
	}
	if o.TransactionId != nil {
		toSerialize["transactionId"] = o.TransactionId
	}
	return json.Marshal(toSerialize)
}

type NullableBTAppElementBulkModifyInfo struct {
	value *BTAppElementBulkModifyInfo
	isSet bool
}

func (v NullableBTAppElementBulkModifyInfo) Get() *BTAppElementBulkModifyInfo {
	return v.value
}

func (v *NullableBTAppElementBulkModifyInfo) Set(val *BTAppElementBulkModifyInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTAppElementBulkModifyInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTAppElementBulkModifyInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTAppElementBulkModifyInfo(val *BTAppElementBulkModifyInfo) *NullableBTAppElementBulkModifyInfo {
	return &NullableBTAppElementBulkModifyInfo{value: val, isSet: true}
}

func (v NullableBTAppElementBulkModifyInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTAppElementBulkModifyInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
