/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTTaskItemInfo struct for BTTaskItemInfo
type BTTaskItemInfo struct {
	AssemblyFeatures   []string `json:"assemblyFeatures,omitempty"`
	BodyType           *string  `json:"bodyType,omitempty"`
	Configuration      *string  `json:"configuration,omitempty"`
	DataType           *string  `json:"dataType,omitempty"`
	DocumentId         *string  `json:"documentId,omitempty"`
	ElementFeature     *string  `json:"elementFeature,omitempty"`
	ElementId          *string  `json:"elementId,omitempty"`
	ElementOccurrences []string `json:"elementOccurrences,omitempty"`
	ElementQuery       *string  `json:"elementQuery,omitempty"`
	ElementType        *int32   `json:"elementType,omitempty"`
	FileName           *string  `json:"fileName,omitempty"`
	// URI to fetch complete information of the resource.
	Href *string `json:"href,omitempty"`
	// Id of the resource.
	Id       *string `json:"id,omitempty"`
	MimeType *string `json:"mimeType,omitempty"`
	// Name of the resource.
	Name         *string         `json:"name,omitempty"`
	PartId       *string         `json:"partId,omitempty"`
	ReleaseState *int32          `json:"releaseState,omitempty"`
	RevisionId   *string         `json:"revisionId,omitempty"`
	VersionId    *string         `json:"versionId,omitempty"`
	ViewData     *BTViewDataInfo `json:"viewData,omitempty"`
	// URI to visualize the resource in a webclient if applicable.
	ViewRef     *string `json:"viewRef,omitempty"`
	WorkspaceId *string `json:"workspaceId,omitempty"`
}

// NewBTTaskItemInfo instantiates a new BTTaskItemInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTTaskItemInfo() *BTTaskItemInfo {
	this := BTTaskItemInfo{}
	return &this
}

// NewBTTaskItemInfoWithDefaults instantiates a new BTTaskItemInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTTaskItemInfoWithDefaults() *BTTaskItemInfo {
	this := BTTaskItemInfo{}
	return &this
}

// GetAssemblyFeatures returns the AssemblyFeatures field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetAssemblyFeatures() []string {
	if o == nil || o.AssemblyFeatures == nil {
		var ret []string
		return ret
	}
	return o.AssemblyFeatures
}

// GetAssemblyFeaturesOk returns a tuple with the AssemblyFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetAssemblyFeaturesOk() ([]string, bool) {
	if o == nil || o.AssemblyFeatures == nil {
		return nil, false
	}
	return o.AssemblyFeatures, true
}

// HasAssemblyFeatures returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasAssemblyFeatures() bool {
	if o != nil && o.AssemblyFeatures != nil {
		return true
	}

	return false
}

// SetAssemblyFeatures gets a reference to the given []string and assigns it to the AssemblyFeatures field.
func (o *BTTaskItemInfo) SetAssemblyFeatures(v []string) {
	o.AssemblyFeatures = v
}

// GetBodyType returns the BodyType field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetBodyType() string {
	if o == nil || o.BodyType == nil {
		var ret string
		return ret
	}
	return *o.BodyType
}

// GetBodyTypeOk returns a tuple with the BodyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetBodyTypeOk() (*string, bool) {
	if o == nil || o.BodyType == nil {
		return nil, false
	}
	return o.BodyType, true
}

// HasBodyType returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasBodyType() bool {
	if o != nil && o.BodyType != nil {
		return true
	}

	return false
}

// SetBodyType gets a reference to the given string and assigns it to the BodyType field.
func (o *BTTaskItemInfo) SetBodyType(v string) {
	o.BodyType = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetConfiguration() string {
	if o == nil || o.Configuration == nil {
		var ret string
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetConfigurationOk() (*string, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given string and assigns it to the Configuration field.
func (o *BTTaskItemInfo) SetConfiguration(v string) {
	o.Configuration = &v
}

// GetDataType returns the DataType field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetDataType() string {
	if o == nil || o.DataType == nil {
		var ret string
		return ret
	}
	return *o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetDataTypeOk() (*string, bool) {
	if o == nil || o.DataType == nil {
		return nil, false
	}
	return o.DataType, true
}

// HasDataType returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasDataType() bool {
	if o != nil && o.DataType != nil {
		return true
	}

	return false
}

// SetDataType gets a reference to the given string and assigns it to the DataType field.
func (o *BTTaskItemInfo) SetDataType(v string) {
	o.DataType = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetDocumentId() string {
	if o == nil || o.DocumentId == nil {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetDocumentIdOk() (*string, bool) {
	if o == nil || o.DocumentId == nil {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasDocumentId() bool {
	if o != nil && o.DocumentId != nil {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *BTTaskItemInfo) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetElementFeature returns the ElementFeature field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetElementFeature() string {
	if o == nil || o.ElementFeature == nil {
		var ret string
		return ret
	}
	return *o.ElementFeature
}

// GetElementFeatureOk returns a tuple with the ElementFeature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetElementFeatureOk() (*string, bool) {
	if o == nil || o.ElementFeature == nil {
		return nil, false
	}
	return o.ElementFeature, true
}

// HasElementFeature returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasElementFeature() bool {
	if o != nil && o.ElementFeature != nil {
		return true
	}

	return false
}

// SetElementFeature gets a reference to the given string and assigns it to the ElementFeature field.
func (o *BTTaskItemInfo) SetElementFeature(v string) {
	o.ElementFeature = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetElementId() string {
	if o == nil || o.ElementId == nil {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetElementIdOk() (*string, bool) {
	if o == nil || o.ElementId == nil {
		return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasElementId() bool {
	if o != nil && o.ElementId != nil {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *BTTaskItemInfo) SetElementId(v string) {
	o.ElementId = &v
}

// GetElementOccurrences returns the ElementOccurrences field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetElementOccurrences() []string {
	if o == nil || o.ElementOccurrences == nil {
		var ret []string
		return ret
	}
	return o.ElementOccurrences
}

// GetElementOccurrencesOk returns a tuple with the ElementOccurrences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetElementOccurrencesOk() ([]string, bool) {
	if o == nil || o.ElementOccurrences == nil {
		return nil, false
	}
	return o.ElementOccurrences, true
}

// HasElementOccurrences returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasElementOccurrences() bool {
	if o != nil && o.ElementOccurrences != nil {
		return true
	}

	return false
}

// SetElementOccurrences gets a reference to the given []string and assigns it to the ElementOccurrences field.
func (o *BTTaskItemInfo) SetElementOccurrences(v []string) {
	o.ElementOccurrences = v
}

// GetElementQuery returns the ElementQuery field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetElementQuery() string {
	if o == nil || o.ElementQuery == nil {
		var ret string
		return ret
	}
	return *o.ElementQuery
}

// GetElementQueryOk returns a tuple with the ElementQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetElementQueryOk() (*string, bool) {
	if o == nil || o.ElementQuery == nil {
		return nil, false
	}
	return o.ElementQuery, true
}

// HasElementQuery returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasElementQuery() bool {
	if o != nil && o.ElementQuery != nil {
		return true
	}

	return false
}

// SetElementQuery gets a reference to the given string and assigns it to the ElementQuery field.
func (o *BTTaskItemInfo) SetElementQuery(v string) {
	o.ElementQuery = &v
}

// GetElementType returns the ElementType field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetElementType() int32 {
	if o == nil || o.ElementType == nil {
		var ret int32
		return ret
	}
	return *o.ElementType
}

// GetElementTypeOk returns a tuple with the ElementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetElementTypeOk() (*int32, bool) {
	if o == nil || o.ElementType == nil {
		return nil, false
	}
	return o.ElementType, true
}

// HasElementType returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasElementType() bool {
	if o != nil && o.ElementType != nil {
		return true
	}

	return false
}

// SetElementType gets a reference to the given int32 and assigns it to the ElementType field.
func (o *BTTaskItemInfo) SetElementType(v int32) {
	o.ElementType = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetFileName() string {
	if o == nil || o.FileName == nil {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetFileNameOk() (*string, bool) {
	if o == nil || o.FileName == nil {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasFileName() bool {
	if o != nil && o.FileName != nil {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *BTTaskItemInfo) SetFileName(v string) {
	o.FileName = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTTaskItemInfo) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTTaskItemInfo) SetId(v string) {
	o.Id = &v
}

// GetMimeType returns the MimeType field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetMimeType() string {
	if o == nil || o.MimeType == nil {
		var ret string
		return ret
	}
	return *o.MimeType
}

// GetMimeTypeOk returns a tuple with the MimeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetMimeTypeOk() (*string, bool) {
	if o == nil || o.MimeType == nil {
		return nil, false
	}
	return o.MimeType, true
}

// HasMimeType returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasMimeType() bool {
	if o != nil && o.MimeType != nil {
		return true
	}

	return false
}

// SetMimeType gets a reference to the given string and assigns it to the MimeType field.
func (o *BTTaskItemInfo) SetMimeType(v string) {
	o.MimeType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTTaskItemInfo) SetName(v string) {
	o.Name = &v
}

// GetPartId returns the PartId field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetPartId() string {
	if o == nil || o.PartId == nil {
		var ret string
		return ret
	}
	return *o.PartId
}

// GetPartIdOk returns a tuple with the PartId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetPartIdOk() (*string, bool) {
	if o == nil || o.PartId == nil {
		return nil, false
	}
	return o.PartId, true
}

// HasPartId returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasPartId() bool {
	if o != nil && o.PartId != nil {
		return true
	}

	return false
}

// SetPartId gets a reference to the given string and assigns it to the PartId field.
func (o *BTTaskItemInfo) SetPartId(v string) {
	o.PartId = &v
}

// GetReleaseState returns the ReleaseState field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetReleaseState() int32 {
	if o == nil || o.ReleaseState == nil {
		var ret int32
		return ret
	}
	return *o.ReleaseState
}

// GetReleaseStateOk returns a tuple with the ReleaseState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetReleaseStateOk() (*int32, bool) {
	if o == nil || o.ReleaseState == nil {
		return nil, false
	}
	return o.ReleaseState, true
}

// HasReleaseState returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasReleaseState() bool {
	if o != nil && o.ReleaseState != nil {
		return true
	}

	return false
}

// SetReleaseState gets a reference to the given int32 and assigns it to the ReleaseState field.
func (o *BTTaskItemInfo) SetReleaseState(v int32) {
	o.ReleaseState = &v
}

// GetRevisionId returns the RevisionId field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetRevisionId() string {
	if o == nil || o.RevisionId == nil {
		var ret string
		return ret
	}
	return *o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetRevisionIdOk() (*string, bool) {
	if o == nil || o.RevisionId == nil {
		return nil, false
	}
	return o.RevisionId, true
}

// HasRevisionId returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasRevisionId() bool {
	if o != nil && o.RevisionId != nil {
		return true
	}

	return false
}

// SetRevisionId gets a reference to the given string and assigns it to the RevisionId field.
func (o *BTTaskItemInfo) SetRevisionId(v string) {
	o.RevisionId = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetVersionId() string {
	if o == nil || o.VersionId == nil {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetVersionIdOk() (*string, bool) {
	if o == nil || o.VersionId == nil {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasVersionId() bool {
	if o != nil && o.VersionId != nil {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *BTTaskItemInfo) SetVersionId(v string) {
	o.VersionId = &v
}

// GetViewData returns the ViewData field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetViewData() BTViewDataInfo {
	if o == nil || o.ViewData == nil {
		var ret BTViewDataInfo
		return ret
	}
	return *o.ViewData
}

// GetViewDataOk returns a tuple with the ViewData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetViewDataOk() (*BTViewDataInfo, bool) {
	if o == nil || o.ViewData == nil {
		return nil, false
	}
	return o.ViewData, true
}

// HasViewData returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasViewData() bool {
	if o != nil && o.ViewData != nil {
		return true
	}

	return false
}

// SetViewData gets a reference to the given BTViewDataInfo and assigns it to the ViewData field.
func (o *BTTaskItemInfo) SetViewData(v BTViewDataInfo) {
	o.ViewData = &v
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetViewRef() string {
	if o == nil || o.ViewRef == nil {
		var ret string
		return ret
	}
	return *o.ViewRef
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetViewRefOk() (*string, bool) {
	if o == nil || o.ViewRef == nil {
		return nil, false
	}
	return o.ViewRef, true
}

// HasViewRef returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasViewRef() bool {
	if o != nil && o.ViewRef != nil {
		return true
	}

	return false
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *BTTaskItemInfo) SetViewRef(v string) {
	o.ViewRef = &v
}

// GetWorkspaceId returns the WorkspaceId field value if set, zero value otherwise.
func (o *BTTaskItemInfo) GetWorkspaceId() string {
	if o == nil || o.WorkspaceId == nil {
		var ret string
		return ret
	}
	return *o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskItemInfo) GetWorkspaceIdOk() (*string, bool) {
	if o == nil || o.WorkspaceId == nil {
		return nil, false
	}
	return o.WorkspaceId, true
}

// HasWorkspaceId returns a boolean if a field has been set.
func (o *BTTaskItemInfo) HasWorkspaceId() bool {
	if o != nil && o.WorkspaceId != nil {
		return true
	}

	return false
}

// SetWorkspaceId gets a reference to the given string and assigns it to the WorkspaceId field.
func (o *BTTaskItemInfo) SetWorkspaceId(v string) {
	o.WorkspaceId = &v
}

func (o BTTaskItemInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssemblyFeatures != nil {
		toSerialize["assemblyFeatures"] = o.AssemblyFeatures
	}
	if o.BodyType != nil {
		toSerialize["bodyType"] = o.BodyType
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.DataType != nil {
		toSerialize["dataType"] = o.DataType
	}
	if o.DocumentId != nil {
		toSerialize["documentId"] = o.DocumentId
	}
	if o.ElementFeature != nil {
		toSerialize["elementFeature"] = o.ElementFeature
	}
	if o.ElementId != nil {
		toSerialize["elementId"] = o.ElementId
	}
	if o.ElementOccurrences != nil {
		toSerialize["elementOccurrences"] = o.ElementOccurrences
	}
	if o.ElementQuery != nil {
		toSerialize["elementQuery"] = o.ElementQuery
	}
	if o.ElementType != nil {
		toSerialize["elementType"] = o.ElementType
	}
	if o.FileName != nil {
		toSerialize["fileName"] = o.FileName
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MimeType != nil {
		toSerialize["mimeType"] = o.MimeType
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PartId != nil {
		toSerialize["partId"] = o.PartId
	}
	if o.ReleaseState != nil {
		toSerialize["releaseState"] = o.ReleaseState
	}
	if o.RevisionId != nil {
		toSerialize["revisionId"] = o.RevisionId
	}
	if o.VersionId != nil {
		toSerialize["versionId"] = o.VersionId
	}
	if o.ViewData != nil {
		toSerialize["viewData"] = o.ViewData
	}
	if o.ViewRef != nil {
		toSerialize["viewRef"] = o.ViewRef
	}
	if o.WorkspaceId != nil {
		toSerialize["workspaceId"] = o.WorkspaceId
	}
	return json.Marshal(toSerialize)
}

type NullableBTTaskItemInfo struct {
	value *BTTaskItemInfo
	isSet bool
}

func (v NullableBTTaskItemInfo) Get() *BTTaskItemInfo {
	return v.value
}

func (v *NullableBTTaskItemInfo) Set(val *BTTaskItemInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTTaskItemInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTTaskItemInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTTaskItemInfo(val *BTTaskItemInfo) *NullableBTTaskItemInfo {
	return &NullableBTTaskItemInfo{value: val, isSet: true}
}

func (v NullableBTTaskItemInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTTaskItemInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
