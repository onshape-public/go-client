/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
	"fmt"
)

// BTPublicationInfoItem - struct for BTPublicationInfoItem
type BTPublicationInfoItem struct {
	implBTPublicationInfoItem interface{}
}

// BlobItemAsBTPublicationInfoItem is a convenience function that returns BlobItem wrapped in BTPublicationInfoItem
func (o *BlobItem) AsBTPublicationInfoItem() *BTPublicationInfoItem {
	return &BTPublicationInfoItem{o}
}

// NewBTPublicationInfoItem instantiates a new BTPublicationInfoItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTPublicationInfoItem(jsonType string) *BTPublicationInfoItem {
	this := BTPublicationInfoItem{Newbase_BTPublicationInfoItem(jsonType)}
	return &this
}

// NewBTPublicationInfoItemWithDefaults instantiates a new BTPublicationInfoItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTPublicationInfoItemWithDefaults() *BTPublicationInfoItem {
	this := BTPublicationInfoItem{Newbase_BTPublicationInfoItemWithDefaults()}
	return &this
}

// GetApplicationTarget returns the ApplicationTarget field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetApplicationTarget() BTApplicationTargetInfo {
	type getResult interface {
		GetApplicationTarget() BTApplicationTargetInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetApplicationTarget()
	} else {
		var de BTApplicationTargetInfo
		return de
	}
}

// GetApplicationTargetOk returns a tuple with the ApplicationTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetApplicationTargetOk() (*BTApplicationTargetInfo, bool) {
	type getResult interface {
		GetApplicationTargetOk() (*BTApplicationTargetInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetApplicationTargetOk()
	} else {
		return nil, false
	}
}

// HasApplicationTarget returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasApplicationTarget() bool {
	type getResult interface {
		HasApplicationTarget() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasApplicationTarget()
	} else {
		return false
	}
}

// SetApplicationTarget gets a reference to the given BTApplicationTargetInfo and assigns it to the ApplicationTarget field.
func (o *BTPublicationInfoItem) SetApplicationTarget(v BTApplicationTargetInfo) {
	type getResult interface {
		SetApplicationTarget(v BTApplicationTargetInfo)
	}

	o.GetActualInstance().(getResult).SetApplicationTarget(v)
}

// GetDataType returns the DataType field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetDataType() string {
	type getResult interface {
		GetDataType() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDataType()
	} else {
		var de string
		return de
	}
}

// GetDataTypeOk returns a tuple with the DataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetDataTypeOk() (*string, bool) {
	type getResult interface {
		GetDataTypeOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDataTypeOk()
	} else {
		return nil, false
	}
}

// HasDataType returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasDataType() bool {
	type getResult interface {
		HasDataType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDataType()
	} else {
		return false
	}
}

// SetDataType gets a reference to the given string and assigns it to the DataType field.
func (o *BTPublicationInfoItem) SetDataType(v string) {
	type getResult interface {
		SetDataType(v string)
	}

	o.GetActualInstance().(getResult).SetDataType(v)
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetDocumentId() string {
	type getResult interface {
		GetDocumentId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDocumentId()
	} else {
		var de string
		return de
	}
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetDocumentIdOk() (*string, bool) {
	type getResult interface {
		GetDocumentIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDocumentIdOk()
	} else {
		return nil, false
	}
}

// HasDocumentId returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasDocumentId() bool {
	type getResult interface {
		HasDocumentId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDocumentId()
	} else {
		return false
	}
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *BTPublicationInfoItem) SetDocumentId(v string) {
	type getResult interface {
		SetDocumentId(v string)
	}

	o.GetActualInstance().(getResult).SetDocumentId(v)
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetElementId() string {
	type getResult interface {
		GetElementId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetElementId()
	} else {
		var de string
		return de
	}
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetElementIdOk() (*string, bool) {
	type getResult interface {
		GetElementIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetElementIdOk()
	} else {
		return nil, false
	}
}

// HasElementId returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasElementId() bool {
	type getResult interface {
		HasElementId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasElementId()
	} else {
		return false
	}
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *BTPublicationInfoItem) SetElementId(v string) {
	type getResult interface {
		SetElementId(v string)
	}

	o.GetActualInstance().(getResult).SetElementId(v)
}

// GetElementType returns the ElementType field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetElementType() GBTElementType {
	type getResult interface {
		GetElementType() GBTElementType
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetElementType()
	} else {
		var de GBTElementType
		return de
	}
}

// GetElementTypeOk returns a tuple with the ElementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetElementTypeOk() (*GBTElementType, bool) {
	type getResult interface {
		GetElementTypeOk() (*GBTElementType, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetElementTypeOk()
	} else {
		return nil, false
	}
}

// HasElementType returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasElementType() bool {
	type getResult interface {
		HasElementType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasElementType()
	} else {
		return false
	}
}

// SetElementType gets a reference to the given GBTElementType and assigns it to the ElementType field.
func (o *BTPublicationInfoItem) SetElementType(v GBTElementType) {
	type getResult interface {
		SetElementType(v GBTElementType)
	}

	o.GetActualInstance().(getResult).SetElementType(v)
}

// GetEncodedConfiguration returns the EncodedConfiguration field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetEncodedConfiguration() string {
	type getResult interface {
		GetEncodedConfiguration() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetEncodedConfiguration()
	} else {
		var de string
		return de
	}
}

// GetEncodedConfigurationOk returns a tuple with the EncodedConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetEncodedConfigurationOk() (*string, bool) {
	type getResult interface {
		GetEncodedConfigurationOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetEncodedConfigurationOk()
	} else {
		return nil, false
	}
}

// HasEncodedConfiguration returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasEncodedConfiguration() bool {
	type getResult interface {
		HasEncodedConfiguration() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasEncodedConfiguration()
	} else {
		return false
	}
}

// SetEncodedConfiguration gets a reference to the given string and assigns it to the EncodedConfiguration field.
func (o *BTPublicationInfoItem) SetEncodedConfiguration(v string) {
	type getResult interface {
		SetEncodedConfiguration(v string)
	}

	o.GetActualInstance().(getResult).SetEncodedConfiguration(v)
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetId() string {
	type getResult interface {
		GetId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetId()
	} else {
		var de string
		return de
	}
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetIdOk() (*string, bool) {
	type getResult interface {
		GetIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIdOk()
	} else {
		return nil, false
	}
}

// HasId returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasId() bool {
	type getResult interface {
		HasId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasId()
	} else {
		return false
	}
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTPublicationInfoItem) SetId(v string) {
	type getResult interface {
		SetId(v string)
	}

	o.GetActualInstance().(getResult).SetId(v)
}

// GetJsonType returns the JsonType field value
func (o *BTPublicationInfoItem) GetJsonType() string {
	type getResult interface {
		GetJsonType() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetJsonType()
	} else {
		var de string
		return de
	}
}

// GetJsonTypeOk returns a tuple with the JsonType field value
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetJsonTypeOk() (*string, bool) {
	type getResult interface {
		GetJsonTypeOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetJsonTypeOk()
	} else {
		return nil, false
	}
}

// SetJsonType sets field value
func (o *BTPublicationInfoItem) SetJsonType(v string) {
	type getResult interface {
		SetJsonType(v string)
	}

	o.GetActualInstance().(getResult).SetJsonType(v)
}

// GetPartId returns the PartId field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetPartId() string {
	type getResult interface {
		GetPartId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPartId()
	} else {
		var de string
		return de
	}
}

// GetPartIdOk returns a tuple with the PartId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetPartIdOk() (*string, bool) {
	type getResult interface {
		GetPartIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPartIdOk()
	} else {
		return nil, false
	}
}

// HasPartId returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasPartId() bool {
	type getResult interface {
		HasPartId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasPartId()
	} else {
		return false
	}
}

// SetPartId gets a reference to the given string and assigns it to the PartId field.
func (o *BTPublicationInfoItem) SetPartId(v string) {
	type getResult interface {
		SetPartId(v string)
	}

	o.GetActualInstance().(getResult).SetPartId(v)
}

// GetPartName returns the PartName field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetPartName() string {
	type getResult interface {
		GetPartName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPartName()
	} else {
		var de string
		return de
	}
}

// GetPartNameOk returns a tuple with the PartName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetPartNameOk() (*string, bool) {
	type getResult interface {
		GetPartNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPartNameOk()
	} else {
		return nil, false
	}
}

// HasPartName returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasPartName() bool {
	type getResult interface {
		HasPartName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasPartName()
	} else {
		return false
	}
}

// SetPartName gets a reference to the given string and assigns it to the PartName field.
func (o *BTPublicationInfoItem) SetPartName(v string) {
	type getResult interface {
		SetPartName(v string)
	}

	o.GetActualInstance().(getResult).SetPartName(v)
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetPartNumber() string {
	type getResult interface {
		GetPartNumber() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPartNumber()
	} else {
		var de string
		return de
	}
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetPartNumberOk() (*string, bool) {
	type getResult interface {
		GetPartNumberOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPartNumberOk()
	} else {
		return nil, false
	}
}

// HasPartNumber returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasPartNumber() bool {
	type getResult interface {
		HasPartNumber() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasPartNumber()
	} else {
		return false
	}
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *BTPublicationInfoItem) SetPartNumber(v string) {
	type getResult interface {
		SetPartNumber(v string)
	}

	o.GetActualInstance().(getResult).SetPartNumber(v)
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetRevision() string {
	type getResult interface {
		GetRevision() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetRevision()
	} else {
		var de string
		return de
	}
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetRevisionOk() (*string, bool) {
	type getResult interface {
		GetRevisionOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetRevisionOk()
	} else {
		return nil, false
	}
}

// HasRevision returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasRevision() bool {
	type getResult interface {
		HasRevision() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasRevision()
	} else {
		return false
	}
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *BTPublicationInfoItem) SetRevision(v string) {
	type getResult interface {
		SetRevision(v string)
	}

	o.GetActualInstance().(getResult).SetRevision(v)
}

// GetRevisionId returns the RevisionId field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetRevisionId() string {
	type getResult interface {
		GetRevisionId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetRevisionId()
	} else {
		var de string
		return de
	}
}

// GetRevisionIdOk returns a tuple with the RevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetRevisionIdOk() (*string, bool) {
	type getResult interface {
		GetRevisionIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetRevisionIdOk()
	} else {
		return nil, false
	}
}

// HasRevisionId returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasRevisionId() bool {
	type getResult interface {
		HasRevisionId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasRevisionId()
	} else {
		return false
	}
}

// SetRevisionId gets a reference to the given string and assigns it to the RevisionId field.
func (o *BTPublicationInfoItem) SetRevisionId(v string) {
	type getResult interface {
		SetRevisionId(v string)
	}

	o.GetActualInstance().(getResult).SetRevisionId(v)
}

// GetState returns the State field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetState() int32 {
	type getResult interface {
		GetState() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetState()
	} else {
		var de int32
		return de
	}
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetStateOk() (*int32, bool) {
	type getResult interface {
		GetStateOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetStateOk()
	} else {
		return nil, false
	}
}

// HasState returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasState() bool {
	type getResult interface {
		HasState() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasState()
	} else {
		return false
	}
}

// SetState gets a reference to the given int32 and assigns it to the State field.
func (o *BTPublicationInfoItem) SetState(v int32) {
	type getResult interface {
		SetState(v int32)
	}

	o.GetActualInstance().(getResult).SetState(v)
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetVersionId() string {
	type getResult interface {
		GetVersionId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVersionId()
	} else {
		var de string
		return de
	}
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetVersionIdOk() (*string, bool) {
	type getResult interface {
		GetVersionIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVersionIdOk()
	} else {
		return nil, false
	}
}

// HasVersionId returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasVersionId() bool {
	type getResult interface {
		HasVersionId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasVersionId()
	} else {
		return false
	}
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *BTPublicationInfoItem) SetVersionId(v string) {
	type getResult interface {
		SetVersionId(v string)
	}

	o.GetActualInstance().(getResult).SetVersionId(v)
}

// GetVersionName returns the VersionName field value if set, zero value otherwise.
func (o *BTPublicationInfoItem) GetVersionName() string {
	type getResult interface {
		GetVersionName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVersionName()
	} else {
		var de string
		return de
	}
}

// GetVersionNameOk returns a tuple with the VersionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfoItem) GetVersionNameOk() (*string, bool) {
	type getResult interface {
		GetVersionNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVersionNameOk()
	} else {
		return nil, false
	}
}

// HasVersionName returns a boolean if a field has been set.
func (o *BTPublicationInfoItem) HasVersionName() bool {
	type getResult interface {
		HasVersionName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasVersionName()
	} else {
		return false
	}
}

// SetVersionName gets a reference to the given string and assigns it to the VersionName field.
func (o *BTPublicationInfoItem) SetVersionName(v string) {
	type getResult interface {
		SetVersionName(v string)
	}

	o.GetActualInstance().(getResult).SetVersionName(v)
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *BTPublicationInfoItem) UnmarshalJSON(data []byte) error {
	var err error
	// use discriminator value to speed up the lookup
	var jsonDict map[string]interface{}
	err = newStrictDecoder(data).Decode(&jsonDict)
	if err != nil {
		return fmt.Errorf("failed to unmarshal JSON into map for the discriminator lookup")
	}

	// check if the discriminator value is 'publication-blob-item'
	if jsonDict["jsonType"] == "publication-blob-item" {
		// try to unmarshal JSON data into BlobItem
		var qr *BlobItem
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPublicationInfoItem = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPublicationInfoItem = nil
			return fmt.Errorf("failed to unmarshal BTPublicationInfoItem as BlobItem: %s", err.Error())
		}
	}

	var qtx *base_BTPublicationInfoItem
	err = json.Unmarshal(data, &qtx)
	if err == nil {
		dst.implBTPublicationInfoItem = qtx
		return nil // data stored in dst.base_BTPublicationInfoItem, return on the first match
	} else {
		dst.implBTPublicationInfoItem = nil
		return fmt.Errorf("failed to unmarshal BTPublicationInfoItem as base_BTPublicationInfoItem: %s", err.Error())
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BTPublicationInfoItem) MarshalJSON() ([]byte, error) {
	ret := src.GetActualInstance()
	if ret == nil {
		return nil, nil // no data in oneOf schemas
	} else {
		return json.Marshal(&ret)
	}
}

// Get the actual instance
func (obj *BTPublicationInfoItem) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	return obj.implBTPublicationInfoItem
}

type NullableBTPublicationInfoItem struct {
	value *BTPublicationInfoItem
	isSet bool
}

func (v NullableBTPublicationInfoItem) Get() *BTPublicationInfoItem {
	return v.value
}

func (v *NullableBTPublicationInfoItem) Set(val *BTPublicationInfoItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBTPublicationInfoItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBTPublicationInfoItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTPublicationInfoItem(val *BTPublicationInfoItem) *NullableBTPublicationInfoItem {
	return &NullableBTPublicationInfoItem{value: val, isSet: true}
}

func (v NullableBTPublicationInfoItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTPublicationInfoItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type base_BTPublicationInfoItem struct {
	ApplicationTarget    *BTApplicationTargetInfo `json:"applicationTarget,omitempty"`
	DataType             *string                  `json:"dataType,omitempty"`
	DocumentId           *string                  `json:"documentId,omitempty"`
	ElementId            *string                  `json:"elementId,omitempty"`
	ElementType          *GBTElementType          `json:"elementType,omitempty"`
	EncodedConfiguration *string                  `json:"encodedConfiguration,omitempty"`
	Id                   *string                  `json:"id,omitempty"`
	JsonType             string                   `json:"jsonType"`
	PartId               *string                  `json:"partId,omitempty"`
	PartName             *string                  `json:"partName,omitempty"`
	PartNumber           *string                  `json:"partNumber,omitempty"`
	Revision             *string                  `json:"revision,omitempty"`
	RevisionId           *string                  `json:"revisionId,omitempty"`
	State                *int32                   `json:"state,omitempty"`
	VersionId            *string                  `json:"versionId,omitempty"`
	VersionName          *string                  `json:"versionName,omitempty"`
}

// Newbase_BTPublicationInfoItem instantiates a new base_BTPublicationInfoItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func Newbase_BTPublicationInfoItem(jsonType string) *base_BTPublicationInfoItem {
	this := base_BTPublicationInfoItem{}
	this.JsonType = jsonType
	return &this
}

// Newbase_BTPublicationInfoItemWithDefaults instantiates a new base_BTPublicationInfoItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func Newbase_BTPublicationInfoItemWithDefaults() *base_BTPublicationInfoItem {
	this := base_BTPublicationInfoItem{}
	return &this
}

// GetApplicationTarget returns the ApplicationTarget field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetApplicationTarget() BTApplicationTargetInfo {
	if o == nil || o.ApplicationTarget == nil {
		var ret BTApplicationTargetInfo
		return ret
	}
	return *o.ApplicationTarget
}

// GetApplicationTargetOk returns a tuple with the ApplicationTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetApplicationTargetOk() (*BTApplicationTargetInfo, bool) {
	if o == nil || o.ApplicationTarget == nil {
		return nil, false
	}
	return o.ApplicationTarget, true
}

// HasApplicationTarget returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasApplicationTarget() bool {
	if o != nil && o.ApplicationTarget != nil {
		return true
	}

	return false
}

// SetApplicationTarget gets a reference to the given BTApplicationTargetInfo and assigns it to the ApplicationTarget field.
func (o *base_BTPublicationInfoItem) SetApplicationTarget(v BTApplicationTargetInfo) {
	o.ApplicationTarget = &v
}

// GetDataType returns the DataType field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetDataType() string {
	if o == nil || o.DataType == nil {
		var ret string
		return ret
	}
	return *o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetDataTypeOk() (*string, bool) {
	if o == nil || o.DataType == nil {
		return nil, false
	}
	return o.DataType, true
}

// HasDataType returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasDataType() bool {
	if o != nil && o.DataType != nil {
		return true
	}

	return false
}

// SetDataType gets a reference to the given string and assigns it to the DataType field.
func (o *base_BTPublicationInfoItem) SetDataType(v string) {
	o.DataType = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetDocumentId() string {
	if o == nil || o.DocumentId == nil {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetDocumentIdOk() (*string, bool) {
	if o == nil || o.DocumentId == nil {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasDocumentId() bool {
	if o != nil && o.DocumentId != nil {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *base_BTPublicationInfoItem) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetElementId() string {
	if o == nil || o.ElementId == nil {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetElementIdOk() (*string, bool) {
	if o == nil || o.ElementId == nil {
		return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasElementId() bool {
	if o != nil && o.ElementId != nil {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *base_BTPublicationInfoItem) SetElementId(v string) {
	o.ElementId = &v
}

// GetElementType returns the ElementType field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetElementType() GBTElementType {
	if o == nil || o.ElementType == nil {
		var ret GBTElementType
		return ret
	}
	return *o.ElementType
}

// GetElementTypeOk returns a tuple with the ElementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetElementTypeOk() (*GBTElementType, bool) {
	if o == nil || o.ElementType == nil {
		return nil, false
	}
	return o.ElementType, true
}

// HasElementType returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasElementType() bool {
	if o != nil && o.ElementType != nil {
		return true
	}

	return false
}

// SetElementType gets a reference to the given GBTElementType and assigns it to the ElementType field.
func (o *base_BTPublicationInfoItem) SetElementType(v GBTElementType) {
	o.ElementType = &v
}

// GetEncodedConfiguration returns the EncodedConfiguration field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetEncodedConfiguration() string {
	if o == nil || o.EncodedConfiguration == nil {
		var ret string
		return ret
	}
	return *o.EncodedConfiguration
}

// GetEncodedConfigurationOk returns a tuple with the EncodedConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetEncodedConfigurationOk() (*string, bool) {
	if o == nil || o.EncodedConfiguration == nil {
		return nil, false
	}
	return o.EncodedConfiguration, true
}

// HasEncodedConfiguration returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasEncodedConfiguration() bool {
	if o != nil && o.EncodedConfiguration != nil {
		return true
	}

	return false
}

// SetEncodedConfiguration gets a reference to the given string and assigns it to the EncodedConfiguration field.
func (o *base_BTPublicationInfoItem) SetEncodedConfiguration(v string) {
	o.EncodedConfiguration = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *base_BTPublicationInfoItem) SetId(v string) {
	o.Id = &v
}

// GetJsonType returns the JsonType field value
func (o *base_BTPublicationInfoItem) GetJsonType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JsonType
}

// GetJsonTypeOk returns a tuple with the JsonType field value
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetJsonTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JsonType, true
}

// SetJsonType sets field value
func (o *base_BTPublicationInfoItem) SetJsonType(v string) {
	o.JsonType = v
}

// GetPartId returns the PartId field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetPartId() string {
	if o == nil || o.PartId == nil {
		var ret string
		return ret
	}
	return *o.PartId
}

// GetPartIdOk returns a tuple with the PartId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetPartIdOk() (*string, bool) {
	if o == nil || o.PartId == nil {
		return nil, false
	}
	return o.PartId, true
}

// HasPartId returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasPartId() bool {
	if o != nil && o.PartId != nil {
		return true
	}

	return false
}

// SetPartId gets a reference to the given string and assigns it to the PartId field.
func (o *base_BTPublicationInfoItem) SetPartId(v string) {
	o.PartId = &v
}

// GetPartName returns the PartName field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetPartName() string {
	if o == nil || o.PartName == nil {
		var ret string
		return ret
	}
	return *o.PartName
}

// GetPartNameOk returns a tuple with the PartName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetPartNameOk() (*string, bool) {
	if o == nil || o.PartName == nil {
		return nil, false
	}
	return o.PartName, true
}

// HasPartName returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasPartName() bool {
	if o != nil && o.PartName != nil {
		return true
	}

	return false
}

// SetPartName gets a reference to the given string and assigns it to the PartName field.
func (o *base_BTPublicationInfoItem) SetPartName(v string) {
	o.PartName = &v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetPartNumber() string {
	if o == nil || o.PartNumber == nil {
		var ret string
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetPartNumberOk() (*string, bool) {
	if o == nil || o.PartNumber == nil {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasPartNumber() bool {
	if o != nil && o.PartNumber != nil {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *base_BTPublicationInfoItem) SetPartNumber(v string) {
	o.PartNumber = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetRevision() string {
	if o == nil || o.Revision == nil {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetRevisionOk() (*string, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *base_BTPublicationInfoItem) SetRevision(v string) {
	o.Revision = &v
}

// GetRevisionId returns the RevisionId field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetRevisionId() string {
	if o == nil || o.RevisionId == nil {
		var ret string
		return ret
	}
	return *o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetRevisionIdOk() (*string, bool) {
	if o == nil || o.RevisionId == nil {
		return nil, false
	}
	return o.RevisionId, true
}

// HasRevisionId returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasRevisionId() bool {
	if o != nil && o.RevisionId != nil {
		return true
	}

	return false
}

// SetRevisionId gets a reference to the given string and assigns it to the RevisionId field.
func (o *base_BTPublicationInfoItem) SetRevisionId(v string) {
	o.RevisionId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetState() int32 {
	if o == nil || o.State == nil {
		var ret int32
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetStateOk() (*int32, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given int32 and assigns it to the State field.
func (o *base_BTPublicationInfoItem) SetState(v int32) {
	o.State = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetVersionId() string {
	if o == nil || o.VersionId == nil {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetVersionIdOk() (*string, bool) {
	if o == nil || o.VersionId == nil {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasVersionId() bool {
	if o != nil && o.VersionId != nil {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *base_BTPublicationInfoItem) SetVersionId(v string) {
	o.VersionId = &v
}

// GetVersionName returns the VersionName field value if set, zero value otherwise.
func (o *base_BTPublicationInfoItem) GetVersionName() string {
	if o == nil || o.VersionName == nil {
		var ret string
		return ret
	}
	return *o.VersionName
}

// GetVersionNameOk returns a tuple with the VersionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfoItem) GetVersionNameOk() (*string, bool) {
	if o == nil || o.VersionName == nil {
		return nil, false
	}
	return o.VersionName, true
}

// HasVersionName returns a boolean if a field has been set.
func (o *base_BTPublicationInfoItem) HasVersionName() bool {
	if o != nil && o.VersionName != nil {
		return true
	}

	return false
}

// SetVersionName gets a reference to the given string and assigns it to the VersionName field.
func (o *base_BTPublicationInfoItem) SetVersionName(v string) {
	o.VersionName = &v
}

func (o base_BTPublicationInfoItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationTarget != nil {
		toSerialize["applicationTarget"] = o.ApplicationTarget
	}
	if o.DataType != nil {
		toSerialize["dataType"] = o.DataType
	}
	if o.DocumentId != nil {
		toSerialize["documentId"] = o.DocumentId
	}
	if o.ElementId != nil {
		toSerialize["elementId"] = o.ElementId
	}
	if o.ElementType != nil {
		toSerialize["elementType"] = o.ElementType
	}
	if o.EncodedConfiguration != nil {
		toSerialize["encodedConfiguration"] = o.EncodedConfiguration
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["jsonType"] = o.JsonType
	}
	if o.PartId != nil {
		toSerialize["partId"] = o.PartId
	}
	if o.PartName != nil {
		toSerialize["partName"] = o.PartName
	}
	if o.PartNumber != nil {
		toSerialize["partNumber"] = o.PartNumber
	}
	if o.Revision != nil {
		toSerialize["revision"] = o.Revision
	}
	if o.RevisionId != nil {
		toSerialize["revisionId"] = o.RevisionId
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.VersionId != nil {
		toSerialize["versionId"] = o.VersionId
	}
	if o.VersionName != nil {
		toSerialize["versionName"] = o.VersionName
	}
	return json.Marshal(toSerialize)
}
