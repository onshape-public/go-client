/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTTaskListResponse struct for BTTaskListResponse
type BTTaskListResponse struct {
	// URI for current page of resources.
	Href *string `json:"href,omitempty"`
	// Array of items in the current page.
	Items []BTTaskInfo `json:"items,omitempty"`
	// URI for next page of the resources if more are available.
	Next *string `json:"next,omitempty"`
	// URI for previous page of the resources.
	Previous  *string          `json:"previous,omitempty"`
	TaskTypes []BTTaskTypeInfo `json:"taskTypes,omitempty"`
}

// NewBTTaskListResponse instantiates a new BTTaskListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTTaskListResponse() *BTTaskListResponse {
	this := BTTaskListResponse{}
	return &this
}

// NewBTTaskListResponseWithDefaults instantiates a new BTTaskListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTTaskListResponseWithDefaults() *BTTaskListResponse {
	this := BTTaskListResponse{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTTaskListResponse) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskListResponse) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTTaskListResponse) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTTaskListResponse) SetHref(v string) {
	o.Href = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *BTTaskListResponse) GetItems() []BTTaskInfo {
	if o == nil || o.Items == nil {
		var ret []BTTaskInfo
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskListResponse) GetItemsOk() ([]BTTaskInfo, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *BTTaskListResponse) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []BTTaskInfo and assigns it to the Items field.
func (o *BTTaskListResponse) SetItems(v []BTTaskInfo) {
	o.Items = v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *BTTaskListResponse) GetNext() string {
	if o == nil || o.Next == nil {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskListResponse) GetNextOk() (*string, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *BTTaskListResponse) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *BTTaskListResponse) SetNext(v string) {
	o.Next = &v
}

// GetPrevious returns the Previous field value if set, zero value otherwise.
func (o *BTTaskListResponse) GetPrevious() string {
	if o == nil || o.Previous == nil {
		var ret string
		return ret
	}
	return *o.Previous
}

// GetPreviousOk returns a tuple with the Previous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskListResponse) GetPreviousOk() (*string, bool) {
	if o == nil || o.Previous == nil {
		return nil, false
	}
	return o.Previous, true
}

// HasPrevious returns a boolean if a field has been set.
func (o *BTTaskListResponse) HasPrevious() bool {
	if o != nil && o.Previous != nil {
		return true
	}

	return false
}

// SetPrevious gets a reference to the given string and assigns it to the Previous field.
func (o *BTTaskListResponse) SetPrevious(v string) {
	o.Previous = &v
}

// GetTaskTypes returns the TaskTypes field value if set, zero value otherwise.
func (o *BTTaskListResponse) GetTaskTypes() []BTTaskTypeInfo {
	if o == nil || o.TaskTypes == nil {
		var ret []BTTaskTypeInfo
		return ret
	}
	return o.TaskTypes
}

// GetTaskTypesOk returns a tuple with the TaskTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTaskListResponse) GetTaskTypesOk() ([]BTTaskTypeInfo, bool) {
	if o == nil || o.TaskTypes == nil {
		return nil, false
	}
	return o.TaskTypes, true
}

// HasTaskTypes returns a boolean if a field has been set.
func (o *BTTaskListResponse) HasTaskTypes() bool {
	if o != nil && o.TaskTypes != nil {
		return true
	}

	return false
}

// SetTaskTypes gets a reference to the given []BTTaskTypeInfo and assigns it to the TaskTypes field.
func (o *BTTaskListResponse) SetTaskTypes(v []BTTaskTypeInfo) {
	o.TaskTypes = v
}

func (o BTTaskListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Next != nil {
		toSerialize["next"] = o.Next
	}
	if o.Previous != nil {
		toSerialize["previous"] = o.Previous
	}
	if o.TaskTypes != nil {
		toSerialize["taskTypes"] = o.TaskTypes
	}
	return json.Marshal(toSerialize)
}

type NullableBTTaskListResponse struct {
	value *BTTaskListResponse
	isSet bool
}

func (v NullableBTTaskListResponse) Get() *BTTaskListResponse {
	return v.value
}

func (v *NullableBTTaskListResponse) Set(val *BTTaskListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBTTaskListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBTTaskListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTTaskListResponse(val *BTTaskListResponse) *NullableBTTaskListResponse {
	return &NullableBTTaskListResponse{value: val, isSet: true}
}

func (v NullableBTTaskListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTTaskListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
