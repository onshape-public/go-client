/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTComputedPartPropertyConfig struct for BTComputedPartPropertyConfig
type BTComputedPartPropertyConfig struct {
	ComputedPartPropertySpecFunction   *string `json:"computedPartPropertySpecFunction,omitempty"`
	ComputedPartPropertySpecNamespace  *string `json:"computedPartPropertySpecNamespace,omitempty"`
	ComputedPropertyFunctionReturnType *int32  `json:"computedPropertyFunctionReturnType,omitempty"`
	PropertyFunctionDocumentId         *string `json:"propertyFunctionDocumentId,omitempty"`
}

// NewBTComputedPartPropertyConfig instantiates a new BTComputedPartPropertyConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTComputedPartPropertyConfig() *BTComputedPartPropertyConfig {
	this := BTComputedPartPropertyConfig{}
	return &this
}

// NewBTComputedPartPropertyConfigWithDefaults instantiates a new BTComputedPartPropertyConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTComputedPartPropertyConfigWithDefaults() *BTComputedPartPropertyConfig {
	this := BTComputedPartPropertyConfig{}
	return &this
}

// GetComputedPartPropertySpecFunction returns the ComputedPartPropertySpecFunction field value if set, zero value otherwise.
func (o *BTComputedPartPropertyConfig) GetComputedPartPropertySpecFunction() string {
	if o == nil || o.ComputedPartPropertySpecFunction == nil {
		var ret string
		return ret
	}
	return *o.ComputedPartPropertySpecFunction
}

// GetComputedPartPropertySpecFunctionOk returns a tuple with the ComputedPartPropertySpecFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTComputedPartPropertyConfig) GetComputedPartPropertySpecFunctionOk() (*string, bool) {
	if o == nil || o.ComputedPartPropertySpecFunction == nil {
		return nil, false
	}
	return o.ComputedPartPropertySpecFunction, true
}

// HasComputedPartPropertySpecFunction returns a boolean if a field has been set.
func (o *BTComputedPartPropertyConfig) HasComputedPartPropertySpecFunction() bool {
	if o != nil && o.ComputedPartPropertySpecFunction != nil {
		return true
	}

	return false
}

// SetComputedPartPropertySpecFunction gets a reference to the given string and assigns it to the ComputedPartPropertySpecFunction field.
func (o *BTComputedPartPropertyConfig) SetComputedPartPropertySpecFunction(v string) {
	o.ComputedPartPropertySpecFunction = &v
}

// GetComputedPartPropertySpecNamespace returns the ComputedPartPropertySpecNamespace field value if set, zero value otherwise.
func (o *BTComputedPartPropertyConfig) GetComputedPartPropertySpecNamespace() string {
	if o == nil || o.ComputedPartPropertySpecNamespace == nil {
		var ret string
		return ret
	}
	return *o.ComputedPartPropertySpecNamespace
}

// GetComputedPartPropertySpecNamespaceOk returns a tuple with the ComputedPartPropertySpecNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTComputedPartPropertyConfig) GetComputedPartPropertySpecNamespaceOk() (*string, bool) {
	if o == nil || o.ComputedPartPropertySpecNamespace == nil {
		return nil, false
	}
	return o.ComputedPartPropertySpecNamespace, true
}

// HasComputedPartPropertySpecNamespace returns a boolean if a field has been set.
func (o *BTComputedPartPropertyConfig) HasComputedPartPropertySpecNamespace() bool {
	if o != nil && o.ComputedPartPropertySpecNamespace != nil {
		return true
	}

	return false
}

// SetComputedPartPropertySpecNamespace gets a reference to the given string and assigns it to the ComputedPartPropertySpecNamespace field.
func (o *BTComputedPartPropertyConfig) SetComputedPartPropertySpecNamespace(v string) {
	o.ComputedPartPropertySpecNamespace = &v
}

// GetComputedPropertyFunctionReturnType returns the ComputedPropertyFunctionReturnType field value if set, zero value otherwise.
func (o *BTComputedPartPropertyConfig) GetComputedPropertyFunctionReturnType() int32 {
	if o == nil || o.ComputedPropertyFunctionReturnType == nil {
		var ret int32
		return ret
	}
	return *o.ComputedPropertyFunctionReturnType
}

// GetComputedPropertyFunctionReturnTypeOk returns a tuple with the ComputedPropertyFunctionReturnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTComputedPartPropertyConfig) GetComputedPropertyFunctionReturnTypeOk() (*int32, bool) {
	if o == nil || o.ComputedPropertyFunctionReturnType == nil {
		return nil, false
	}
	return o.ComputedPropertyFunctionReturnType, true
}

// HasComputedPropertyFunctionReturnType returns a boolean if a field has been set.
func (o *BTComputedPartPropertyConfig) HasComputedPropertyFunctionReturnType() bool {
	if o != nil && o.ComputedPropertyFunctionReturnType != nil {
		return true
	}

	return false
}

// SetComputedPropertyFunctionReturnType gets a reference to the given int32 and assigns it to the ComputedPropertyFunctionReturnType field.
func (o *BTComputedPartPropertyConfig) SetComputedPropertyFunctionReturnType(v int32) {
	o.ComputedPropertyFunctionReturnType = &v
}

// GetPropertyFunctionDocumentId returns the PropertyFunctionDocumentId field value if set, zero value otherwise.
func (o *BTComputedPartPropertyConfig) GetPropertyFunctionDocumentId() string {
	if o == nil || o.PropertyFunctionDocumentId == nil {
		var ret string
		return ret
	}
	return *o.PropertyFunctionDocumentId
}

// GetPropertyFunctionDocumentIdOk returns a tuple with the PropertyFunctionDocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTComputedPartPropertyConfig) GetPropertyFunctionDocumentIdOk() (*string, bool) {
	if o == nil || o.PropertyFunctionDocumentId == nil {
		return nil, false
	}
	return o.PropertyFunctionDocumentId, true
}

// HasPropertyFunctionDocumentId returns a boolean if a field has been set.
func (o *BTComputedPartPropertyConfig) HasPropertyFunctionDocumentId() bool {
	if o != nil && o.PropertyFunctionDocumentId != nil {
		return true
	}

	return false
}

// SetPropertyFunctionDocumentId gets a reference to the given string and assigns it to the PropertyFunctionDocumentId field.
func (o *BTComputedPartPropertyConfig) SetPropertyFunctionDocumentId(v string) {
	o.PropertyFunctionDocumentId = &v
}

func (o BTComputedPartPropertyConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ComputedPartPropertySpecFunction != nil {
		toSerialize["computedPartPropertySpecFunction"] = o.ComputedPartPropertySpecFunction
	}
	if o.ComputedPartPropertySpecNamespace != nil {
		toSerialize["computedPartPropertySpecNamespace"] = o.ComputedPartPropertySpecNamespace
	}
	if o.ComputedPropertyFunctionReturnType != nil {
		toSerialize["computedPropertyFunctionReturnType"] = o.ComputedPropertyFunctionReturnType
	}
	if o.PropertyFunctionDocumentId != nil {
		toSerialize["propertyFunctionDocumentId"] = o.PropertyFunctionDocumentId
	}
	return json.Marshal(toSerialize)
}

type NullableBTComputedPartPropertyConfig struct {
	value *BTComputedPartPropertyConfig
	isSet bool
}

func (v NullableBTComputedPartPropertyConfig) Get() *BTComputedPartPropertyConfig {
	return v.value
}

func (v *NullableBTComputedPartPropertyConfig) Set(val *BTComputedPartPropertyConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableBTComputedPartPropertyConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableBTComputedPartPropertyConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTComputedPartPropertyConfig(val *BTComputedPartPropertyConfig) *NullableBTComputedPartPropertyConfig {
	return &NullableBTComputedPartPropertyConfig{value: val, isSet: true}
}

func (v NullableBTComputedPartPropertyConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTComputedPartPropertyConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
