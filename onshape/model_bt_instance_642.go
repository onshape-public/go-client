/*
Onshape REST API

The Onshape REST API consumed by all client. # Authorization The simplest way to authorize and enable the **Try it out** functionality is to sign in to Onshape and use the current session. The **Authorize** button enables other authorization techniques. To ensure the current session isn't used when trying other authentication techniques, make sure to remove the Onshape cookie as per the instructions for your particular browser. Alternatively, a private or incognito window may be used. Here's [how to remove a specific cookie on Chrome](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site). - **Current Session** authorization is enabled by default if the browser is already signed in to [Onshape](/). - **OAuth2** authorization uses an Onshape OAuth2 app created on the [Onshape Developer Portal](https://dev-portal.onshape.com/oauthApps). The redirect URL field should include `https://cad.onshape.com/glassworks/explorer/oauth2-redirect.html`. - **API Key** authorization using basic authentication is also available. The keys can be generated in the [Onshape Developer Portal](https://dev-portal.onshape.com/keys). In the authentication dialog, enter the access key in the `Username` field, and enter the secret key in the `Password` field. Basic authentication should only be used during the development process since sharing API Keys provides the same level of access as a username and password.

API version: 1.171.24257-687de06de652
Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
	"fmt"
)

// BTInstance642 - struct for BTInstance642
type BTInstance642 struct {
	implBTInstance642 interface{}
}

// BTPartInstance81AsBTInstance642 is a convenience function that returns BTPartInstance81 wrapped in BTInstance642
func (o *BTPartInstance81) AsBTInstance642() *BTInstance642 {
	return &BTInstance642{o}
}

// BTAssemblyInstance947AsBTInstance642 is a convenience function that returns BTAssemblyInstance947 wrapped in BTInstance642
func (o *BTAssemblyInstance947) AsBTInstance642() *BTInstance642 {
	return &BTInstance642{o}
}

// NewBTInstance642 instantiates a new BTInstance642 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTInstance642() *BTInstance642 {
	this := BTInstance642{Newbase_BTInstance642()}
	return &this
}

// NewBTInstance642WithDefaults instantiates a new BTInstance642 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTInstance642WithDefaults() *BTInstance642 {
	this := BTInstance642{Newbase_BTInstance642WithDefaults()}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTInstance642) GetBtType() string {
	type getResult interface {
		GetBtType() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtType()
	} else {
		var de string
		return de
	}
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetBtTypeOk() (*string, bool) {
	type getResult interface {
		GetBtTypeOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtTypeOk()
	} else {
		return nil, false
	}
}

// HasBtType returns a boolean if a field has been set.
func (o *BTInstance642) HasBtType() bool {
	type getResult interface {
		HasBtType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasBtType()
	} else {
		return false
	}
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTInstance642) SetBtType(v string) {
	type getResult interface {
		SetBtType(v string)
	}

	o.GetActualInstance().(getResult).SetBtType(v)
}

// GetImportMicroversion returns the ImportMicroversion field value if set, zero value otherwise.
func (o *BTInstance642) GetImportMicroversion() string {
	type getResult interface {
		GetImportMicroversion() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetImportMicroversion()
	} else {
		var de string
		return de
	}
}

// GetImportMicroversionOk returns a tuple with the ImportMicroversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetImportMicroversionOk() (*string, bool) {
	type getResult interface {
		GetImportMicroversionOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetImportMicroversionOk()
	} else {
		return nil, false
	}
}

// HasImportMicroversion returns a boolean if a field has been set.
func (o *BTInstance642) HasImportMicroversion() bool {
	type getResult interface {
		HasImportMicroversion() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasImportMicroversion()
	} else {
		return false
	}
}

// SetImportMicroversion gets a reference to the given string and assigns it to the ImportMicroversion field.
func (o *BTInstance642) SetImportMicroversion(v string) {
	type getResult interface {
		SetImportMicroversion(v string)
	}

	o.GetActualInstance().(getResult).SetImportMicroversion(v)
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *BTInstance642) GetNodeId() string {
	type getResult interface {
		GetNodeId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNodeId()
	} else {
		var de string
		return de
	}
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetNodeIdOk() (*string, bool) {
	type getResult interface {
		GetNodeIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNodeIdOk()
	} else {
		return nil, false
	}
}

// HasNodeId returns a boolean if a field has been set.
func (o *BTInstance642) HasNodeId() bool {
	type getResult interface {
		HasNodeId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasNodeId()
	} else {
		return false
	}
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *BTInstance642) SetNodeId(v string) {
	type getResult interface {
		SetNodeId(v string)
	}

	o.GetActualInstance().(getResult).SetNodeId(v)
}

// GetAssemblyInstance returns the AssemblyInstance field value if set, zero value otherwise.
func (o *BTInstance642) GetAssemblyInstance() bool {
	type getResult interface {
		GetAssemblyInstance() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetAssemblyInstance()
	} else {
		var de bool
		return de
	}
}

// GetAssemblyInstanceOk returns a tuple with the AssemblyInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetAssemblyInstanceOk() (*bool, bool) {
	type getResult interface {
		GetAssemblyInstanceOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetAssemblyInstanceOk()
	} else {
		return nil, false
	}
}

// HasAssemblyInstance returns a boolean if a field has been set.
func (o *BTInstance642) HasAssemblyInstance() bool {
	type getResult interface {
		HasAssemblyInstance() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasAssemblyInstance()
	} else {
		return false
	}
}

// SetAssemblyInstance gets a reference to the given bool and assigns it to the AssemblyInstance field.
func (o *BTInstance642) SetAssemblyInstance(v bool) {
	type getResult interface {
		SetAssemblyInstance(v bool)
	}

	o.GetActualInstance().(getResult).SetAssemblyInstance(v)
}

// GetAssemblyPattern returns the AssemblyPattern field value if set, zero value otherwise.
func (o *BTInstance642) GetAssemblyPattern() bool {
	type getResult interface {
		GetAssemblyPattern() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetAssemblyPattern()
	} else {
		var de bool
		return de
	}
}

// GetAssemblyPatternOk returns a tuple with the AssemblyPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetAssemblyPatternOk() (*bool, bool) {
	type getResult interface {
		GetAssemblyPatternOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetAssemblyPatternOk()
	} else {
		return nil, false
	}
}

// HasAssemblyPattern returns a boolean if a field has been set.
func (o *BTInstance642) HasAssemblyPattern() bool {
	type getResult interface {
		HasAssemblyPattern() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasAssemblyPattern()
	} else {
		return false
	}
}

// SetAssemblyPattern gets a reference to the given bool and assigns it to the AssemblyPattern field.
func (o *BTInstance642) SetAssemblyPattern(v bool) {
	type getResult interface {
		SetAssemblyPattern(v bool)
	}

	o.GetActualInstance().(getResult).SetAssemblyPattern(v)
}

// GetAssemblyReplicate returns the AssemblyReplicate field value if set, zero value otherwise.
func (o *BTInstance642) GetAssemblyReplicate() bool {
	type getResult interface {
		GetAssemblyReplicate() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetAssemblyReplicate()
	} else {
		var de bool
		return de
	}
}

// GetAssemblyReplicateOk returns a tuple with the AssemblyReplicate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetAssemblyReplicateOk() (*bool, bool) {
	type getResult interface {
		GetAssemblyReplicateOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetAssemblyReplicateOk()
	} else {
		return nil, false
	}
}

// HasAssemblyReplicate returns a boolean if a field has been set.
func (o *BTInstance642) HasAssemblyReplicate() bool {
	type getResult interface {
		HasAssemblyReplicate() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasAssemblyReplicate()
	} else {
		return false
	}
}

// SetAssemblyReplicate gets a reference to the given bool and assigns it to the AssemblyReplicate field.
func (o *BTInstance642) SetAssemblyReplicate(v bool) {
	type getResult interface {
		SetAssemblyReplicate(v bool)
	}

	o.GetActualInstance().(getResult).SetAssemblyReplicate(v)
}

// GetClonedInstance returns the ClonedInstance field value if set, zero value otherwise.
func (o *BTInstance642) GetClonedInstance() bool {
	type getResult interface {
		GetClonedInstance() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetClonedInstance()
	} else {
		var de bool
		return de
	}
}

// GetClonedInstanceOk returns a tuple with the ClonedInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetClonedInstanceOk() (*bool, bool) {
	type getResult interface {
		GetClonedInstanceOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetClonedInstanceOk()
	} else {
		return nil, false
	}
}

// HasClonedInstance returns a boolean if a field has been set.
func (o *BTInstance642) HasClonedInstance() bool {
	type getResult interface {
		HasClonedInstance() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasClonedInstance()
	} else {
		return false
	}
}

// SetClonedInstance gets a reference to the given bool and assigns it to the ClonedInstance field.
func (o *BTInstance642) SetClonedInstance(v bool) {
	type getResult interface {
		SetClonedInstance(v bool)
	}

	o.GetActualInstance().(getResult).SetClonedInstance(v)
}

// GetCustomData returns the CustomData field value if set, zero value otherwise.
func (o *BTInstance642) GetCustomData() map[string]BTReferenceCustomData1551 {
	type getResult interface {
		GetCustomData() map[string]BTReferenceCustomData1551
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCustomData()
	} else {
		var de map[string]BTReferenceCustomData1551
		return de
	}
}

// GetCustomDataOk returns a tuple with the CustomData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetCustomDataOk() (*map[string]BTReferenceCustomData1551, bool) {
	type getResult interface {
		GetCustomDataOk() (*map[string]BTReferenceCustomData1551, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCustomDataOk()
	} else {
		return nil, false
	}
}

// HasCustomData returns a boolean if a field has been set.
func (o *BTInstance642) HasCustomData() bool {
	type getResult interface {
		HasCustomData() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasCustomData()
	} else {
		return false
	}
}

// SetCustomData gets a reference to the given map[string]BTReferenceCustomData1551 and assigns it to the CustomData field.
func (o *BTInstance642) SetCustomData(v map[string]BTReferenceCustomData1551) {
	type getResult interface {
		SetCustomData(v map[string]BTReferenceCustomData1551)
	}

	o.GetActualInstance().(getResult).SetCustomData(v)
}

// GetInstanceFolder returns the InstanceFolder field value if set, zero value otherwise.
func (o *BTInstance642) GetInstanceFolder() bool {
	type getResult interface {
		GetInstanceFolder() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetInstanceFolder()
	} else {
		var de bool
		return de
	}
}

// GetInstanceFolderOk returns a tuple with the InstanceFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetInstanceFolderOk() (*bool, bool) {
	type getResult interface {
		GetInstanceFolderOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetInstanceFolderOk()
	} else {
		return nil, false
	}
}

// HasInstanceFolder returns a boolean if a field has been set.
func (o *BTInstance642) HasInstanceFolder() bool {
	type getResult interface {
		HasInstanceFolder() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasInstanceFolder()
	} else {
		return false
	}
}

// SetInstanceFolder gets a reference to the given bool and assigns it to the InstanceFolder field.
func (o *BTInstance642) SetInstanceFolder(v bool) {
	type getResult interface {
		SetInstanceFolder(v bool)
	}

	o.GetActualInstance().(getResult).SetInstanceFolder(v)
}

// GetInstanceName returns the InstanceName field value if set, zero value otherwise.
func (o *BTInstance642) GetInstanceName() string {
	type getResult interface {
		GetInstanceName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetInstanceName()
	} else {
		var de string
		return de
	}
}

// GetInstanceNameOk returns a tuple with the InstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetInstanceNameOk() (*string, bool) {
	type getResult interface {
		GetInstanceNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetInstanceNameOk()
	} else {
		return nil, false
	}
}

// HasInstanceName returns a boolean if a field has been set.
func (o *BTInstance642) HasInstanceName() bool {
	type getResult interface {
		HasInstanceName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasInstanceName()
	} else {
		return false
	}
}

// SetInstanceName gets a reference to the given string and assigns it to the InstanceName field.
func (o *BTInstance642) SetInstanceName(v string) {
	type getResult interface {
		SetInstanceName(v string)
	}

	o.GetActualInstance().(getResult).SetInstanceName(v)
}

// GetIsFlattenedPart returns the IsFlattenedPart field value if set, zero value otherwise.
func (o *BTInstance642) GetIsFlattenedPart() bool {
	type getResult interface {
		GetIsFlattenedPart() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsFlattenedPart()
	} else {
		var de bool
		return de
	}
}

// GetIsFlattenedPartOk returns a tuple with the IsFlattenedPart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetIsFlattenedPartOk() (*bool, bool) {
	type getResult interface {
		GetIsFlattenedPartOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsFlattenedPartOk()
	} else {
		return nil, false
	}
}

// HasIsFlattenedPart returns a boolean if a field has been set.
func (o *BTInstance642) HasIsFlattenedPart() bool {
	type getResult interface {
		HasIsFlattenedPart() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIsFlattenedPart()
	} else {
		return false
	}
}

// SetIsFlattenedPart gets a reference to the given bool and assigns it to the IsFlattenedPart field.
func (o *BTInstance642) SetIsFlattenedPart(v bool) {
	type getResult interface {
		SetIsFlattenedPart(v bool)
	}

	o.GetActualInstance().(getResult).SetIsFlattenedPart(v)
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *BTInstance642) GetLocked() bool {
	type getResult interface {
		GetLocked() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLocked()
	} else {
		var de bool
		return de
	}
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetLockedOk() (*bool, bool) {
	type getResult interface {
		GetLockedOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLockedOk()
	} else {
		return nil, false
	}
}

// HasLocked returns a boolean if a field has been set.
func (o *BTInstance642) HasLocked() bool {
	type getResult interface {
		HasLocked() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasLocked()
	} else {
		return false
	}
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *BTInstance642) SetLocked(v bool) {
	type getResult interface {
		SetLocked(v bool)
	}

	o.GetActualInstance().(getResult).SetLocked(v)
}

// GetParametricInstance returns the ParametricInstance field value if set, zero value otherwise.
func (o *BTInstance642) GetParametricInstance() bool {
	type getResult interface {
		GetParametricInstance() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParametricInstance()
	} else {
		var de bool
		return de
	}
}

// GetParametricInstanceOk returns a tuple with the ParametricInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetParametricInstanceOk() (*bool, bool) {
	type getResult interface {
		GetParametricInstanceOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParametricInstanceOk()
	} else {
		return nil, false
	}
}

// HasParametricInstance returns a boolean if a field has been set.
func (o *BTInstance642) HasParametricInstance() bool {
	type getResult interface {
		HasParametricInstance() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasParametricInstance()
	} else {
		return false
	}
}

// SetParametricInstance gets a reference to the given bool and assigns it to the ParametricInstance field.
func (o *BTInstance642) SetParametricInstance(v bool) {
	type getResult interface {
		SetParametricInstance(v bool)
	}

	o.GetActualInstance().(getResult).SetParametricInstance(v)
}

// GetParametricOutputInstance returns the ParametricOutputInstance field value if set, zero value otherwise.
func (o *BTInstance642) GetParametricOutputInstance() bool {
	type getResult interface {
		GetParametricOutputInstance() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParametricOutputInstance()
	} else {
		var de bool
		return de
	}
}

// GetParametricOutputInstanceOk returns a tuple with the ParametricOutputInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetParametricOutputInstanceOk() (*bool, bool) {
	type getResult interface {
		GetParametricOutputInstanceOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParametricOutputInstanceOk()
	} else {
		return nil, false
	}
}

// HasParametricOutputInstance returns a boolean if a field has been set.
func (o *BTInstance642) HasParametricOutputInstance() bool {
	type getResult interface {
		HasParametricOutputInstance() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasParametricOutputInstance()
	} else {
		return false
	}
}

// SetParametricOutputInstance gets a reference to the given bool and assigns it to the ParametricOutputInstance field.
func (o *BTInstance642) SetParametricOutputInstance(v bool) {
	type getResult interface {
		SetParametricOutputInstance(v bool)
	}

	o.GetActualInstance().(getResult).SetParametricOutputInstance(v)
}

// GetParametricPartStudioChildInstance returns the ParametricPartStudioChildInstance field value if set, zero value otherwise.
func (o *BTInstance642) GetParametricPartStudioChildInstance() bool {
	type getResult interface {
		GetParametricPartStudioChildInstance() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParametricPartStudioChildInstance()
	} else {
		var de bool
		return de
	}
}

// GetParametricPartStudioChildInstanceOk returns a tuple with the ParametricPartStudioChildInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetParametricPartStudioChildInstanceOk() (*bool, bool) {
	type getResult interface {
		GetParametricPartStudioChildInstanceOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParametricPartStudioChildInstanceOk()
	} else {
		return nil, false
	}
}

// HasParametricPartStudioChildInstance returns a boolean if a field has been set.
func (o *BTInstance642) HasParametricPartStudioChildInstance() bool {
	type getResult interface {
		HasParametricPartStudioChildInstance() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasParametricPartStudioChildInstance()
	} else {
		return false
	}
}

// SetParametricPartStudioChildInstance gets a reference to the given bool and assigns it to the ParametricPartStudioChildInstance field.
func (o *BTInstance642) SetParametricPartStudioChildInstance(v bool) {
	type getResult interface {
		SetParametricPartStudioChildInstance(v bool)
	}

	o.GetActualInstance().(getResult).SetParametricPartStudioChildInstance(v)
}

// GetParametricPartStudioInstance returns the ParametricPartStudioInstance field value if set, zero value otherwise.
func (o *BTInstance642) GetParametricPartStudioInstance() bool {
	type getResult interface {
		GetParametricPartStudioInstance() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParametricPartStudioInstance()
	} else {
		var de bool
		return de
	}
}

// GetParametricPartStudioInstanceOk returns a tuple with the ParametricPartStudioInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetParametricPartStudioInstanceOk() (*bool, bool) {
	type getResult interface {
		GetParametricPartStudioInstanceOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParametricPartStudioInstanceOk()
	} else {
		return nil, false
	}
}

// HasParametricPartStudioInstance returns a boolean if a field has been set.
func (o *BTInstance642) HasParametricPartStudioInstance() bool {
	type getResult interface {
		HasParametricPartStudioInstance() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasParametricPartStudioInstance()
	} else {
		return false
	}
}

// SetParametricPartStudioInstance gets a reference to the given bool and assigns it to the ParametricPartStudioInstance field.
func (o *BTInstance642) SetParametricPartStudioInstance(v bool) {
	type getResult interface {
		SetParametricPartStudioInstance(v bool)
	}

	o.GetActualInstance().(getResult).SetParametricPartStudioInstance(v)
}

// GetPartInstance returns the PartInstance field value if set, zero value otherwise.
func (o *BTInstance642) GetPartInstance() bool {
	type getResult interface {
		GetPartInstance() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPartInstance()
	} else {
		var de bool
		return de
	}
}

// GetPartInstanceOk returns a tuple with the PartInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetPartInstanceOk() (*bool, bool) {
	type getResult interface {
		GetPartInstanceOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPartInstanceOk()
	} else {
		return nil, false
	}
}

// HasPartInstance returns a boolean if a field has been set.
func (o *BTInstance642) HasPartInstance() bool {
	type getResult interface {
		HasPartInstance() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasPartInstance()
	} else {
		return false
	}
}

// SetPartInstance gets a reference to the given bool and assigns it to the PartInstance field.
func (o *BTInstance642) SetPartInstance(v bool) {
	type getResult interface {
		SetPartInstance(v bool)
	}

	o.GetActualInstance().(getResult).SetPartInstance(v)
}

// GetReleasable returns the Releasable field value if set, zero value otherwise.
func (o *BTInstance642) GetReleasable() bool {
	type getResult interface {
		GetReleasable() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetReleasable()
	} else {
		var de bool
		return de
	}
}

// GetReleasableOk returns a tuple with the Releasable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetReleasableOk() (*bool, bool) {
	type getResult interface {
		GetReleasableOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetReleasableOk()
	} else {
		return nil, false
	}
}

// HasReleasable returns a boolean if a field has been set.
func (o *BTInstance642) HasReleasable() bool {
	type getResult interface {
		HasReleasable() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasReleasable()
	} else {
		return false
	}
}

// SetReleasable gets a reference to the given bool and assigns it to the Releasable field.
func (o *BTInstance642) SetReleasable(v bool) {
	type getResult interface {
		SetReleasable(v bool)
	}

	o.GetActualInstance().(getResult).SetReleasable(v)
}

// GetRevisionCustomData returns the RevisionCustomData field value if set, zero value otherwise.
func (o *BTInstance642) GetRevisionCustomData() BTRevisionCustomData2090 {
	type getResult interface {
		GetRevisionCustomData() BTRevisionCustomData2090
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetRevisionCustomData()
	} else {
		var de BTRevisionCustomData2090
		return de
	}
}

// GetRevisionCustomDataOk returns a tuple with the RevisionCustomData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetRevisionCustomDataOk() (*BTRevisionCustomData2090, bool) {
	type getResult interface {
		GetRevisionCustomDataOk() (*BTRevisionCustomData2090, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetRevisionCustomDataOk()
	} else {
		return nil, false
	}
}

// HasRevisionCustomData returns a boolean if a field has been set.
func (o *BTInstance642) HasRevisionCustomData() bool {
	type getResult interface {
		HasRevisionCustomData() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasRevisionCustomData()
	} else {
		return false
	}
}

// SetRevisionCustomData gets a reference to the given BTRevisionCustomData2090 and assigns it to the RevisionCustomData field.
func (o *BTInstance642) SetRevisionCustomData(v BTRevisionCustomData2090) {
	type getResult interface {
		SetRevisionCustomData(v BTRevisionCustomData2090)
	}

	o.GetActualInstance().(getResult).SetRevisionCustomData(v)
}

// GetStandardContent returns the StandardContent field value if set, zero value otherwise.
func (o *BTInstance642) GetStandardContent() bool {
	type getResult interface {
		GetStandardContent() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetStandardContent()
	} else {
		var de bool
		return de
	}
}

// GetStandardContentOk returns a tuple with the StandardContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetStandardContentOk() (*bool, bool) {
	type getResult interface {
		GetStandardContentOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetStandardContentOk()
	} else {
		return nil, false
	}
}

// HasStandardContent returns a boolean if a field has been set.
func (o *BTInstance642) HasStandardContent() bool {
	type getResult interface {
		HasStandardContent() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasStandardContent()
	} else {
		return false
	}
}

// SetStandardContent gets a reference to the given bool and assigns it to the StandardContent field.
func (o *BTInstance642) SetStandardContent(v bool) {
	type getResult interface {
		SetStandardContent(v bool)
	}

	o.GetActualInstance().(getResult).SetStandardContent(v)
}

// GetStandardContentParametersId returns the StandardContentParametersId field value if set, zero value otherwise.
func (o *BTInstance642) GetStandardContentParametersId() string {
	type getResult interface {
		GetStandardContentParametersId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetStandardContentParametersId()
	} else {
		var de string
		return de
	}
}

// GetStandardContentParametersIdOk returns a tuple with the StandardContentParametersId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetStandardContentParametersIdOk() (*string, bool) {
	type getResult interface {
		GetStandardContentParametersIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetStandardContentParametersIdOk()
	} else {
		return nil, false
	}
}

// HasStandardContentParametersId returns a boolean if a field has been set.
func (o *BTInstance642) HasStandardContentParametersId() bool {
	type getResult interface {
		HasStandardContentParametersId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasStandardContentParametersId()
	} else {
		return false
	}
}

// SetStandardContentParametersId gets a reference to the given string and assigns it to the StandardContentParametersId field.
func (o *BTInstance642) SetStandardContentParametersId(v string) {
	type getResult interface {
		SetStandardContentParametersId(v string)
	}

	o.GetActualInstance().(getResult).SetStandardContentParametersId(v)
}

// GetSuppressed returns the Suppressed field value if set, zero value otherwise.
func (o *BTInstance642) GetSuppressed() bool {
	type getResult interface {
		GetSuppressed() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSuppressed()
	} else {
		var de bool
		return de
	}
}

// GetSuppressedOk returns a tuple with the Suppressed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetSuppressedOk() (*bool, bool) {
	type getResult interface {
		GetSuppressedOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSuppressedOk()
	} else {
		return nil, false
	}
}

// HasSuppressed returns a boolean if a field has been set.
func (o *BTInstance642) HasSuppressed() bool {
	type getResult interface {
		HasSuppressed() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSuppressed()
	} else {
		return false
	}
}

// SetSuppressed gets a reference to the given bool and assigns it to the Suppressed field.
func (o *BTInstance642) SetSuppressed(v bool) {
	type getResult interface {
		SetSuppressed(v bool)
	}

	o.GetActualInstance().(getResult).SetSuppressed(v)
}

// GetSuppressedFieldIndex returns the SuppressedFieldIndex field value if set, zero value otherwise.
func (o *BTInstance642) GetSuppressedFieldIndex() int32 {
	type getResult interface {
		GetSuppressedFieldIndex() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSuppressedFieldIndex()
	} else {
		var de int32
		return de
	}
}

// GetSuppressedFieldIndexOk returns a tuple with the SuppressedFieldIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetSuppressedFieldIndexOk() (*int32, bool) {
	type getResult interface {
		GetSuppressedFieldIndexOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSuppressedFieldIndexOk()
	} else {
		return nil, false
	}
}

// HasSuppressedFieldIndex returns a boolean if a field has been set.
func (o *BTInstance642) HasSuppressedFieldIndex() bool {
	type getResult interface {
		HasSuppressedFieldIndex() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSuppressedFieldIndex()
	} else {
		return false
	}
}

// SetSuppressedFieldIndex gets a reference to the given int32 and assigns it to the SuppressedFieldIndex field.
func (o *BTInstance642) SetSuppressedFieldIndex(v int32) {
	type getResult interface {
		SetSuppressedFieldIndex(v int32)
	}

	o.GetActualInstance().(getResult).SetSuppressedFieldIndex(v)
}

// GetSuppressionConfigured returns the SuppressionConfigured field value if set, zero value otherwise.
func (o *BTInstance642) GetSuppressionConfigured() bool {
	type getResult interface {
		GetSuppressionConfigured() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSuppressionConfigured()
	} else {
		var de bool
		return de
	}
}

// GetSuppressionConfiguredOk returns a tuple with the SuppressionConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetSuppressionConfiguredOk() (*bool, bool) {
	type getResult interface {
		GetSuppressionConfiguredOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSuppressionConfiguredOk()
	} else {
		return nil, false
	}
}

// HasSuppressionConfigured returns a boolean if a field has been set.
func (o *BTInstance642) HasSuppressionConfigured() bool {
	type getResult interface {
		HasSuppressionConfigured() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSuppressionConfigured()
	} else {
		return false
	}
}

// SetSuppressionConfigured gets a reference to the given bool and assigns it to the SuppressionConfigured field.
func (o *BTInstance642) SetSuppressionConfigured(v bool) {
	type getResult interface {
		SetSuppressionConfigured(v bool)
	}

	o.GetActualInstance().(getResult).SetSuppressionConfigured(v)
}

// GetSuppressionState returns the SuppressionState field value if set, zero value otherwise.
func (o *BTInstance642) GetSuppressionState() BTMSuppressionState1924 {
	type getResult interface {
		GetSuppressionState() BTMSuppressionState1924
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSuppressionState()
	} else {
		var de BTMSuppressionState1924
		return de
	}
}

// GetSuppressionStateOk returns a tuple with the SuppressionState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetSuppressionStateOk() (*BTMSuppressionState1924, bool) {
	type getResult interface {
		GetSuppressionStateOk() (*BTMSuppressionState1924, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSuppressionStateOk()
	} else {
		return nil, false
	}
}

// HasSuppressionState returns a boolean if a field has been set.
func (o *BTInstance642) HasSuppressionState() bool {
	type getResult interface {
		HasSuppressionState() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSuppressionState()
	} else {
		return false
	}
}

// SetSuppressionState gets a reference to the given BTMSuppressionState1924 and assigns it to the SuppressionState field.
func (o *BTInstance642) SetSuppressionState(v BTMSuppressionState1924) {
	type getResult interface {
		SetSuppressionState(v BTMSuppressionState1924)
	}

	o.GetActualInstance().(getResult).SetSuppressionState(v)
}

// GetValidRevisionReference returns the ValidRevisionReference field value if set, zero value otherwise.
func (o *BTInstance642) GetValidRevisionReference() bool {
	type getResult interface {
		GetValidRevisionReference() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetValidRevisionReference()
	} else {
		var de bool
		return de
	}
}

// GetValidRevisionReferenceOk returns a tuple with the ValidRevisionReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetValidRevisionReferenceOk() (*bool, bool) {
	type getResult interface {
		GetValidRevisionReferenceOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetValidRevisionReferenceOk()
	} else {
		return nil, false
	}
}

// HasValidRevisionReference returns a boolean if a field has been set.
func (o *BTInstance642) HasValidRevisionReference() bool {
	type getResult interface {
		HasValidRevisionReference() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasValidRevisionReference()
	} else {
		return false
	}
}

// SetValidRevisionReference gets a reference to the given bool and assigns it to the ValidRevisionReference field.
func (o *BTInstance642) SetValidRevisionReference(v bool) {
	type getResult interface {
		SetValidRevisionReference(v bool)
	}

	o.GetActualInstance().(getResult).SetValidRevisionReference(v)
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *BTInstance642) GetVersion() int32 {
	type getResult interface {
		GetVersion() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVersion()
	} else {
		var de int32
		return de
	}
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetVersionOk() (*int32, bool) {
	type getResult interface {
		GetVersionOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVersionOk()
	} else {
		return nil, false
	}
}

// HasVersion returns a boolean if a field has been set.
func (o *BTInstance642) HasVersion() bool {
	type getResult interface {
		HasVersion() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasVersion()
	} else {
		return false
	}
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *BTInstance642) SetVersion(v int32) {
	type getResult interface {
		SetVersion(v int32)
	}

	o.GetActualInstance().(getResult).SetVersion(v)
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *BTInstance642) GetConfiguration() []BTMParameter1 {
	type getResult interface {
		GetConfiguration() []BTMParameter1
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetConfiguration()
	} else {
		var de []BTMParameter1
		return de
	}
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetConfigurationOk() ([]BTMParameter1, bool) {
	type getResult interface {
		GetConfigurationOk() ([]BTMParameter1, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetConfigurationOk()
	} else {
		return nil, false
	}
}

// HasConfiguration returns a boolean if a field has been set.
func (o *BTInstance642) HasConfiguration() bool {
	type getResult interface {
		HasConfiguration() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasConfiguration()
	} else {
		return false
	}
}

// SetConfiguration gets a reference to the given []BTMParameter1 and assigns it to the Configuration field.
func (o *BTInstance642) SetConfiguration(v []BTMParameter1) {
	type getResult interface {
		SetConfiguration(v []BTMParameter1)
	}

	o.GetActualInstance().(getResult).SetConfiguration(v)
}

// GetConfigured returns the Configured field value if set, zero value otherwise.
func (o *BTInstance642) GetConfigured() bool {
	type getResult interface {
		GetConfigured() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetConfigured()
	} else {
		var de bool
		return de
	}
}

// GetConfiguredOk returns a tuple with the Configured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetConfiguredOk() (*bool, bool) {
	type getResult interface {
		GetConfiguredOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetConfiguredOk()
	} else {
		return nil, false
	}
}

// HasConfigured returns a boolean if a field has been set.
func (o *BTInstance642) HasConfigured() bool {
	type getResult interface {
		HasConfigured() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasConfigured()
	} else {
		return false
	}
}

// SetConfigured gets a reference to the given bool and assigns it to the Configured field.
func (o *BTInstance642) SetConfigured(v bool) {
	type getResult interface {
		SetConfigured(v bool)
	}

	o.GetActualInstance().(getResult).SetConfigured(v)
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *BTInstance642) GetDocumentId() string {
	type getResult interface {
		GetDocumentId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDocumentId()
	} else {
		var de string
		return de
	}
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetDocumentIdOk() (*string, bool) {
	type getResult interface {
		GetDocumentIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDocumentIdOk()
	} else {
		return nil, false
	}
}

// HasDocumentId returns a boolean if a field has been set.
func (o *BTInstance642) HasDocumentId() bool {
	type getResult interface {
		HasDocumentId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDocumentId()
	} else {
		return false
	}
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *BTInstance642) SetDocumentId(v string) {
	type getResult interface {
		SetDocumentId(v string)
	}

	o.GetActualInstance().(getResult).SetDocumentId(v)
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *BTInstance642) GetElementId() string {
	type getResult interface {
		GetElementId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetElementId()
	} else {
		var de string
		return de
	}
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetElementIdOk() (*string, bool) {
	type getResult interface {
		GetElementIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetElementIdOk()
	} else {
		return nil, false
	}
}

// HasElementId returns a boolean if a field has been set.
func (o *BTInstance642) HasElementId() bool {
	type getResult interface {
		HasElementId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasElementId()
	} else {
		return false
	}
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *BTInstance642) SetElementId(v string) {
	type getResult interface {
		SetElementId(v string)
	}

	o.GetActualInstance().(getResult).SetElementId(v)
}

// GetElementReference returns the ElementReference field value if set, zero value otherwise.
func (o *BTInstance642) GetElementReference() BTElementReference725 {
	type getResult interface {
		GetElementReference() BTElementReference725
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetElementReference()
	} else {
		var de BTElementReference725
		return de
	}
}

// GetElementReferenceOk returns a tuple with the ElementReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetElementReferenceOk() (*BTElementReference725, bool) {
	type getResult interface {
		GetElementReferenceOk() (*BTElementReference725, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetElementReferenceOk()
	} else {
		return nil, false
	}
}

// HasElementReference returns a boolean if a field has been set.
func (o *BTInstance642) HasElementReference() bool {
	type getResult interface {
		HasElementReference() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasElementReference()
	} else {
		return false
	}
}

// SetElementReference gets a reference to the given BTElementReference725 and assigns it to the ElementReference field.
func (o *BTInstance642) SetElementReference(v BTElementReference725) {
	type getResult interface {
		SetElementReference(v BTElementReference725)
	}

	o.GetActualInstance().(getResult).SetElementReference(v)
}

// GetExternalDocumentWithVersion returns the ExternalDocumentWithVersion field value if set, zero value otherwise.
func (o *BTInstance642) GetExternalDocumentWithVersion() BTDocumentWithVersionId {
	type getResult interface {
		GetExternalDocumentWithVersion() BTDocumentWithVersionId
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetExternalDocumentWithVersion()
	} else {
		var de BTDocumentWithVersionId
		return de
	}
}

// GetExternalDocumentWithVersionOk returns a tuple with the ExternalDocumentWithVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetExternalDocumentWithVersionOk() (*BTDocumentWithVersionId, bool) {
	type getResult interface {
		GetExternalDocumentWithVersionOk() (*BTDocumentWithVersionId, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetExternalDocumentWithVersionOk()
	} else {
		return nil, false
	}
}

// HasExternalDocumentWithVersion returns a boolean if a field has been set.
func (o *BTInstance642) HasExternalDocumentWithVersion() bool {
	type getResult interface {
		HasExternalDocumentWithVersion() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasExternalDocumentWithVersion()
	} else {
		return false
	}
}

// SetExternalDocumentWithVersion gets a reference to the given BTDocumentWithVersionId and assigns it to the ExternalDocumentWithVersion field.
func (o *BTInstance642) SetExternalDocumentWithVersion(v BTDocumentWithVersionId) {
	type getResult interface {
		SetExternalDocumentWithVersion(v BTDocumentWithVersionId)
	}

	o.GetActualInstance().(getResult).SetExternalDocumentWithVersion(v)
}

// GetExternalDocumentWithVersionAndElementId returns the ExternalDocumentWithVersionAndElementId field value if set, zero value otherwise.
func (o *BTInstance642) GetExternalDocumentWithVersionAndElementId() BTDocumentWithVersionAndElementId {
	type getResult interface {
		GetExternalDocumentWithVersionAndElementId() BTDocumentWithVersionAndElementId
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetExternalDocumentWithVersionAndElementId()
	} else {
		var de BTDocumentWithVersionAndElementId
		return de
	}
}

// GetExternalDocumentWithVersionAndElementIdOk returns a tuple with the ExternalDocumentWithVersionAndElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetExternalDocumentWithVersionAndElementIdOk() (*BTDocumentWithVersionAndElementId, bool) {
	type getResult interface {
		GetExternalDocumentWithVersionAndElementIdOk() (*BTDocumentWithVersionAndElementId, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetExternalDocumentWithVersionAndElementIdOk()
	} else {
		return nil, false
	}
}

// HasExternalDocumentWithVersionAndElementId returns a boolean if a field has been set.
func (o *BTInstance642) HasExternalDocumentWithVersionAndElementId() bool {
	type getResult interface {
		HasExternalDocumentWithVersionAndElementId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasExternalDocumentWithVersionAndElementId()
	} else {
		return false
	}
}

// SetExternalDocumentWithVersionAndElementId gets a reference to the given BTDocumentWithVersionAndElementId and assigns it to the ExternalDocumentWithVersionAndElementId field.
func (o *BTInstance642) SetExternalDocumentWithVersionAndElementId(v BTDocumentWithVersionAndElementId) {
	type getResult interface {
		SetExternalDocumentWithVersionAndElementId(v BTDocumentWithVersionAndElementId)
	}

	o.GetActualInstance().(getResult).SetExternalDocumentWithVersionAndElementId(v)
}

// GetLockedState returns the LockedState field value if set, zero value otherwise.
func (o *BTInstance642) GetLockedState() BTMParameter1 {
	type getResult interface {
		GetLockedState() BTMParameter1
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLockedState()
	} else {
		var de BTMParameter1
		return de
	}
}

// GetLockedStateOk returns a tuple with the LockedState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetLockedStateOk() (*BTMParameter1, bool) {
	type getResult interface {
		GetLockedStateOk() (*BTMParameter1, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLockedStateOk()
	} else {
		return nil, false
	}
}

// HasLockedState returns a boolean if a field has been set.
func (o *BTInstance642) HasLockedState() bool {
	type getResult interface {
		HasLockedState() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasLockedState()
	} else {
		return false
	}
}

// SetLockedState gets a reference to the given BTMParameter1 and assigns it to the LockedState field.
func (o *BTInstance642) SetLockedState(v BTMParameter1) {
	type getResult interface {
		SetLockedState(v BTMParameter1)
	}

	o.GetActualInstance().(getResult).SetLockedState(v)
}

// GetMicroversionId returns the MicroversionId field value if set, zero value otherwise.
func (o *BTInstance642) GetMicroversionId() BTMicroversionId366 {
	type getResult interface {
		GetMicroversionId() BTMicroversionId366
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetMicroversionId()
	} else {
		var de BTMicroversionId366
		return de
	}
}

// GetMicroversionIdOk returns a tuple with the MicroversionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetMicroversionIdOk() (*BTMicroversionId366, bool) {
	type getResult interface {
		GetMicroversionIdOk() (*BTMicroversionId366, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetMicroversionIdOk()
	} else {
		return nil, false
	}
}

// HasMicroversionId returns a boolean if a field has been set.
func (o *BTInstance642) HasMicroversionId() bool {
	type getResult interface {
		HasMicroversionId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasMicroversionId()
	} else {
		return false
	}
}

// SetMicroversionId gets a reference to the given BTMicroversionId366 and assigns it to the MicroversionId field.
func (o *BTInstance642) SetMicroversionId(v BTMicroversionId366) {
	type getResult interface {
		SetMicroversionId(v BTMicroversionId366)
	}

	o.GetActualInstance().(getResult).SetMicroversionId(v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTInstance642) GetName() string {
	type getResult interface {
		GetName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetName()
	} else {
		var de string
		return de
	}
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetNameOk() (*string, bool) {
	type getResult interface {
		GetNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNameOk()
	} else {
		return nil, false
	}
}

// HasName returns a boolean if a field has been set.
func (o *BTInstance642) HasName() bool {
	type getResult interface {
		HasName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasName()
	} else {
		return false
	}
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTInstance642) SetName(v string) {
	type getResult interface {
		SetName(v string)
	}

	o.GetActualInstance().(getResult).SetName(v)
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *BTInstance642) GetParameters() []BTMParameter1 {
	type getResult interface {
		GetParameters() []BTMParameter1
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParameters()
	} else {
		var de []BTMParameter1
		return de
	}
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetParametersOk() ([]BTMParameter1, bool) {
	type getResult interface {
		GetParametersOk() ([]BTMParameter1, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParametersOk()
	} else {
		return nil, false
	}
}

// HasParameters returns a boolean if a field has been set.
func (o *BTInstance642) HasParameters() bool {
	type getResult interface {
		HasParameters() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasParameters()
	} else {
		return false
	}
}

// SetParameters gets a reference to the given []BTMParameter1 and assigns it to the Parameters field.
func (o *BTInstance642) SetParameters(v []BTMParameter1) {
	type getResult interface {
		SetParameters(v []BTMParameter1)
	}

	o.GetActualInstance().(getResult).SetParameters(v)
}

// GetReferenceParameter returns the ReferenceParameter field value if set, zero value otherwise.
func (o *BTInstance642) GetReferenceParameter() BTMParameterReferenceWithConfiguration3028 {
	type getResult interface {
		GetReferenceParameter() BTMParameterReferenceWithConfiguration3028
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetReferenceParameter()
	} else {
		var de BTMParameterReferenceWithConfiguration3028
		return de
	}
}

// GetReferenceParameterOk returns a tuple with the ReferenceParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetReferenceParameterOk() (*BTMParameterReferenceWithConfiguration3028, bool) {
	type getResult interface {
		GetReferenceParameterOk() (*BTMParameterReferenceWithConfiguration3028, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetReferenceParameterOk()
	} else {
		return nil, false
	}
}

// HasReferenceParameter returns a boolean if a field has been set.
func (o *BTInstance642) HasReferenceParameter() bool {
	type getResult interface {
		HasReferenceParameter() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasReferenceParameter()
	} else {
		return false
	}
}

// SetReferenceParameter gets a reference to the given BTMParameterReferenceWithConfiguration3028 and assigns it to the ReferenceParameter field.
func (o *BTInstance642) SetReferenceParameter(v BTMParameterReferenceWithConfiguration3028) {
	type getResult interface {
		SetReferenceParameter(v BTMParameterReferenceWithConfiguration3028)
	}

	o.GetActualInstance().(getResult).SetReferenceParameter(v)
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *BTInstance642) GetVersionId() string {
	type getResult interface {
		GetVersionId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVersionId()
	} else {
		var de string
		return de
	}
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetVersionIdOk() (*string, bool) {
	type getResult interface {
		GetVersionIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVersionIdOk()
	} else {
		return nil, false
	}
}

// HasVersionId returns a boolean if a field has been set.
func (o *BTInstance642) HasVersionId() bool {
	type getResult interface {
		HasVersionId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasVersionId()
	} else {
		return false
	}
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *BTInstance642) SetVersionId(v string) {
	type getResult interface {
		SetVersionId(v string)
	}

	o.GetActualInstance().(getResult).SetVersionId(v)
}

// GetVersionIdIfExternal returns the VersionIdIfExternal field value if set, zero value otherwise.
func (o *BTInstance642) GetVersionIdIfExternal() string {
	type getResult interface {
		GetVersionIdIfExternal() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVersionIdIfExternal()
	} else {
		var de string
		return de
	}
}

// GetVersionIdIfExternalOk returns a tuple with the VersionIdIfExternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInstance642) GetVersionIdIfExternalOk() (*string, bool) {
	type getResult interface {
		GetVersionIdIfExternalOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetVersionIdIfExternalOk()
	} else {
		return nil, false
	}
}

// HasVersionIdIfExternal returns a boolean if a field has been set.
func (o *BTInstance642) HasVersionIdIfExternal() bool {
	type getResult interface {
		HasVersionIdIfExternal() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasVersionIdIfExternal()
	} else {
		return false
	}
}

// SetVersionIdIfExternal gets a reference to the given string and assigns it to the VersionIdIfExternal field.
func (o *BTInstance642) SetVersionIdIfExternal(v string) {
	type getResult interface {
		SetVersionIdIfExternal(v string)
	}

	o.GetActualInstance().(getResult).SetVersionIdIfExternal(v)
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *BTInstance642) UnmarshalJSON(data []byte) error {
	var err error
	// use discriminator value to speed up the lookup
	var jsonDict map[string]interface{}
	err = newStrictDecoder(data).Decode(&jsonDict)
	if err != nil {
		return fmt.Errorf("Failed to unmarshal JSON into map for the discriminator lookup.")
	}

	// check if the discriminator value is 'BTAssemblyInstance-947'
	if jsonDict["btType"] == "BTAssemblyInstance-947" {
		// try to unmarshal JSON data into BTAssemblyInstance947
		var qr *BTAssemblyInstance947
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTInstance642 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTInstance642 = nil
			return fmt.Errorf("Failed to unmarshal BTInstance642 as BTAssemblyInstance947: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTPartInstance-81'
	if jsonDict["btType"] == "BTPartInstance-81" {
		// try to unmarshal JSON data into BTPartInstance81
		var qr *BTPartInstance81
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTInstance642 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTInstance642 = nil
			return fmt.Errorf("Failed to unmarshal BTInstance642 as BTPartInstance81: %s", err.Error())
		}
	}

	var qtx *base_BTInstance642
	err = json.Unmarshal(data, &qtx)
	if err == nil {
		dst.implBTInstance642 = qtx
		return nil // data stored in dst.base_BTInstance642, return on the first match
	} else {
		dst.implBTInstance642 = nil
		return fmt.Errorf("Failed to unmarshal BTInstance642 as base_BTInstance642: %s", err.Error())
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BTInstance642) MarshalJSON() ([]byte, error) {
	ret := src.GetActualInstance()
	if ret == nil {
		return nil, nil // no data in oneOf schemas
	} else {
		return json.Marshal(&ret)
	}
}

// Get the actual instance
func (obj *BTInstance642) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	return obj.implBTInstance642
}

type NullableBTInstance642 struct {
	value *BTInstance642
	isSet bool
}

func (v NullableBTInstance642) Get() *BTInstance642 {
	return v.value
}

func (v *NullableBTInstance642) Set(val *BTInstance642) {
	v.value = val
	v.isSet = true
}

func (v NullableBTInstance642) IsSet() bool {
	return v.isSet
}

func (v *NullableBTInstance642) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTInstance642(val *BTInstance642) *NullableBTInstance642 {
	return &NullableBTInstance642{value: val, isSet: true}
}

func (v NullableBTInstance642) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTInstance642) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type base_BTInstance642 struct {
	BtType                                  *string                                     `json:"btType,omitempty"`
	ImportMicroversion                      *string                                     `json:"importMicroversion,omitempty"`
	NodeId                                  *string                                     `json:"nodeId,omitempty"`
	AssemblyInstance                        *bool                                       `json:"assemblyInstance,omitempty"`
	AssemblyPattern                         *bool                                       `json:"assemblyPattern,omitempty"`
	AssemblyReplicate                       *bool                                       `json:"assemblyReplicate,omitempty"`
	ClonedInstance                          *bool                                       `json:"clonedInstance,omitempty"`
	CustomData                              *map[string]BTReferenceCustomData1551       `json:"customData,omitempty"`
	InstanceFolder                          *bool                                       `json:"instanceFolder,omitempty"`
	InstanceName                            *string                                     `json:"instanceName,omitempty"`
	IsFlattenedPart                         *bool                                       `json:"isFlattenedPart,omitempty"`
	Locked                                  *bool                                       `json:"locked,omitempty"`
	ParametricInstance                      *bool                                       `json:"parametricInstance,omitempty"`
	ParametricOutputInstance                *bool                                       `json:"parametricOutputInstance,omitempty"`
	ParametricPartStudioChildInstance       *bool                                       `json:"parametricPartStudioChildInstance,omitempty"`
	ParametricPartStudioInstance            *bool                                       `json:"parametricPartStudioInstance,omitempty"`
	PartInstance                            *bool                                       `json:"partInstance,omitempty"`
	Releasable                              *bool                                       `json:"releasable,omitempty"`
	RevisionCustomData                      *BTRevisionCustomData2090                   `json:"revisionCustomData,omitempty"`
	StandardContent                         *bool                                       `json:"standardContent,omitempty"`
	StandardContentParametersId             *string                                     `json:"standardContentParametersId,omitempty"`
	Suppressed                              *bool                                       `json:"suppressed,omitempty"`
	SuppressedFieldIndex                    *int32                                      `json:"suppressedFieldIndex,omitempty"`
	SuppressionConfigured                   *bool                                       `json:"suppressionConfigured,omitempty"`
	SuppressionState                        *BTMSuppressionState1924                    `json:"suppressionState,omitempty"`
	ValidRevisionReference                  *bool                                       `json:"validRevisionReference,omitempty"`
	Version                                 *int32                                      `json:"version,omitempty"`
	Configuration                           []BTMParameter1                             `json:"configuration,omitempty"`
	Configured                              *bool                                       `json:"configured,omitempty"`
	DocumentId                              *string                                     `json:"documentId,omitempty"`
	ElementId                               *string                                     `json:"elementId,omitempty"`
	ElementReference                        *BTElementReference725                      `json:"elementReference,omitempty"`
	ExternalDocumentWithVersion             *BTDocumentWithVersionId                    `json:"externalDocumentWithVersion,omitempty"`
	ExternalDocumentWithVersionAndElementId *BTDocumentWithVersionAndElementId          `json:"externalDocumentWithVersionAndElementId,omitempty"`
	LockedState                             *BTMParameter1                              `json:"lockedState,omitempty"`
	MicroversionId                          *BTMicroversionId366                        `json:"microversionId,omitempty"`
	Name                                    *string                                     `json:"name,omitempty"`
	Parameters                              []BTMParameter1                             `json:"parameters,omitempty"`
	ReferenceParameter                      *BTMParameterReferenceWithConfiguration3028 `json:"referenceParameter,omitempty"`
	VersionId                               *string                                     `json:"versionId,omitempty"`
	VersionIdIfExternal                     *string                                     `json:"versionIdIfExternal,omitempty"`
}

// Newbase_BTInstance642 instantiates a new base_BTInstance642 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func Newbase_BTInstance642() *base_BTInstance642 {
	this := base_BTInstance642{}
	return &this
}

// Newbase_BTInstance642WithDefaults instantiates a new base_BTInstance642 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func Newbase_BTInstance642WithDefaults() *base_BTInstance642 {
	this := base_BTInstance642{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *base_BTInstance642) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *base_BTInstance642) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *base_BTInstance642) SetBtType(v string) {
	o.BtType = &v
}

// GetImportMicroversion returns the ImportMicroversion field value if set, zero value otherwise.
func (o *base_BTInstance642) GetImportMicroversion() string {
	if o == nil || o.ImportMicroversion == nil {
		var ret string
		return ret
	}
	return *o.ImportMicroversion
}

// GetImportMicroversionOk returns a tuple with the ImportMicroversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetImportMicroversionOk() (*string, bool) {
	if o == nil || o.ImportMicroversion == nil {
		return nil, false
	}
	return o.ImportMicroversion, true
}

// HasImportMicroversion returns a boolean if a field has been set.
func (o *base_BTInstance642) HasImportMicroversion() bool {
	if o != nil && o.ImportMicroversion != nil {
		return true
	}

	return false
}

// SetImportMicroversion gets a reference to the given string and assigns it to the ImportMicroversion field.
func (o *base_BTInstance642) SetImportMicroversion(v string) {
	o.ImportMicroversion = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *base_BTInstance642) GetNodeId() string {
	if o == nil || o.NodeId == nil {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetNodeIdOk() (*string, bool) {
	if o == nil || o.NodeId == nil {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *base_BTInstance642) HasNodeId() bool {
	if o != nil && o.NodeId != nil {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *base_BTInstance642) SetNodeId(v string) {
	o.NodeId = &v
}

// GetAssemblyInstance returns the AssemblyInstance field value if set, zero value otherwise.
func (o *base_BTInstance642) GetAssemblyInstance() bool {
	if o == nil || o.AssemblyInstance == nil {
		var ret bool
		return ret
	}
	return *o.AssemblyInstance
}

// GetAssemblyInstanceOk returns a tuple with the AssemblyInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetAssemblyInstanceOk() (*bool, bool) {
	if o == nil || o.AssemblyInstance == nil {
		return nil, false
	}
	return o.AssemblyInstance, true
}

// HasAssemblyInstance returns a boolean if a field has been set.
func (o *base_BTInstance642) HasAssemblyInstance() bool {
	if o != nil && o.AssemblyInstance != nil {
		return true
	}

	return false
}

// SetAssemblyInstance gets a reference to the given bool and assigns it to the AssemblyInstance field.
func (o *base_BTInstance642) SetAssemblyInstance(v bool) {
	o.AssemblyInstance = &v
}

// GetAssemblyPattern returns the AssemblyPattern field value if set, zero value otherwise.
func (o *base_BTInstance642) GetAssemblyPattern() bool {
	if o == nil || o.AssemblyPattern == nil {
		var ret bool
		return ret
	}
	return *o.AssemblyPattern
}

// GetAssemblyPatternOk returns a tuple with the AssemblyPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetAssemblyPatternOk() (*bool, bool) {
	if o == nil || o.AssemblyPattern == nil {
		return nil, false
	}
	return o.AssemblyPattern, true
}

// HasAssemblyPattern returns a boolean if a field has been set.
func (o *base_BTInstance642) HasAssemblyPattern() bool {
	if o != nil && o.AssemblyPattern != nil {
		return true
	}

	return false
}

// SetAssemblyPattern gets a reference to the given bool and assigns it to the AssemblyPattern field.
func (o *base_BTInstance642) SetAssemblyPattern(v bool) {
	o.AssemblyPattern = &v
}

// GetAssemblyReplicate returns the AssemblyReplicate field value if set, zero value otherwise.
func (o *base_BTInstance642) GetAssemblyReplicate() bool {
	if o == nil || o.AssemblyReplicate == nil {
		var ret bool
		return ret
	}
	return *o.AssemblyReplicate
}

// GetAssemblyReplicateOk returns a tuple with the AssemblyReplicate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetAssemblyReplicateOk() (*bool, bool) {
	if o == nil || o.AssemblyReplicate == nil {
		return nil, false
	}
	return o.AssemblyReplicate, true
}

// HasAssemblyReplicate returns a boolean if a field has been set.
func (o *base_BTInstance642) HasAssemblyReplicate() bool {
	if o != nil && o.AssemblyReplicate != nil {
		return true
	}

	return false
}

// SetAssemblyReplicate gets a reference to the given bool and assigns it to the AssemblyReplicate field.
func (o *base_BTInstance642) SetAssemblyReplicate(v bool) {
	o.AssemblyReplicate = &v
}

// GetClonedInstance returns the ClonedInstance field value if set, zero value otherwise.
func (o *base_BTInstance642) GetClonedInstance() bool {
	if o == nil || o.ClonedInstance == nil {
		var ret bool
		return ret
	}
	return *o.ClonedInstance
}

// GetClonedInstanceOk returns a tuple with the ClonedInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetClonedInstanceOk() (*bool, bool) {
	if o == nil || o.ClonedInstance == nil {
		return nil, false
	}
	return o.ClonedInstance, true
}

// HasClonedInstance returns a boolean if a field has been set.
func (o *base_BTInstance642) HasClonedInstance() bool {
	if o != nil && o.ClonedInstance != nil {
		return true
	}

	return false
}

// SetClonedInstance gets a reference to the given bool and assigns it to the ClonedInstance field.
func (o *base_BTInstance642) SetClonedInstance(v bool) {
	o.ClonedInstance = &v
}

// GetCustomData returns the CustomData field value if set, zero value otherwise.
func (o *base_BTInstance642) GetCustomData() map[string]BTReferenceCustomData1551 {
	if o == nil || o.CustomData == nil {
		var ret map[string]BTReferenceCustomData1551
		return ret
	}
	return *o.CustomData
}

// GetCustomDataOk returns a tuple with the CustomData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetCustomDataOk() (*map[string]BTReferenceCustomData1551, bool) {
	if o == nil || o.CustomData == nil {
		return nil, false
	}
	return o.CustomData, true
}

// HasCustomData returns a boolean if a field has been set.
func (o *base_BTInstance642) HasCustomData() bool {
	if o != nil && o.CustomData != nil {
		return true
	}

	return false
}

// SetCustomData gets a reference to the given map[string]BTReferenceCustomData1551 and assigns it to the CustomData field.
func (o *base_BTInstance642) SetCustomData(v map[string]BTReferenceCustomData1551) {
	o.CustomData = &v
}

// GetInstanceFolder returns the InstanceFolder field value if set, zero value otherwise.
func (o *base_BTInstance642) GetInstanceFolder() bool {
	if o == nil || o.InstanceFolder == nil {
		var ret bool
		return ret
	}
	return *o.InstanceFolder
}

// GetInstanceFolderOk returns a tuple with the InstanceFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetInstanceFolderOk() (*bool, bool) {
	if o == nil || o.InstanceFolder == nil {
		return nil, false
	}
	return o.InstanceFolder, true
}

// HasInstanceFolder returns a boolean if a field has been set.
func (o *base_BTInstance642) HasInstanceFolder() bool {
	if o != nil && o.InstanceFolder != nil {
		return true
	}

	return false
}

// SetInstanceFolder gets a reference to the given bool and assigns it to the InstanceFolder field.
func (o *base_BTInstance642) SetInstanceFolder(v bool) {
	o.InstanceFolder = &v
}

// GetInstanceName returns the InstanceName field value if set, zero value otherwise.
func (o *base_BTInstance642) GetInstanceName() string {
	if o == nil || o.InstanceName == nil {
		var ret string
		return ret
	}
	return *o.InstanceName
}

// GetInstanceNameOk returns a tuple with the InstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetInstanceNameOk() (*string, bool) {
	if o == nil || o.InstanceName == nil {
		return nil, false
	}
	return o.InstanceName, true
}

// HasInstanceName returns a boolean if a field has been set.
func (o *base_BTInstance642) HasInstanceName() bool {
	if o != nil && o.InstanceName != nil {
		return true
	}

	return false
}

// SetInstanceName gets a reference to the given string and assigns it to the InstanceName field.
func (o *base_BTInstance642) SetInstanceName(v string) {
	o.InstanceName = &v
}

// GetIsFlattenedPart returns the IsFlattenedPart field value if set, zero value otherwise.
func (o *base_BTInstance642) GetIsFlattenedPart() bool {
	if o == nil || o.IsFlattenedPart == nil {
		var ret bool
		return ret
	}
	return *o.IsFlattenedPart
}

// GetIsFlattenedPartOk returns a tuple with the IsFlattenedPart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetIsFlattenedPartOk() (*bool, bool) {
	if o == nil || o.IsFlattenedPart == nil {
		return nil, false
	}
	return o.IsFlattenedPart, true
}

// HasIsFlattenedPart returns a boolean if a field has been set.
func (o *base_BTInstance642) HasIsFlattenedPart() bool {
	if o != nil && o.IsFlattenedPart != nil {
		return true
	}

	return false
}

// SetIsFlattenedPart gets a reference to the given bool and assigns it to the IsFlattenedPart field.
func (o *base_BTInstance642) SetIsFlattenedPart(v bool) {
	o.IsFlattenedPart = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *base_BTInstance642) GetLocked() bool {
	if o == nil || o.Locked == nil {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetLockedOk() (*bool, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *base_BTInstance642) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *base_BTInstance642) SetLocked(v bool) {
	o.Locked = &v
}

// GetParametricInstance returns the ParametricInstance field value if set, zero value otherwise.
func (o *base_BTInstance642) GetParametricInstance() bool {
	if o == nil || o.ParametricInstance == nil {
		var ret bool
		return ret
	}
	return *o.ParametricInstance
}

// GetParametricInstanceOk returns a tuple with the ParametricInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetParametricInstanceOk() (*bool, bool) {
	if o == nil || o.ParametricInstance == nil {
		return nil, false
	}
	return o.ParametricInstance, true
}

// HasParametricInstance returns a boolean if a field has been set.
func (o *base_BTInstance642) HasParametricInstance() bool {
	if o != nil && o.ParametricInstance != nil {
		return true
	}

	return false
}

// SetParametricInstance gets a reference to the given bool and assigns it to the ParametricInstance field.
func (o *base_BTInstance642) SetParametricInstance(v bool) {
	o.ParametricInstance = &v
}

// GetParametricOutputInstance returns the ParametricOutputInstance field value if set, zero value otherwise.
func (o *base_BTInstance642) GetParametricOutputInstance() bool {
	if o == nil || o.ParametricOutputInstance == nil {
		var ret bool
		return ret
	}
	return *o.ParametricOutputInstance
}

// GetParametricOutputInstanceOk returns a tuple with the ParametricOutputInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetParametricOutputInstanceOk() (*bool, bool) {
	if o == nil || o.ParametricOutputInstance == nil {
		return nil, false
	}
	return o.ParametricOutputInstance, true
}

// HasParametricOutputInstance returns a boolean if a field has been set.
func (o *base_BTInstance642) HasParametricOutputInstance() bool {
	if o != nil && o.ParametricOutputInstance != nil {
		return true
	}

	return false
}

// SetParametricOutputInstance gets a reference to the given bool and assigns it to the ParametricOutputInstance field.
func (o *base_BTInstance642) SetParametricOutputInstance(v bool) {
	o.ParametricOutputInstance = &v
}

// GetParametricPartStudioChildInstance returns the ParametricPartStudioChildInstance field value if set, zero value otherwise.
func (o *base_BTInstance642) GetParametricPartStudioChildInstance() bool {
	if o == nil || o.ParametricPartStudioChildInstance == nil {
		var ret bool
		return ret
	}
	return *o.ParametricPartStudioChildInstance
}

// GetParametricPartStudioChildInstanceOk returns a tuple with the ParametricPartStudioChildInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetParametricPartStudioChildInstanceOk() (*bool, bool) {
	if o == nil || o.ParametricPartStudioChildInstance == nil {
		return nil, false
	}
	return o.ParametricPartStudioChildInstance, true
}

// HasParametricPartStudioChildInstance returns a boolean if a field has been set.
func (o *base_BTInstance642) HasParametricPartStudioChildInstance() bool {
	if o != nil && o.ParametricPartStudioChildInstance != nil {
		return true
	}

	return false
}

// SetParametricPartStudioChildInstance gets a reference to the given bool and assigns it to the ParametricPartStudioChildInstance field.
func (o *base_BTInstance642) SetParametricPartStudioChildInstance(v bool) {
	o.ParametricPartStudioChildInstance = &v
}

// GetParametricPartStudioInstance returns the ParametricPartStudioInstance field value if set, zero value otherwise.
func (o *base_BTInstance642) GetParametricPartStudioInstance() bool {
	if o == nil || o.ParametricPartStudioInstance == nil {
		var ret bool
		return ret
	}
	return *o.ParametricPartStudioInstance
}

// GetParametricPartStudioInstanceOk returns a tuple with the ParametricPartStudioInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetParametricPartStudioInstanceOk() (*bool, bool) {
	if o == nil || o.ParametricPartStudioInstance == nil {
		return nil, false
	}
	return o.ParametricPartStudioInstance, true
}

// HasParametricPartStudioInstance returns a boolean if a field has been set.
func (o *base_BTInstance642) HasParametricPartStudioInstance() bool {
	if o != nil && o.ParametricPartStudioInstance != nil {
		return true
	}

	return false
}

// SetParametricPartStudioInstance gets a reference to the given bool and assigns it to the ParametricPartStudioInstance field.
func (o *base_BTInstance642) SetParametricPartStudioInstance(v bool) {
	o.ParametricPartStudioInstance = &v
}

// GetPartInstance returns the PartInstance field value if set, zero value otherwise.
func (o *base_BTInstance642) GetPartInstance() bool {
	if o == nil || o.PartInstance == nil {
		var ret bool
		return ret
	}
	return *o.PartInstance
}

// GetPartInstanceOk returns a tuple with the PartInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetPartInstanceOk() (*bool, bool) {
	if o == nil || o.PartInstance == nil {
		return nil, false
	}
	return o.PartInstance, true
}

// HasPartInstance returns a boolean if a field has been set.
func (o *base_BTInstance642) HasPartInstance() bool {
	if o != nil && o.PartInstance != nil {
		return true
	}

	return false
}

// SetPartInstance gets a reference to the given bool and assigns it to the PartInstance field.
func (o *base_BTInstance642) SetPartInstance(v bool) {
	o.PartInstance = &v
}

// GetReleasable returns the Releasable field value if set, zero value otherwise.
func (o *base_BTInstance642) GetReleasable() bool {
	if o == nil || o.Releasable == nil {
		var ret bool
		return ret
	}
	return *o.Releasable
}

// GetReleasableOk returns a tuple with the Releasable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetReleasableOk() (*bool, bool) {
	if o == nil || o.Releasable == nil {
		return nil, false
	}
	return o.Releasable, true
}

// HasReleasable returns a boolean if a field has been set.
func (o *base_BTInstance642) HasReleasable() bool {
	if o != nil && o.Releasable != nil {
		return true
	}

	return false
}

// SetReleasable gets a reference to the given bool and assigns it to the Releasable field.
func (o *base_BTInstance642) SetReleasable(v bool) {
	o.Releasable = &v
}

// GetRevisionCustomData returns the RevisionCustomData field value if set, zero value otherwise.
func (o *base_BTInstance642) GetRevisionCustomData() BTRevisionCustomData2090 {
	if o == nil || o.RevisionCustomData == nil {
		var ret BTRevisionCustomData2090
		return ret
	}
	return *o.RevisionCustomData
}

// GetRevisionCustomDataOk returns a tuple with the RevisionCustomData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetRevisionCustomDataOk() (*BTRevisionCustomData2090, bool) {
	if o == nil || o.RevisionCustomData == nil {
		return nil, false
	}
	return o.RevisionCustomData, true
}

// HasRevisionCustomData returns a boolean if a field has been set.
func (o *base_BTInstance642) HasRevisionCustomData() bool {
	if o != nil && o.RevisionCustomData != nil {
		return true
	}

	return false
}

// SetRevisionCustomData gets a reference to the given BTRevisionCustomData2090 and assigns it to the RevisionCustomData field.
func (o *base_BTInstance642) SetRevisionCustomData(v BTRevisionCustomData2090) {
	o.RevisionCustomData = &v
}

// GetStandardContent returns the StandardContent field value if set, zero value otherwise.
func (o *base_BTInstance642) GetStandardContent() bool {
	if o == nil || o.StandardContent == nil {
		var ret bool
		return ret
	}
	return *o.StandardContent
}

// GetStandardContentOk returns a tuple with the StandardContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetStandardContentOk() (*bool, bool) {
	if o == nil || o.StandardContent == nil {
		return nil, false
	}
	return o.StandardContent, true
}

// HasStandardContent returns a boolean if a field has been set.
func (o *base_BTInstance642) HasStandardContent() bool {
	if o != nil && o.StandardContent != nil {
		return true
	}

	return false
}

// SetStandardContent gets a reference to the given bool and assigns it to the StandardContent field.
func (o *base_BTInstance642) SetStandardContent(v bool) {
	o.StandardContent = &v
}

// GetStandardContentParametersId returns the StandardContentParametersId field value if set, zero value otherwise.
func (o *base_BTInstance642) GetStandardContentParametersId() string {
	if o == nil || o.StandardContentParametersId == nil {
		var ret string
		return ret
	}
	return *o.StandardContentParametersId
}

// GetStandardContentParametersIdOk returns a tuple with the StandardContentParametersId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetStandardContentParametersIdOk() (*string, bool) {
	if o == nil || o.StandardContentParametersId == nil {
		return nil, false
	}
	return o.StandardContentParametersId, true
}

// HasStandardContentParametersId returns a boolean if a field has been set.
func (o *base_BTInstance642) HasStandardContentParametersId() bool {
	if o != nil && o.StandardContentParametersId != nil {
		return true
	}

	return false
}

// SetStandardContentParametersId gets a reference to the given string and assigns it to the StandardContentParametersId field.
func (o *base_BTInstance642) SetStandardContentParametersId(v string) {
	o.StandardContentParametersId = &v
}

// GetSuppressed returns the Suppressed field value if set, zero value otherwise.
func (o *base_BTInstance642) GetSuppressed() bool {
	if o == nil || o.Suppressed == nil {
		var ret bool
		return ret
	}
	return *o.Suppressed
}

// GetSuppressedOk returns a tuple with the Suppressed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetSuppressedOk() (*bool, bool) {
	if o == nil || o.Suppressed == nil {
		return nil, false
	}
	return o.Suppressed, true
}

// HasSuppressed returns a boolean if a field has been set.
func (o *base_BTInstance642) HasSuppressed() bool {
	if o != nil && o.Suppressed != nil {
		return true
	}

	return false
}

// SetSuppressed gets a reference to the given bool and assigns it to the Suppressed field.
func (o *base_BTInstance642) SetSuppressed(v bool) {
	o.Suppressed = &v
}

// GetSuppressedFieldIndex returns the SuppressedFieldIndex field value if set, zero value otherwise.
func (o *base_BTInstance642) GetSuppressedFieldIndex() int32 {
	if o == nil || o.SuppressedFieldIndex == nil {
		var ret int32
		return ret
	}
	return *o.SuppressedFieldIndex
}

// GetSuppressedFieldIndexOk returns a tuple with the SuppressedFieldIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetSuppressedFieldIndexOk() (*int32, bool) {
	if o == nil || o.SuppressedFieldIndex == nil {
		return nil, false
	}
	return o.SuppressedFieldIndex, true
}

// HasSuppressedFieldIndex returns a boolean if a field has been set.
func (o *base_BTInstance642) HasSuppressedFieldIndex() bool {
	if o != nil && o.SuppressedFieldIndex != nil {
		return true
	}

	return false
}

// SetSuppressedFieldIndex gets a reference to the given int32 and assigns it to the SuppressedFieldIndex field.
func (o *base_BTInstance642) SetSuppressedFieldIndex(v int32) {
	o.SuppressedFieldIndex = &v
}

// GetSuppressionConfigured returns the SuppressionConfigured field value if set, zero value otherwise.
func (o *base_BTInstance642) GetSuppressionConfigured() bool {
	if o == nil || o.SuppressionConfigured == nil {
		var ret bool
		return ret
	}
	return *o.SuppressionConfigured
}

// GetSuppressionConfiguredOk returns a tuple with the SuppressionConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetSuppressionConfiguredOk() (*bool, bool) {
	if o == nil || o.SuppressionConfigured == nil {
		return nil, false
	}
	return o.SuppressionConfigured, true
}

// HasSuppressionConfigured returns a boolean if a field has been set.
func (o *base_BTInstance642) HasSuppressionConfigured() bool {
	if o != nil && o.SuppressionConfigured != nil {
		return true
	}

	return false
}

// SetSuppressionConfigured gets a reference to the given bool and assigns it to the SuppressionConfigured field.
func (o *base_BTInstance642) SetSuppressionConfigured(v bool) {
	o.SuppressionConfigured = &v
}

// GetSuppressionState returns the SuppressionState field value if set, zero value otherwise.
func (o *base_BTInstance642) GetSuppressionState() BTMSuppressionState1924 {
	if o == nil || o.SuppressionState == nil {
		var ret BTMSuppressionState1924
		return ret
	}
	return *o.SuppressionState
}

// GetSuppressionStateOk returns a tuple with the SuppressionState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetSuppressionStateOk() (*BTMSuppressionState1924, bool) {
	if o == nil || o.SuppressionState == nil {
		return nil, false
	}
	return o.SuppressionState, true
}

// HasSuppressionState returns a boolean if a field has been set.
func (o *base_BTInstance642) HasSuppressionState() bool {
	if o != nil && o.SuppressionState != nil {
		return true
	}

	return false
}

// SetSuppressionState gets a reference to the given BTMSuppressionState1924 and assigns it to the SuppressionState field.
func (o *base_BTInstance642) SetSuppressionState(v BTMSuppressionState1924) {
	o.SuppressionState = &v
}

// GetValidRevisionReference returns the ValidRevisionReference field value if set, zero value otherwise.
func (o *base_BTInstance642) GetValidRevisionReference() bool {
	if o == nil || o.ValidRevisionReference == nil {
		var ret bool
		return ret
	}
	return *o.ValidRevisionReference
}

// GetValidRevisionReferenceOk returns a tuple with the ValidRevisionReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetValidRevisionReferenceOk() (*bool, bool) {
	if o == nil || o.ValidRevisionReference == nil {
		return nil, false
	}
	return o.ValidRevisionReference, true
}

// HasValidRevisionReference returns a boolean if a field has been set.
func (o *base_BTInstance642) HasValidRevisionReference() bool {
	if o != nil && o.ValidRevisionReference != nil {
		return true
	}

	return false
}

// SetValidRevisionReference gets a reference to the given bool and assigns it to the ValidRevisionReference field.
func (o *base_BTInstance642) SetValidRevisionReference(v bool) {
	o.ValidRevisionReference = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *base_BTInstance642) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *base_BTInstance642) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *base_BTInstance642) SetVersion(v int32) {
	o.Version = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *base_BTInstance642) GetConfiguration() []BTMParameter1 {
	if o == nil || o.Configuration == nil {
		var ret []BTMParameter1
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetConfigurationOk() ([]BTMParameter1, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *base_BTInstance642) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given []BTMParameter1 and assigns it to the Configuration field.
func (o *base_BTInstance642) SetConfiguration(v []BTMParameter1) {
	o.Configuration = v
}

// GetConfigured returns the Configured field value if set, zero value otherwise.
func (o *base_BTInstance642) GetConfigured() bool {
	if o == nil || o.Configured == nil {
		var ret bool
		return ret
	}
	return *o.Configured
}

// GetConfiguredOk returns a tuple with the Configured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetConfiguredOk() (*bool, bool) {
	if o == nil || o.Configured == nil {
		return nil, false
	}
	return o.Configured, true
}

// HasConfigured returns a boolean if a field has been set.
func (o *base_BTInstance642) HasConfigured() bool {
	if o != nil && o.Configured != nil {
		return true
	}

	return false
}

// SetConfigured gets a reference to the given bool and assigns it to the Configured field.
func (o *base_BTInstance642) SetConfigured(v bool) {
	o.Configured = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *base_BTInstance642) GetDocumentId() string {
	if o == nil || o.DocumentId == nil {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetDocumentIdOk() (*string, bool) {
	if o == nil || o.DocumentId == nil {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *base_BTInstance642) HasDocumentId() bool {
	if o != nil && o.DocumentId != nil {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *base_BTInstance642) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *base_BTInstance642) GetElementId() string {
	if o == nil || o.ElementId == nil {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetElementIdOk() (*string, bool) {
	if o == nil || o.ElementId == nil {
		return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *base_BTInstance642) HasElementId() bool {
	if o != nil && o.ElementId != nil {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *base_BTInstance642) SetElementId(v string) {
	o.ElementId = &v
}

// GetElementReference returns the ElementReference field value if set, zero value otherwise.
func (o *base_BTInstance642) GetElementReference() BTElementReference725 {
	if o == nil || o.ElementReference == nil {
		var ret BTElementReference725
		return ret
	}
	return *o.ElementReference
}

// GetElementReferenceOk returns a tuple with the ElementReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetElementReferenceOk() (*BTElementReference725, bool) {
	if o == nil || o.ElementReference == nil {
		return nil, false
	}
	return o.ElementReference, true
}

// HasElementReference returns a boolean if a field has been set.
func (o *base_BTInstance642) HasElementReference() bool {
	if o != nil && o.ElementReference != nil {
		return true
	}

	return false
}

// SetElementReference gets a reference to the given BTElementReference725 and assigns it to the ElementReference field.
func (o *base_BTInstance642) SetElementReference(v BTElementReference725) {
	o.ElementReference = &v
}

// GetExternalDocumentWithVersion returns the ExternalDocumentWithVersion field value if set, zero value otherwise.
func (o *base_BTInstance642) GetExternalDocumentWithVersion() BTDocumentWithVersionId {
	if o == nil || o.ExternalDocumentWithVersion == nil {
		var ret BTDocumentWithVersionId
		return ret
	}
	return *o.ExternalDocumentWithVersion
}

// GetExternalDocumentWithVersionOk returns a tuple with the ExternalDocumentWithVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetExternalDocumentWithVersionOk() (*BTDocumentWithVersionId, bool) {
	if o == nil || o.ExternalDocumentWithVersion == nil {
		return nil, false
	}
	return o.ExternalDocumentWithVersion, true
}

// HasExternalDocumentWithVersion returns a boolean if a field has been set.
func (o *base_BTInstance642) HasExternalDocumentWithVersion() bool {
	if o != nil && o.ExternalDocumentWithVersion != nil {
		return true
	}

	return false
}

// SetExternalDocumentWithVersion gets a reference to the given BTDocumentWithVersionId and assigns it to the ExternalDocumentWithVersion field.
func (o *base_BTInstance642) SetExternalDocumentWithVersion(v BTDocumentWithVersionId) {
	o.ExternalDocumentWithVersion = &v
}

// GetExternalDocumentWithVersionAndElementId returns the ExternalDocumentWithVersionAndElementId field value if set, zero value otherwise.
func (o *base_BTInstance642) GetExternalDocumentWithVersionAndElementId() BTDocumentWithVersionAndElementId {
	if o == nil || o.ExternalDocumentWithVersionAndElementId == nil {
		var ret BTDocumentWithVersionAndElementId
		return ret
	}
	return *o.ExternalDocumentWithVersionAndElementId
}

// GetExternalDocumentWithVersionAndElementIdOk returns a tuple with the ExternalDocumentWithVersionAndElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetExternalDocumentWithVersionAndElementIdOk() (*BTDocumentWithVersionAndElementId, bool) {
	if o == nil || o.ExternalDocumentWithVersionAndElementId == nil {
		return nil, false
	}
	return o.ExternalDocumentWithVersionAndElementId, true
}

// HasExternalDocumentWithVersionAndElementId returns a boolean if a field has been set.
func (o *base_BTInstance642) HasExternalDocumentWithVersionAndElementId() bool {
	if o != nil && o.ExternalDocumentWithVersionAndElementId != nil {
		return true
	}

	return false
}

// SetExternalDocumentWithVersionAndElementId gets a reference to the given BTDocumentWithVersionAndElementId and assigns it to the ExternalDocumentWithVersionAndElementId field.
func (o *base_BTInstance642) SetExternalDocumentWithVersionAndElementId(v BTDocumentWithVersionAndElementId) {
	o.ExternalDocumentWithVersionAndElementId = &v
}

// GetLockedState returns the LockedState field value if set, zero value otherwise.
func (o *base_BTInstance642) GetLockedState() BTMParameter1 {
	if o == nil || o.LockedState == nil {
		var ret BTMParameter1
		return ret
	}
	return *o.LockedState
}

// GetLockedStateOk returns a tuple with the LockedState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetLockedStateOk() (*BTMParameter1, bool) {
	if o == nil || o.LockedState == nil {
		return nil, false
	}
	return o.LockedState, true
}

// HasLockedState returns a boolean if a field has been set.
func (o *base_BTInstance642) HasLockedState() bool {
	if o != nil && o.LockedState != nil {
		return true
	}

	return false
}

// SetLockedState gets a reference to the given BTMParameter1 and assigns it to the LockedState field.
func (o *base_BTInstance642) SetLockedState(v BTMParameter1) {
	o.LockedState = &v
}

// GetMicroversionId returns the MicroversionId field value if set, zero value otherwise.
func (o *base_BTInstance642) GetMicroversionId() BTMicroversionId366 {
	if o == nil || o.MicroversionId == nil {
		var ret BTMicroversionId366
		return ret
	}
	return *o.MicroversionId
}

// GetMicroversionIdOk returns a tuple with the MicroversionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetMicroversionIdOk() (*BTMicroversionId366, bool) {
	if o == nil || o.MicroversionId == nil {
		return nil, false
	}
	return o.MicroversionId, true
}

// HasMicroversionId returns a boolean if a field has been set.
func (o *base_BTInstance642) HasMicroversionId() bool {
	if o != nil && o.MicroversionId != nil {
		return true
	}

	return false
}

// SetMicroversionId gets a reference to the given BTMicroversionId366 and assigns it to the MicroversionId field.
func (o *base_BTInstance642) SetMicroversionId(v BTMicroversionId366) {
	o.MicroversionId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *base_BTInstance642) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *base_BTInstance642) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *base_BTInstance642) SetName(v string) {
	o.Name = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *base_BTInstance642) GetParameters() []BTMParameter1 {
	if o == nil || o.Parameters == nil {
		var ret []BTMParameter1
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetParametersOk() ([]BTMParameter1, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *base_BTInstance642) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []BTMParameter1 and assigns it to the Parameters field.
func (o *base_BTInstance642) SetParameters(v []BTMParameter1) {
	o.Parameters = v
}

// GetReferenceParameter returns the ReferenceParameter field value if set, zero value otherwise.
func (o *base_BTInstance642) GetReferenceParameter() BTMParameterReferenceWithConfiguration3028 {
	if o == nil || o.ReferenceParameter == nil {
		var ret BTMParameterReferenceWithConfiguration3028
		return ret
	}
	return *o.ReferenceParameter
}

// GetReferenceParameterOk returns a tuple with the ReferenceParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetReferenceParameterOk() (*BTMParameterReferenceWithConfiguration3028, bool) {
	if o == nil || o.ReferenceParameter == nil {
		return nil, false
	}
	return o.ReferenceParameter, true
}

// HasReferenceParameter returns a boolean if a field has been set.
func (o *base_BTInstance642) HasReferenceParameter() bool {
	if o != nil && o.ReferenceParameter != nil {
		return true
	}

	return false
}

// SetReferenceParameter gets a reference to the given BTMParameterReferenceWithConfiguration3028 and assigns it to the ReferenceParameter field.
func (o *base_BTInstance642) SetReferenceParameter(v BTMParameterReferenceWithConfiguration3028) {
	o.ReferenceParameter = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *base_BTInstance642) GetVersionId() string {
	if o == nil || o.VersionId == nil {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetVersionIdOk() (*string, bool) {
	if o == nil || o.VersionId == nil {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *base_BTInstance642) HasVersionId() bool {
	if o != nil && o.VersionId != nil {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *base_BTInstance642) SetVersionId(v string) {
	o.VersionId = &v
}

// GetVersionIdIfExternal returns the VersionIdIfExternal field value if set, zero value otherwise.
func (o *base_BTInstance642) GetVersionIdIfExternal() string {
	if o == nil || o.VersionIdIfExternal == nil {
		var ret string
		return ret
	}
	return *o.VersionIdIfExternal
}

// GetVersionIdIfExternalOk returns a tuple with the VersionIdIfExternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTInstance642) GetVersionIdIfExternalOk() (*string, bool) {
	if o == nil || o.VersionIdIfExternal == nil {
		return nil, false
	}
	return o.VersionIdIfExternal, true
}

// HasVersionIdIfExternal returns a boolean if a field has been set.
func (o *base_BTInstance642) HasVersionIdIfExternal() bool {
	if o != nil && o.VersionIdIfExternal != nil {
		return true
	}

	return false
}

// SetVersionIdIfExternal gets a reference to the given string and assigns it to the VersionIdIfExternal field.
func (o *base_BTInstance642) SetVersionIdIfExternal(v string) {
	o.VersionIdIfExternal = &v
}

func (o base_BTInstance642) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.ImportMicroversion != nil {
		toSerialize["importMicroversion"] = o.ImportMicroversion
	}
	if o.NodeId != nil {
		toSerialize["nodeId"] = o.NodeId
	}
	if o.AssemblyInstance != nil {
		toSerialize["assemblyInstance"] = o.AssemblyInstance
	}
	if o.AssemblyPattern != nil {
		toSerialize["assemblyPattern"] = o.AssemblyPattern
	}
	if o.AssemblyReplicate != nil {
		toSerialize["assemblyReplicate"] = o.AssemblyReplicate
	}
	if o.ClonedInstance != nil {
		toSerialize["clonedInstance"] = o.ClonedInstance
	}
	if o.CustomData != nil {
		toSerialize["customData"] = o.CustomData
	}
	if o.InstanceFolder != nil {
		toSerialize["instanceFolder"] = o.InstanceFolder
	}
	if o.InstanceName != nil {
		toSerialize["instanceName"] = o.InstanceName
	}
	if o.IsFlattenedPart != nil {
		toSerialize["isFlattenedPart"] = o.IsFlattenedPart
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	if o.ParametricInstance != nil {
		toSerialize["parametricInstance"] = o.ParametricInstance
	}
	if o.ParametricOutputInstance != nil {
		toSerialize["parametricOutputInstance"] = o.ParametricOutputInstance
	}
	if o.ParametricPartStudioChildInstance != nil {
		toSerialize["parametricPartStudioChildInstance"] = o.ParametricPartStudioChildInstance
	}
	if o.ParametricPartStudioInstance != nil {
		toSerialize["parametricPartStudioInstance"] = o.ParametricPartStudioInstance
	}
	if o.PartInstance != nil {
		toSerialize["partInstance"] = o.PartInstance
	}
	if o.Releasable != nil {
		toSerialize["releasable"] = o.Releasable
	}
	if o.RevisionCustomData != nil {
		toSerialize["revisionCustomData"] = o.RevisionCustomData
	}
	if o.StandardContent != nil {
		toSerialize["standardContent"] = o.StandardContent
	}
	if o.StandardContentParametersId != nil {
		toSerialize["standardContentParametersId"] = o.StandardContentParametersId
	}
	if o.Suppressed != nil {
		toSerialize["suppressed"] = o.Suppressed
	}
	if o.SuppressedFieldIndex != nil {
		toSerialize["suppressedFieldIndex"] = o.SuppressedFieldIndex
	}
	if o.SuppressionConfigured != nil {
		toSerialize["suppressionConfigured"] = o.SuppressionConfigured
	}
	if o.SuppressionState != nil {
		toSerialize["suppressionState"] = o.SuppressionState
	}
	if o.ValidRevisionReference != nil {
		toSerialize["validRevisionReference"] = o.ValidRevisionReference
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.Configured != nil {
		toSerialize["configured"] = o.Configured
	}
	if o.DocumentId != nil {
		toSerialize["documentId"] = o.DocumentId
	}
	if o.ElementId != nil {
		toSerialize["elementId"] = o.ElementId
	}
	if o.ElementReference != nil {
		toSerialize["elementReference"] = o.ElementReference
	}
	if o.ExternalDocumentWithVersion != nil {
		toSerialize["externalDocumentWithVersion"] = o.ExternalDocumentWithVersion
	}
	if o.ExternalDocumentWithVersionAndElementId != nil {
		toSerialize["externalDocumentWithVersionAndElementId"] = o.ExternalDocumentWithVersionAndElementId
	}
	if o.LockedState != nil {
		toSerialize["lockedState"] = o.LockedState
	}
	if o.MicroversionId != nil {
		toSerialize["microversionId"] = o.MicroversionId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.ReferenceParameter != nil {
		toSerialize["referenceParameter"] = o.ReferenceParameter
	}
	if o.VersionId != nil {
		toSerialize["versionId"] = o.VersionId
	}
	if o.VersionIdIfExternal != nil {
		toSerialize["versionIdIfExternal"] = o.VersionIdIfExternal
	}
	return json.Marshal(toSerialize)
}
