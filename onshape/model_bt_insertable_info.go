/*
Onshape REST API

The Onshape REST API consumed by all client. # Authorization The simplest way to authorize and enable the **Try it out** functionality is to sign in to Onshape and use the current session. The **Authorize** button enables other authorization techniques. To ensure the current session isn't used when trying other authentication techniques, make sure to remove the Onshape cookie as per the instructions for your particular browser. Alternatively, a private or incognito window may be used. Here's [how to remove a specific cookie on Chrome](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site). - **Current Session** authorization is enabled by default if the browser is already signed in to [Onshape](/). - **OAuth2** authorization uses an Onshape OAuth2 app created on the [Onshape Developer Portal](https://dev-portal.onshape.com/oauthApps). The redirect URL field should include `https://cad.onshape.com/glassworks/explorer/oauth2-redirect.html`. - **API Key** authorization using basic authentication is also available. The keys can be generated in the [Onshape Developer Portal](https://dev-portal.onshape.com/keys). In the authentication dialog, enter the access key in the `Username` field, and enter the secret key in the `Password` field. Basic authentication should only be used during the development process since sharing API Keys provides the same level of access as a username and password.

API version: 1.171.24257-687de06de652
Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTInsertableInfo Array of items in the current page.
type BTInsertableInfo struct {
	BodyType                     *GBTBodyType    `json:"bodyType,omitempty"`
	ClassType                    *int32          `json:"classType,omitempty"`
	Configuration                *string         `json:"configuration,omitempty"`
	ConfigurationParameterValues []string        `json:"configurationParameterValues,omitempty"`
	ConfigurationParameters      []string        `json:"configurationParameters,omitempty"`
	DataType                     *string         `json:"dataType,omitempty"`
	DeterministicId              *string         `json:"deterministicId,omitempty"`
	DocumentId                   *string         `json:"documentId,omitempty"`
	ElementId                    *string         `json:"elementId,omitempty"`
	ElementName                  *string         `json:"elementName,omitempty"`
	ElementType                  *GBTElementType `json:"elementType,omitempty"`
	FeatureId                    *string         `json:"featureId,omitempty"`
	FeatureName                  *string         `json:"featureName,omitempty"`
	FeatureSpec                  []string        `json:"featureSpec,omitempty"`
	FeatureType                  *string         `json:"featureType,omitempty"`
	FsComputedPartPropertySpec   []string        `json:"fsComputedPartPropertySpec,omitempty"`
	FsTableSpec                  []string        `json:"fsTableSpec,omitempty"`
	HasFaults                    *bool           `json:"hasFaults,omitempty"`
	// URI to fetch complete information of the resource.
	Href *string `json:"href,omitempty"`
	// Id of the resource.
	Id              *string       `json:"id,omitempty"`
	InsertableQuery *string       `json:"insertableQuery,omitempty"`
	IsFlattenedBody *bool         `json:"isFlattenedBody,omitempty"`
	IsMesh          *bool         `json:"isMesh,omitempty"`
	MeshState       *GBTMeshState `json:"meshState,omitempty"`
	MicroversionId  *string       `json:"microversionId,omitempty"`
	// Name of the resource.
	Name                           *string `json:"name,omitempty"`
	ParentId                       *string `json:"parentId,omitempty"`
	PartIdentity                   *string `json:"partIdentity,omitempty"`
	PartName                       *string `json:"partName,omitempty"`
	PredictableThumbnailId         *string `json:"predictableThumbnailId,omitempty"`
	SourceFileExtension            *string `json:"sourceFileExtension,omitempty"`
	ThumbnailUri                   *string `json:"thumbnailUri,omitempty"`
	UnflattenedPartDeterministicId *string `json:"unflattenedPartDeterministicId,omitempty"`
	VariableName                   *string `json:"variableName,omitempty"`
	VersionId                      *string `json:"versionId,omitempty"`
	VersionName                    *string `json:"versionName,omitempty"`
	// URI to visualize the resource in a webclient if applicable.
	ViewRef       *string `json:"viewRef,omitempty"`
	WorkspaceId   *string `json:"workspaceId,omitempty"`
	WorkspaceName *string `json:"workspaceName,omitempty"`
}

// NewBTInsertableInfo instantiates a new BTInsertableInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTInsertableInfo() *BTInsertableInfo {
	this := BTInsertableInfo{}
	return &this
}

// NewBTInsertableInfoWithDefaults instantiates a new BTInsertableInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTInsertableInfoWithDefaults() *BTInsertableInfo {
	this := BTInsertableInfo{}
	return &this
}

// GetBodyType returns the BodyType field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetBodyType() GBTBodyType {
	if o == nil || o.BodyType == nil {
		var ret GBTBodyType
		return ret
	}
	return *o.BodyType
}

// GetBodyTypeOk returns a tuple with the BodyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetBodyTypeOk() (*GBTBodyType, bool) {
	if o == nil || o.BodyType == nil {
		return nil, false
	}
	return o.BodyType, true
}

// HasBodyType returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasBodyType() bool {
	if o != nil && o.BodyType != nil {
		return true
	}

	return false
}

// SetBodyType gets a reference to the given GBTBodyType and assigns it to the BodyType field.
func (o *BTInsertableInfo) SetBodyType(v GBTBodyType) {
	o.BodyType = &v
}

// GetClassType returns the ClassType field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetClassType() int32 {
	if o == nil || o.ClassType == nil {
		var ret int32
		return ret
	}
	return *o.ClassType
}

// GetClassTypeOk returns a tuple with the ClassType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetClassTypeOk() (*int32, bool) {
	if o == nil || o.ClassType == nil {
		return nil, false
	}
	return o.ClassType, true
}

// HasClassType returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasClassType() bool {
	if o != nil && o.ClassType != nil {
		return true
	}

	return false
}

// SetClassType gets a reference to the given int32 and assigns it to the ClassType field.
func (o *BTInsertableInfo) SetClassType(v int32) {
	o.ClassType = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetConfiguration() string {
	if o == nil || o.Configuration == nil {
		var ret string
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetConfigurationOk() (*string, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given string and assigns it to the Configuration field.
func (o *BTInsertableInfo) SetConfiguration(v string) {
	o.Configuration = &v
}

// GetConfigurationParameterValues returns the ConfigurationParameterValues field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetConfigurationParameterValues() []string {
	if o == nil || o.ConfigurationParameterValues == nil {
		var ret []string
		return ret
	}
	return o.ConfigurationParameterValues
}

// GetConfigurationParameterValuesOk returns a tuple with the ConfigurationParameterValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetConfigurationParameterValuesOk() ([]string, bool) {
	if o == nil || o.ConfigurationParameterValues == nil {
		return nil, false
	}
	return o.ConfigurationParameterValues, true
}

// HasConfigurationParameterValues returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasConfigurationParameterValues() bool {
	if o != nil && o.ConfigurationParameterValues != nil {
		return true
	}

	return false
}

// SetConfigurationParameterValues gets a reference to the given []string and assigns it to the ConfigurationParameterValues field.
func (o *BTInsertableInfo) SetConfigurationParameterValues(v []string) {
	o.ConfigurationParameterValues = v
}

// GetConfigurationParameters returns the ConfigurationParameters field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetConfigurationParameters() []string {
	if o == nil || o.ConfigurationParameters == nil {
		var ret []string
		return ret
	}
	return o.ConfigurationParameters
}

// GetConfigurationParametersOk returns a tuple with the ConfigurationParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetConfigurationParametersOk() ([]string, bool) {
	if o == nil || o.ConfigurationParameters == nil {
		return nil, false
	}
	return o.ConfigurationParameters, true
}

// HasConfigurationParameters returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasConfigurationParameters() bool {
	if o != nil && o.ConfigurationParameters != nil {
		return true
	}

	return false
}

// SetConfigurationParameters gets a reference to the given []string and assigns it to the ConfigurationParameters field.
func (o *BTInsertableInfo) SetConfigurationParameters(v []string) {
	o.ConfigurationParameters = v
}

// GetDataType returns the DataType field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetDataType() string {
	if o == nil || o.DataType == nil {
		var ret string
		return ret
	}
	return *o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetDataTypeOk() (*string, bool) {
	if o == nil || o.DataType == nil {
		return nil, false
	}
	return o.DataType, true
}

// HasDataType returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasDataType() bool {
	if o != nil && o.DataType != nil {
		return true
	}

	return false
}

// SetDataType gets a reference to the given string and assigns it to the DataType field.
func (o *BTInsertableInfo) SetDataType(v string) {
	o.DataType = &v
}

// GetDeterministicId returns the DeterministicId field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetDeterministicId() string {
	if o == nil || o.DeterministicId == nil {
		var ret string
		return ret
	}
	return *o.DeterministicId
}

// GetDeterministicIdOk returns a tuple with the DeterministicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetDeterministicIdOk() (*string, bool) {
	if o == nil || o.DeterministicId == nil {
		return nil, false
	}
	return o.DeterministicId, true
}

// HasDeterministicId returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasDeterministicId() bool {
	if o != nil && o.DeterministicId != nil {
		return true
	}

	return false
}

// SetDeterministicId gets a reference to the given string and assigns it to the DeterministicId field.
func (o *BTInsertableInfo) SetDeterministicId(v string) {
	o.DeterministicId = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetDocumentId() string {
	if o == nil || o.DocumentId == nil {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetDocumentIdOk() (*string, bool) {
	if o == nil || o.DocumentId == nil {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasDocumentId() bool {
	if o != nil && o.DocumentId != nil {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *BTInsertableInfo) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetElementId() string {
	if o == nil || o.ElementId == nil {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetElementIdOk() (*string, bool) {
	if o == nil || o.ElementId == nil {
		return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasElementId() bool {
	if o != nil && o.ElementId != nil {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *BTInsertableInfo) SetElementId(v string) {
	o.ElementId = &v
}

// GetElementName returns the ElementName field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetElementName() string {
	if o == nil || o.ElementName == nil {
		var ret string
		return ret
	}
	return *o.ElementName
}

// GetElementNameOk returns a tuple with the ElementName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetElementNameOk() (*string, bool) {
	if o == nil || o.ElementName == nil {
		return nil, false
	}
	return o.ElementName, true
}

// HasElementName returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasElementName() bool {
	if o != nil && o.ElementName != nil {
		return true
	}

	return false
}

// SetElementName gets a reference to the given string and assigns it to the ElementName field.
func (o *BTInsertableInfo) SetElementName(v string) {
	o.ElementName = &v
}

// GetElementType returns the ElementType field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetElementType() GBTElementType {
	if o == nil || o.ElementType == nil {
		var ret GBTElementType
		return ret
	}
	return *o.ElementType
}

// GetElementTypeOk returns a tuple with the ElementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetElementTypeOk() (*GBTElementType, bool) {
	if o == nil || o.ElementType == nil {
		return nil, false
	}
	return o.ElementType, true
}

// HasElementType returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasElementType() bool {
	if o != nil && o.ElementType != nil {
		return true
	}

	return false
}

// SetElementType gets a reference to the given GBTElementType and assigns it to the ElementType field.
func (o *BTInsertableInfo) SetElementType(v GBTElementType) {
	o.ElementType = &v
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetFeatureId() string {
	if o == nil || o.FeatureId == nil {
		var ret string
		return ret
	}
	return *o.FeatureId
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetFeatureIdOk() (*string, bool) {
	if o == nil || o.FeatureId == nil {
		return nil, false
	}
	return o.FeatureId, true
}

// HasFeatureId returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasFeatureId() bool {
	if o != nil && o.FeatureId != nil {
		return true
	}

	return false
}

// SetFeatureId gets a reference to the given string and assigns it to the FeatureId field.
func (o *BTInsertableInfo) SetFeatureId(v string) {
	o.FeatureId = &v
}

// GetFeatureName returns the FeatureName field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetFeatureName() string {
	if o == nil || o.FeatureName == nil {
		var ret string
		return ret
	}
	return *o.FeatureName
}

// GetFeatureNameOk returns a tuple with the FeatureName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetFeatureNameOk() (*string, bool) {
	if o == nil || o.FeatureName == nil {
		return nil, false
	}
	return o.FeatureName, true
}

// HasFeatureName returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasFeatureName() bool {
	if o != nil && o.FeatureName != nil {
		return true
	}

	return false
}

// SetFeatureName gets a reference to the given string and assigns it to the FeatureName field.
func (o *BTInsertableInfo) SetFeatureName(v string) {
	o.FeatureName = &v
}

// GetFeatureSpec returns the FeatureSpec field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetFeatureSpec() []string {
	if o == nil || o.FeatureSpec == nil {
		var ret []string
		return ret
	}
	return o.FeatureSpec
}

// GetFeatureSpecOk returns a tuple with the FeatureSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetFeatureSpecOk() ([]string, bool) {
	if o == nil || o.FeatureSpec == nil {
		return nil, false
	}
	return o.FeatureSpec, true
}

// HasFeatureSpec returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasFeatureSpec() bool {
	if o != nil && o.FeatureSpec != nil {
		return true
	}

	return false
}

// SetFeatureSpec gets a reference to the given []string and assigns it to the FeatureSpec field.
func (o *BTInsertableInfo) SetFeatureSpec(v []string) {
	o.FeatureSpec = v
}

// GetFeatureType returns the FeatureType field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetFeatureType() string {
	if o == nil || o.FeatureType == nil {
		var ret string
		return ret
	}
	return *o.FeatureType
}

// GetFeatureTypeOk returns a tuple with the FeatureType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetFeatureTypeOk() (*string, bool) {
	if o == nil || o.FeatureType == nil {
		return nil, false
	}
	return o.FeatureType, true
}

// HasFeatureType returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasFeatureType() bool {
	if o != nil && o.FeatureType != nil {
		return true
	}

	return false
}

// SetFeatureType gets a reference to the given string and assigns it to the FeatureType field.
func (o *BTInsertableInfo) SetFeatureType(v string) {
	o.FeatureType = &v
}

// GetFsComputedPartPropertySpec returns the FsComputedPartPropertySpec field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetFsComputedPartPropertySpec() []string {
	if o == nil || o.FsComputedPartPropertySpec == nil {
		var ret []string
		return ret
	}
	return o.FsComputedPartPropertySpec
}

// GetFsComputedPartPropertySpecOk returns a tuple with the FsComputedPartPropertySpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetFsComputedPartPropertySpecOk() ([]string, bool) {
	if o == nil || o.FsComputedPartPropertySpec == nil {
		return nil, false
	}
	return o.FsComputedPartPropertySpec, true
}

// HasFsComputedPartPropertySpec returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasFsComputedPartPropertySpec() bool {
	if o != nil && o.FsComputedPartPropertySpec != nil {
		return true
	}

	return false
}

// SetFsComputedPartPropertySpec gets a reference to the given []string and assigns it to the FsComputedPartPropertySpec field.
func (o *BTInsertableInfo) SetFsComputedPartPropertySpec(v []string) {
	o.FsComputedPartPropertySpec = v
}

// GetFsTableSpec returns the FsTableSpec field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetFsTableSpec() []string {
	if o == nil || o.FsTableSpec == nil {
		var ret []string
		return ret
	}
	return o.FsTableSpec
}

// GetFsTableSpecOk returns a tuple with the FsTableSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetFsTableSpecOk() ([]string, bool) {
	if o == nil || o.FsTableSpec == nil {
		return nil, false
	}
	return o.FsTableSpec, true
}

// HasFsTableSpec returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasFsTableSpec() bool {
	if o != nil && o.FsTableSpec != nil {
		return true
	}

	return false
}

// SetFsTableSpec gets a reference to the given []string and assigns it to the FsTableSpec field.
func (o *BTInsertableInfo) SetFsTableSpec(v []string) {
	o.FsTableSpec = v
}

// GetHasFaults returns the HasFaults field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetHasFaults() bool {
	if o == nil || o.HasFaults == nil {
		var ret bool
		return ret
	}
	return *o.HasFaults
}

// GetHasFaultsOk returns a tuple with the HasFaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetHasFaultsOk() (*bool, bool) {
	if o == nil || o.HasFaults == nil {
		return nil, false
	}
	return o.HasFaults, true
}

// HasHasFaults returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasHasFaults() bool {
	if o != nil && o.HasFaults != nil {
		return true
	}

	return false
}

// SetHasFaults gets a reference to the given bool and assigns it to the HasFaults field.
func (o *BTInsertableInfo) SetHasFaults(v bool) {
	o.HasFaults = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTInsertableInfo) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTInsertableInfo) SetId(v string) {
	o.Id = &v
}

// GetInsertableQuery returns the InsertableQuery field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetInsertableQuery() string {
	if o == nil || o.InsertableQuery == nil {
		var ret string
		return ret
	}
	return *o.InsertableQuery
}

// GetInsertableQueryOk returns a tuple with the InsertableQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetInsertableQueryOk() (*string, bool) {
	if o == nil || o.InsertableQuery == nil {
		return nil, false
	}
	return o.InsertableQuery, true
}

// HasInsertableQuery returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasInsertableQuery() bool {
	if o != nil && o.InsertableQuery != nil {
		return true
	}

	return false
}

// SetInsertableQuery gets a reference to the given string and assigns it to the InsertableQuery field.
func (o *BTInsertableInfo) SetInsertableQuery(v string) {
	o.InsertableQuery = &v
}

// GetIsFlattenedBody returns the IsFlattenedBody field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetIsFlattenedBody() bool {
	if o == nil || o.IsFlattenedBody == nil {
		var ret bool
		return ret
	}
	return *o.IsFlattenedBody
}

// GetIsFlattenedBodyOk returns a tuple with the IsFlattenedBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetIsFlattenedBodyOk() (*bool, bool) {
	if o == nil || o.IsFlattenedBody == nil {
		return nil, false
	}
	return o.IsFlattenedBody, true
}

// HasIsFlattenedBody returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasIsFlattenedBody() bool {
	if o != nil && o.IsFlattenedBody != nil {
		return true
	}

	return false
}

// SetIsFlattenedBody gets a reference to the given bool and assigns it to the IsFlattenedBody field.
func (o *BTInsertableInfo) SetIsFlattenedBody(v bool) {
	o.IsFlattenedBody = &v
}

// GetIsMesh returns the IsMesh field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetIsMesh() bool {
	if o == nil || o.IsMesh == nil {
		var ret bool
		return ret
	}
	return *o.IsMesh
}

// GetIsMeshOk returns a tuple with the IsMesh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetIsMeshOk() (*bool, bool) {
	if o == nil || o.IsMesh == nil {
		return nil, false
	}
	return o.IsMesh, true
}

// HasIsMesh returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasIsMesh() bool {
	if o != nil && o.IsMesh != nil {
		return true
	}

	return false
}

// SetIsMesh gets a reference to the given bool and assigns it to the IsMesh field.
func (o *BTInsertableInfo) SetIsMesh(v bool) {
	o.IsMesh = &v
}

// GetMeshState returns the MeshState field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetMeshState() GBTMeshState {
	if o == nil || o.MeshState == nil {
		var ret GBTMeshState
		return ret
	}
	return *o.MeshState
}

// GetMeshStateOk returns a tuple with the MeshState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetMeshStateOk() (*GBTMeshState, bool) {
	if o == nil || o.MeshState == nil {
		return nil, false
	}
	return o.MeshState, true
}

// HasMeshState returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasMeshState() bool {
	if o != nil && o.MeshState != nil {
		return true
	}

	return false
}

// SetMeshState gets a reference to the given GBTMeshState and assigns it to the MeshState field.
func (o *BTInsertableInfo) SetMeshState(v GBTMeshState) {
	o.MeshState = &v
}

// GetMicroversionId returns the MicroversionId field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetMicroversionId() string {
	if o == nil || o.MicroversionId == nil {
		var ret string
		return ret
	}
	return *o.MicroversionId
}

// GetMicroversionIdOk returns a tuple with the MicroversionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetMicroversionIdOk() (*string, bool) {
	if o == nil || o.MicroversionId == nil {
		return nil, false
	}
	return o.MicroversionId, true
}

// HasMicroversionId returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasMicroversionId() bool {
	if o != nil && o.MicroversionId != nil {
		return true
	}

	return false
}

// SetMicroversionId gets a reference to the given string and assigns it to the MicroversionId field.
func (o *BTInsertableInfo) SetMicroversionId(v string) {
	o.MicroversionId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTInsertableInfo) SetName(v string) {
	o.Name = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetParentIdOk() (*string, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *BTInsertableInfo) SetParentId(v string) {
	o.ParentId = &v
}

// GetPartIdentity returns the PartIdentity field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetPartIdentity() string {
	if o == nil || o.PartIdentity == nil {
		var ret string
		return ret
	}
	return *o.PartIdentity
}

// GetPartIdentityOk returns a tuple with the PartIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetPartIdentityOk() (*string, bool) {
	if o == nil || o.PartIdentity == nil {
		return nil, false
	}
	return o.PartIdentity, true
}

// HasPartIdentity returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasPartIdentity() bool {
	if o != nil && o.PartIdentity != nil {
		return true
	}

	return false
}

// SetPartIdentity gets a reference to the given string and assigns it to the PartIdentity field.
func (o *BTInsertableInfo) SetPartIdentity(v string) {
	o.PartIdentity = &v
}

// GetPartName returns the PartName field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetPartName() string {
	if o == nil || o.PartName == nil {
		var ret string
		return ret
	}
	return *o.PartName
}

// GetPartNameOk returns a tuple with the PartName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetPartNameOk() (*string, bool) {
	if o == nil || o.PartName == nil {
		return nil, false
	}
	return o.PartName, true
}

// HasPartName returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasPartName() bool {
	if o != nil && o.PartName != nil {
		return true
	}

	return false
}

// SetPartName gets a reference to the given string and assigns it to the PartName field.
func (o *BTInsertableInfo) SetPartName(v string) {
	o.PartName = &v
}

// GetPredictableThumbnailId returns the PredictableThumbnailId field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetPredictableThumbnailId() string {
	if o == nil || o.PredictableThumbnailId == nil {
		var ret string
		return ret
	}
	return *o.PredictableThumbnailId
}

// GetPredictableThumbnailIdOk returns a tuple with the PredictableThumbnailId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetPredictableThumbnailIdOk() (*string, bool) {
	if o == nil || o.PredictableThumbnailId == nil {
		return nil, false
	}
	return o.PredictableThumbnailId, true
}

// HasPredictableThumbnailId returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasPredictableThumbnailId() bool {
	if o != nil && o.PredictableThumbnailId != nil {
		return true
	}

	return false
}

// SetPredictableThumbnailId gets a reference to the given string and assigns it to the PredictableThumbnailId field.
func (o *BTInsertableInfo) SetPredictableThumbnailId(v string) {
	o.PredictableThumbnailId = &v
}

// GetSourceFileExtension returns the SourceFileExtension field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetSourceFileExtension() string {
	if o == nil || o.SourceFileExtension == nil {
		var ret string
		return ret
	}
	return *o.SourceFileExtension
}

// GetSourceFileExtensionOk returns a tuple with the SourceFileExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetSourceFileExtensionOk() (*string, bool) {
	if o == nil || o.SourceFileExtension == nil {
		return nil, false
	}
	return o.SourceFileExtension, true
}

// HasSourceFileExtension returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasSourceFileExtension() bool {
	if o != nil && o.SourceFileExtension != nil {
		return true
	}

	return false
}

// SetSourceFileExtension gets a reference to the given string and assigns it to the SourceFileExtension field.
func (o *BTInsertableInfo) SetSourceFileExtension(v string) {
	o.SourceFileExtension = &v
}

// GetThumbnailUri returns the ThumbnailUri field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetThumbnailUri() string {
	if o == nil || o.ThumbnailUri == nil {
		var ret string
		return ret
	}
	return *o.ThumbnailUri
}

// GetThumbnailUriOk returns a tuple with the ThumbnailUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetThumbnailUriOk() (*string, bool) {
	if o == nil || o.ThumbnailUri == nil {
		return nil, false
	}
	return o.ThumbnailUri, true
}

// HasThumbnailUri returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasThumbnailUri() bool {
	if o != nil && o.ThumbnailUri != nil {
		return true
	}

	return false
}

// SetThumbnailUri gets a reference to the given string and assigns it to the ThumbnailUri field.
func (o *BTInsertableInfo) SetThumbnailUri(v string) {
	o.ThumbnailUri = &v
}

// GetUnflattenedPartDeterministicId returns the UnflattenedPartDeterministicId field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetUnflattenedPartDeterministicId() string {
	if o == nil || o.UnflattenedPartDeterministicId == nil {
		var ret string
		return ret
	}
	return *o.UnflattenedPartDeterministicId
}

// GetUnflattenedPartDeterministicIdOk returns a tuple with the UnflattenedPartDeterministicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetUnflattenedPartDeterministicIdOk() (*string, bool) {
	if o == nil || o.UnflattenedPartDeterministicId == nil {
		return nil, false
	}
	return o.UnflattenedPartDeterministicId, true
}

// HasUnflattenedPartDeterministicId returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasUnflattenedPartDeterministicId() bool {
	if o != nil && o.UnflattenedPartDeterministicId != nil {
		return true
	}

	return false
}

// SetUnflattenedPartDeterministicId gets a reference to the given string and assigns it to the UnflattenedPartDeterministicId field.
func (o *BTInsertableInfo) SetUnflattenedPartDeterministicId(v string) {
	o.UnflattenedPartDeterministicId = &v
}

// GetVariableName returns the VariableName field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetVariableName() string {
	if o == nil || o.VariableName == nil {
		var ret string
		return ret
	}
	return *o.VariableName
}

// GetVariableNameOk returns a tuple with the VariableName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetVariableNameOk() (*string, bool) {
	if o == nil || o.VariableName == nil {
		return nil, false
	}
	return o.VariableName, true
}

// HasVariableName returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasVariableName() bool {
	if o != nil && o.VariableName != nil {
		return true
	}

	return false
}

// SetVariableName gets a reference to the given string and assigns it to the VariableName field.
func (o *BTInsertableInfo) SetVariableName(v string) {
	o.VariableName = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetVersionId() string {
	if o == nil || o.VersionId == nil {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetVersionIdOk() (*string, bool) {
	if o == nil || o.VersionId == nil {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasVersionId() bool {
	if o != nil && o.VersionId != nil {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *BTInsertableInfo) SetVersionId(v string) {
	o.VersionId = &v
}

// GetVersionName returns the VersionName field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetVersionName() string {
	if o == nil || o.VersionName == nil {
		var ret string
		return ret
	}
	return *o.VersionName
}

// GetVersionNameOk returns a tuple with the VersionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetVersionNameOk() (*string, bool) {
	if o == nil || o.VersionName == nil {
		return nil, false
	}
	return o.VersionName, true
}

// HasVersionName returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasVersionName() bool {
	if o != nil && o.VersionName != nil {
		return true
	}

	return false
}

// SetVersionName gets a reference to the given string and assigns it to the VersionName field.
func (o *BTInsertableInfo) SetVersionName(v string) {
	o.VersionName = &v
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetViewRef() string {
	if o == nil || o.ViewRef == nil {
		var ret string
		return ret
	}
	return *o.ViewRef
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetViewRefOk() (*string, bool) {
	if o == nil || o.ViewRef == nil {
		return nil, false
	}
	return o.ViewRef, true
}

// HasViewRef returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasViewRef() bool {
	if o != nil && o.ViewRef != nil {
		return true
	}

	return false
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *BTInsertableInfo) SetViewRef(v string) {
	o.ViewRef = &v
}

// GetWorkspaceId returns the WorkspaceId field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetWorkspaceId() string {
	if o == nil || o.WorkspaceId == nil {
		var ret string
		return ret
	}
	return *o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetWorkspaceIdOk() (*string, bool) {
	if o == nil || o.WorkspaceId == nil {
		return nil, false
	}
	return o.WorkspaceId, true
}

// HasWorkspaceId returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasWorkspaceId() bool {
	if o != nil && o.WorkspaceId != nil {
		return true
	}

	return false
}

// SetWorkspaceId gets a reference to the given string and assigns it to the WorkspaceId field.
func (o *BTInsertableInfo) SetWorkspaceId(v string) {
	o.WorkspaceId = &v
}

// GetWorkspaceName returns the WorkspaceName field value if set, zero value otherwise.
func (o *BTInsertableInfo) GetWorkspaceName() string {
	if o == nil || o.WorkspaceName == nil {
		var ret string
		return ret
	}
	return *o.WorkspaceName
}

// GetWorkspaceNameOk returns a tuple with the WorkspaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInsertableInfo) GetWorkspaceNameOk() (*string, bool) {
	if o == nil || o.WorkspaceName == nil {
		return nil, false
	}
	return o.WorkspaceName, true
}

// HasWorkspaceName returns a boolean if a field has been set.
func (o *BTInsertableInfo) HasWorkspaceName() bool {
	if o != nil && o.WorkspaceName != nil {
		return true
	}

	return false
}

// SetWorkspaceName gets a reference to the given string and assigns it to the WorkspaceName field.
func (o *BTInsertableInfo) SetWorkspaceName(v string) {
	o.WorkspaceName = &v
}

func (o BTInsertableInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BodyType != nil {
		toSerialize["bodyType"] = o.BodyType
	}
	if o.ClassType != nil {
		toSerialize["classType"] = o.ClassType
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.ConfigurationParameterValues != nil {
		toSerialize["configurationParameterValues"] = o.ConfigurationParameterValues
	}
	if o.ConfigurationParameters != nil {
		toSerialize["configurationParameters"] = o.ConfigurationParameters
	}
	if o.DataType != nil {
		toSerialize["dataType"] = o.DataType
	}
	if o.DeterministicId != nil {
		toSerialize["deterministicId"] = o.DeterministicId
	}
	if o.DocumentId != nil {
		toSerialize["documentId"] = o.DocumentId
	}
	if o.ElementId != nil {
		toSerialize["elementId"] = o.ElementId
	}
	if o.ElementName != nil {
		toSerialize["elementName"] = o.ElementName
	}
	if o.ElementType != nil {
		toSerialize["elementType"] = o.ElementType
	}
	if o.FeatureId != nil {
		toSerialize["featureId"] = o.FeatureId
	}
	if o.FeatureName != nil {
		toSerialize["featureName"] = o.FeatureName
	}
	if o.FeatureSpec != nil {
		toSerialize["featureSpec"] = o.FeatureSpec
	}
	if o.FeatureType != nil {
		toSerialize["featureType"] = o.FeatureType
	}
	if o.FsComputedPartPropertySpec != nil {
		toSerialize["fsComputedPartPropertySpec"] = o.FsComputedPartPropertySpec
	}
	if o.FsTableSpec != nil {
		toSerialize["fsTableSpec"] = o.FsTableSpec
	}
	if o.HasFaults != nil {
		toSerialize["hasFaults"] = o.HasFaults
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InsertableQuery != nil {
		toSerialize["insertableQuery"] = o.InsertableQuery
	}
	if o.IsFlattenedBody != nil {
		toSerialize["isFlattenedBody"] = o.IsFlattenedBody
	}
	if o.IsMesh != nil {
		toSerialize["isMesh"] = o.IsMesh
	}
	if o.MeshState != nil {
		toSerialize["meshState"] = o.MeshState
	}
	if o.MicroversionId != nil {
		toSerialize["microversionId"] = o.MicroversionId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ParentId != nil {
		toSerialize["parentId"] = o.ParentId
	}
	if o.PartIdentity != nil {
		toSerialize["partIdentity"] = o.PartIdentity
	}
	if o.PartName != nil {
		toSerialize["partName"] = o.PartName
	}
	if o.PredictableThumbnailId != nil {
		toSerialize["predictableThumbnailId"] = o.PredictableThumbnailId
	}
	if o.SourceFileExtension != nil {
		toSerialize["sourceFileExtension"] = o.SourceFileExtension
	}
	if o.ThumbnailUri != nil {
		toSerialize["thumbnailUri"] = o.ThumbnailUri
	}
	if o.UnflattenedPartDeterministicId != nil {
		toSerialize["unflattenedPartDeterministicId"] = o.UnflattenedPartDeterministicId
	}
	if o.VariableName != nil {
		toSerialize["variableName"] = o.VariableName
	}
	if o.VersionId != nil {
		toSerialize["versionId"] = o.VersionId
	}
	if o.VersionName != nil {
		toSerialize["versionName"] = o.VersionName
	}
	if o.ViewRef != nil {
		toSerialize["viewRef"] = o.ViewRef
	}
	if o.WorkspaceId != nil {
		toSerialize["workspaceId"] = o.WorkspaceId
	}
	if o.WorkspaceName != nil {
		toSerialize["workspaceName"] = o.WorkspaceName
	}
	return json.Marshal(toSerialize)
}

type NullableBTInsertableInfo struct {
	value *BTInsertableInfo
	isSet bool
}

func (v NullableBTInsertableInfo) Get() *BTInsertableInfo {
	return v.value
}

func (v *NullableBTInsertableInfo) Set(val *BTInsertableInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTInsertableInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTInsertableInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTInsertableInfo(val *BTInsertableInfo) *NullableBTInsertableInfo {
	return &NullableBTInsertableInfo{value: val, isSet: true}
}

func (v NullableBTInsertableInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTInsertableInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
