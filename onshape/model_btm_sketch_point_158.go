/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTMSketchPoint158 struct for BTMSketchPoint158
type BTMSketchPoint158 struct {
	BTMSketchGeomEntity5
	BtType *string `json:"btType,omitempty"`
	// Element microversion that is being imported.
	ImportMicroversion                  *string                   `json:"importMicroversion,omitempty"`
	NodeId                              *string                   `json:"nodeId,omitempty"`
	CombinedSketchEntityType            *CombinedSketchEntityType `json:"combinedSketchEntityType,omitempty"`
	EntityId                            *string                   `json:"entityId,omitempty"`
	EntityIdAndReplaceInDependentFields *string                   `json:"entityIdAndReplaceInDependentFields,omitempty"`
	Index                               *int32                    `json:"index,omitempty"`
	Namespace                           *string                   `json:"namespace,omitempty"`
	Parameters                          []BTMParameter1           `json:"parameters,omitempty"`
	ControlBoxIds                       []string                  `json:"controlBoxIds,omitempty"`
	EntityType                          *GBTSketchEntityType      `json:"entityType,omitempty"`
	FunctionName                        *string                   `json:"functionName,omitempty"`
	IsConstruction                      *bool                     `json:"isConstruction,omitempty"`
	IsFromEndpointSplineHandle          *bool                     `json:"isFromEndpointSplineHandle,omitempty"`
	IsFromSplineControlPolygon          *bool                     `json:"isFromSplineControlPolygon,omitempty"`
	IsFromSplineHandle                  *bool                     `json:"isFromSplineHandle,omitempty"`
	IsUserPoint                         *bool                     `json:"isUserPoint,omitempty"`
	X                                   *float64                  `json:"x,omitempty"`
	Y                                   *float64                  `json:"y,omitempty"`
}

// NewBTMSketchPoint158 instantiates a new BTMSketchPoint158 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMSketchPoint158() *BTMSketchPoint158 {
	this := BTMSketchPoint158{}
	return &this
}

// NewBTMSketchPoint158WithDefaults instantiates a new BTMSketchPoint158 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMSketchPoint158WithDefaults() *BTMSketchPoint158 {
	this := BTMSketchPoint158{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMSketchPoint158) SetBtType(v string) {
	o.BtType = &v
}

// GetImportMicroversion returns the ImportMicroversion field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetImportMicroversion() string {
	if o == nil || o.ImportMicroversion == nil {
		var ret string
		return ret
	}
	return *o.ImportMicroversion
}

// GetImportMicroversionOk returns a tuple with the ImportMicroversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetImportMicroversionOk() (*string, bool) {
	if o == nil || o.ImportMicroversion == nil {
		return nil, false
	}
	return o.ImportMicroversion, true
}

// HasImportMicroversion returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasImportMicroversion() bool {
	if o != nil && o.ImportMicroversion != nil {
		return true
	}

	return false
}

// SetImportMicroversion gets a reference to the given string and assigns it to the ImportMicroversion field.
func (o *BTMSketchPoint158) SetImportMicroversion(v string) {
	o.ImportMicroversion = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetNodeId() string {
	if o == nil || o.NodeId == nil {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetNodeIdOk() (*string, bool) {
	if o == nil || o.NodeId == nil {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasNodeId() bool {
	if o != nil && o.NodeId != nil {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *BTMSketchPoint158) SetNodeId(v string) {
	o.NodeId = &v
}

// GetCombinedSketchEntityType returns the CombinedSketchEntityType field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetCombinedSketchEntityType() CombinedSketchEntityType {
	if o == nil || o.CombinedSketchEntityType == nil {
		var ret CombinedSketchEntityType
		return ret
	}
	return *o.CombinedSketchEntityType
}

// GetCombinedSketchEntityTypeOk returns a tuple with the CombinedSketchEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetCombinedSketchEntityTypeOk() (*CombinedSketchEntityType, bool) {
	if o == nil || o.CombinedSketchEntityType == nil {
		return nil, false
	}
	return o.CombinedSketchEntityType, true
}

// HasCombinedSketchEntityType returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasCombinedSketchEntityType() bool {
	if o != nil && o.CombinedSketchEntityType != nil {
		return true
	}

	return false
}

// SetCombinedSketchEntityType gets a reference to the given CombinedSketchEntityType and assigns it to the CombinedSketchEntityType field.
func (o *BTMSketchPoint158) SetCombinedSketchEntityType(v CombinedSketchEntityType) {
	o.CombinedSketchEntityType = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetEntityId() string {
	if o == nil || o.EntityId == nil {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetEntityIdOk() (*string, bool) {
	if o == nil || o.EntityId == nil {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasEntityId() bool {
	if o != nil && o.EntityId != nil {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *BTMSketchPoint158) SetEntityId(v string) {
	o.EntityId = &v
}

// GetEntityIdAndReplaceInDependentFields returns the EntityIdAndReplaceInDependentFields field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetEntityIdAndReplaceInDependentFields() string {
	if o == nil || o.EntityIdAndReplaceInDependentFields == nil {
		var ret string
		return ret
	}
	return *o.EntityIdAndReplaceInDependentFields
}

// GetEntityIdAndReplaceInDependentFieldsOk returns a tuple with the EntityIdAndReplaceInDependentFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetEntityIdAndReplaceInDependentFieldsOk() (*string, bool) {
	if o == nil || o.EntityIdAndReplaceInDependentFields == nil {
		return nil, false
	}
	return o.EntityIdAndReplaceInDependentFields, true
}

// HasEntityIdAndReplaceInDependentFields returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasEntityIdAndReplaceInDependentFields() bool {
	if o != nil && o.EntityIdAndReplaceInDependentFields != nil {
		return true
	}

	return false
}

// SetEntityIdAndReplaceInDependentFields gets a reference to the given string and assigns it to the EntityIdAndReplaceInDependentFields field.
func (o *BTMSketchPoint158) SetEntityIdAndReplaceInDependentFields(v string) {
	o.EntityIdAndReplaceInDependentFields = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetIndex() int32 {
	if o == nil || o.Index == nil {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetIndexOk() (*int32, bool) {
	if o == nil || o.Index == nil {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasIndex() bool {
	if o != nil && o.Index != nil {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *BTMSketchPoint158) SetIndex(v int32) {
	o.Index = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *BTMSketchPoint158) SetNamespace(v string) {
	o.Namespace = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetParameters() []BTMParameter1 {
	if o == nil || o.Parameters == nil {
		var ret []BTMParameter1
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetParametersOk() ([]BTMParameter1, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []BTMParameter1 and assigns it to the Parameters field.
func (o *BTMSketchPoint158) SetParameters(v []BTMParameter1) {
	o.Parameters = v
}

// GetControlBoxIds returns the ControlBoxIds field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetControlBoxIds() []string {
	if o == nil || o.ControlBoxIds == nil {
		var ret []string
		return ret
	}
	return o.ControlBoxIds
}

// GetControlBoxIdsOk returns a tuple with the ControlBoxIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetControlBoxIdsOk() ([]string, bool) {
	if o == nil || o.ControlBoxIds == nil {
		return nil, false
	}
	return o.ControlBoxIds, true
}

// HasControlBoxIds returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasControlBoxIds() bool {
	if o != nil && o.ControlBoxIds != nil {
		return true
	}

	return false
}

// SetControlBoxIds gets a reference to the given []string and assigns it to the ControlBoxIds field.
func (o *BTMSketchPoint158) SetControlBoxIds(v []string) {
	o.ControlBoxIds = v
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetEntityType() GBTSketchEntityType {
	if o == nil || o.EntityType == nil {
		var ret GBTSketchEntityType
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetEntityTypeOk() (*GBTSketchEntityType, bool) {
	if o == nil || o.EntityType == nil {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasEntityType() bool {
	if o != nil && o.EntityType != nil {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given GBTSketchEntityType and assigns it to the EntityType field.
func (o *BTMSketchPoint158) SetEntityType(v GBTSketchEntityType) {
	o.EntityType = &v
}

// GetFunctionName returns the FunctionName field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetFunctionName() string {
	if o == nil || o.FunctionName == nil {
		var ret string
		return ret
	}
	return *o.FunctionName
}

// GetFunctionNameOk returns a tuple with the FunctionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetFunctionNameOk() (*string, bool) {
	if o == nil || o.FunctionName == nil {
		return nil, false
	}
	return o.FunctionName, true
}

// HasFunctionName returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasFunctionName() bool {
	if o != nil && o.FunctionName != nil {
		return true
	}

	return false
}

// SetFunctionName gets a reference to the given string and assigns it to the FunctionName field.
func (o *BTMSketchPoint158) SetFunctionName(v string) {
	o.FunctionName = &v
}

// GetIsConstruction returns the IsConstruction field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetIsConstruction() bool {
	if o == nil || o.IsConstruction == nil {
		var ret bool
		return ret
	}
	return *o.IsConstruction
}

// GetIsConstructionOk returns a tuple with the IsConstruction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetIsConstructionOk() (*bool, bool) {
	if o == nil || o.IsConstruction == nil {
		return nil, false
	}
	return o.IsConstruction, true
}

// HasIsConstruction returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasIsConstruction() bool {
	if o != nil && o.IsConstruction != nil {
		return true
	}

	return false
}

// SetIsConstruction gets a reference to the given bool and assigns it to the IsConstruction field.
func (o *BTMSketchPoint158) SetIsConstruction(v bool) {
	o.IsConstruction = &v
}

// GetIsFromEndpointSplineHandle returns the IsFromEndpointSplineHandle field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetIsFromEndpointSplineHandle() bool {
	if o == nil || o.IsFromEndpointSplineHandle == nil {
		var ret bool
		return ret
	}
	return *o.IsFromEndpointSplineHandle
}

// GetIsFromEndpointSplineHandleOk returns a tuple with the IsFromEndpointSplineHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetIsFromEndpointSplineHandleOk() (*bool, bool) {
	if o == nil || o.IsFromEndpointSplineHandle == nil {
		return nil, false
	}
	return o.IsFromEndpointSplineHandle, true
}

// HasIsFromEndpointSplineHandle returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasIsFromEndpointSplineHandle() bool {
	if o != nil && o.IsFromEndpointSplineHandle != nil {
		return true
	}

	return false
}

// SetIsFromEndpointSplineHandle gets a reference to the given bool and assigns it to the IsFromEndpointSplineHandle field.
func (o *BTMSketchPoint158) SetIsFromEndpointSplineHandle(v bool) {
	o.IsFromEndpointSplineHandle = &v
}

// GetIsFromSplineControlPolygon returns the IsFromSplineControlPolygon field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetIsFromSplineControlPolygon() bool {
	if o == nil || o.IsFromSplineControlPolygon == nil {
		var ret bool
		return ret
	}
	return *o.IsFromSplineControlPolygon
}

// GetIsFromSplineControlPolygonOk returns a tuple with the IsFromSplineControlPolygon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetIsFromSplineControlPolygonOk() (*bool, bool) {
	if o == nil || o.IsFromSplineControlPolygon == nil {
		return nil, false
	}
	return o.IsFromSplineControlPolygon, true
}

// HasIsFromSplineControlPolygon returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasIsFromSplineControlPolygon() bool {
	if o != nil && o.IsFromSplineControlPolygon != nil {
		return true
	}

	return false
}

// SetIsFromSplineControlPolygon gets a reference to the given bool and assigns it to the IsFromSplineControlPolygon field.
func (o *BTMSketchPoint158) SetIsFromSplineControlPolygon(v bool) {
	o.IsFromSplineControlPolygon = &v
}

// GetIsFromSplineHandle returns the IsFromSplineHandle field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetIsFromSplineHandle() bool {
	if o == nil || o.IsFromSplineHandle == nil {
		var ret bool
		return ret
	}
	return *o.IsFromSplineHandle
}

// GetIsFromSplineHandleOk returns a tuple with the IsFromSplineHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetIsFromSplineHandleOk() (*bool, bool) {
	if o == nil || o.IsFromSplineHandle == nil {
		return nil, false
	}
	return o.IsFromSplineHandle, true
}

// HasIsFromSplineHandle returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasIsFromSplineHandle() bool {
	if o != nil && o.IsFromSplineHandle != nil {
		return true
	}

	return false
}

// SetIsFromSplineHandle gets a reference to the given bool and assigns it to the IsFromSplineHandle field.
func (o *BTMSketchPoint158) SetIsFromSplineHandle(v bool) {
	o.IsFromSplineHandle = &v
}

// GetIsUserPoint returns the IsUserPoint field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetIsUserPoint() bool {
	if o == nil || o.IsUserPoint == nil {
		var ret bool
		return ret
	}
	return *o.IsUserPoint
}

// GetIsUserPointOk returns a tuple with the IsUserPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetIsUserPointOk() (*bool, bool) {
	if o == nil || o.IsUserPoint == nil {
		return nil, false
	}
	return o.IsUserPoint, true
}

// HasIsUserPoint returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasIsUserPoint() bool {
	if o != nil && o.IsUserPoint != nil {
		return true
	}

	return false
}

// SetIsUserPoint gets a reference to the given bool and assigns it to the IsUserPoint field.
func (o *BTMSketchPoint158) SetIsUserPoint(v bool) {
	o.IsUserPoint = &v
}

// GetX returns the X field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetX() float64 {
	if o == nil || o.X == nil {
		var ret float64
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetXOk() (*float64, bool) {
	if o == nil || o.X == nil {
		return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasX() bool {
	if o != nil && o.X != nil {
		return true
	}

	return false
}

// SetX gets a reference to the given float64 and assigns it to the X field.
func (o *BTMSketchPoint158) SetX(v float64) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetY() float64 {
	if o == nil || o.Y == nil {
		var ret float64
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetYOk() (*float64, bool) {
	if o == nil || o.Y == nil {
		return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasY() bool {
	if o != nil && o.Y != nil {
		return true
	}

	return false
}

// SetY gets a reference to the given float64 and assigns it to the Y field.
func (o *BTMSketchPoint158) SetY(v float64) {
	o.Y = &v
}

func (o BTMSketchPoint158) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTMSketchGeomEntity5, errBTMSketchGeomEntity5 := json.Marshal(o.BTMSketchGeomEntity5)
	if errBTMSketchGeomEntity5 != nil {
		return []byte{}, errBTMSketchGeomEntity5
	}
	errBTMSketchGeomEntity5 = json.Unmarshal([]byte(serializedBTMSketchGeomEntity5), &toSerialize)
	if errBTMSketchGeomEntity5 != nil {
		return []byte{}, errBTMSketchGeomEntity5
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.ImportMicroversion != nil {
		toSerialize["importMicroversion"] = o.ImportMicroversion
	}
	if o.NodeId != nil {
		toSerialize["nodeId"] = o.NodeId
	}
	if o.CombinedSketchEntityType != nil {
		toSerialize["combinedSketchEntityType"] = o.CombinedSketchEntityType
	}
	if o.EntityId != nil {
		toSerialize["entityId"] = o.EntityId
	}
	if o.EntityIdAndReplaceInDependentFields != nil {
		toSerialize["entityIdAndReplaceInDependentFields"] = o.EntityIdAndReplaceInDependentFields
	}
	if o.Index != nil {
		toSerialize["index"] = o.Index
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.ControlBoxIds != nil {
		toSerialize["controlBoxIds"] = o.ControlBoxIds
	}
	if o.EntityType != nil {
		toSerialize["entityType"] = o.EntityType
	}
	if o.FunctionName != nil {
		toSerialize["functionName"] = o.FunctionName
	}
	if o.IsConstruction != nil {
		toSerialize["isConstruction"] = o.IsConstruction
	}
	if o.IsFromEndpointSplineHandle != nil {
		toSerialize["isFromEndpointSplineHandle"] = o.IsFromEndpointSplineHandle
	}
	if o.IsFromSplineControlPolygon != nil {
		toSerialize["isFromSplineControlPolygon"] = o.IsFromSplineControlPolygon
	}
	if o.IsFromSplineHandle != nil {
		toSerialize["isFromSplineHandle"] = o.IsFromSplineHandle
	}
	if o.IsUserPoint != nil {
		toSerialize["isUserPoint"] = o.IsUserPoint
	}
	if o.X != nil {
		toSerialize["x"] = o.X
	}
	if o.Y != nil {
		toSerialize["y"] = o.Y
	}
	return json.Marshal(toSerialize)
}

type NullableBTMSketchPoint158 struct {
	value *BTMSketchPoint158
	isSet bool
}

func (v NullableBTMSketchPoint158) Get() *BTMSketchPoint158 {
	return v.value
}

func (v *NullableBTMSketchPoint158) Set(val *BTMSketchPoint158) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMSketchPoint158) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMSketchPoint158) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMSketchPoint158(val *BTMSketchPoint158) *NullableBTMSketchPoint158 {
	return &NullableBTMSketchPoint158{value: val, isSet: true}
}

func (v NullableBTMSketchPoint158) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMSketchPoint158) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
