/*
Onshape REST API

The Onshape REST API consumed by all client. # Authorization The simplest way to authorize and enable the **Try it out** functionality is to sign in to Onshape and use the current session. The **Authorize** button enables other authorization techniques. To ensure the current session isn't used when trying other authentication techniques, make sure to remove the Onshape cookie as per the instructions for your particular browser. Alternatively, a private or incognito window may be used. Here's [how to remove a specific cookie on Chrome](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site). - **Current Session** authorization is enabled by default if the browser is already signed in to [Onshape](/). - **OAuth2** authorization uses an Onshape OAuth2 app created on the [Onshape Developer Portal](https://dev-portal.onshape.com/oauthApps). The redirect URL field should include `https://cad.onshape.com/glassworks/explorer/oauth2-redirect.html`. - **API Key** authorization using basic authentication is also available. The keys can be generated in the [Onshape Developer Portal](https://dev-portal.onshape.com/keys). In the authentication dialog, enter the access key in the `Username` field, and enter the secret key in the `Password` field. Basic authentication should only be used during the development process since sharing API Keys provides the same level of access as a username and password.

API version: 1.171.24257-687de06de652
Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
	"fmt"
)

// BTLinearDimensionDisplayData330 - struct for BTLinearDimensionDisplayData330
type BTLinearDimensionDisplayData330 struct {
	implBTLinearDimensionDisplayData330 interface{}
}

// BTCenterlineDimensionDisplayData1798AsBTLinearDimensionDisplayData330 is a convenience function that returns BTCenterlineDimensionDisplayData1798 wrapped in BTLinearDimensionDisplayData330
func (o *BTCenterlineDimensionDisplayData1798) AsBTLinearDimensionDisplayData330() *BTLinearDimensionDisplayData330 {
	return &BTLinearDimensionDisplayData330{o}
}

// BTEllipseDiameterDimensionDisplayData1301AsBTLinearDimensionDisplayData330 is a convenience function that returns BTEllipseDiameterDimensionDisplayData1301 wrapped in BTLinearDimensionDisplayData330
func (o *BTEllipseDiameterDimensionDisplayData1301) AsBTLinearDimensionDisplayData330() *BTLinearDimensionDisplayData330 {
	return &BTLinearDimensionDisplayData330{o}
}

// NewBTLinearDimensionDisplayData330 instantiates a new BTLinearDimensionDisplayData330 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTLinearDimensionDisplayData330() *BTLinearDimensionDisplayData330 {
	this := BTLinearDimensionDisplayData330{Newbase_BTLinearDimensionDisplayData330()}
	return &this
}

// NewBTLinearDimensionDisplayData330WithDefaults instantiates a new BTLinearDimensionDisplayData330 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTLinearDimensionDisplayData330WithDefaults() *BTLinearDimensionDisplayData330 {
	this := BTLinearDimensionDisplayData330{Newbase_BTLinearDimensionDisplayData330WithDefaults()}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetBtType() string {
	type getResult interface {
		GetBtType() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtType()
	} else {
		var de string
		return de
	}
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetBtTypeOk() (*string, bool) {
	type getResult interface {
		GetBtTypeOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBtTypeOk()
	} else {
		return nil, false
	}
}

// HasBtType returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasBtType() bool {
	type getResult interface {
		HasBtType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasBtType()
	} else {
		return false
	}
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTLinearDimensionDisplayData330) SetBtType(v string) {
	type getResult interface {
		SetBtType(v string)
	}

	o.GetActualInstance().(getResult).SetBtType(v)
}

// GetCoordinateSystem returns the CoordinateSystem field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetCoordinateSystem() BTMatrix3x3340 {
	type getResult interface {
		GetCoordinateSystem() BTMatrix3x3340
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCoordinateSystem()
	} else {
		var de BTMatrix3x3340
		return de
	}
}

// GetCoordinateSystemOk returns a tuple with the CoordinateSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetCoordinateSystemOk() (*BTMatrix3x3340, bool) {
	type getResult interface {
		GetCoordinateSystemOk() (*BTMatrix3x3340, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCoordinateSystemOk()
	} else {
		return nil, false
	}
}

// HasCoordinateSystem returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasCoordinateSystem() bool {
	type getResult interface {
		HasCoordinateSystem() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasCoordinateSystem()
	} else {
		return false
	}
}

// SetCoordinateSystem gets a reference to the given BTMatrix3x3340 and assigns it to the CoordinateSystem field.
func (o *BTLinearDimensionDisplayData330) SetCoordinateSystem(v BTMatrix3x3340) {
	type getResult interface {
		SetCoordinateSystem(v BTMatrix3x3340)
	}

	o.GetActualInstance().(getResult).SetCoordinateSystem(v)
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetFeatureId() string {
	type getResult interface {
		GetFeatureId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFeatureId()
	} else {
		var de string
		return de
	}
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetFeatureIdOk() (*string, bool) {
	type getResult interface {
		GetFeatureIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFeatureIdOk()
	} else {
		return nil, false
	}
}

// HasFeatureId returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasFeatureId() bool {
	type getResult interface {
		HasFeatureId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasFeatureId()
	} else {
		return false
	}
}

// SetFeatureId gets a reference to the given string and assigns it to the FeatureId field.
func (o *BTLinearDimensionDisplayData330) SetFeatureId(v string) {
	type getResult interface {
		SetFeatureId(v string)
	}

	o.GetActualInstance().(getResult).SetFeatureId(v)
}

// GetHasMaximumLimit_ returns the HasMaximumLimit_ field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetHasMaximumLimit_() bool {
	type getResult interface {
		GetHasMaximumLimit_() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetHasMaximumLimit_()
	} else {
		var de bool
		return de
	}
}

// GetHasMaximumLimit_Ok returns a tuple with the HasMaximumLimit_ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetHasMaximumLimit_Ok() (*bool, bool) {
	type getResult interface {
		GetHasMaximumLimit_Ok() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetHasMaximumLimit_Ok()
	} else {
		return nil, false
	}
}

// HasHasMaximumLimit_ returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasHasMaximumLimit_() bool {
	type getResult interface {
		HasHasMaximumLimit_() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasHasMaximumLimit_()
	} else {
		return false
	}
}

// SetHasMaximumLimit_ gets a reference to the given bool and assigns it to the HasMaximumLimit_ field.
func (o *BTLinearDimensionDisplayData330) SetHasMaximumLimit_(v bool) {
	type getResult interface {
		SetHasMaximumLimit_(v bool)
	}

	o.GetActualInstance().(getResult).SetHasMaximumLimit_(v)
}

// GetHasMinimumLimit_ returns the HasMinimumLimit_ field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetHasMinimumLimit_() bool {
	type getResult interface {
		GetHasMinimumLimit_() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetHasMinimumLimit_()
	} else {
		var de bool
		return de
	}
}

// GetHasMinimumLimit_Ok returns a tuple with the HasMinimumLimit_ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetHasMinimumLimit_Ok() (*bool, bool) {
	type getResult interface {
		GetHasMinimumLimit_Ok() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetHasMinimumLimit_Ok()
	} else {
		return nil, false
	}
}

// HasHasMinimumLimit_ returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasHasMinimumLimit_() bool {
	type getResult interface {
		HasHasMinimumLimit_() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasHasMinimumLimit_()
	} else {
		return false
	}
}

// SetHasMinimumLimit_ gets a reference to the given bool and assigns it to the HasMinimumLimit_ field.
func (o *BTLinearDimensionDisplayData330) SetHasMinimumLimit_(v bool) {
	type getResult interface {
		SetHasMinimumLimit_(v bool)
	}

	o.GetActualInstance().(getResult).SetHasMinimumLimit_(v)
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetId() string {
	type getResult interface {
		GetId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetId()
	} else {
		var de string
		return de
	}
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetIdOk() (*string, bool) {
	type getResult interface {
		GetIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIdOk()
	} else {
		return nil, false
	}
}

// HasId returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasId() bool {
	type getResult interface {
		HasId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasId()
	} else {
		return false
	}
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTLinearDimensionDisplayData330) SetId(v string) {
	type getResult interface {
		SetId(v string)
	}

	o.GetActualInstance().(getResult).SetId(v)
}

// GetIsAssociatedWithFlat returns the IsAssociatedWithFlat field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetIsAssociatedWithFlat() bool {
	type getResult interface {
		GetIsAssociatedWithFlat() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsAssociatedWithFlat()
	} else {
		var de bool
		return de
	}
}

// GetIsAssociatedWithFlatOk returns a tuple with the IsAssociatedWithFlat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetIsAssociatedWithFlatOk() (*bool, bool) {
	type getResult interface {
		GetIsAssociatedWithFlatOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsAssociatedWithFlatOk()
	} else {
		return nil, false
	}
}

// HasIsAssociatedWithFlat returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasIsAssociatedWithFlat() bool {
	type getResult interface {
		HasIsAssociatedWithFlat() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIsAssociatedWithFlat()
	} else {
		return false
	}
}

// SetIsAssociatedWithFlat gets a reference to the given bool and assigns it to the IsAssociatedWithFlat field.
func (o *BTLinearDimensionDisplayData330) SetIsAssociatedWithFlat(v bool) {
	type getResult interface {
		SetIsAssociatedWithFlat(v bool)
	}

	o.GetActualInstance().(getResult).SetIsAssociatedWithFlat(v)
}

// GetIsDriven returns the IsDriven field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetIsDriven() bool {
	type getResult interface {
		GetIsDriven() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsDriven()
	} else {
		var de bool
		return de
	}
}

// GetIsDrivenOk returns a tuple with the IsDriven field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetIsDrivenOk() (*bool, bool) {
	type getResult interface {
		GetIsDrivenOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsDrivenOk()
	} else {
		return nil, false
	}
}

// HasIsDriven returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasIsDriven() bool {
	type getResult interface {
		HasIsDriven() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIsDriven()
	} else {
		return false
	}
}

// SetIsDriven gets a reference to the given bool and assigns it to the IsDriven field.
func (o *BTLinearDimensionDisplayData330) SetIsDriven(v bool) {
	type getResult interface {
		SetIsDriven(v bool)
	}

	o.GetActualInstance().(getResult).SetIsDriven(v)
}

// GetIsOverDefined returns the IsOverDefined field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetIsOverDefined() bool {
	type getResult interface {
		GetIsOverDefined() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsOverDefined()
	} else {
		var de bool
		return de
	}
}

// GetIsOverDefinedOk returns a tuple with the IsOverDefined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetIsOverDefinedOk() (*bool, bool) {
	type getResult interface {
		GetIsOverDefinedOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsOverDefinedOk()
	} else {
		return nil, false
	}
}

// HasIsOverDefined returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasIsOverDefined() bool {
	type getResult interface {
		HasIsOverDefined() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIsOverDefined()
	} else {
		return false
	}
}

// SetIsOverDefined gets a reference to the given bool and assigns it to the IsOverDefined field.
func (o *BTLinearDimensionDisplayData330) SetIsOverDefined(v bool) {
	type getResult interface {
		SetIsOverDefined(v bool)
	}

	o.GetActualInstance().(getResult).SetIsOverDefined(v)
}

// GetMaximumLimit returns the MaximumLimit field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetMaximumLimit() float64 {
	type getResult interface {
		GetMaximumLimit() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetMaximumLimit()
	} else {
		var de float64
		return de
	}
}

// GetMaximumLimitOk returns a tuple with the MaximumLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetMaximumLimitOk() (*float64, bool) {
	type getResult interface {
		GetMaximumLimitOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetMaximumLimitOk()
	} else {
		return nil, false
	}
}

// HasMaximumLimit returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasMaximumLimit() bool {
	type getResult interface {
		HasMaximumLimit() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasMaximumLimit()
	} else {
		return false
	}
}

// SetMaximumLimit gets a reference to the given float64 and assigns it to the MaximumLimit field.
func (o *BTLinearDimensionDisplayData330) SetMaximumLimit(v float64) {
	type getResult interface {
		SetMaximumLimit(v float64)
	}

	o.GetActualInstance().(getResult).SetMaximumLimit(v)
}

// GetMinimumLimit returns the MinimumLimit field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetMinimumLimit() float64 {
	type getResult interface {
		GetMinimumLimit() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetMinimumLimit()
	} else {
		var de float64
		return de
	}
}

// GetMinimumLimitOk returns a tuple with the MinimumLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetMinimumLimitOk() (*float64, bool) {
	type getResult interface {
		GetMinimumLimitOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetMinimumLimitOk()
	} else {
		return nil, false
	}
}

// HasMinimumLimit returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasMinimumLimit() bool {
	type getResult interface {
		HasMinimumLimit() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasMinimumLimit()
	} else {
		return false
	}
}

// SetMinimumLimit gets a reference to the given float64 and assigns it to the MinimumLimit field.
func (o *BTLinearDimensionDisplayData330) SetMinimumLimit(v float64) {
	type getResult interface {
		SetMinimumLimit(v float64)
	}

	o.GetActualInstance().(getResult).SetMinimumLimit(v)
}

// GetParameterId returns the ParameterId field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetParameterId() string {
	type getResult interface {
		GetParameterId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParameterId()
	} else {
		var de string
		return de
	}
}

// GetParameterIdOk returns a tuple with the ParameterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetParameterIdOk() (*string, bool) {
	type getResult interface {
		GetParameterIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParameterIdOk()
	} else {
		return nil, false
	}
}

// HasParameterId returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasParameterId() bool {
	type getResult interface {
		HasParameterId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasParameterId()
	} else {
		return false
	}
}

// SetParameterId gets a reference to the given string and assigns it to the ParameterId field.
func (o *BTLinearDimensionDisplayData330) SetParameterId(v string) {
	type getResult interface {
		SetParameterId(v string)
	}

	o.GetActualInstance().(getResult).SetParameterId(v)
}

// GetPlaneMatrix returns the PlaneMatrix field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetPlaneMatrix() BTBSMatrix386 {
	type getResult interface {
		GetPlaneMatrix() BTBSMatrix386
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPlaneMatrix()
	} else {
		var de BTBSMatrix386
		return de
	}
}

// GetPlaneMatrixOk returns a tuple with the PlaneMatrix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetPlaneMatrixOk() (*BTBSMatrix386, bool) {
	type getResult interface {
		GetPlaneMatrixOk() (*BTBSMatrix386, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPlaneMatrixOk()
	} else {
		return nil, false
	}
}

// HasPlaneMatrix returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasPlaneMatrix() bool {
	type getResult interface {
		HasPlaneMatrix() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasPlaneMatrix()
	} else {
		return false
	}
}

// SetPlaneMatrix gets a reference to the given BTBSMatrix386 and assigns it to the PlaneMatrix field.
func (o *BTLinearDimensionDisplayData330) SetPlaneMatrix(v BTBSMatrix386) {
	type getResult interface {
		SetPlaneMatrix(v BTBSMatrix386)
	}

	o.GetActualInstance().(getResult).SetPlaneMatrix(v)
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetValue() float64 {
	type getResult interface {
		GetValue() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetValue()
	} else {
		var de float64
		return de
	}
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetValueOk() (*float64, bool) {
	type getResult interface {
		GetValueOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetValueOk()
	} else {
		return nil, false
	}
}

// HasValue returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasValue() bool {
	type getResult interface {
		HasValue() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasValue()
	} else {
		return false
	}
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *BTLinearDimensionDisplayData330) SetValue(v float64) {
	type getResult interface {
		SetValue(v float64)
	}

	o.GetActualInstance().(getResult).SetValue(v)
}

// GetPositionX returns the PositionX field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetPositionX() float64 {
	type getResult interface {
		GetPositionX() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPositionX()
	} else {
		var de float64
		return de
	}
}

// GetPositionXOk returns a tuple with the PositionX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetPositionXOk() (*float64, bool) {
	type getResult interface {
		GetPositionXOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPositionXOk()
	} else {
		return nil, false
	}
}

// HasPositionX returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasPositionX() bool {
	type getResult interface {
		HasPositionX() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasPositionX()
	} else {
		return false
	}
}

// SetPositionX gets a reference to the given float64 and assigns it to the PositionX field.
func (o *BTLinearDimensionDisplayData330) SetPositionX(v float64) {
	type getResult interface {
		SetPositionX(v float64)
	}

	o.GetActualInstance().(getResult).SetPositionX(v)
}

// GetPositionY returns the PositionY field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetPositionY() float64 {
	type getResult interface {
		GetPositionY() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPositionY()
	} else {
		var de float64
		return de
	}
}

// GetPositionYOk returns a tuple with the PositionY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetPositionYOk() (*float64, bool) {
	type getResult interface {
		GetPositionYOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPositionYOk()
	} else {
		return nil, false
	}
}

// HasPositionY returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasPositionY() bool {
	type getResult interface {
		HasPositionY() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasPositionY()
	} else {
		return false
	}
}

// SetPositionY gets a reference to the given float64 and assigns it to the PositionY field.
func (o *BTLinearDimensionDisplayData330) SetPositionY(v float64) {
	type getResult interface {
		SetPositionY(v float64)
	}

	o.GetActualInstance().(getResult).SetPositionY(v)
}

// GetWitnessEndPoint0X returns the WitnessEndPoint0X field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetWitnessEndPoint0X() float64 {
	type getResult interface {
		GetWitnessEndPoint0X() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint0X()
	} else {
		var de float64
		return de
	}
}

// GetWitnessEndPoint0XOk returns a tuple with the WitnessEndPoint0X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetWitnessEndPoint0XOk() (*float64, bool) {
	type getResult interface {
		GetWitnessEndPoint0XOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint0XOk()
	} else {
		return nil, false
	}
}

// HasWitnessEndPoint0X returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasWitnessEndPoint0X() bool {
	type getResult interface {
		HasWitnessEndPoint0X() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasWitnessEndPoint0X()
	} else {
		return false
	}
}

// SetWitnessEndPoint0X gets a reference to the given float64 and assigns it to the WitnessEndPoint0X field.
func (o *BTLinearDimensionDisplayData330) SetWitnessEndPoint0X(v float64) {
	type getResult interface {
		SetWitnessEndPoint0X(v float64)
	}

	o.GetActualInstance().(getResult).SetWitnessEndPoint0X(v)
}

// GetWitnessEndPoint0Y returns the WitnessEndPoint0Y field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetWitnessEndPoint0Y() float64 {
	type getResult interface {
		GetWitnessEndPoint0Y() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint0Y()
	} else {
		var de float64
		return de
	}
}

// GetWitnessEndPoint0YOk returns a tuple with the WitnessEndPoint0Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetWitnessEndPoint0YOk() (*float64, bool) {
	type getResult interface {
		GetWitnessEndPoint0YOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint0YOk()
	} else {
		return nil, false
	}
}

// HasWitnessEndPoint0Y returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasWitnessEndPoint0Y() bool {
	type getResult interface {
		HasWitnessEndPoint0Y() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasWitnessEndPoint0Y()
	} else {
		return false
	}
}

// SetWitnessEndPoint0Y gets a reference to the given float64 and assigns it to the WitnessEndPoint0Y field.
func (o *BTLinearDimensionDisplayData330) SetWitnessEndPoint0Y(v float64) {
	type getResult interface {
		SetWitnessEndPoint0Y(v float64)
	}

	o.GetActualInstance().(getResult).SetWitnessEndPoint0Y(v)
}

// GetWitnessEndPoint1X returns the WitnessEndPoint1X field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetWitnessEndPoint1X() float64 {
	type getResult interface {
		GetWitnessEndPoint1X() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint1X()
	} else {
		var de float64
		return de
	}
}

// GetWitnessEndPoint1XOk returns a tuple with the WitnessEndPoint1X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetWitnessEndPoint1XOk() (*float64, bool) {
	type getResult interface {
		GetWitnessEndPoint1XOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint1XOk()
	} else {
		return nil, false
	}
}

// HasWitnessEndPoint1X returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasWitnessEndPoint1X() bool {
	type getResult interface {
		HasWitnessEndPoint1X() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasWitnessEndPoint1X()
	} else {
		return false
	}
}

// SetWitnessEndPoint1X gets a reference to the given float64 and assigns it to the WitnessEndPoint1X field.
func (o *BTLinearDimensionDisplayData330) SetWitnessEndPoint1X(v float64) {
	type getResult interface {
		SetWitnessEndPoint1X(v float64)
	}

	o.GetActualInstance().(getResult).SetWitnessEndPoint1X(v)
}

// GetWitnessEndPoint1Y returns the WitnessEndPoint1Y field value if set, zero value otherwise.
func (o *BTLinearDimensionDisplayData330) GetWitnessEndPoint1Y() float64 {
	type getResult interface {
		GetWitnessEndPoint1Y() float64
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint1Y()
	} else {
		var de float64
		return de
	}
}

// GetWitnessEndPoint1YOk returns a tuple with the WitnessEndPoint1Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTLinearDimensionDisplayData330) GetWitnessEndPoint1YOk() (*float64, bool) {
	type getResult interface {
		GetWitnessEndPoint1YOk() (*float64, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetWitnessEndPoint1YOk()
	} else {
		return nil, false
	}
}

// HasWitnessEndPoint1Y returns a boolean if a field has been set.
func (o *BTLinearDimensionDisplayData330) HasWitnessEndPoint1Y() bool {
	type getResult interface {
		HasWitnessEndPoint1Y() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasWitnessEndPoint1Y()
	} else {
		return false
	}
}

// SetWitnessEndPoint1Y gets a reference to the given float64 and assigns it to the WitnessEndPoint1Y field.
func (o *BTLinearDimensionDisplayData330) SetWitnessEndPoint1Y(v float64) {
	type getResult interface {
		SetWitnessEndPoint1Y(v float64)
	}

	o.GetActualInstance().(getResult).SetWitnessEndPoint1Y(v)
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *BTLinearDimensionDisplayData330) UnmarshalJSON(data []byte) error {
	var err error
	// use discriminator value to speed up the lookup
	var jsonDict map[string]interface{}
	err = newStrictDecoder(data).Decode(&jsonDict)
	if err != nil {
		return fmt.Errorf("Failed to unmarshal JSON into map for the discriminator lookup.")
	}

	// check if the discriminator value is 'BTCenterlineDimensionDisplayData-1798'
	if jsonDict["btType"] == "BTCenterlineDimensionDisplayData-1798" {
		// try to unmarshal JSON data into BTCenterlineDimensionDisplayData1798
		var qr *BTCenterlineDimensionDisplayData1798
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTLinearDimensionDisplayData330 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTLinearDimensionDisplayData330 = nil
			return fmt.Errorf("Failed to unmarshal BTLinearDimensionDisplayData330 as BTCenterlineDimensionDisplayData1798: %s", err.Error())
		}
	}

	// check if the discriminator value is 'BTEllipseDiameterDimensionDisplayData-1301'
	if jsonDict["btType"] == "BTEllipseDiameterDimensionDisplayData-1301" {
		// try to unmarshal JSON data into BTEllipseDiameterDimensionDisplayData1301
		var qr *BTEllipseDiameterDimensionDisplayData1301
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTLinearDimensionDisplayData330 = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTLinearDimensionDisplayData330 = nil
			return fmt.Errorf("Failed to unmarshal BTLinearDimensionDisplayData330 as BTEllipseDiameterDimensionDisplayData1301: %s", err.Error())
		}
	}

	var qtx *base_BTLinearDimensionDisplayData330
	err = json.Unmarshal(data, &qtx)
	if err == nil {
		dst.implBTLinearDimensionDisplayData330 = qtx
		return nil // data stored in dst.base_BTLinearDimensionDisplayData330, return on the first match
	} else {
		dst.implBTLinearDimensionDisplayData330 = nil
		return fmt.Errorf("Failed to unmarshal BTLinearDimensionDisplayData330 as base_BTLinearDimensionDisplayData330: %s", err.Error())
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BTLinearDimensionDisplayData330) MarshalJSON() ([]byte, error) {
	ret := src.GetActualInstance()
	if ret == nil {
		return nil, nil // no data in oneOf schemas
	} else {
		return json.Marshal(&ret)
	}
}

// Get the actual instance
func (obj *BTLinearDimensionDisplayData330) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	return obj.implBTLinearDimensionDisplayData330
}

type NullableBTLinearDimensionDisplayData330 struct {
	value *BTLinearDimensionDisplayData330
	isSet bool
}

func (v NullableBTLinearDimensionDisplayData330) Get() *BTLinearDimensionDisplayData330 {
	return v.value
}

func (v *NullableBTLinearDimensionDisplayData330) Set(val *BTLinearDimensionDisplayData330) {
	v.value = val
	v.isSet = true
}

func (v NullableBTLinearDimensionDisplayData330) IsSet() bool {
	return v.isSet
}

func (v *NullableBTLinearDimensionDisplayData330) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTLinearDimensionDisplayData330(val *BTLinearDimensionDisplayData330) *NullableBTLinearDimensionDisplayData330 {
	return &NullableBTLinearDimensionDisplayData330{value: val, isSet: true}
}

func (v NullableBTLinearDimensionDisplayData330) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTLinearDimensionDisplayData330) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type base_BTLinearDimensionDisplayData330 struct {
	BtType               *string         `json:"btType,omitempty"`
	CoordinateSystem     *BTMatrix3x3340 `json:"coordinateSystem,omitempty"`
	FeatureId            *string         `json:"featureId,omitempty"`
	HasMaximumLimit_     *bool           `json:"hasMaximumLimit,omitempty"`
	HasMinimumLimit_     *bool           `json:"hasMinimumLimit,omitempty"`
	Id                   *string         `json:"id,omitempty"`
	IsAssociatedWithFlat *bool           `json:"isAssociatedWithFlat,omitempty"`
	IsDriven             *bool           `json:"isDriven,omitempty"`
	IsOverDefined        *bool           `json:"isOverDefined,omitempty"`
	MaximumLimit         *float64        `json:"maximumLimit,omitempty"`
	MinimumLimit         *float64        `json:"minimumLimit,omitempty"`
	ParameterId          *string         `json:"parameterId,omitempty"`
	PlaneMatrix          *BTBSMatrix386  `json:"planeMatrix,omitempty"`
	Value                *float64        `json:"value,omitempty"`
	PositionX            *float64        `json:"positionX,omitempty"`
	PositionY            *float64        `json:"positionY,omitempty"`
	WitnessEndPoint0X    *float64        `json:"witnessEndPoint0X,omitempty"`
	WitnessEndPoint0Y    *float64        `json:"witnessEndPoint0Y,omitempty"`
	WitnessEndPoint1X    *float64        `json:"witnessEndPoint1X,omitempty"`
	WitnessEndPoint1Y    *float64        `json:"witnessEndPoint1Y,omitempty"`
}

// Newbase_BTLinearDimensionDisplayData330 instantiates a new base_BTLinearDimensionDisplayData330 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func Newbase_BTLinearDimensionDisplayData330() *base_BTLinearDimensionDisplayData330 {
	this := base_BTLinearDimensionDisplayData330{}
	return &this
}

// Newbase_BTLinearDimensionDisplayData330WithDefaults instantiates a new base_BTLinearDimensionDisplayData330 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func Newbase_BTLinearDimensionDisplayData330WithDefaults() *base_BTLinearDimensionDisplayData330 {
	this := base_BTLinearDimensionDisplayData330{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *base_BTLinearDimensionDisplayData330) SetBtType(v string) {
	o.BtType = &v
}

// GetCoordinateSystem returns the CoordinateSystem field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetCoordinateSystem() BTMatrix3x3340 {
	if o == nil || o.CoordinateSystem == nil {
		var ret BTMatrix3x3340
		return ret
	}
	return *o.CoordinateSystem
}

// GetCoordinateSystemOk returns a tuple with the CoordinateSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetCoordinateSystemOk() (*BTMatrix3x3340, bool) {
	if o == nil || o.CoordinateSystem == nil {
		return nil, false
	}
	return o.CoordinateSystem, true
}

// HasCoordinateSystem returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasCoordinateSystem() bool {
	if o != nil && o.CoordinateSystem != nil {
		return true
	}

	return false
}

// SetCoordinateSystem gets a reference to the given BTMatrix3x3340 and assigns it to the CoordinateSystem field.
func (o *base_BTLinearDimensionDisplayData330) SetCoordinateSystem(v BTMatrix3x3340) {
	o.CoordinateSystem = &v
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetFeatureId() string {
	if o == nil || o.FeatureId == nil {
		var ret string
		return ret
	}
	return *o.FeatureId
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetFeatureIdOk() (*string, bool) {
	if o == nil || o.FeatureId == nil {
		return nil, false
	}
	return o.FeatureId, true
}

// HasFeatureId returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasFeatureId() bool {
	if o != nil && o.FeatureId != nil {
		return true
	}

	return false
}

// SetFeatureId gets a reference to the given string and assigns it to the FeatureId field.
func (o *base_BTLinearDimensionDisplayData330) SetFeatureId(v string) {
	o.FeatureId = &v
}

// GetHasMaximumLimit_ returns the HasMaximumLimit_ field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetHasMaximumLimit_() bool {
	if o == nil || o.HasMaximumLimit_ == nil {
		var ret bool
		return ret
	}
	return *o.HasMaximumLimit_
}

// GetHasMaximumLimit_Ok returns a tuple with the HasMaximumLimit_ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetHasMaximumLimit_Ok() (*bool, bool) {
	if o == nil || o.HasMaximumLimit_ == nil {
		return nil, false
	}
	return o.HasMaximumLimit_, true
}

// HasHasMaximumLimit_ returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasHasMaximumLimit_() bool {
	if o != nil && o.HasMaximumLimit_ != nil {
		return true
	}

	return false
}

// SetHasMaximumLimit_ gets a reference to the given bool and assigns it to the HasMaximumLimit_ field.
func (o *base_BTLinearDimensionDisplayData330) SetHasMaximumLimit_(v bool) {
	o.HasMaximumLimit_ = &v
}

// GetHasMinimumLimit_ returns the HasMinimumLimit_ field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetHasMinimumLimit_() bool {
	if o == nil || o.HasMinimumLimit_ == nil {
		var ret bool
		return ret
	}
	return *o.HasMinimumLimit_
}

// GetHasMinimumLimit_Ok returns a tuple with the HasMinimumLimit_ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetHasMinimumLimit_Ok() (*bool, bool) {
	if o == nil || o.HasMinimumLimit_ == nil {
		return nil, false
	}
	return o.HasMinimumLimit_, true
}

// HasHasMinimumLimit_ returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasHasMinimumLimit_() bool {
	if o != nil && o.HasMinimumLimit_ != nil {
		return true
	}

	return false
}

// SetHasMinimumLimit_ gets a reference to the given bool and assigns it to the HasMinimumLimit_ field.
func (o *base_BTLinearDimensionDisplayData330) SetHasMinimumLimit_(v bool) {
	o.HasMinimumLimit_ = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *base_BTLinearDimensionDisplayData330) SetId(v string) {
	o.Id = &v
}

// GetIsAssociatedWithFlat returns the IsAssociatedWithFlat field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetIsAssociatedWithFlat() bool {
	if o == nil || o.IsAssociatedWithFlat == nil {
		var ret bool
		return ret
	}
	return *o.IsAssociatedWithFlat
}

// GetIsAssociatedWithFlatOk returns a tuple with the IsAssociatedWithFlat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetIsAssociatedWithFlatOk() (*bool, bool) {
	if o == nil || o.IsAssociatedWithFlat == nil {
		return nil, false
	}
	return o.IsAssociatedWithFlat, true
}

// HasIsAssociatedWithFlat returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasIsAssociatedWithFlat() bool {
	if o != nil && o.IsAssociatedWithFlat != nil {
		return true
	}

	return false
}

// SetIsAssociatedWithFlat gets a reference to the given bool and assigns it to the IsAssociatedWithFlat field.
func (o *base_BTLinearDimensionDisplayData330) SetIsAssociatedWithFlat(v bool) {
	o.IsAssociatedWithFlat = &v
}

// GetIsDriven returns the IsDriven field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetIsDriven() bool {
	if o == nil || o.IsDriven == nil {
		var ret bool
		return ret
	}
	return *o.IsDriven
}

// GetIsDrivenOk returns a tuple with the IsDriven field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetIsDrivenOk() (*bool, bool) {
	if o == nil || o.IsDriven == nil {
		return nil, false
	}
	return o.IsDriven, true
}

// HasIsDriven returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasIsDriven() bool {
	if o != nil && o.IsDriven != nil {
		return true
	}

	return false
}

// SetIsDriven gets a reference to the given bool and assigns it to the IsDriven field.
func (o *base_BTLinearDimensionDisplayData330) SetIsDriven(v bool) {
	o.IsDriven = &v
}

// GetIsOverDefined returns the IsOverDefined field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetIsOverDefined() bool {
	if o == nil || o.IsOverDefined == nil {
		var ret bool
		return ret
	}
	return *o.IsOverDefined
}

// GetIsOverDefinedOk returns a tuple with the IsOverDefined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetIsOverDefinedOk() (*bool, bool) {
	if o == nil || o.IsOverDefined == nil {
		return nil, false
	}
	return o.IsOverDefined, true
}

// HasIsOverDefined returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasIsOverDefined() bool {
	if o != nil && o.IsOverDefined != nil {
		return true
	}

	return false
}

// SetIsOverDefined gets a reference to the given bool and assigns it to the IsOverDefined field.
func (o *base_BTLinearDimensionDisplayData330) SetIsOverDefined(v bool) {
	o.IsOverDefined = &v
}

// GetMaximumLimit returns the MaximumLimit field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetMaximumLimit() float64 {
	if o == nil || o.MaximumLimit == nil {
		var ret float64
		return ret
	}
	return *o.MaximumLimit
}

// GetMaximumLimitOk returns a tuple with the MaximumLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetMaximumLimitOk() (*float64, bool) {
	if o == nil || o.MaximumLimit == nil {
		return nil, false
	}
	return o.MaximumLimit, true
}

// HasMaximumLimit returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasMaximumLimit() bool {
	if o != nil && o.MaximumLimit != nil {
		return true
	}

	return false
}

// SetMaximumLimit gets a reference to the given float64 and assigns it to the MaximumLimit field.
func (o *base_BTLinearDimensionDisplayData330) SetMaximumLimit(v float64) {
	o.MaximumLimit = &v
}

// GetMinimumLimit returns the MinimumLimit field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetMinimumLimit() float64 {
	if o == nil || o.MinimumLimit == nil {
		var ret float64
		return ret
	}
	return *o.MinimumLimit
}

// GetMinimumLimitOk returns a tuple with the MinimumLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetMinimumLimitOk() (*float64, bool) {
	if o == nil || o.MinimumLimit == nil {
		return nil, false
	}
	return o.MinimumLimit, true
}

// HasMinimumLimit returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasMinimumLimit() bool {
	if o != nil && o.MinimumLimit != nil {
		return true
	}

	return false
}

// SetMinimumLimit gets a reference to the given float64 and assigns it to the MinimumLimit field.
func (o *base_BTLinearDimensionDisplayData330) SetMinimumLimit(v float64) {
	o.MinimumLimit = &v
}

// GetParameterId returns the ParameterId field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetParameterId() string {
	if o == nil || o.ParameterId == nil {
		var ret string
		return ret
	}
	return *o.ParameterId
}

// GetParameterIdOk returns a tuple with the ParameterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetParameterIdOk() (*string, bool) {
	if o == nil || o.ParameterId == nil {
		return nil, false
	}
	return o.ParameterId, true
}

// HasParameterId returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasParameterId() bool {
	if o != nil && o.ParameterId != nil {
		return true
	}

	return false
}

// SetParameterId gets a reference to the given string and assigns it to the ParameterId field.
func (o *base_BTLinearDimensionDisplayData330) SetParameterId(v string) {
	o.ParameterId = &v
}

// GetPlaneMatrix returns the PlaneMatrix field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetPlaneMatrix() BTBSMatrix386 {
	if o == nil || o.PlaneMatrix == nil {
		var ret BTBSMatrix386
		return ret
	}
	return *o.PlaneMatrix
}

// GetPlaneMatrixOk returns a tuple with the PlaneMatrix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetPlaneMatrixOk() (*BTBSMatrix386, bool) {
	if o == nil || o.PlaneMatrix == nil {
		return nil, false
	}
	return o.PlaneMatrix, true
}

// HasPlaneMatrix returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasPlaneMatrix() bool {
	if o != nil && o.PlaneMatrix != nil {
		return true
	}

	return false
}

// SetPlaneMatrix gets a reference to the given BTBSMatrix386 and assigns it to the PlaneMatrix field.
func (o *base_BTLinearDimensionDisplayData330) SetPlaneMatrix(v BTBSMatrix386) {
	o.PlaneMatrix = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetValue() float64 {
	if o == nil || o.Value == nil {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetValueOk() (*float64, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *base_BTLinearDimensionDisplayData330) SetValue(v float64) {
	o.Value = &v
}

// GetPositionX returns the PositionX field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetPositionX() float64 {
	if o == nil || o.PositionX == nil {
		var ret float64
		return ret
	}
	return *o.PositionX
}

// GetPositionXOk returns a tuple with the PositionX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetPositionXOk() (*float64, bool) {
	if o == nil || o.PositionX == nil {
		return nil, false
	}
	return o.PositionX, true
}

// HasPositionX returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasPositionX() bool {
	if o != nil && o.PositionX != nil {
		return true
	}

	return false
}

// SetPositionX gets a reference to the given float64 and assigns it to the PositionX field.
func (o *base_BTLinearDimensionDisplayData330) SetPositionX(v float64) {
	o.PositionX = &v
}

// GetPositionY returns the PositionY field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetPositionY() float64 {
	if o == nil || o.PositionY == nil {
		var ret float64
		return ret
	}
	return *o.PositionY
}

// GetPositionYOk returns a tuple with the PositionY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetPositionYOk() (*float64, bool) {
	if o == nil || o.PositionY == nil {
		return nil, false
	}
	return o.PositionY, true
}

// HasPositionY returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasPositionY() bool {
	if o != nil && o.PositionY != nil {
		return true
	}

	return false
}

// SetPositionY gets a reference to the given float64 and assigns it to the PositionY field.
func (o *base_BTLinearDimensionDisplayData330) SetPositionY(v float64) {
	o.PositionY = &v
}

// GetWitnessEndPoint0X returns the WitnessEndPoint0X field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetWitnessEndPoint0X() float64 {
	if o == nil || o.WitnessEndPoint0X == nil {
		var ret float64
		return ret
	}
	return *o.WitnessEndPoint0X
}

// GetWitnessEndPoint0XOk returns a tuple with the WitnessEndPoint0X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetWitnessEndPoint0XOk() (*float64, bool) {
	if o == nil || o.WitnessEndPoint0X == nil {
		return nil, false
	}
	return o.WitnessEndPoint0X, true
}

// HasWitnessEndPoint0X returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasWitnessEndPoint0X() bool {
	if o != nil && o.WitnessEndPoint0X != nil {
		return true
	}

	return false
}

// SetWitnessEndPoint0X gets a reference to the given float64 and assigns it to the WitnessEndPoint0X field.
func (o *base_BTLinearDimensionDisplayData330) SetWitnessEndPoint0X(v float64) {
	o.WitnessEndPoint0X = &v
}

// GetWitnessEndPoint0Y returns the WitnessEndPoint0Y field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetWitnessEndPoint0Y() float64 {
	if o == nil || o.WitnessEndPoint0Y == nil {
		var ret float64
		return ret
	}
	return *o.WitnessEndPoint0Y
}

// GetWitnessEndPoint0YOk returns a tuple with the WitnessEndPoint0Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetWitnessEndPoint0YOk() (*float64, bool) {
	if o == nil || o.WitnessEndPoint0Y == nil {
		return nil, false
	}
	return o.WitnessEndPoint0Y, true
}

// HasWitnessEndPoint0Y returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasWitnessEndPoint0Y() bool {
	if o != nil && o.WitnessEndPoint0Y != nil {
		return true
	}

	return false
}

// SetWitnessEndPoint0Y gets a reference to the given float64 and assigns it to the WitnessEndPoint0Y field.
func (o *base_BTLinearDimensionDisplayData330) SetWitnessEndPoint0Y(v float64) {
	o.WitnessEndPoint0Y = &v
}

// GetWitnessEndPoint1X returns the WitnessEndPoint1X field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetWitnessEndPoint1X() float64 {
	if o == nil || o.WitnessEndPoint1X == nil {
		var ret float64
		return ret
	}
	return *o.WitnessEndPoint1X
}

// GetWitnessEndPoint1XOk returns a tuple with the WitnessEndPoint1X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetWitnessEndPoint1XOk() (*float64, bool) {
	if o == nil || o.WitnessEndPoint1X == nil {
		return nil, false
	}
	return o.WitnessEndPoint1X, true
}

// HasWitnessEndPoint1X returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasWitnessEndPoint1X() bool {
	if o != nil && o.WitnessEndPoint1X != nil {
		return true
	}

	return false
}

// SetWitnessEndPoint1X gets a reference to the given float64 and assigns it to the WitnessEndPoint1X field.
func (o *base_BTLinearDimensionDisplayData330) SetWitnessEndPoint1X(v float64) {
	o.WitnessEndPoint1X = &v
}

// GetWitnessEndPoint1Y returns the WitnessEndPoint1Y field value if set, zero value otherwise.
func (o *base_BTLinearDimensionDisplayData330) GetWitnessEndPoint1Y() float64 {
	if o == nil || o.WitnessEndPoint1Y == nil {
		var ret float64
		return ret
	}
	return *o.WitnessEndPoint1Y
}

// GetWitnessEndPoint1YOk returns a tuple with the WitnessEndPoint1Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTLinearDimensionDisplayData330) GetWitnessEndPoint1YOk() (*float64, bool) {
	if o == nil || o.WitnessEndPoint1Y == nil {
		return nil, false
	}
	return o.WitnessEndPoint1Y, true
}

// HasWitnessEndPoint1Y returns a boolean if a field has been set.
func (o *base_BTLinearDimensionDisplayData330) HasWitnessEndPoint1Y() bool {
	if o != nil && o.WitnessEndPoint1Y != nil {
		return true
	}

	return false
}

// SetWitnessEndPoint1Y gets a reference to the given float64 and assigns it to the WitnessEndPoint1Y field.
func (o *base_BTLinearDimensionDisplayData330) SetWitnessEndPoint1Y(v float64) {
	o.WitnessEndPoint1Y = &v
}

func (o base_BTLinearDimensionDisplayData330) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.CoordinateSystem != nil {
		toSerialize["coordinateSystem"] = o.CoordinateSystem
	}
	if o.FeatureId != nil {
		toSerialize["featureId"] = o.FeatureId
	}
	if o.HasMaximumLimit_ != nil {
		toSerialize["hasMaximumLimit"] = o.HasMaximumLimit_
	}
	if o.HasMinimumLimit_ != nil {
		toSerialize["hasMinimumLimit"] = o.HasMinimumLimit_
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsAssociatedWithFlat != nil {
		toSerialize["isAssociatedWithFlat"] = o.IsAssociatedWithFlat
	}
	if o.IsDriven != nil {
		toSerialize["isDriven"] = o.IsDriven
	}
	if o.IsOverDefined != nil {
		toSerialize["isOverDefined"] = o.IsOverDefined
	}
	if o.MaximumLimit != nil {
		toSerialize["maximumLimit"] = o.MaximumLimit
	}
	if o.MinimumLimit != nil {
		toSerialize["minimumLimit"] = o.MinimumLimit
	}
	if o.ParameterId != nil {
		toSerialize["parameterId"] = o.ParameterId
	}
	if o.PlaneMatrix != nil {
		toSerialize["planeMatrix"] = o.PlaneMatrix
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.PositionX != nil {
		toSerialize["positionX"] = o.PositionX
	}
	if o.PositionY != nil {
		toSerialize["positionY"] = o.PositionY
	}
	if o.WitnessEndPoint0X != nil {
		toSerialize["witnessEndPoint0X"] = o.WitnessEndPoint0X
	}
	if o.WitnessEndPoint0Y != nil {
		toSerialize["witnessEndPoint0Y"] = o.WitnessEndPoint0Y
	}
	if o.WitnessEndPoint1X != nil {
		toSerialize["witnessEndPoint1X"] = o.WitnessEndPoint1X
	}
	if o.WitnessEndPoint1Y != nil {
		toSerialize["witnessEndPoint1Y"] = o.WitnessEndPoint1Y
	}
	return json.Marshal(toSerialize)
}
