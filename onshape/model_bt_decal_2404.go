/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTDecal2404 struct for BTDecal2404
type BTDecal2404 struct {
	BtType         *string              `json:"btType,omitempty"`
	ImageForeignId *string              `json:"imageForeignId,omitempty"`
	ImageSourceId  *string              `json:"imageSourceId,omitempty"`
	IsDeletion     *bool                `json:"isDeletion,omitempty"`
	Mappings       []BTImageMapping3821 `json:"mappings,omitempty"`
}

// NewBTDecal2404 instantiates a new BTDecal2404 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTDecal2404() *BTDecal2404 {
	this := BTDecal2404{}
	return &this
}

// NewBTDecal2404WithDefaults instantiates a new BTDecal2404 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTDecal2404WithDefaults() *BTDecal2404 {
	this := BTDecal2404{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTDecal2404) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDecal2404) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTDecal2404) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTDecal2404) SetBtType(v string) {
	o.BtType = &v
}

// GetImageForeignId returns the ImageForeignId field value if set, zero value otherwise.
func (o *BTDecal2404) GetImageForeignId() string {
	if o == nil || o.ImageForeignId == nil {
		var ret string
		return ret
	}
	return *o.ImageForeignId
}

// GetImageForeignIdOk returns a tuple with the ImageForeignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDecal2404) GetImageForeignIdOk() (*string, bool) {
	if o == nil || o.ImageForeignId == nil {
		return nil, false
	}
	return o.ImageForeignId, true
}

// HasImageForeignId returns a boolean if a field has been set.
func (o *BTDecal2404) HasImageForeignId() bool {
	if o != nil && o.ImageForeignId != nil {
		return true
	}

	return false
}

// SetImageForeignId gets a reference to the given string and assigns it to the ImageForeignId field.
func (o *BTDecal2404) SetImageForeignId(v string) {
	o.ImageForeignId = &v
}

// GetImageSourceId returns the ImageSourceId field value if set, zero value otherwise.
func (o *BTDecal2404) GetImageSourceId() string {
	if o == nil || o.ImageSourceId == nil {
		var ret string
		return ret
	}
	return *o.ImageSourceId
}

// GetImageSourceIdOk returns a tuple with the ImageSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDecal2404) GetImageSourceIdOk() (*string, bool) {
	if o == nil || o.ImageSourceId == nil {
		return nil, false
	}
	return o.ImageSourceId, true
}

// HasImageSourceId returns a boolean if a field has been set.
func (o *BTDecal2404) HasImageSourceId() bool {
	if o != nil && o.ImageSourceId != nil {
		return true
	}

	return false
}

// SetImageSourceId gets a reference to the given string and assigns it to the ImageSourceId field.
func (o *BTDecal2404) SetImageSourceId(v string) {
	o.ImageSourceId = &v
}

// GetIsDeletion returns the IsDeletion field value if set, zero value otherwise.
func (o *BTDecal2404) GetIsDeletion() bool {
	if o == nil || o.IsDeletion == nil {
		var ret bool
		return ret
	}
	return *o.IsDeletion
}

// GetIsDeletionOk returns a tuple with the IsDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDecal2404) GetIsDeletionOk() (*bool, bool) {
	if o == nil || o.IsDeletion == nil {
		return nil, false
	}
	return o.IsDeletion, true
}

// HasIsDeletion returns a boolean if a field has been set.
func (o *BTDecal2404) HasIsDeletion() bool {
	if o != nil && o.IsDeletion != nil {
		return true
	}

	return false
}

// SetIsDeletion gets a reference to the given bool and assigns it to the IsDeletion field.
func (o *BTDecal2404) SetIsDeletion(v bool) {
	o.IsDeletion = &v
}

// GetMappings returns the Mappings field value if set, zero value otherwise.
func (o *BTDecal2404) GetMappings() []BTImageMapping3821 {
	if o == nil || o.Mappings == nil {
		var ret []BTImageMapping3821
		return ret
	}
	return o.Mappings
}

// GetMappingsOk returns a tuple with the Mappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDecal2404) GetMappingsOk() ([]BTImageMapping3821, bool) {
	if o == nil || o.Mappings == nil {
		return nil, false
	}
	return o.Mappings, true
}

// HasMappings returns a boolean if a field has been set.
func (o *BTDecal2404) HasMappings() bool {
	if o != nil && o.Mappings != nil {
		return true
	}

	return false
}

// SetMappings gets a reference to the given []BTImageMapping3821 and assigns it to the Mappings field.
func (o *BTDecal2404) SetMappings(v []BTImageMapping3821) {
	o.Mappings = v
}

func (o BTDecal2404) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.ImageForeignId != nil {
		toSerialize["imageForeignId"] = o.ImageForeignId
	}
	if o.ImageSourceId != nil {
		toSerialize["imageSourceId"] = o.ImageSourceId
	}
	if o.IsDeletion != nil {
		toSerialize["isDeletion"] = o.IsDeletion
	}
	if o.Mappings != nil {
		toSerialize["mappings"] = o.Mappings
	}
	return json.Marshal(toSerialize)
}

type NullableBTDecal2404 struct {
	value *BTDecal2404
	isSet bool
}

func (v NullableBTDecal2404) Get() *BTDecal2404 {
	return v.value
}

func (v *NullableBTDecal2404) Set(val *BTDecal2404) {
	v.value = val
	v.isSet = true
}

func (v NullableBTDecal2404) IsSet() bool {
	return v.isSet
}

func (v *NullableBTDecal2404) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTDecal2404(val *BTDecal2404) *NullableBTDecal2404 {
	return &NullableBTDecal2404{value: val, isSet: true}
}

func (v NullableBTDecal2404) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTDecal2404) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
