/*
Onshape REST API

Testing PartApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package onshape

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_onshape_PartApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test PartApiService ExportPS", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wvm string
		var wvmid string
		var eid string
		var partid string

		resp, httpRes, err := apiClient.PartApi.ExportPS(context.Background(), did, wvm, wvmid, eid, partid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PartApiService ExportPartGltf", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wvm string
		var wvmid string
		var eid string
		var partid string

		resp, httpRes, err := apiClient.PartApi.ExportPartGltf(context.Background(), did, wvm, wvmid, eid, partid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PartApiService ExportStl", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wvm string
		var wvmid string
		var eid string
		var partid string

		resp, httpRes, err := apiClient.PartApi.ExportStl(context.Background(), did, wvm, wvmid, eid, partid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PartApiService GetBendTable", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wvm string
		var wvmid string
		var eid string
		var partid string

		resp, httpRes, err := apiClient.PartApi.GetBendTable(context.Background(), did, wvm, wvmid, eid, partid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PartApiService GetBodyDetails", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wvm string
		var wvmid string
		var eid string
		var partid string

		resp, httpRes, err := apiClient.PartApi.GetBodyDetails(context.Background(), did, wvm, wvmid, eid, partid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PartApiService GetBoundingBoxes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wvm string
		var wvmid string
		var eid string
		var partid string

		resp, httpRes, err := apiClient.PartApi.GetBoundingBoxes(context.Background(), did, wvm, wvmid, eid, partid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PartApiService GetEdges", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wvm string
		var wvmid string
		var eid string
		var partid string

		resp, httpRes, err := apiClient.PartApi.GetEdges(context.Background(), did, wvm, wvmid, eid, partid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PartApiService GetFaces1", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wvm string
		var wvmid string
		var eid string
		var partid string

		resp, httpRes, err := apiClient.PartApi.GetFaces1(context.Background(), did, wvm, wvmid, eid, partid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PartApiService GetMassProperties", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wvm string
		var wvmid string
		var eid string
		var partid string

		resp, httpRes, err := apiClient.PartApi.GetMassProperties(context.Background(), did, wvm, wvmid, eid, partid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PartApiService GetPartShadedViews", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wvm string
		var wvmid string
		var eid string
		var partid string

		resp, httpRes, err := apiClient.PartApi.GetPartShadedViews(context.Background(), did, wvm, wvmid, eid, partid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PartApiService GetPartsWMV", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wvm string
		var wvmid string

		resp, httpRes, err := apiClient.PartApi.GetPartsWMV(context.Background(), did, wvm, wvmid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PartApiService GetPartsWMVE", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wvm string
		var wvmid string
		var eid string

		resp, httpRes, err := apiClient.PartApi.GetPartsWMVE(context.Background(), did, wvm, wvmid, eid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
