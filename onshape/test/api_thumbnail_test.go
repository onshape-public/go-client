/*
Onshape REST API

Testing ThumbnailApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package onshape

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_onshape_ThumbnailApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ThumbnailApiService DeleteApplicationThumbnails", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wv string
		var wvid string
		var eid string

		resp, httpRes, err := apiClient.ThumbnailApi.DeleteApplicationThumbnails(context.Background(), did, wv, wvid, eid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ThumbnailApiService GetDocumentThumbnail", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wid string

		resp, httpRes, err := apiClient.ThumbnailApi.GetDocumentThumbnail(context.Background(), did, wid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ThumbnailApiService GetDocumentThumbnailWithSize", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wid string
		var sz string

		resp, httpRes, err := apiClient.ThumbnailApi.GetDocumentThumbnailWithSize(context.Background(), did, wid, sz).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ThumbnailApiService GetElementThumbnail", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wv string
		var wvid string
		var eid string

		resp, httpRes, err := apiClient.ThumbnailApi.GetElementThumbnail(context.Background(), did, wv, wvid, eid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ThumbnailApiService GetElementThumbnailWithApiConfiguration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wid string
		var eid string
		var cid string
		var sz string

		resp, httpRes, err := apiClient.ThumbnailApi.GetElementThumbnailWithApiConfiguration(context.Background(), did, wid, eid, cid, sz).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ThumbnailApiService GetElementThumbnailWithSize", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wv string
		var wvid string
		var eid string
		var sz string

		resp, httpRes, err := apiClient.ThumbnailApi.GetElementThumbnailWithSize(context.Background(), did, wv, wvid, eid, sz).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ThumbnailApiService GetThumbnailForDocument", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string

		resp, httpRes, err := apiClient.ThumbnailApi.GetThumbnailForDocument(context.Background(), did).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ThumbnailApiService GetThumbnailForDocumentAndVersion", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var vid string

		resp, httpRes, err := apiClient.ThumbnailApi.GetThumbnailForDocumentAndVersion(context.Background(), did, vid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ThumbnailApiService GetThumbnailForDocumentAndVersionOld", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var vid string

		resp, httpRes, err := apiClient.ThumbnailApi.GetThumbnailForDocumentAndVersionOld(context.Background(), did, vid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ThumbnailApiService GetThumbnailForDocumentOld", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string

		resp, httpRes, err := apiClient.ThumbnailApi.GetThumbnailForDocumentOld(context.Background(), did).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ThumbnailApiService SetApplicationElementThumbnail", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wv string
		var wvid string
		var eid string

		resp, httpRes, err := apiClient.ThumbnailApi.SetApplicationElementThumbnail(context.Background(), did, wv, wvid, eid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
