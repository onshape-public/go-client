/*
Onshape REST API

Testing AccountApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package onshape

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_onshape_AccountApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AccountApiService CancelPurchaseNew", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var aid string
		var pid string

		resp, httpRes, err := apiClient.AccountApi.CancelPurchaseNew(context.Background(), aid, pid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AccountApiService ConsumePurchase", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pid string

		resp, httpRes, err := apiClient.AccountApi.ConsumePurchase(context.Background(), pid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AccountApiService GetPlanPurchases", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var planId string

		resp, httpRes, err := apiClient.AccountApi.GetPlanPurchases(context.Background(), planId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AccountApiService GetPurchases", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AccountApi.GetPurchases(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
