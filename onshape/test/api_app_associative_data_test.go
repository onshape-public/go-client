/*
Onshape REST API

Testing AppAssociativeDataApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package onshape

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_onshape_AppAssociativeDataApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AppAssociativeDataApiService CopyAssociativeData", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wid string
		var eid string

		resp, httpRes, err := apiClient.AppAssociativeDataApi.CopyAssociativeData(context.Background(), did, wid, eid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AppAssociativeDataApiService DeleteAssociativeData", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var eid string
		var wvm string
		var wvmid string

		resp, httpRes, err := apiClient.AppAssociativeDataApi.DeleteAssociativeData(context.Background(), did, eid, wvm, wvmid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AppAssociativeDataApiService GetAssociativeData", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var wvm string
		var wvmid string
		var eid string

		resp, httpRes, err := apiClient.AppAssociativeDataApi.GetAssociativeData(context.Background(), did, wvm, wvmid, eid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AppAssociativeDataApiService PostAssociativeData", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string
		var eid string
		var wvm string
		var wvmid string

		resp, httpRes, err := apiClient.AppAssociativeDataApi.PostAssociativeData(context.Background(), did, eid, wvm, wvmid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
