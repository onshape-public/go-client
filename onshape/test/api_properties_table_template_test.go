/*
Onshape REST API

Testing PropertiesTableTemplateApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package onshape

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_onshape_PropertiesTableTemplateApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test PropertiesTableTemplateApiService CreateTableTemplate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PropertiesTableTemplateApi.CreateTableTemplate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PropertiesTableTemplateApiService DeleteTableTemplate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tid string

		resp, httpRes, err := apiClient.PropertiesTableTemplateApi.DeleteTableTemplate(context.Background(), tid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PropertiesTableTemplateApiService GetByCompanyId", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var cid string

		resp, httpRes, err := apiClient.PropertiesTableTemplateApi.GetByCompanyId(context.Background(), cid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PropertiesTableTemplateApiService GetByDocumentId", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var did string

		resp, httpRes, err := apiClient.PropertiesTableTemplateApi.GetByDocumentId(context.Background(), did).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PropertiesTableTemplateApiService GetTableTemplate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tid string

		resp, httpRes, err := apiClient.PropertiesTableTemplateApi.GetTableTemplate(context.Background(), tid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
