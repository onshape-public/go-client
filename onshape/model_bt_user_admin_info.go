/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTUserAdminInfo struct for BTUserAdminInfo
type BTUserAdminInfo struct {
	JsonType string `json:"jsonType"`
	// URI to fetch complete information of the resource.
	Href *string `json:"href,omitempty"`
	// Id of the resource.
	Id *string `json:"id,omitempty"`
	// Name of the resource.
	Name *string `json:"name,omitempty"`
	// URI to visualize the resource in a webclient if applicable.
	ViewRef                   *string                  `json:"viewRef,omitempty"`
	Image                     *string                  `json:"image,omitempty"`
	IsOnshapeSupport          *bool                    `json:"isOnshapeSupport,omitempty"`
	State                     *int32                   `json:"state,omitempty"`
	DocumentationName         *string                  `json:"documentationName,omitempty"`
	Email                     *string                  `json:"email,omitempty"`
	FirstName                 *string                  `json:"firstName,omitempty"`
	LastName                  *string                  `json:"lastName,omitempty"`
	Company                   *BTCompanySummaryInfo    `json:"company,omitempty"`
	DocumentationNameOverride *string                  `json:"documentationNameOverride,omitempty"`
	GlobalPermissions         *GlobalPermissionInfo    `json:"globalPermissions,omitempty"`
	InvitationState           *int32                   `json:"invitationState,omitempty"`
	IsGuest                   *bool                    `json:"isGuest,omitempty"`
	IsLight                   *bool                    `json:"isLight,omitempty"`
	LastLoginTime             *JSONTime                `json:"lastLoginTime,omitempty"`
	PersonalMessageAllowed    *bool                    `json:"personalMessageAllowed,omitempty"`
	Source                    *int32                   `json:"source,omitempty"`
	ActivePlan                *BTBillingPlanInfo       `json:"activePlan,omitempty"`
	ActivePlanId              *string                  `json:"activePlanId,omitempty"`
	ActivePurchases           []BTPurchaseInfo         `json:"activePurchases,omitempty"`
	ActiveTrialInfo           *BTTrialInfo             `json:"activeTrialInfo,omitempty"`
	B2cId                     *string                  `json:"b2cId,omitempty"`
	BillingUpdateRequired     *bool                    `json:"billingUpdateRequired,omitempty"`
	CadSystemAtSignup         *string                  `json:"cadSystemAtSignup,omitempty"`
	CountryCode               *string                  `json:"countryCode,omitempty"`
	CreatedAt                 *JSONTime                `json:"createdAt,omitempty"`
	Credential                *BTSessionCredentialInfo `json:"credential,omitempty"`
	DefaultCompanyName        *string                  `json:"defaultCompanyName,omitempty"`
	Description               *string                  `json:"description,omitempty"`
	DeviceInfo                *BTDeviceLoginSecretInfo `json:"deviceInfo,omitempty"`
	Discounts                 []BTDiscountInfo         `json:"discounts,omitempty"`
	Enterprise                *bool                    `json:"enterprise,omitempty"`
	EulaId                    *string                  `json:"eulaId,omitempty"`
	EulaRequired              *bool                    `json:"eulaRequired,omitempty"`
	EvalCenter                *bool                    `json:"evalCenter,omitempty"`
	ForumId                   *string                  `json:"forumId,omitempty"`
	IntendedUse               *int32                   `json:"intendedUse,omitempty"`
	LastTrialInfo             *BTTrialInfo             `json:"lastTrialInfo,omitempty"`
	NeedToShowNewWalkthrough  *bool                    `json:"needToShowNewWalkthrough,omitempty"`
	OwnPurchase               *BTPurchaseInfo          `json:"ownPurchase,omitempty"`
	PhoneNumber               *string                  `json:"phoneNumber,omitempty"`
	ProDiscoveryTrialRejected *bool                    `json:"proDiscoveryTrialRejected,omitempty"`
	ProductType               []string                 `json:"productType,omitempty"`
	RedirectUrl               *string                  `json:"redirectUrl,omitempty"`
	Role                      *int32                   `json:"role,omitempty"`
	Roles                     []BTRole                 `json:"roles,omitempty"`
	RumEnabled                *bool                    `json:"rumEnabled,omitempty"`
	ShowRenewStudentPages     *bool                    `json:"showRenewStudentPages,omitempty"`
	StartupPage               *int32                   `json:"startupPage,omitempty"`
	SystemUser                *bool                    `json:"systemUser,omitempty"`
	TotpEnabled               *bool                    `json:"totpEnabled,omitempty"`
	TracingEnabled            *bool                    `json:"tracingEnabled,omitempty"`
	TrialInfos                []BTTrialInfo            `json:"trialInfos,omitempty"`
	Discount                  *BTDiscount              `json:"discount,omitempty"`
	InvitationId              *string                  `json:"invitationId,omitempty"`
	InvitedByEmail            *string                  `json:"invitedByEmail,omitempty"`
	InvitedDocumentId         *string                  `json:"invitedDocumentId,omitempty"`
	IsTrialRequest            *bool                    `json:"isTrialRequest,omitempty"`
	PrivacyConsents           []BTPrivacyConsentInfo   `json:"privacyConsents,omitempty"`
	UserMetrics               *BTUserMetricsInfo       `json:"userMetrics,omitempty"`
}

// NewBTUserAdminInfo instantiates a new BTUserAdminInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTUserAdminInfo(jsonType string) *BTUserAdminInfo {
	this := BTUserAdminInfo{}
	this.JsonType = jsonType
	return &this
}

// NewBTUserAdminInfoWithDefaults instantiates a new BTUserAdminInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTUserAdminInfoWithDefaults() *BTUserAdminInfo {
	this := BTUserAdminInfo{}
	return &this
}

// GetJsonType returns the JsonType field value
func (o *BTUserAdminInfo) GetJsonType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JsonType
}

// GetJsonTypeOk returns a tuple with the JsonType field value
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetJsonTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JsonType, true
}

// SetJsonType sets field value
func (o *BTUserAdminInfo) SetJsonType(v string) {
	o.JsonType = v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTUserAdminInfo) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTUserAdminInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTUserAdminInfo) SetName(v string) {
	o.Name = &v
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetViewRef() string {
	if o == nil || o.ViewRef == nil {
		var ret string
		return ret
	}
	return *o.ViewRef
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetViewRefOk() (*string, bool) {
	if o == nil || o.ViewRef == nil {
		return nil, false
	}
	return o.ViewRef, true
}

// HasViewRef returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasViewRef() bool {
	if o != nil && o.ViewRef != nil {
		return true
	}

	return false
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *BTUserAdminInfo) SetViewRef(v string) {
	o.ViewRef = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *BTUserAdminInfo) SetImage(v string) {
	o.Image = &v
}

// GetIsOnshapeSupport returns the IsOnshapeSupport field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetIsOnshapeSupport() bool {
	if o == nil || o.IsOnshapeSupport == nil {
		var ret bool
		return ret
	}
	return *o.IsOnshapeSupport
}

// GetIsOnshapeSupportOk returns a tuple with the IsOnshapeSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetIsOnshapeSupportOk() (*bool, bool) {
	if o == nil || o.IsOnshapeSupport == nil {
		return nil, false
	}
	return o.IsOnshapeSupport, true
}

// HasIsOnshapeSupport returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasIsOnshapeSupport() bool {
	if o != nil && o.IsOnshapeSupport != nil {
		return true
	}

	return false
}

// SetIsOnshapeSupport gets a reference to the given bool and assigns it to the IsOnshapeSupport field.
func (o *BTUserAdminInfo) SetIsOnshapeSupport(v bool) {
	o.IsOnshapeSupport = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetState() int32 {
	if o == nil || o.State == nil {
		var ret int32
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetStateOk() (*int32, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given int32 and assigns it to the State field.
func (o *BTUserAdminInfo) SetState(v int32) {
	o.State = &v
}

// GetDocumentationName returns the DocumentationName field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetDocumentationName() string {
	if o == nil || o.DocumentationName == nil {
		var ret string
		return ret
	}
	return *o.DocumentationName
}

// GetDocumentationNameOk returns a tuple with the DocumentationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetDocumentationNameOk() (*string, bool) {
	if o == nil || o.DocumentationName == nil {
		return nil, false
	}
	return o.DocumentationName, true
}

// HasDocumentationName returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasDocumentationName() bool {
	if o != nil && o.DocumentationName != nil {
		return true
	}

	return false
}

// SetDocumentationName gets a reference to the given string and assigns it to the DocumentationName field.
func (o *BTUserAdminInfo) SetDocumentationName(v string) {
	o.DocumentationName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *BTUserAdminInfo) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *BTUserAdminInfo) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *BTUserAdminInfo) SetLastName(v string) {
	o.LastName = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetCompany() BTCompanySummaryInfo {
	if o == nil || o.Company == nil {
		var ret BTCompanySummaryInfo
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetCompanyOk() (*BTCompanySummaryInfo, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given BTCompanySummaryInfo and assigns it to the Company field.
func (o *BTUserAdminInfo) SetCompany(v BTCompanySummaryInfo) {
	o.Company = &v
}

// GetDocumentationNameOverride returns the DocumentationNameOverride field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetDocumentationNameOverride() string {
	if o == nil || o.DocumentationNameOverride == nil {
		var ret string
		return ret
	}
	return *o.DocumentationNameOverride
}

// GetDocumentationNameOverrideOk returns a tuple with the DocumentationNameOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetDocumentationNameOverrideOk() (*string, bool) {
	if o == nil || o.DocumentationNameOverride == nil {
		return nil, false
	}
	return o.DocumentationNameOverride, true
}

// HasDocumentationNameOverride returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasDocumentationNameOverride() bool {
	if o != nil && o.DocumentationNameOverride != nil {
		return true
	}

	return false
}

// SetDocumentationNameOverride gets a reference to the given string and assigns it to the DocumentationNameOverride field.
func (o *BTUserAdminInfo) SetDocumentationNameOverride(v string) {
	o.DocumentationNameOverride = &v
}

// GetGlobalPermissions returns the GlobalPermissions field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetGlobalPermissions() GlobalPermissionInfo {
	if o == nil || o.GlobalPermissions == nil {
		var ret GlobalPermissionInfo
		return ret
	}
	return *o.GlobalPermissions
}

// GetGlobalPermissionsOk returns a tuple with the GlobalPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetGlobalPermissionsOk() (*GlobalPermissionInfo, bool) {
	if o == nil || o.GlobalPermissions == nil {
		return nil, false
	}
	return o.GlobalPermissions, true
}

// HasGlobalPermissions returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasGlobalPermissions() bool {
	if o != nil && o.GlobalPermissions != nil {
		return true
	}

	return false
}

// SetGlobalPermissions gets a reference to the given GlobalPermissionInfo and assigns it to the GlobalPermissions field.
func (o *BTUserAdminInfo) SetGlobalPermissions(v GlobalPermissionInfo) {
	o.GlobalPermissions = &v
}

// GetInvitationState returns the InvitationState field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetInvitationState() int32 {
	if o == nil || o.InvitationState == nil {
		var ret int32
		return ret
	}
	return *o.InvitationState
}

// GetInvitationStateOk returns a tuple with the InvitationState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetInvitationStateOk() (*int32, bool) {
	if o == nil || o.InvitationState == nil {
		return nil, false
	}
	return o.InvitationState, true
}

// HasInvitationState returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasInvitationState() bool {
	if o != nil && o.InvitationState != nil {
		return true
	}

	return false
}

// SetInvitationState gets a reference to the given int32 and assigns it to the InvitationState field.
func (o *BTUserAdminInfo) SetInvitationState(v int32) {
	o.InvitationState = &v
}

// GetIsGuest returns the IsGuest field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetIsGuest() bool {
	if o == nil || o.IsGuest == nil {
		var ret bool
		return ret
	}
	return *o.IsGuest
}

// GetIsGuestOk returns a tuple with the IsGuest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetIsGuestOk() (*bool, bool) {
	if o == nil || o.IsGuest == nil {
		return nil, false
	}
	return o.IsGuest, true
}

// HasIsGuest returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasIsGuest() bool {
	if o != nil && o.IsGuest != nil {
		return true
	}

	return false
}

// SetIsGuest gets a reference to the given bool and assigns it to the IsGuest field.
func (o *BTUserAdminInfo) SetIsGuest(v bool) {
	o.IsGuest = &v
}

// GetIsLight returns the IsLight field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetIsLight() bool {
	if o == nil || o.IsLight == nil {
		var ret bool
		return ret
	}
	return *o.IsLight
}

// GetIsLightOk returns a tuple with the IsLight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetIsLightOk() (*bool, bool) {
	if o == nil || o.IsLight == nil {
		return nil, false
	}
	return o.IsLight, true
}

// HasIsLight returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasIsLight() bool {
	if o != nil && o.IsLight != nil {
		return true
	}

	return false
}

// SetIsLight gets a reference to the given bool and assigns it to the IsLight field.
func (o *BTUserAdminInfo) SetIsLight(v bool) {
	o.IsLight = &v
}

// GetLastLoginTime returns the LastLoginTime field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetLastLoginTime() JSONTime {
	if o == nil || o.LastLoginTime == nil {
		var ret JSONTime
		return ret
	}
	return *o.LastLoginTime
}

// GetLastLoginTimeOk returns a tuple with the LastLoginTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetLastLoginTimeOk() (*JSONTime, bool) {
	if o == nil || o.LastLoginTime == nil {
		return nil, false
	}
	return o.LastLoginTime, true
}

// HasLastLoginTime returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasLastLoginTime() bool {
	if o != nil && o.LastLoginTime != nil {
		return true
	}

	return false
}

// SetLastLoginTime gets a reference to the given JSONTime and assigns it to the LastLoginTime field.
func (o *BTUserAdminInfo) SetLastLoginTime(v JSONTime) {
	o.LastLoginTime = &v
}

// GetPersonalMessageAllowed returns the PersonalMessageAllowed field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetPersonalMessageAllowed() bool {
	if o == nil || o.PersonalMessageAllowed == nil {
		var ret bool
		return ret
	}
	return *o.PersonalMessageAllowed
}

// GetPersonalMessageAllowedOk returns a tuple with the PersonalMessageAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetPersonalMessageAllowedOk() (*bool, bool) {
	if o == nil || o.PersonalMessageAllowed == nil {
		return nil, false
	}
	return o.PersonalMessageAllowed, true
}

// HasPersonalMessageAllowed returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasPersonalMessageAllowed() bool {
	if o != nil && o.PersonalMessageAllowed != nil {
		return true
	}

	return false
}

// SetPersonalMessageAllowed gets a reference to the given bool and assigns it to the PersonalMessageAllowed field.
func (o *BTUserAdminInfo) SetPersonalMessageAllowed(v bool) {
	o.PersonalMessageAllowed = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetSource() int32 {
	if o == nil || o.Source == nil {
		var ret int32
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetSourceOk() (*int32, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given int32 and assigns it to the Source field.
func (o *BTUserAdminInfo) SetSource(v int32) {
	o.Source = &v
}

// GetActivePlan returns the ActivePlan field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetActivePlan() BTBillingPlanInfo {
	if o == nil || o.ActivePlan == nil {
		var ret BTBillingPlanInfo
		return ret
	}
	return *o.ActivePlan
}

// GetActivePlanOk returns a tuple with the ActivePlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetActivePlanOk() (*BTBillingPlanInfo, bool) {
	if o == nil || o.ActivePlan == nil {
		return nil, false
	}
	return o.ActivePlan, true
}

// HasActivePlan returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasActivePlan() bool {
	if o != nil && o.ActivePlan != nil {
		return true
	}

	return false
}

// SetActivePlan gets a reference to the given BTBillingPlanInfo and assigns it to the ActivePlan field.
func (o *BTUserAdminInfo) SetActivePlan(v BTBillingPlanInfo) {
	o.ActivePlan = &v
}

// GetActivePlanId returns the ActivePlanId field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetActivePlanId() string {
	if o == nil || o.ActivePlanId == nil {
		var ret string
		return ret
	}
	return *o.ActivePlanId
}

// GetActivePlanIdOk returns a tuple with the ActivePlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetActivePlanIdOk() (*string, bool) {
	if o == nil || o.ActivePlanId == nil {
		return nil, false
	}
	return o.ActivePlanId, true
}

// HasActivePlanId returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasActivePlanId() bool {
	if o != nil && o.ActivePlanId != nil {
		return true
	}

	return false
}

// SetActivePlanId gets a reference to the given string and assigns it to the ActivePlanId field.
func (o *BTUserAdminInfo) SetActivePlanId(v string) {
	o.ActivePlanId = &v
}

// GetActivePurchases returns the ActivePurchases field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetActivePurchases() []BTPurchaseInfo {
	if o == nil || o.ActivePurchases == nil {
		var ret []BTPurchaseInfo
		return ret
	}
	return o.ActivePurchases
}

// GetActivePurchasesOk returns a tuple with the ActivePurchases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetActivePurchasesOk() ([]BTPurchaseInfo, bool) {
	if o == nil || o.ActivePurchases == nil {
		return nil, false
	}
	return o.ActivePurchases, true
}

// HasActivePurchases returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasActivePurchases() bool {
	if o != nil && o.ActivePurchases != nil {
		return true
	}

	return false
}

// SetActivePurchases gets a reference to the given []BTPurchaseInfo and assigns it to the ActivePurchases field.
func (o *BTUserAdminInfo) SetActivePurchases(v []BTPurchaseInfo) {
	o.ActivePurchases = v
}

// GetActiveTrialInfo returns the ActiveTrialInfo field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetActiveTrialInfo() BTTrialInfo {
	if o == nil || o.ActiveTrialInfo == nil {
		var ret BTTrialInfo
		return ret
	}
	return *o.ActiveTrialInfo
}

// GetActiveTrialInfoOk returns a tuple with the ActiveTrialInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetActiveTrialInfoOk() (*BTTrialInfo, bool) {
	if o == nil || o.ActiveTrialInfo == nil {
		return nil, false
	}
	return o.ActiveTrialInfo, true
}

// HasActiveTrialInfo returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasActiveTrialInfo() bool {
	if o != nil && o.ActiveTrialInfo != nil {
		return true
	}

	return false
}

// SetActiveTrialInfo gets a reference to the given BTTrialInfo and assigns it to the ActiveTrialInfo field.
func (o *BTUserAdminInfo) SetActiveTrialInfo(v BTTrialInfo) {
	o.ActiveTrialInfo = &v
}

// GetB2cId returns the B2cId field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetB2cId() string {
	if o == nil || o.B2cId == nil {
		var ret string
		return ret
	}
	return *o.B2cId
}

// GetB2cIdOk returns a tuple with the B2cId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetB2cIdOk() (*string, bool) {
	if o == nil || o.B2cId == nil {
		return nil, false
	}
	return o.B2cId, true
}

// HasB2cId returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasB2cId() bool {
	if o != nil && o.B2cId != nil {
		return true
	}

	return false
}

// SetB2cId gets a reference to the given string and assigns it to the B2cId field.
func (o *BTUserAdminInfo) SetB2cId(v string) {
	o.B2cId = &v
}

// GetBillingUpdateRequired returns the BillingUpdateRequired field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetBillingUpdateRequired() bool {
	if o == nil || o.BillingUpdateRequired == nil {
		var ret bool
		return ret
	}
	return *o.BillingUpdateRequired
}

// GetBillingUpdateRequiredOk returns a tuple with the BillingUpdateRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetBillingUpdateRequiredOk() (*bool, bool) {
	if o == nil || o.BillingUpdateRequired == nil {
		return nil, false
	}
	return o.BillingUpdateRequired, true
}

// HasBillingUpdateRequired returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasBillingUpdateRequired() bool {
	if o != nil && o.BillingUpdateRequired != nil {
		return true
	}

	return false
}

// SetBillingUpdateRequired gets a reference to the given bool and assigns it to the BillingUpdateRequired field.
func (o *BTUserAdminInfo) SetBillingUpdateRequired(v bool) {
	o.BillingUpdateRequired = &v
}

// GetCadSystemAtSignup returns the CadSystemAtSignup field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetCadSystemAtSignup() string {
	if o == nil || o.CadSystemAtSignup == nil {
		var ret string
		return ret
	}
	return *o.CadSystemAtSignup
}

// GetCadSystemAtSignupOk returns a tuple with the CadSystemAtSignup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetCadSystemAtSignupOk() (*string, bool) {
	if o == nil || o.CadSystemAtSignup == nil {
		return nil, false
	}
	return o.CadSystemAtSignup, true
}

// HasCadSystemAtSignup returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasCadSystemAtSignup() bool {
	if o != nil && o.CadSystemAtSignup != nil {
		return true
	}

	return false
}

// SetCadSystemAtSignup gets a reference to the given string and assigns it to the CadSystemAtSignup field.
func (o *BTUserAdminInfo) SetCadSystemAtSignup(v string) {
	o.CadSystemAtSignup = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *BTUserAdminInfo) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetCreatedAt() JSONTime {
	if o == nil || o.CreatedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetCreatedAtOk() (*JSONTime, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given JSONTime and assigns it to the CreatedAt field.
func (o *BTUserAdminInfo) SetCreatedAt(v JSONTime) {
	o.CreatedAt = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetCredential() BTSessionCredentialInfo {
	if o == nil || o.Credential == nil {
		var ret BTSessionCredentialInfo
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetCredentialOk() (*BTSessionCredentialInfo, bool) {
	if o == nil || o.Credential == nil {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasCredential() bool {
	if o != nil && o.Credential != nil {
		return true
	}

	return false
}

// SetCredential gets a reference to the given BTSessionCredentialInfo and assigns it to the Credential field.
func (o *BTUserAdminInfo) SetCredential(v BTSessionCredentialInfo) {
	o.Credential = &v
}

// GetDefaultCompanyName returns the DefaultCompanyName field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetDefaultCompanyName() string {
	if o == nil || o.DefaultCompanyName == nil {
		var ret string
		return ret
	}
	return *o.DefaultCompanyName
}

// GetDefaultCompanyNameOk returns a tuple with the DefaultCompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetDefaultCompanyNameOk() (*string, bool) {
	if o == nil || o.DefaultCompanyName == nil {
		return nil, false
	}
	return o.DefaultCompanyName, true
}

// HasDefaultCompanyName returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasDefaultCompanyName() bool {
	if o != nil && o.DefaultCompanyName != nil {
		return true
	}

	return false
}

// SetDefaultCompanyName gets a reference to the given string and assigns it to the DefaultCompanyName field.
func (o *BTUserAdminInfo) SetDefaultCompanyName(v string) {
	o.DefaultCompanyName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BTUserAdminInfo) SetDescription(v string) {
	o.Description = &v
}

// GetDeviceInfo returns the DeviceInfo field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetDeviceInfo() BTDeviceLoginSecretInfo {
	if o == nil || o.DeviceInfo == nil {
		var ret BTDeviceLoginSecretInfo
		return ret
	}
	return *o.DeviceInfo
}

// GetDeviceInfoOk returns a tuple with the DeviceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetDeviceInfoOk() (*BTDeviceLoginSecretInfo, bool) {
	if o == nil || o.DeviceInfo == nil {
		return nil, false
	}
	return o.DeviceInfo, true
}

// HasDeviceInfo returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasDeviceInfo() bool {
	if o != nil && o.DeviceInfo != nil {
		return true
	}

	return false
}

// SetDeviceInfo gets a reference to the given BTDeviceLoginSecretInfo and assigns it to the DeviceInfo field.
func (o *BTUserAdminInfo) SetDeviceInfo(v BTDeviceLoginSecretInfo) {
	o.DeviceInfo = &v
}

// GetDiscounts returns the Discounts field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetDiscounts() []BTDiscountInfo {
	if o == nil || o.Discounts == nil {
		var ret []BTDiscountInfo
		return ret
	}
	return o.Discounts
}

// GetDiscountsOk returns a tuple with the Discounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetDiscountsOk() ([]BTDiscountInfo, bool) {
	if o == nil || o.Discounts == nil {
		return nil, false
	}
	return o.Discounts, true
}

// HasDiscounts returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasDiscounts() bool {
	if o != nil && o.Discounts != nil {
		return true
	}

	return false
}

// SetDiscounts gets a reference to the given []BTDiscountInfo and assigns it to the Discounts field.
func (o *BTUserAdminInfo) SetDiscounts(v []BTDiscountInfo) {
	o.Discounts = v
}

// GetEnterprise returns the Enterprise field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetEnterprise() bool {
	if o == nil || o.Enterprise == nil {
		var ret bool
		return ret
	}
	return *o.Enterprise
}

// GetEnterpriseOk returns a tuple with the Enterprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetEnterpriseOk() (*bool, bool) {
	if o == nil || o.Enterprise == nil {
		return nil, false
	}
	return o.Enterprise, true
}

// HasEnterprise returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasEnterprise() bool {
	if o != nil && o.Enterprise != nil {
		return true
	}

	return false
}

// SetEnterprise gets a reference to the given bool and assigns it to the Enterprise field.
func (o *BTUserAdminInfo) SetEnterprise(v bool) {
	o.Enterprise = &v
}

// GetEulaId returns the EulaId field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetEulaId() string {
	if o == nil || o.EulaId == nil {
		var ret string
		return ret
	}
	return *o.EulaId
}

// GetEulaIdOk returns a tuple with the EulaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetEulaIdOk() (*string, bool) {
	if o == nil || o.EulaId == nil {
		return nil, false
	}
	return o.EulaId, true
}

// HasEulaId returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasEulaId() bool {
	if o != nil && o.EulaId != nil {
		return true
	}

	return false
}

// SetEulaId gets a reference to the given string and assigns it to the EulaId field.
func (o *BTUserAdminInfo) SetEulaId(v string) {
	o.EulaId = &v
}

// GetEulaRequired returns the EulaRequired field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetEulaRequired() bool {
	if o == nil || o.EulaRequired == nil {
		var ret bool
		return ret
	}
	return *o.EulaRequired
}

// GetEulaRequiredOk returns a tuple with the EulaRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetEulaRequiredOk() (*bool, bool) {
	if o == nil || o.EulaRequired == nil {
		return nil, false
	}
	return o.EulaRequired, true
}

// HasEulaRequired returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasEulaRequired() bool {
	if o != nil && o.EulaRequired != nil {
		return true
	}

	return false
}

// SetEulaRequired gets a reference to the given bool and assigns it to the EulaRequired field.
func (o *BTUserAdminInfo) SetEulaRequired(v bool) {
	o.EulaRequired = &v
}

// GetEvalCenter returns the EvalCenter field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetEvalCenter() bool {
	if o == nil || o.EvalCenter == nil {
		var ret bool
		return ret
	}
	return *o.EvalCenter
}

// GetEvalCenterOk returns a tuple with the EvalCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetEvalCenterOk() (*bool, bool) {
	if o == nil || o.EvalCenter == nil {
		return nil, false
	}
	return o.EvalCenter, true
}

// HasEvalCenter returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasEvalCenter() bool {
	if o != nil && o.EvalCenter != nil {
		return true
	}

	return false
}

// SetEvalCenter gets a reference to the given bool and assigns it to the EvalCenter field.
func (o *BTUserAdminInfo) SetEvalCenter(v bool) {
	o.EvalCenter = &v
}

// GetForumId returns the ForumId field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetForumId() string {
	if o == nil || o.ForumId == nil {
		var ret string
		return ret
	}
	return *o.ForumId
}

// GetForumIdOk returns a tuple with the ForumId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetForumIdOk() (*string, bool) {
	if o == nil || o.ForumId == nil {
		return nil, false
	}
	return o.ForumId, true
}

// HasForumId returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasForumId() bool {
	if o != nil && o.ForumId != nil {
		return true
	}

	return false
}

// SetForumId gets a reference to the given string and assigns it to the ForumId field.
func (o *BTUserAdminInfo) SetForumId(v string) {
	o.ForumId = &v
}

// GetIntendedUse returns the IntendedUse field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetIntendedUse() int32 {
	if o == nil || o.IntendedUse == nil {
		var ret int32
		return ret
	}
	return *o.IntendedUse
}

// GetIntendedUseOk returns a tuple with the IntendedUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetIntendedUseOk() (*int32, bool) {
	if o == nil || o.IntendedUse == nil {
		return nil, false
	}
	return o.IntendedUse, true
}

// HasIntendedUse returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasIntendedUse() bool {
	if o != nil && o.IntendedUse != nil {
		return true
	}

	return false
}

// SetIntendedUse gets a reference to the given int32 and assigns it to the IntendedUse field.
func (o *BTUserAdminInfo) SetIntendedUse(v int32) {
	o.IntendedUse = &v
}

// GetLastTrialInfo returns the LastTrialInfo field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetLastTrialInfo() BTTrialInfo {
	if o == nil || o.LastTrialInfo == nil {
		var ret BTTrialInfo
		return ret
	}
	return *o.LastTrialInfo
}

// GetLastTrialInfoOk returns a tuple with the LastTrialInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetLastTrialInfoOk() (*BTTrialInfo, bool) {
	if o == nil || o.LastTrialInfo == nil {
		return nil, false
	}
	return o.LastTrialInfo, true
}

// HasLastTrialInfo returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasLastTrialInfo() bool {
	if o != nil && o.LastTrialInfo != nil {
		return true
	}

	return false
}

// SetLastTrialInfo gets a reference to the given BTTrialInfo and assigns it to the LastTrialInfo field.
func (o *BTUserAdminInfo) SetLastTrialInfo(v BTTrialInfo) {
	o.LastTrialInfo = &v
}

// GetNeedToShowNewWalkthrough returns the NeedToShowNewWalkthrough field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetNeedToShowNewWalkthrough() bool {
	if o == nil || o.NeedToShowNewWalkthrough == nil {
		var ret bool
		return ret
	}
	return *o.NeedToShowNewWalkthrough
}

// GetNeedToShowNewWalkthroughOk returns a tuple with the NeedToShowNewWalkthrough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetNeedToShowNewWalkthroughOk() (*bool, bool) {
	if o == nil || o.NeedToShowNewWalkthrough == nil {
		return nil, false
	}
	return o.NeedToShowNewWalkthrough, true
}

// HasNeedToShowNewWalkthrough returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasNeedToShowNewWalkthrough() bool {
	if o != nil && o.NeedToShowNewWalkthrough != nil {
		return true
	}

	return false
}

// SetNeedToShowNewWalkthrough gets a reference to the given bool and assigns it to the NeedToShowNewWalkthrough field.
func (o *BTUserAdminInfo) SetNeedToShowNewWalkthrough(v bool) {
	o.NeedToShowNewWalkthrough = &v
}

// GetOwnPurchase returns the OwnPurchase field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetOwnPurchase() BTPurchaseInfo {
	if o == nil || o.OwnPurchase == nil {
		var ret BTPurchaseInfo
		return ret
	}
	return *o.OwnPurchase
}

// GetOwnPurchaseOk returns a tuple with the OwnPurchase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetOwnPurchaseOk() (*BTPurchaseInfo, bool) {
	if o == nil || o.OwnPurchase == nil {
		return nil, false
	}
	return o.OwnPurchase, true
}

// HasOwnPurchase returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasOwnPurchase() bool {
	if o != nil && o.OwnPurchase != nil {
		return true
	}

	return false
}

// SetOwnPurchase gets a reference to the given BTPurchaseInfo and assigns it to the OwnPurchase field.
func (o *BTUserAdminInfo) SetOwnPurchase(v BTPurchaseInfo) {
	o.OwnPurchase = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *BTUserAdminInfo) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetProDiscoveryTrialRejected returns the ProDiscoveryTrialRejected field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetProDiscoveryTrialRejected() bool {
	if o == nil || o.ProDiscoveryTrialRejected == nil {
		var ret bool
		return ret
	}
	return *o.ProDiscoveryTrialRejected
}

// GetProDiscoveryTrialRejectedOk returns a tuple with the ProDiscoveryTrialRejected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetProDiscoveryTrialRejectedOk() (*bool, bool) {
	if o == nil || o.ProDiscoveryTrialRejected == nil {
		return nil, false
	}
	return o.ProDiscoveryTrialRejected, true
}

// HasProDiscoveryTrialRejected returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasProDiscoveryTrialRejected() bool {
	if o != nil && o.ProDiscoveryTrialRejected != nil {
		return true
	}

	return false
}

// SetProDiscoveryTrialRejected gets a reference to the given bool and assigns it to the ProDiscoveryTrialRejected field.
func (o *BTUserAdminInfo) SetProDiscoveryTrialRejected(v bool) {
	o.ProDiscoveryTrialRejected = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetProductType() []string {
	if o == nil || o.ProductType == nil {
		var ret []string
		return ret
	}
	return o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetProductTypeOk() ([]string, bool) {
	if o == nil || o.ProductType == nil {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasProductType() bool {
	if o != nil && o.ProductType != nil {
		return true
	}

	return false
}

// SetProductType gets a reference to the given []string and assigns it to the ProductType field.
func (o *BTUserAdminInfo) SetProductType(v []string) {
	o.ProductType = v
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetRedirectUrl() string {
	if o == nil || o.RedirectUrl == nil {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetRedirectUrlOk() (*string, bool) {
	if o == nil || o.RedirectUrl == nil {
		return nil, false
	}
	return o.RedirectUrl, true
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasRedirectUrl() bool {
	if o != nil && o.RedirectUrl != nil {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *BTUserAdminInfo) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetRole() int32 {
	if o == nil || o.Role == nil {
		var ret int32
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetRoleOk() (*int32, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given int32 and assigns it to the Role field.
func (o *BTUserAdminInfo) SetRole(v int32) {
	o.Role = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetRoles() []BTRole {
	if o == nil || o.Roles == nil {
		var ret []BTRole
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetRolesOk() ([]BTRole, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []BTRole and assigns it to the Roles field.
func (o *BTUserAdminInfo) SetRoles(v []BTRole) {
	o.Roles = v
}

// GetRumEnabled returns the RumEnabled field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetRumEnabled() bool {
	if o == nil || o.RumEnabled == nil {
		var ret bool
		return ret
	}
	return *o.RumEnabled
}

// GetRumEnabledOk returns a tuple with the RumEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetRumEnabledOk() (*bool, bool) {
	if o == nil || o.RumEnabled == nil {
		return nil, false
	}
	return o.RumEnabled, true
}

// HasRumEnabled returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasRumEnabled() bool {
	if o != nil && o.RumEnabled != nil {
		return true
	}

	return false
}

// SetRumEnabled gets a reference to the given bool and assigns it to the RumEnabled field.
func (o *BTUserAdminInfo) SetRumEnabled(v bool) {
	o.RumEnabled = &v
}

// GetShowRenewStudentPages returns the ShowRenewStudentPages field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetShowRenewStudentPages() bool {
	if o == nil || o.ShowRenewStudentPages == nil {
		var ret bool
		return ret
	}
	return *o.ShowRenewStudentPages
}

// GetShowRenewStudentPagesOk returns a tuple with the ShowRenewStudentPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetShowRenewStudentPagesOk() (*bool, bool) {
	if o == nil || o.ShowRenewStudentPages == nil {
		return nil, false
	}
	return o.ShowRenewStudentPages, true
}

// HasShowRenewStudentPages returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasShowRenewStudentPages() bool {
	if o != nil && o.ShowRenewStudentPages != nil {
		return true
	}

	return false
}

// SetShowRenewStudentPages gets a reference to the given bool and assigns it to the ShowRenewStudentPages field.
func (o *BTUserAdminInfo) SetShowRenewStudentPages(v bool) {
	o.ShowRenewStudentPages = &v
}

// GetStartupPage returns the StartupPage field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetStartupPage() int32 {
	if o == nil || o.StartupPage == nil {
		var ret int32
		return ret
	}
	return *o.StartupPage
}

// GetStartupPageOk returns a tuple with the StartupPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetStartupPageOk() (*int32, bool) {
	if o == nil || o.StartupPage == nil {
		return nil, false
	}
	return o.StartupPage, true
}

// HasStartupPage returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasStartupPage() bool {
	if o != nil && o.StartupPage != nil {
		return true
	}

	return false
}

// SetStartupPage gets a reference to the given int32 and assigns it to the StartupPage field.
func (o *BTUserAdminInfo) SetStartupPage(v int32) {
	o.StartupPage = &v
}

// GetSystemUser returns the SystemUser field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetSystemUser() bool {
	if o == nil || o.SystemUser == nil {
		var ret bool
		return ret
	}
	return *o.SystemUser
}

// GetSystemUserOk returns a tuple with the SystemUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetSystemUserOk() (*bool, bool) {
	if o == nil || o.SystemUser == nil {
		return nil, false
	}
	return o.SystemUser, true
}

// HasSystemUser returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasSystemUser() bool {
	if o != nil && o.SystemUser != nil {
		return true
	}

	return false
}

// SetSystemUser gets a reference to the given bool and assigns it to the SystemUser field.
func (o *BTUserAdminInfo) SetSystemUser(v bool) {
	o.SystemUser = &v
}

// GetTotpEnabled returns the TotpEnabled field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetTotpEnabled() bool {
	if o == nil || o.TotpEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TotpEnabled
}

// GetTotpEnabledOk returns a tuple with the TotpEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetTotpEnabledOk() (*bool, bool) {
	if o == nil || o.TotpEnabled == nil {
		return nil, false
	}
	return o.TotpEnabled, true
}

// HasTotpEnabled returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasTotpEnabled() bool {
	if o != nil && o.TotpEnabled != nil {
		return true
	}

	return false
}

// SetTotpEnabled gets a reference to the given bool and assigns it to the TotpEnabled field.
func (o *BTUserAdminInfo) SetTotpEnabled(v bool) {
	o.TotpEnabled = &v
}

// GetTracingEnabled returns the TracingEnabled field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetTracingEnabled() bool {
	if o == nil || o.TracingEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TracingEnabled
}

// GetTracingEnabledOk returns a tuple with the TracingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetTracingEnabledOk() (*bool, bool) {
	if o == nil || o.TracingEnabled == nil {
		return nil, false
	}
	return o.TracingEnabled, true
}

// HasTracingEnabled returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasTracingEnabled() bool {
	if o != nil && o.TracingEnabled != nil {
		return true
	}

	return false
}

// SetTracingEnabled gets a reference to the given bool and assigns it to the TracingEnabled field.
func (o *BTUserAdminInfo) SetTracingEnabled(v bool) {
	o.TracingEnabled = &v
}

// GetTrialInfos returns the TrialInfos field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetTrialInfos() []BTTrialInfo {
	if o == nil || o.TrialInfos == nil {
		var ret []BTTrialInfo
		return ret
	}
	return o.TrialInfos
}

// GetTrialInfosOk returns a tuple with the TrialInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetTrialInfosOk() ([]BTTrialInfo, bool) {
	if o == nil || o.TrialInfos == nil {
		return nil, false
	}
	return o.TrialInfos, true
}

// HasTrialInfos returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasTrialInfos() bool {
	if o != nil && o.TrialInfos != nil {
		return true
	}

	return false
}

// SetTrialInfos gets a reference to the given []BTTrialInfo and assigns it to the TrialInfos field.
func (o *BTUserAdminInfo) SetTrialInfos(v []BTTrialInfo) {
	o.TrialInfos = v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetDiscount() BTDiscount {
	if o == nil || o.Discount == nil {
		var ret BTDiscount
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetDiscountOk() (*BTDiscount, bool) {
	if o == nil || o.Discount == nil {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasDiscount() bool {
	if o != nil && o.Discount != nil {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given BTDiscount and assigns it to the Discount field.
func (o *BTUserAdminInfo) SetDiscount(v BTDiscount) {
	o.Discount = &v
}

// GetInvitationId returns the InvitationId field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetInvitationId() string {
	if o == nil || o.InvitationId == nil {
		var ret string
		return ret
	}
	return *o.InvitationId
}

// GetInvitationIdOk returns a tuple with the InvitationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetInvitationIdOk() (*string, bool) {
	if o == nil || o.InvitationId == nil {
		return nil, false
	}
	return o.InvitationId, true
}

// HasInvitationId returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasInvitationId() bool {
	if o != nil && o.InvitationId != nil {
		return true
	}

	return false
}

// SetInvitationId gets a reference to the given string and assigns it to the InvitationId field.
func (o *BTUserAdminInfo) SetInvitationId(v string) {
	o.InvitationId = &v
}

// GetInvitedByEmail returns the InvitedByEmail field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetInvitedByEmail() string {
	if o == nil || o.InvitedByEmail == nil {
		var ret string
		return ret
	}
	return *o.InvitedByEmail
}

// GetInvitedByEmailOk returns a tuple with the InvitedByEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetInvitedByEmailOk() (*string, bool) {
	if o == nil || o.InvitedByEmail == nil {
		return nil, false
	}
	return o.InvitedByEmail, true
}

// HasInvitedByEmail returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasInvitedByEmail() bool {
	if o != nil && o.InvitedByEmail != nil {
		return true
	}

	return false
}

// SetInvitedByEmail gets a reference to the given string and assigns it to the InvitedByEmail field.
func (o *BTUserAdminInfo) SetInvitedByEmail(v string) {
	o.InvitedByEmail = &v
}

// GetInvitedDocumentId returns the InvitedDocumentId field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetInvitedDocumentId() string {
	if o == nil || o.InvitedDocumentId == nil {
		var ret string
		return ret
	}
	return *o.InvitedDocumentId
}

// GetInvitedDocumentIdOk returns a tuple with the InvitedDocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetInvitedDocumentIdOk() (*string, bool) {
	if o == nil || o.InvitedDocumentId == nil {
		return nil, false
	}
	return o.InvitedDocumentId, true
}

// HasInvitedDocumentId returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasInvitedDocumentId() bool {
	if o != nil && o.InvitedDocumentId != nil {
		return true
	}

	return false
}

// SetInvitedDocumentId gets a reference to the given string and assigns it to the InvitedDocumentId field.
func (o *BTUserAdminInfo) SetInvitedDocumentId(v string) {
	o.InvitedDocumentId = &v
}

// GetIsTrialRequest returns the IsTrialRequest field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetIsTrialRequest() bool {
	if o == nil || o.IsTrialRequest == nil {
		var ret bool
		return ret
	}
	return *o.IsTrialRequest
}

// GetIsTrialRequestOk returns a tuple with the IsTrialRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetIsTrialRequestOk() (*bool, bool) {
	if o == nil || o.IsTrialRequest == nil {
		return nil, false
	}
	return o.IsTrialRequest, true
}

// HasIsTrialRequest returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasIsTrialRequest() bool {
	if o != nil && o.IsTrialRequest != nil {
		return true
	}

	return false
}

// SetIsTrialRequest gets a reference to the given bool and assigns it to the IsTrialRequest field.
func (o *BTUserAdminInfo) SetIsTrialRequest(v bool) {
	o.IsTrialRequest = &v
}

// GetPrivacyConsents returns the PrivacyConsents field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetPrivacyConsents() []BTPrivacyConsentInfo {
	if o == nil || o.PrivacyConsents == nil {
		var ret []BTPrivacyConsentInfo
		return ret
	}
	return o.PrivacyConsents
}

// GetPrivacyConsentsOk returns a tuple with the PrivacyConsents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetPrivacyConsentsOk() ([]BTPrivacyConsentInfo, bool) {
	if o == nil || o.PrivacyConsents == nil {
		return nil, false
	}
	return o.PrivacyConsents, true
}

// HasPrivacyConsents returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasPrivacyConsents() bool {
	if o != nil && o.PrivacyConsents != nil {
		return true
	}

	return false
}

// SetPrivacyConsents gets a reference to the given []BTPrivacyConsentInfo and assigns it to the PrivacyConsents field.
func (o *BTUserAdminInfo) SetPrivacyConsents(v []BTPrivacyConsentInfo) {
	o.PrivacyConsents = v
}

// GetUserMetrics returns the UserMetrics field value if set, zero value otherwise.
func (o *BTUserAdminInfo) GetUserMetrics() BTUserMetricsInfo {
	if o == nil || o.UserMetrics == nil {
		var ret BTUserMetricsInfo
		return ret
	}
	return *o.UserMetrics
}

// GetUserMetricsOk returns a tuple with the UserMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserAdminInfo) GetUserMetricsOk() (*BTUserMetricsInfo, bool) {
	if o == nil || o.UserMetrics == nil {
		return nil, false
	}
	return o.UserMetrics, true
}

// HasUserMetrics returns a boolean if a field has been set.
func (o *BTUserAdminInfo) HasUserMetrics() bool {
	if o != nil && o.UserMetrics != nil {
		return true
	}

	return false
}

// SetUserMetrics gets a reference to the given BTUserMetricsInfo and assigns it to the UserMetrics field.
func (o *BTUserAdminInfo) SetUserMetrics(v BTUserMetricsInfo) {
	o.UserMetrics = &v
}

func (o BTUserAdminInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["jsonType"] = o.JsonType
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ViewRef != nil {
		toSerialize["viewRef"] = o.ViewRef
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.IsOnshapeSupport != nil {
		toSerialize["isOnshapeSupport"] = o.IsOnshapeSupport
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.DocumentationName != nil {
		toSerialize["documentationName"] = o.DocumentationName
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.FirstName != nil {
		toSerialize["firstName"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["lastName"] = o.LastName
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.DocumentationNameOverride != nil {
		toSerialize["documentationNameOverride"] = o.DocumentationNameOverride
	}
	if o.GlobalPermissions != nil {
		toSerialize["globalPermissions"] = o.GlobalPermissions
	}
	if o.InvitationState != nil {
		toSerialize["invitationState"] = o.InvitationState
	}
	if o.IsGuest != nil {
		toSerialize["isGuest"] = o.IsGuest
	}
	if o.IsLight != nil {
		toSerialize["isLight"] = o.IsLight
	}
	if o.LastLoginTime != nil {
		toSerialize["lastLoginTime"] = o.LastLoginTime
	}
	if o.PersonalMessageAllowed != nil {
		toSerialize["personalMessageAllowed"] = o.PersonalMessageAllowed
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.ActivePlan != nil {
		toSerialize["activePlan"] = o.ActivePlan
	}
	if o.ActivePlanId != nil {
		toSerialize["activePlanId"] = o.ActivePlanId
	}
	if o.ActivePurchases != nil {
		toSerialize["activePurchases"] = o.ActivePurchases
	}
	if o.ActiveTrialInfo != nil {
		toSerialize["activeTrialInfo"] = o.ActiveTrialInfo
	}
	if o.B2cId != nil {
		toSerialize["b2cId"] = o.B2cId
	}
	if o.BillingUpdateRequired != nil {
		toSerialize["billingUpdateRequired"] = o.BillingUpdateRequired
	}
	if o.CadSystemAtSignup != nil {
		toSerialize["cadSystemAtSignup"] = o.CadSystemAtSignup
	}
	if o.CountryCode != nil {
		toSerialize["countryCode"] = o.CountryCode
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Credential != nil {
		toSerialize["credential"] = o.Credential
	}
	if o.DefaultCompanyName != nil {
		toSerialize["defaultCompanyName"] = o.DefaultCompanyName
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DeviceInfo != nil {
		toSerialize["deviceInfo"] = o.DeviceInfo
	}
	if o.Discounts != nil {
		toSerialize["discounts"] = o.Discounts
	}
	if o.Enterprise != nil {
		toSerialize["enterprise"] = o.Enterprise
	}
	if o.EulaId != nil {
		toSerialize["eulaId"] = o.EulaId
	}
	if o.EulaRequired != nil {
		toSerialize["eulaRequired"] = o.EulaRequired
	}
	if o.EvalCenter != nil {
		toSerialize["evalCenter"] = o.EvalCenter
	}
	if o.ForumId != nil {
		toSerialize["forumId"] = o.ForumId
	}
	if o.IntendedUse != nil {
		toSerialize["intendedUse"] = o.IntendedUse
	}
	if o.LastTrialInfo != nil {
		toSerialize["lastTrialInfo"] = o.LastTrialInfo
	}
	if o.NeedToShowNewWalkthrough != nil {
		toSerialize["needToShowNewWalkthrough"] = o.NeedToShowNewWalkthrough
	}
	if o.OwnPurchase != nil {
		toSerialize["ownPurchase"] = o.OwnPurchase
	}
	if o.PhoneNumber != nil {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if o.ProDiscoveryTrialRejected != nil {
		toSerialize["proDiscoveryTrialRejected"] = o.ProDiscoveryTrialRejected
	}
	if o.ProductType != nil {
		toSerialize["productType"] = o.ProductType
	}
	if o.RedirectUrl != nil {
		toSerialize["redirectUrl"] = o.RedirectUrl
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	if o.RumEnabled != nil {
		toSerialize["rumEnabled"] = o.RumEnabled
	}
	if o.ShowRenewStudentPages != nil {
		toSerialize["showRenewStudentPages"] = o.ShowRenewStudentPages
	}
	if o.StartupPage != nil {
		toSerialize["startupPage"] = o.StartupPage
	}
	if o.SystemUser != nil {
		toSerialize["systemUser"] = o.SystemUser
	}
	if o.TotpEnabled != nil {
		toSerialize["totpEnabled"] = o.TotpEnabled
	}
	if o.TracingEnabled != nil {
		toSerialize["tracingEnabled"] = o.TracingEnabled
	}
	if o.TrialInfos != nil {
		toSerialize["trialInfos"] = o.TrialInfos
	}
	if o.Discount != nil {
		toSerialize["discount"] = o.Discount
	}
	if o.InvitationId != nil {
		toSerialize["invitationId"] = o.InvitationId
	}
	if o.InvitedByEmail != nil {
		toSerialize["invitedByEmail"] = o.InvitedByEmail
	}
	if o.InvitedDocumentId != nil {
		toSerialize["invitedDocumentId"] = o.InvitedDocumentId
	}
	if o.IsTrialRequest != nil {
		toSerialize["isTrialRequest"] = o.IsTrialRequest
	}
	if o.PrivacyConsents != nil {
		toSerialize["privacyConsents"] = o.PrivacyConsents
	}
	if o.UserMetrics != nil {
		toSerialize["userMetrics"] = o.UserMetrics
	}
	return json.Marshal(toSerialize)
}

type NullableBTUserAdminInfo struct {
	value *BTUserAdminInfo
	isSet bool
}

func (v NullableBTUserAdminInfo) Get() *BTUserAdminInfo {
	return v.value
}

func (v *NullableBTUserAdminInfo) Set(val *BTUserAdminInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTUserAdminInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTUserAdminInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTUserAdminInfo(val *BTUserAdminInfo) *NullableBTUserAdminInfo {
	return &NullableBTUserAdminInfo{value: val, isSet: true}
}

func (v NullableBTUserAdminInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTUserAdminInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
