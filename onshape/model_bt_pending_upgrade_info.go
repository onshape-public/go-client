/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTPendingUpgradeInfo struct for BTPendingUpgradeInfo
type BTPendingUpgradeInfo struct {
	ScheduledTime *JSONTime `json:"scheduledTime,omitempty"`
	Version       *int32    `json:"version,omitempty"`
}

// NewBTPendingUpgradeInfo instantiates a new BTPendingUpgradeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTPendingUpgradeInfo() *BTPendingUpgradeInfo {
	this := BTPendingUpgradeInfo{}
	return &this
}

// NewBTPendingUpgradeInfoWithDefaults instantiates a new BTPendingUpgradeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTPendingUpgradeInfoWithDefaults() *BTPendingUpgradeInfo {
	this := BTPendingUpgradeInfo{}
	return &this
}

// GetScheduledTime returns the ScheduledTime field value if set, zero value otherwise.
func (o *BTPendingUpgradeInfo) GetScheduledTime() JSONTime {
	if o == nil || o.ScheduledTime == nil {
		var ret JSONTime
		return ret
	}
	return *o.ScheduledTime
}

// GetScheduledTimeOk returns a tuple with the ScheduledTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPendingUpgradeInfo) GetScheduledTimeOk() (*JSONTime, bool) {
	if o == nil || o.ScheduledTime == nil {
		return nil, false
	}
	return o.ScheduledTime, true
}

// HasScheduledTime returns a boolean if a field has been set.
func (o *BTPendingUpgradeInfo) HasScheduledTime() bool {
	if o != nil && o.ScheduledTime != nil {
		return true
	}

	return false
}

// SetScheduledTime gets a reference to the given JSONTime and assigns it to the ScheduledTime field.
func (o *BTPendingUpgradeInfo) SetScheduledTime(v JSONTime) {
	o.ScheduledTime = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *BTPendingUpgradeInfo) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPendingUpgradeInfo) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *BTPendingUpgradeInfo) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *BTPendingUpgradeInfo) SetVersion(v int32) {
	o.Version = &v
}

func (o BTPendingUpgradeInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ScheduledTime != nil {
		toSerialize["scheduledTime"] = o.ScheduledTime
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableBTPendingUpgradeInfo struct {
	value *BTPendingUpgradeInfo
	isSet bool
}

func (v NullableBTPendingUpgradeInfo) Get() *BTPendingUpgradeInfo {
	return v.value
}

func (v *NullableBTPendingUpgradeInfo) Set(val *BTPendingUpgradeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTPendingUpgradeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTPendingUpgradeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTPendingUpgradeInfo(val *BTPendingUpgradeInfo) *NullableBTPendingUpgradeInfo {
	return &NullableBTPendingUpgradeInfo{value: val, isSet: true}
}

func (v NullableBTPendingUpgradeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTPendingUpgradeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
