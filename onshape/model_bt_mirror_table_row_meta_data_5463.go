/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTMirrorTableRowMetaData5463 struct for BTMirrorTableRowMetaData5463
type BTMirrorTableRowMetaData5463 struct {
	BTTableBaseRowMetadata3181
	BtType                  *string                                `json:"btType,omitempty"`
	CrossHighlightDataIfAny *BTTableBaseCrossHighlightData2609     `json:"crossHighlightDataIfAny,omitempty"`
	CrossHighlightData      *BTTableAssemblyCrossHighlightData2675 `json:"crossHighlightData,omitempty"`
	Occurrences             []BTOccurrence74                       `json:"occurrences,omitempty"`
}

// NewBTMirrorTableRowMetaData5463 instantiates a new BTMirrorTableRowMetaData5463 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMirrorTableRowMetaData5463() *BTMirrorTableRowMetaData5463 {
	this := BTMirrorTableRowMetaData5463{}
	return &this
}

// NewBTMirrorTableRowMetaData5463WithDefaults instantiates a new BTMirrorTableRowMetaData5463 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMirrorTableRowMetaData5463WithDefaults() *BTMirrorTableRowMetaData5463 {
	this := BTMirrorTableRowMetaData5463{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMirrorTableRowMetaData5463) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMirrorTableRowMetaData5463) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMirrorTableRowMetaData5463) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMirrorTableRowMetaData5463) SetBtType(v string) {
	o.BtType = &v
}

// GetCrossHighlightDataIfAny returns the CrossHighlightDataIfAny field value if set, zero value otherwise.
func (o *BTMirrorTableRowMetaData5463) GetCrossHighlightDataIfAny() BTTableBaseCrossHighlightData2609 {
	if o == nil || o.CrossHighlightDataIfAny == nil {
		var ret BTTableBaseCrossHighlightData2609
		return ret
	}
	return *o.CrossHighlightDataIfAny
}

// GetCrossHighlightDataIfAnyOk returns a tuple with the CrossHighlightDataIfAny field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMirrorTableRowMetaData5463) GetCrossHighlightDataIfAnyOk() (*BTTableBaseCrossHighlightData2609, bool) {
	if o == nil || o.CrossHighlightDataIfAny == nil {
		return nil, false
	}
	return o.CrossHighlightDataIfAny, true
}

// HasCrossHighlightDataIfAny returns a boolean if a field has been set.
func (o *BTMirrorTableRowMetaData5463) HasCrossHighlightDataIfAny() bool {
	if o != nil && o.CrossHighlightDataIfAny != nil {
		return true
	}

	return false
}

// SetCrossHighlightDataIfAny gets a reference to the given BTTableBaseCrossHighlightData2609 and assigns it to the CrossHighlightDataIfAny field.
func (o *BTMirrorTableRowMetaData5463) SetCrossHighlightDataIfAny(v BTTableBaseCrossHighlightData2609) {
	o.CrossHighlightDataIfAny = &v
}

// GetCrossHighlightData returns the CrossHighlightData field value if set, zero value otherwise.
func (o *BTMirrorTableRowMetaData5463) GetCrossHighlightData() BTTableAssemblyCrossHighlightData2675 {
	if o == nil || o.CrossHighlightData == nil {
		var ret BTTableAssemblyCrossHighlightData2675
		return ret
	}
	return *o.CrossHighlightData
}

// GetCrossHighlightDataOk returns a tuple with the CrossHighlightData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMirrorTableRowMetaData5463) GetCrossHighlightDataOk() (*BTTableAssemblyCrossHighlightData2675, bool) {
	if o == nil || o.CrossHighlightData == nil {
		return nil, false
	}
	return o.CrossHighlightData, true
}

// HasCrossHighlightData returns a boolean if a field has been set.
func (o *BTMirrorTableRowMetaData5463) HasCrossHighlightData() bool {
	if o != nil && o.CrossHighlightData != nil {
		return true
	}

	return false
}

// SetCrossHighlightData gets a reference to the given BTTableAssemblyCrossHighlightData2675 and assigns it to the CrossHighlightData field.
func (o *BTMirrorTableRowMetaData5463) SetCrossHighlightData(v BTTableAssemblyCrossHighlightData2675) {
	o.CrossHighlightData = &v
}

// GetOccurrences returns the Occurrences field value if set, zero value otherwise.
func (o *BTMirrorTableRowMetaData5463) GetOccurrences() []BTOccurrence74 {
	if o == nil || o.Occurrences == nil {
		var ret []BTOccurrence74
		return ret
	}
	return o.Occurrences
}

// GetOccurrencesOk returns a tuple with the Occurrences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMirrorTableRowMetaData5463) GetOccurrencesOk() ([]BTOccurrence74, bool) {
	if o == nil || o.Occurrences == nil {
		return nil, false
	}
	return o.Occurrences, true
}

// HasOccurrences returns a boolean if a field has been set.
func (o *BTMirrorTableRowMetaData5463) HasOccurrences() bool {
	if o != nil && o.Occurrences != nil {
		return true
	}

	return false
}

// SetOccurrences gets a reference to the given []BTOccurrence74 and assigns it to the Occurrences field.
func (o *BTMirrorTableRowMetaData5463) SetOccurrences(v []BTOccurrence74) {
	o.Occurrences = v
}

func (o BTMirrorTableRowMetaData5463) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTTableBaseRowMetadata3181, errBTTableBaseRowMetadata3181 := json.Marshal(o.BTTableBaseRowMetadata3181)
	if errBTTableBaseRowMetadata3181 != nil {
		return []byte{}, errBTTableBaseRowMetadata3181
	}
	errBTTableBaseRowMetadata3181 = json.Unmarshal([]byte(serializedBTTableBaseRowMetadata3181), &toSerialize)
	if errBTTableBaseRowMetadata3181 != nil {
		return []byte{}, errBTTableBaseRowMetadata3181
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.CrossHighlightDataIfAny != nil {
		toSerialize["crossHighlightDataIfAny"] = o.CrossHighlightDataIfAny
	}
	if o.CrossHighlightData != nil {
		toSerialize["crossHighlightData"] = o.CrossHighlightData
	}
	if o.Occurrences != nil {
		toSerialize["occurrences"] = o.Occurrences
	}
	return json.Marshal(toSerialize)
}

type NullableBTMirrorTableRowMetaData5463 struct {
	value *BTMirrorTableRowMetaData5463
	isSet bool
}

func (v NullableBTMirrorTableRowMetaData5463) Get() *BTMirrorTableRowMetaData5463 {
	return v.value
}

func (v *NullableBTMirrorTableRowMetaData5463) Set(val *BTMirrorTableRowMetaData5463) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMirrorTableRowMetaData5463) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMirrorTableRowMetaData5463) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMirrorTableRowMetaData5463(val *BTMirrorTableRowMetaData5463) *NullableBTMirrorTableRowMetaData5463 {
	return &NullableBTMirrorTableRowMetaData5463{value: val, isSet: true}
}

func (v NullableBTMirrorTableRowMetaData5463) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMirrorTableRowMetaData5463) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
