/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTMParameterIcon460 struct for BTMParameterIcon460
type BTMParameterIcon460 struct {
	BTMReadOnlyParameter3800
	BtType *string `json:"btType,omitempty"`
	// Microversion that resulted from the import.
	ImportMicroversion  *string                          `json:"importMicroversion,omitempty"`
	LibraryRelationType *GBTParameterLibraryRelationType `json:"libraryRelationType,omitempty"`
	// ID of the parameter's node.
	NodeId *string `json:"nodeId,omitempty"`
	// Unique ID of the parameter.
	ParameterId *string `json:"parameterId,omitempty"`
	ValueString *string `json:"valueString,omitempty"`
	HasError    *bool   `json:"hasError,omitempty"`
	Icon        *string `json:"icon,omitempty"`
	Label       *string `json:"label,omitempty"`
	Link        *string `json:"link,omitempty"`
	Tooltip     *string `json:"tooltip,omitempty"`
}

// NewBTMParameterIcon460 instantiates a new BTMParameterIcon460 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMParameterIcon460() *BTMParameterIcon460 {
	this := BTMParameterIcon460{}
	return &this
}

// NewBTMParameterIcon460WithDefaults instantiates a new BTMParameterIcon460 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMParameterIcon460WithDefaults() *BTMParameterIcon460 {
	this := BTMParameterIcon460{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMParameterIcon460) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterIcon460) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMParameterIcon460) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMParameterIcon460) SetBtType(v string) {
	o.BtType = &v
}

// GetImportMicroversion returns the ImportMicroversion field value if set, zero value otherwise.
func (o *BTMParameterIcon460) GetImportMicroversion() string {
	if o == nil || o.ImportMicroversion == nil {
		var ret string
		return ret
	}
	return *o.ImportMicroversion
}

// GetImportMicroversionOk returns a tuple with the ImportMicroversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterIcon460) GetImportMicroversionOk() (*string, bool) {
	if o == nil || o.ImportMicroversion == nil {
		return nil, false
	}
	return o.ImportMicroversion, true
}

// HasImportMicroversion returns a boolean if a field has been set.
func (o *BTMParameterIcon460) HasImportMicroversion() bool {
	if o != nil && o.ImportMicroversion != nil {
		return true
	}

	return false
}

// SetImportMicroversion gets a reference to the given string and assigns it to the ImportMicroversion field.
func (o *BTMParameterIcon460) SetImportMicroversion(v string) {
	o.ImportMicroversion = &v
}

// GetLibraryRelationType returns the LibraryRelationType field value if set, zero value otherwise.
func (o *BTMParameterIcon460) GetLibraryRelationType() GBTParameterLibraryRelationType {
	if o == nil || o.LibraryRelationType == nil {
		var ret GBTParameterLibraryRelationType
		return ret
	}
	return *o.LibraryRelationType
}

// GetLibraryRelationTypeOk returns a tuple with the LibraryRelationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterIcon460) GetLibraryRelationTypeOk() (*GBTParameterLibraryRelationType, bool) {
	if o == nil || o.LibraryRelationType == nil {
		return nil, false
	}
	return o.LibraryRelationType, true
}

// HasLibraryRelationType returns a boolean if a field has been set.
func (o *BTMParameterIcon460) HasLibraryRelationType() bool {
	if o != nil && o.LibraryRelationType != nil {
		return true
	}

	return false
}

// SetLibraryRelationType gets a reference to the given GBTParameterLibraryRelationType and assigns it to the LibraryRelationType field.
func (o *BTMParameterIcon460) SetLibraryRelationType(v GBTParameterLibraryRelationType) {
	o.LibraryRelationType = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *BTMParameterIcon460) GetNodeId() string {
	if o == nil || o.NodeId == nil {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterIcon460) GetNodeIdOk() (*string, bool) {
	if o == nil || o.NodeId == nil {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *BTMParameterIcon460) HasNodeId() bool {
	if o != nil && o.NodeId != nil {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *BTMParameterIcon460) SetNodeId(v string) {
	o.NodeId = &v
}

// GetParameterId returns the ParameterId field value if set, zero value otherwise.
func (o *BTMParameterIcon460) GetParameterId() string {
	if o == nil || o.ParameterId == nil {
		var ret string
		return ret
	}
	return *o.ParameterId
}

// GetParameterIdOk returns a tuple with the ParameterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterIcon460) GetParameterIdOk() (*string, bool) {
	if o == nil || o.ParameterId == nil {
		return nil, false
	}
	return o.ParameterId, true
}

// HasParameterId returns a boolean if a field has been set.
func (o *BTMParameterIcon460) HasParameterId() bool {
	if o != nil && o.ParameterId != nil {
		return true
	}

	return false
}

// SetParameterId gets a reference to the given string and assigns it to the ParameterId field.
func (o *BTMParameterIcon460) SetParameterId(v string) {
	o.ParameterId = &v
}

// GetValueString returns the ValueString field value if set, zero value otherwise.
func (o *BTMParameterIcon460) GetValueString() string {
	if o == nil || o.ValueString == nil {
		var ret string
		return ret
	}
	return *o.ValueString
}

// GetValueStringOk returns a tuple with the ValueString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterIcon460) GetValueStringOk() (*string, bool) {
	if o == nil || o.ValueString == nil {
		return nil, false
	}
	return o.ValueString, true
}

// HasValueString returns a boolean if a field has been set.
func (o *BTMParameterIcon460) HasValueString() bool {
	if o != nil && o.ValueString != nil {
		return true
	}

	return false
}

// SetValueString gets a reference to the given string and assigns it to the ValueString field.
func (o *BTMParameterIcon460) SetValueString(v string) {
	o.ValueString = &v
}

// GetHasError returns the HasError field value if set, zero value otherwise.
func (o *BTMParameterIcon460) GetHasError() bool {
	if o == nil || o.HasError == nil {
		var ret bool
		return ret
	}
	return *o.HasError
}

// GetHasErrorOk returns a tuple with the HasError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterIcon460) GetHasErrorOk() (*bool, bool) {
	if o == nil || o.HasError == nil {
		return nil, false
	}
	return o.HasError, true
}

// HasHasError returns a boolean if a field has been set.
func (o *BTMParameterIcon460) HasHasError() bool {
	if o != nil && o.HasError != nil {
		return true
	}

	return false
}

// SetHasError gets a reference to the given bool and assigns it to the HasError field.
func (o *BTMParameterIcon460) SetHasError(v bool) {
	o.HasError = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *BTMParameterIcon460) GetIcon() string {
	if o == nil || o.Icon == nil {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterIcon460) GetIconOk() (*string, bool) {
	if o == nil || o.Icon == nil {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *BTMParameterIcon460) HasIcon() bool {
	if o != nil && o.Icon != nil {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *BTMParameterIcon460) SetIcon(v string) {
	o.Icon = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *BTMParameterIcon460) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterIcon460) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *BTMParameterIcon460) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *BTMParameterIcon460) SetLabel(v string) {
	o.Label = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *BTMParameterIcon460) GetLink() string {
	if o == nil || o.Link == nil {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterIcon460) GetLinkOk() (*string, bool) {
	if o == nil || o.Link == nil {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *BTMParameterIcon460) HasLink() bool {
	if o != nil && o.Link != nil {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *BTMParameterIcon460) SetLink(v string) {
	o.Link = &v
}

// GetTooltip returns the Tooltip field value if set, zero value otherwise.
func (o *BTMParameterIcon460) GetTooltip() string {
	if o == nil || o.Tooltip == nil {
		var ret string
		return ret
	}
	return *o.Tooltip
}

// GetTooltipOk returns a tuple with the Tooltip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterIcon460) GetTooltipOk() (*string, bool) {
	if o == nil || o.Tooltip == nil {
		return nil, false
	}
	return o.Tooltip, true
}

// HasTooltip returns a boolean if a field has been set.
func (o *BTMParameterIcon460) HasTooltip() bool {
	if o != nil && o.Tooltip != nil {
		return true
	}

	return false
}

// SetTooltip gets a reference to the given string and assigns it to the Tooltip field.
func (o *BTMParameterIcon460) SetTooltip(v string) {
	o.Tooltip = &v
}

func (o BTMParameterIcon460) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTMReadOnlyParameter3800, errBTMReadOnlyParameter3800 := json.Marshal(o.BTMReadOnlyParameter3800)
	if errBTMReadOnlyParameter3800 != nil {
		return []byte{}, errBTMReadOnlyParameter3800
	}
	errBTMReadOnlyParameter3800 = json.Unmarshal([]byte(serializedBTMReadOnlyParameter3800), &toSerialize)
	if errBTMReadOnlyParameter3800 != nil {
		return []byte{}, errBTMReadOnlyParameter3800
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.ImportMicroversion != nil {
		toSerialize["importMicroversion"] = o.ImportMicroversion
	}
	if o.LibraryRelationType != nil {
		toSerialize["libraryRelationType"] = o.LibraryRelationType
	}
	if o.NodeId != nil {
		toSerialize["nodeId"] = o.NodeId
	}
	if o.ParameterId != nil {
		toSerialize["parameterId"] = o.ParameterId
	}
	if o.ValueString != nil {
		toSerialize["valueString"] = o.ValueString
	}
	if o.HasError != nil {
		toSerialize["hasError"] = o.HasError
	}
	if o.Icon != nil {
		toSerialize["icon"] = o.Icon
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	if o.Link != nil {
		toSerialize["link"] = o.Link
	}
	if o.Tooltip != nil {
		toSerialize["tooltip"] = o.Tooltip
	}
	return json.Marshal(toSerialize)
}

type NullableBTMParameterIcon460 struct {
	value *BTMParameterIcon460
	isSet bool
}

func (v NullableBTMParameterIcon460) Get() *BTMParameterIcon460 {
	return v.value
}

func (v *NullableBTMParameterIcon460) Set(val *BTMParameterIcon460) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMParameterIcon460) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMParameterIcon460) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMParameterIcon460(val *BTMParameterIcon460) *NullableBTMParameterIcon460 {
	return &NullableBTMParameterIcon460{value: val, isSet: true}
}

func (v NullableBTMParameterIcon460) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMParameterIcon460) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
