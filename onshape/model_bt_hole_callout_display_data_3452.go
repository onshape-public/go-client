/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTHoleCalloutDisplayData3452 struct for BTHoleCalloutDisplayData3452
type BTHoleCalloutDisplayData3452 struct {
	BTAnnotationDisplayData3225
	AnnotationPlane     *BTCoordinateSystem387          `json:"annotationPlane,omitempty"`
	BasePlane           *BTCoordinateSystem387          `json:"basePlane,omitempty"`
	BtType              *string                         `json:"btType,omitempty"`
	DeterministicId     *string                         `json:"deterministicId,omitempty"`
	DxdySegments        []BTVector2d1812                `json:"dxdySegments,omitempty"`
	IsDeletion          *bool                           `json:"isDeletion,omitempty"`
	AllHoleFaces        []string                        `json:"allHoleFaces,omitempty"`
	CounterboreDepth    *BTTolerantValueDisplayData3483 `json:"counterboreDepth,omitempty"`
	CounterboreDiameter *BTTolerantValueDisplayData3483 `json:"counterboreDiameter,omitempty"`
	CountersinkAngle    *BTTolerantValueDisplayData3483 `json:"countersinkAngle,omitempty"`
	CountersinkDiameter *BTTolerantValueDisplayData3483 `json:"countersinkDiameter,omitempty"`
	Depth               *BTTolerantValueDisplayData3483 `json:"depth,omitempty"`
	Diameter            *BTTolerantValueDisplayData3483 `json:"diameter,omitempty"`
	FeatureId           *string                         `json:"featureId,omitempty"`
	HoleType            *GBTHoleType                    `json:"holeType,omitempty"`
	IsPipeTap           *bool                           `json:"isPipeTap,omitempty"`
	IsTaperedPipeTap    *bool                           `json:"isTaperedPipeTap,omitempty"`
	IsTapped            *bool                           `json:"isTapped,omitempty"`
	LabelLocation       *BTVector2d1812                 `json:"labelLocation,omitempty"`
	PartId              *string                         `json:"partId,omitempty"`
	ReferenceRadius     *float64                        `json:"referenceRadius,omitempty"`
	TapSize             *string                         `json:"tapSize,omitempty"`
	TappedDepth         *BTTolerantValueDisplayData3483 `json:"tappedDepth,omitempty"`
}

// NewBTHoleCalloutDisplayData3452 instantiates a new BTHoleCalloutDisplayData3452 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTHoleCalloutDisplayData3452() *BTHoleCalloutDisplayData3452 {
	this := BTHoleCalloutDisplayData3452{}
	return &this
}

// NewBTHoleCalloutDisplayData3452WithDefaults instantiates a new BTHoleCalloutDisplayData3452 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTHoleCalloutDisplayData3452WithDefaults() *BTHoleCalloutDisplayData3452 {
	this := BTHoleCalloutDisplayData3452{}
	return &this
}

// GetAnnotationPlane returns the AnnotationPlane field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetAnnotationPlane() BTCoordinateSystem387 {
	if o == nil || o.AnnotationPlane == nil {
		var ret BTCoordinateSystem387
		return ret
	}
	return *o.AnnotationPlane
}

// GetAnnotationPlaneOk returns a tuple with the AnnotationPlane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetAnnotationPlaneOk() (*BTCoordinateSystem387, bool) {
	if o == nil || o.AnnotationPlane == nil {
		return nil, false
	}
	return o.AnnotationPlane, true
}

// HasAnnotationPlane returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasAnnotationPlane() bool {
	if o != nil && o.AnnotationPlane != nil {
		return true
	}

	return false
}

// SetAnnotationPlane gets a reference to the given BTCoordinateSystem387 and assigns it to the AnnotationPlane field.
func (o *BTHoleCalloutDisplayData3452) SetAnnotationPlane(v BTCoordinateSystem387) {
	o.AnnotationPlane = &v
}

// GetBasePlane returns the BasePlane field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetBasePlane() BTCoordinateSystem387 {
	if o == nil || o.BasePlane == nil {
		var ret BTCoordinateSystem387
		return ret
	}
	return *o.BasePlane
}

// GetBasePlaneOk returns a tuple with the BasePlane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetBasePlaneOk() (*BTCoordinateSystem387, bool) {
	if o == nil || o.BasePlane == nil {
		return nil, false
	}
	return o.BasePlane, true
}

// HasBasePlane returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasBasePlane() bool {
	if o != nil && o.BasePlane != nil {
		return true
	}

	return false
}

// SetBasePlane gets a reference to the given BTCoordinateSystem387 and assigns it to the BasePlane field.
func (o *BTHoleCalloutDisplayData3452) SetBasePlane(v BTCoordinateSystem387) {
	o.BasePlane = &v
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTHoleCalloutDisplayData3452) SetBtType(v string) {
	o.BtType = &v
}

// GetDeterministicId returns the DeterministicId field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetDeterministicId() string {
	if o == nil || o.DeterministicId == nil {
		var ret string
		return ret
	}
	return *o.DeterministicId
}

// GetDeterministicIdOk returns a tuple with the DeterministicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetDeterministicIdOk() (*string, bool) {
	if o == nil || o.DeterministicId == nil {
		return nil, false
	}
	return o.DeterministicId, true
}

// HasDeterministicId returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasDeterministicId() bool {
	if o != nil && o.DeterministicId != nil {
		return true
	}

	return false
}

// SetDeterministicId gets a reference to the given string and assigns it to the DeterministicId field.
func (o *BTHoleCalloutDisplayData3452) SetDeterministicId(v string) {
	o.DeterministicId = &v
}

// GetDxdySegments returns the DxdySegments field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetDxdySegments() []BTVector2d1812 {
	if o == nil || o.DxdySegments == nil {
		var ret []BTVector2d1812
		return ret
	}
	return o.DxdySegments
}

// GetDxdySegmentsOk returns a tuple with the DxdySegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetDxdySegmentsOk() ([]BTVector2d1812, bool) {
	if o == nil || o.DxdySegments == nil {
		return nil, false
	}
	return o.DxdySegments, true
}

// HasDxdySegments returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasDxdySegments() bool {
	if o != nil && o.DxdySegments != nil {
		return true
	}

	return false
}

// SetDxdySegments gets a reference to the given []BTVector2d1812 and assigns it to the DxdySegments field.
func (o *BTHoleCalloutDisplayData3452) SetDxdySegments(v []BTVector2d1812) {
	o.DxdySegments = v
}

// GetIsDeletion returns the IsDeletion field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetIsDeletion() bool {
	if o == nil || o.IsDeletion == nil {
		var ret bool
		return ret
	}
	return *o.IsDeletion
}

// GetIsDeletionOk returns a tuple with the IsDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetIsDeletionOk() (*bool, bool) {
	if o == nil || o.IsDeletion == nil {
		return nil, false
	}
	return o.IsDeletion, true
}

// HasIsDeletion returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasIsDeletion() bool {
	if o != nil && o.IsDeletion != nil {
		return true
	}

	return false
}

// SetIsDeletion gets a reference to the given bool and assigns it to the IsDeletion field.
func (o *BTHoleCalloutDisplayData3452) SetIsDeletion(v bool) {
	o.IsDeletion = &v
}

// GetAllHoleFaces returns the AllHoleFaces field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetAllHoleFaces() []string {
	if o == nil || o.AllHoleFaces == nil {
		var ret []string
		return ret
	}
	return o.AllHoleFaces
}

// GetAllHoleFacesOk returns a tuple with the AllHoleFaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetAllHoleFacesOk() ([]string, bool) {
	if o == nil || o.AllHoleFaces == nil {
		return nil, false
	}
	return o.AllHoleFaces, true
}

// HasAllHoleFaces returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasAllHoleFaces() bool {
	if o != nil && o.AllHoleFaces != nil {
		return true
	}

	return false
}

// SetAllHoleFaces gets a reference to the given []string and assigns it to the AllHoleFaces field.
func (o *BTHoleCalloutDisplayData3452) SetAllHoleFaces(v []string) {
	o.AllHoleFaces = v
}

// GetCounterboreDepth returns the CounterboreDepth field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetCounterboreDepth() BTTolerantValueDisplayData3483 {
	if o == nil || o.CounterboreDepth == nil {
		var ret BTTolerantValueDisplayData3483
		return ret
	}
	return *o.CounterboreDepth
}

// GetCounterboreDepthOk returns a tuple with the CounterboreDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetCounterboreDepthOk() (*BTTolerantValueDisplayData3483, bool) {
	if o == nil || o.CounterboreDepth == nil {
		return nil, false
	}
	return o.CounterboreDepth, true
}

// HasCounterboreDepth returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasCounterboreDepth() bool {
	if o != nil && o.CounterboreDepth != nil {
		return true
	}

	return false
}

// SetCounterboreDepth gets a reference to the given BTTolerantValueDisplayData3483 and assigns it to the CounterboreDepth field.
func (o *BTHoleCalloutDisplayData3452) SetCounterboreDepth(v BTTolerantValueDisplayData3483) {
	o.CounterboreDepth = &v
}

// GetCounterboreDiameter returns the CounterboreDiameter field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetCounterboreDiameter() BTTolerantValueDisplayData3483 {
	if o == nil || o.CounterboreDiameter == nil {
		var ret BTTolerantValueDisplayData3483
		return ret
	}
	return *o.CounterboreDiameter
}

// GetCounterboreDiameterOk returns a tuple with the CounterboreDiameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetCounterboreDiameterOk() (*BTTolerantValueDisplayData3483, bool) {
	if o == nil || o.CounterboreDiameter == nil {
		return nil, false
	}
	return o.CounterboreDiameter, true
}

// HasCounterboreDiameter returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasCounterboreDiameter() bool {
	if o != nil && o.CounterboreDiameter != nil {
		return true
	}

	return false
}

// SetCounterboreDiameter gets a reference to the given BTTolerantValueDisplayData3483 and assigns it to the CounterboreDiameter field.
func (o *BTHoleCalloutDisplayData3452) SetCounterboreDiameter(v BTTolerantValueDisplayData3483) {
	o.CounterboreDiameter = &v
}

// GetCountersinkAngle returns the CountersinkAngle field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetCountersinkAngle() BTTolerantValueDisplayData3483 {
	if o == nil || o.CountersinkAngle == nil {
		var ret BTTolerantValueDisplayData3483
		return ret
	}
	return *o.CountersinkAngle
}

// GetCountersinkAngleOk returns a tuple with the CountersinkAngle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetCountersinkAngleOk() (*BTTolerantValueDisplayData3483, bool) {
	if o == nil || o.CountersinkAngle == nil {
		return nil, false
	}
	return o.CountersinkAngle, true
}

// HasCountersinkAngle returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasCountersinkAngle() bool {
	if o != nil && o.CountersinkAngle != nil {
		return true
	}

	return false
}

// SetCountersinkAngle gets a reference to the given BTTolerantValueDisplayData3483 and assigns it to the CountersinkAngle field.
func (o *BTHoleCalloutDisplayData3452) SetCountersinkAngle(v BTTolerantValueDisplayData3483) {
	o.CountersinkAngle = &v
}

// GetCountersinkDiameter returns the CountersinkDiameter field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetCountersinkDiameter() BTTolerantValueDisplayData3483 {
	if o == nil || o.CountersinkDiameter == nil {
		var ret BTTolerantValueDisplayData3483
		return ret
	}
	return *o.CountersinkDiameter
}

// GetCountersinkDiameterOk returns a tuple with the CountersinkDiameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetCountersinkDiameterOk() (*BTTolerantValueDisplayData3483, bool) {
	if o == nil || o.CountersinkDiameter == nil {
		return nil, false
	}
	return o.CountersinkDiameter, true
}

// HasCountersinkDiameter returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasCountersinkDiameter() bool {
	if o != nil && o.CountersinkDiameter != nil {
		return true
	}

	return false
}

// SetCountersinkDiameter gets a reference to the given BTTolerantValueDisplayData3483 and assigns it to the CountersinkDiameter field.
func (o *BTHoleCalloutDisplayData3452) SetCountersinkDiameter(v BTTolerantValueDisplayData3483) {
	o.CountersinkDiameter = &v
}

// GetDepth returns the Depth field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetDepth() BTTolerantValueDisplayData3483 {
	if o == nil || o.Depth == nil {
		var ret BTTolerantValueDisplayData3483
		return ret
	}
	return *o.Depth
}

// GetDepthOk returns a tuple with the Depth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetDepthOk() (*BTTolerantValueDisplayData3483, bool) {
	if o == nil || o.Depth == nil {
		return nil, false
	}
	return o.Depth, true
}

// HasDepth returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasDepth() bool {
	if o != nil && o.Depth != nil {
		return true
	}

	return false
}

// SetDepth gets a reference to the given BTTolerantValueDisplayData3483 and assigns it to the Depth field.
func (o *BTHoleCalloutDisplayData3452) SetDepth(v BTTolerantValueDisplayData3483) {
	o.Depth = &v
}

// GetDiameter returns the Diameter field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetDiameter() BTTolerantValueDisplayData3483 {
	if o == nil || o.Diameter == nil {
		var ret BTTolerantValueDisplayData3483
		return ret
	}
	return *o.Diameter
}

// GetDiameterOk returns a tuple with the Diameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetDiameterOk() (*BTTolerantValueDisplayData3483, bool) {
	if o == nil || o.Diameter == nil {
		return nil, false
	}
	return o.Diameter, true
}

// HasDiameter returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasDiameter() bool {
	if o != nil && o.Diameter != nil {
		return true
	}

	return false
}

// SetDiameter gets a reference to the given BTTolerantValueDisplayData3483 and assigns it to the Diameter field.
func (o *BTHoleCalloutDisplayData3452) SetDiameter(v BTTolerantValueDisplayData3483) {
	o.Diameter = &v
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetFeatureId() string {
	if o == nil || o.FeatureId == nil {
		var ret string
		return ret
	}
	return *o.FeatureId
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetFeatureIdOk() (*string, bool) {
	if o == nil || o.FeatureId == nil {
		return nil, false
	}
	return o.FeatureId, true
}

// HasFeatureId returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasFeatureId() bool {
	if o != nil && o.FeatureId != nil {
		return true
	}

	return false
}

// SetFeatureId gets a reference to the given string and assigns it to the FeatureId field.
func (o *BTHoleCalloutDisplayData3452) SetFeatureId(v string) {
	o.FeatureId = &v
}

// GetHoleType returns the HoleType field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetHoleType() GBTHoleType {
	if o == nil || o.HoleType == nil {
		var ret GBTHoleType
		return ret
	}
	return *o.HoleType
}

// GetHoleTypeOk returns a tuple with the HoleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetHoleTypeOk() (*GBTHoleType, bool) {
	if o == nil || o.HoleType == nil {
		return nil, false
	}
	return o.HoleType, true
}

// HasHoleType returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasHoleType() bool {
	if o != nil && o.HoleType != nil {
		return true
	}

	return false
}

// SetHoleType gets a reference to the given GBTHoleType and assigns it to the HoleType field.
func (o *BTHoleCalloutDisplayData3452) SetHoleType(v GBTHoleType) {
	o.HoleType = &v
}

// GetIsPipeTap returns the IsPipeTap field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetIsPipeTap() bool {
	if o == nil || o.IsPipeTap == nil {
		var ret bool
		return ret
	}
	return *o.IsPipeTap
}

// GetIsPipeTapOk returns a tuple with the IsPipeTap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetIsPipeTapOk() (*bool, bool) {
	if o == nil || o.IsPipeTap == nil {
		return nil, false
	}
	return o.IsPipeTap, true
}

// HasIsPipeTap returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasIsPipeTap() bool {
	if o != nil && o.IsPipeTap != nil {
		return true
	}

	return false
}

// SetIsPipeTap gets a reference to the given bool and assigns it to the IsPipeTap field.
func (o *BTHoleCalloutDisplayData3452) SetIsPipeTap(v bool) {
	o.IsPipeTap = &v
}

// GetIsTaperedPipeTap returns the IsTaperedPipeTap field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetIsTaperedPipeTap() bool {
	if o == nil || o.IsTaperedPipeTap == nil {
		var ret bool
		return ret
	}
	return *o.IsTaperedPipeTap
}

// GetIsTaperedPipeTapOk returns a tuple with the IsTaperedPipeTap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetIsTaperedPipeTapOk() (*bool, bool) {
	if o == nil || o.IsTaperedPipeTap == nil {
		return nil, false
	}
	return o.IsTaperedPipeTap, true
}

// HasIsTaperedPipeTap returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasIsTaperedPipeTap() bool {
	if o != nil && o.IsTaperedPipeTap != nil {
		return true
	}

	return false
}

// SetIsTaperedPipeTap gets a reference to the given bool and assigns it to the IsTaperedPipeTap field.
func (o *BTHoleCalloutDisplayData3452) SetIsTaperedPipeTap(v bool) {
	o.IsTaperedPipeTap = &v
}

// GetIsTapped returns the IsTapped field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetIsTapped() bool {
	if o == nil || o.IsTapped == nil {
		var ret bool
		return ret
	}
	return *o.IsTapped
}

// GetIsTappedOk returns a tuple with the IsTapped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetIsTappedOk() (*bool, bool) {
	if o == nil || o.IsTapped == nil {
		return nil, false
	}
	return o.IsTapped, true
}

// HasIsTapped returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasIsTapped() bool {
	if o != nil && o.IsTapped != nil {
		return true
	}

	return false
}

// SetIsTapped gets a reference to the given bool and assigns it to the IsTapped field.
func (o *BTHoleCalloutDisplayData3452) SetIsTapped(v bool) {
	o.IsTapped = &v
}

// GetLabelLocation returns the LabelLocation field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetLabelLocation() BTVector2d1812 {
	if o == nil || o.LabelLocation == nil {
		var ret BTVector2d1812
		return ret
	}
	return *o.LabelLocation
}

// GetLabelLocationOk returns a tuple with the LabelLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetLabelLocationOk() (*BTVector2d1812, bool) {
	if o == nil || o.LabelLocation == nil {
		return nil, false
	}
	return o.LabelLocation, true
}

// HasLabelLocation returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasLabelLocation() bool {
	if o != nil && o.LabelLocation != nil {
		return true
	}

	return false
}

// SetLabelLocation gets a reference to the given BTVector2d1812 and assigns it to the LabelLocation field.
func (o *BTHoleCalloutDisplayData3452) SetLabelLocation(v BTVector2d1812) {
	o.LabelLocation = &v
}

// GetPartId returns the PartId field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetPartId() string {
	if o == nil || o.PartId == nil {
		var ret string
		return ret
	}
	return *o.PartId
}

// GetPartIdOk returns a tuple with the PartId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetPartIdOk() (*string, bool) {
	if o == nil || o.PartId == nil {
		return nil, false
	}
	return o.PartId, true
}

// HasPartId returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasPartId() bool {
	if o != nil && o.PartId != nil {
		return true
	}

	return false
}

// SetPartId gets a reference to the given string and assigns it to the PartId field.
func (o *BTHoleCalloutDisplayData3452) SetPartId(v string) {
	o.PartId = &v
}

// GetReferenceRadius returns the ReferenceRadius field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetReferenceRadius() float64 {
	if o == nil || o.ReferenceRadius == nil {
		var ret float64
		return ret
	}
	return *o.ReferenceRadius
}

// GetReferenceRadiusOk returns a tuple with the ReferenceRadius field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetReferenceRadiusOk() (*float64, bool) {
	if o == nil || o.ReferenceRadius == nil {
		return nil, false
	}
	return o.ReferenceRadius, true
}

// HasReferenceRadius returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasReferenceRadius() bool {
	if o != nil && o.ReferenceRadius != nil {
		return true
	}

	return false
}

// SetReferenceRadius gets a reference to the given float64 and assigns it to the ReferenceRadius field.
func (o *BTHoleCalloutDisplayData3452) SetReferenceRadius(v float64) {
	o.ReferenceRadius = &v
}

// GetTapSize returns the TapSize field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetTapSize() string {
	if o == nil || o.TapSize == nil {
		var ret string
		return ret
	}
	return *o.TapSize
}

// GetTapSizeOk returns a tuple with the TapSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetTapSizeOk() (*string, bool) {
	if o == nil || o.TapSize == nil {
		return nil, false
	}
	return o.TapSize, true
}

// HasTapSize returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasTapSize() bool {
	if o != nil && o.TapSize != nil {
		return true
	}

	return false
}

// SetTapSize gets a reference to the given string and assigns it to the TapSize field.
func (o *BTHoleCalloutDisplayData3452) SetTapSize(v string) {
	o.TapSize = &v
}

// GetTappedDepth returns the TappedDepth field value if set, zero value otherwise.
func (o *BTHoleCalloutDisplayData3452) GetTappedDepth() BTTolerantValueDisplayData3483 {
	if o == nil || o.TappedDepth == nil {
		var ret BTTolerantValueDisplayData3483
		return ret
	}
	return *o.TappedDepth
}

// GetTappedDepthOk returns a tuple with the TappedDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTHoleCalloutDisplayData3452) GetTappedDepthOk() (*BTTolerantValueDisplayData3483, bool) {
	if o == nil || o.TappedDepth == nil {
		return nil, false
	}
	return o.TappedDepth, true
}

// HasTappedDepth returns a boolean if a field has been set.
func (o *BTHoleCalloutDisplayData3452) HasTappedDepth() bool {
	if o != nil && o.TappedDepth != nil {
		return true
	}

	return false
}

// SetTappedDepth gets a reference to the given BTTolerantValueDisplayData3483 and assigns it to the TappedDepth field.
func (o *BTHoleCalloutDisplayData3452) SetTappedDepth(v BTTolerantValueDisplayData3483) {
	o.TappedDepth = &v
}

func (o BTHoleCalloutDisplayData3452) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTAnnotationDisplayData3225, errBTAnnotationDisplayData3225 := json.Marshal(o.BTAnnotationDisplayData3225)
	if errBTAnnotationDisplayData3225 != nil {
		return []byte{}, errBTAnnotationDisplayData3225
	}
	errBTAnnotationDisplayData3225 = json.Unmarshal([]byte(serializedBTAnnotationDisplayData3225), &toSerialize)
	if errBTAnnotationDisplayData3225 != nil {
		return []byte{}, errBTAnnotationDisplayData3225
	}
	if o.AnnotationPlane != nil {
		toSerialize["annotationPlane"] = o.AnnotationPlane
	}
	if o.BasePlane != nil {
		toSerialize["basePlane"] = o.BasePlane
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.DeterministicId != nil {
		toSerialize["deterministicId"] = o.DeterministicId
	}
	if o.DxdySegments != nil {
		toSerialize["dxdySegments"] = o.DxdySegments
	}
	if o.IsDeletion != nil {
		toSerialize["isDeletion"] = o.IsDeletion
	}
	if o.AllHoleFaces != nil {
		toSerialize["allHoleFaces"] = o.AllHoleFaces
	}
	if o.CounterboreDepth != nil {
		toSerialize["counterboreDepth"] = o.CounterboreDepth
	}
	if o.CounterboreDiameter != nil {
		toSerialize["counterboreDiameter"] = o.CounterboreDiameter
	}
	if o.CountersinkAngle != nil {
		toSerialize["countersinkAngle"] = o.CountersinkAngle
	}
	if o.CountersinkDiameter != nil {
		toSerialize["countersinkDiameter"] = o.CountersinkDiameter
	}
	if o.Depth != nil {
		toSerialize["depth"] = o.Depth
	}
	if o.Diameter != nil {
		toSerialize["diameter"] = o.Diameter
	}
	if o.FeatureId != nil {
		toSerialize["featureId"] = o.FeatureId
	}
	if o.HoleType != nil {
		toSerialize["holeType"] = o.HoleType
	}
	if o.IsPipeTap != nil {
		toSerialize["isPipeTap"] = o.IsPipeTap
	}
	if o.IsTaperedPipeTap != nil {
		toSerialize["isTaperedPipeTap"] = o.IsTaperedPipeTap
	}
	if o.IsTapped != nil {
		toSerialize["isTapped"] = o.IsTapped
	}
	if o.LabelLocation != nil {
		toSerialize["labelLocation"] = o.LabelLocation
	}
	if o.PartId != nil {
		toSerialize["partId"] = o.PartId
	}
	if o.ReferenceRadius != nil {
		toSerialize["referenceRadius"] = o.ReferenceRadius
	}
	if o.TapSize != nil {
		toSerialize["tapSize"] = o.TapSize
	}
	if o.TappedDepth != nil {
		toSerialize["tappedDepth"] = o.TappedDepth
	}
	return json.Marshal(toSerialize)
}

type NullableBTHoleCalloutDisplayData3452 struct {
	value *BTHoleCalloutDisplayData3452
	isSet bool
}

func (v NullableBTHoleCalloutDisplayData3452) Get() *BTHoleCalloutDisplayData3452 {
	return v.value
}

func (v *NullableBTHoleCalloutDisplayData3452) Set(val *BTHoleCalloutDisplayData3452) {
	v.value = val
	v.isSet = true
}

func (v NullableBTHoleCalloutDisplayData3452) IsSet() bool {
	return v.isSet
}

func (v *NullableBTHoleCalloutDisplayData3452) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTHoleCalloutDisplayData3452(val *BTHoleCalloutDisplayData3452) *NullableBTHoleCalloutDisplayData3452 {
	return &NullableBTHoleCalloutDisplayData3452{value: val, isSet: true}
}

func (v NullableBTHoleCalloutDisplayData3452) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTHoleCalloutDisplayData3452) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
