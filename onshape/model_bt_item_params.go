/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTItemParams struct for BTItemParams
type BTItemParams struct {
	// ID of the company, classroom, or enterprise that owns this item.
	CompanyId *string `json:"companyId,omitempty"`
	// Item name.
	Name *string `json:"name,omitempty"`
	// `0: PENDING | 1: ACTIVE | 2: INACTIVE`
	PublishState *int32 `json:"publishState,omitempty"`
}

// NewBTItemParams instantiates a new BTItemParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTItemParams() *BTItemParams {
	this := BTItemParams{}
	return &this
}

// NewBTItemParamsWithDefaults instantiates a new BTItemParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTItemParamsWithDefaults() *BTItemParams {
	this := BTItemParams{}
	return &this
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *BTItemParams) GetCompanyId() string {
	if o == nil || o.CompanyId == nil {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTItemParams) GetCompanyIdOk() (*string, bool) {
	if o == nil || o.CompanyId == nil {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *BTItemParams) HasCompanyId() bool {
	if o != nil && o.CompanyId != nil {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *BTItemParams) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTItemParams) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTItemParams) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTItemParams) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTItemParams) SetName(v string) {
	o.Name = &v
}

// GetPublishState returns the PublishState field value if set, zero value otherwise.
func (o *BTItemParams) GetPublishState() int32 {
	if o == nil || o.PublishState == nil {
		var ret int32
		return ret
	}
	return *o.PublishState
}

// GetPublishStateOk returns a tuple with the PublishState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTItemParams) GetPublishStateOk() (*int32, bool) {
	if o == nil || o.PublishState == nil {
		return nil, false
	}
	return o.PublishState, true
}

// HasPublishState returns a boolean if a field has been set.
func (o *BTItemParams) HasPublishState() bool {
	if o != nil && o.PublishState != nil {
		return true
	}

	return false
}

// SetPublishState gets a reference to the given int32 and assigns it to the PublishState field.
func (o *BTItemParams) SetPublishState(v int32) {
	o.PublishState = &v
}

func (o BTItemParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CompanyId != nil {
		toSerialize["companyId"] = o.CompanyId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PublishState != nil {
		toSerialize["publishState"] = o.PublishState
	}
	return json.Marshal(toSerialize)
}

type NullableBTItemParams struct {
	value *BTItemParams
	isSet bool
}

func (v NullableBTItemParams) Get() *BTItemParams {
	return v.value
}

func (v *NullableBTItemParams) Set(val *BTItemParams) {
	v.value = val
	v.isSet = true
}

func (v NullableBTItemParams) IsSet() bool {
	return v.isSet
}

func (v *NullableBTItemParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTItemParams(val *BTItemParams) *NullableBTItemParams {
	return &NullableBTItemParams{value: val, isSet: true}
}

func (v NullableBTItemParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTItemParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
