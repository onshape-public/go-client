/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTPLMMessageBody Webhook notification payload for all PLM related notifications.
type BTPLMMessageBody struct {
	AppElementSessionId *string `json:"appElementSessionId,omitempty"`
	Data                *string `json:"data,omitempty"`
	// Background PLM job's document ID.
	DocumentId *string `json:"documentId,omitempty"`
	Event      *string `json:"event,omitempty"`
	// ID of the background PLM job that was created.
	JobId     *string  `json:"jobId,omitempty"`
	JobType   *JobType `json:"jobType,omitempty"`
	MessageId *string  `json:"messageId,omitempty"`
	// Whether PLM integration was disabled.
	SettingsDisabled *bool `json:"settingsDisabled,omitempty"`
	// Whether PLM integration settings parameters were modified.
	SettingsModified *bool     `json:"settingsModified,omitempty"`
	Timestamp        *JSONTime `json:"timestamp,omitempty"`
	WebhookId        *string   `json:"webhookId,omitempty"`
}

// NewBTPLMMessageBody instantiates a new BTPLMMessageBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTPLMMessageBody() *BTPLMMessageBody {
	this := BTPLMMessageBody{}
	return &this
}

// NewBTPLMMessageBodyWithDefaults instantiates a new BTPLMMessageBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTPLMMessageBodyWithDefaults() *BTPLMMessageBody {
	this := BTPLMMessageBody{}
	return &this
}

// GetAppElementSessionId returns the AppElementSessionId field value if set, zero value otherwise.
func (o *BTPLMMessageBody) GetAppElementSessionId() string {
	if o == nil || o.AppElementSessionId == nil {
		var ret string
		return ret
	}
	return *o.AppElementSessionId
}

// GetAppElementSessionIdOk returns a tuple with the AppElementSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPLMMessageBody) GetAppElementSessionIdOk() (*string, bool) {
	if o == nil || o.AppElementSessionId == nil {
		return nil, false
	}
	return o.AppElementSessionId, true
}

// HasAppElementSessionId returns a boolean if a field has been set.
func (o *BTPLMMessageBody) HasAppElementSessionId() bool {
	if o != nil && o.AppElementSessionId != nil {
		return true
	}

	return false
}

// SetAppElementSessionId gets a reference to the given string and assigns it to the AppElementSessionId field.
func (o *BTPLMMessageBody) SetAppElementSessionId(v string) {
	o.AppElementSessionId = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *BTPLMMessageBody) GetData() string {
	if o == nil || o.Data == nil {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPLMMessageBody) GetDataOk() (*string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *BTPLMMessageBody) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *BTPLMMessageBody) SetData(v string) {
	o.Data = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *BTPLMMessageBody) GetDocumentId() string {
	if o == nil || o.DocumentId == nil {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPLMMessageBody) GetDocumentIdOk() (*string, bool) {
	if o == nil || o.DocumentId == nil {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *BTPLMMessageBody) HasDocumentId() bool {
	if o != nil && o.DocumentId != nil {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *BTPLMMessageBody) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *BTPLMMessageBody) GetEvent() string {
	if o == nil || o.Event == nil {
		var ret string
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPLMMessageBody) GetEventOk() (*string, bool) {
	if o == nil || o.Event == nil {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *BTPLMMessageBody) HasEvent() bool {
	if o != nil && o.Event != nil {
		return true
	}

	return false
}

// SetEvent gets a reference to the given string and assigns it to the Event field.
func (o *BTPLMMessageBody) SetEvent(v string) {
	o.Event = &v
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *BTPLMMessageBody) GetJobId() string {
	if o == nil || o.JobId == nil {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPLMMessageBody) GetJobIdOk() (*string, bool) {
	if o == nil || o.JobId == nil {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *BTPLMMessageBody) HasJobId() bool {
	if o != nil && o.JobId != nil {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
func (o *BTPLMMessageBody) SetJobId(v string) {
	o.JobId = &v
}

// GetJobType returns the JobType field value if set, zero value otherwise.
func (o *BTPLMMessageBody) GetJobType() JobType {
	if o == nil || o.JobType == nil {
		var ret JobType
		return ret
	}
	return *o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPLMMessageBody) GetJobTypeOk() (*JobType, bool) {
	if o == nil || o.JobType == nil {
		return nil, false
	}
	return o.JobType, true
}

// HasJobType returns a boolean if a field has been set.
func (o *BTPLMMessageBody) HasJobType() bool {
	if o != nil && o.JobType != nil {
		return true
	}

	return false
}

// SetJobType gets a reference to the given JobType and assigns it to the JobType field.
func (o *BTPLMMessageBody) SetJobType(v JobType) {
	o.JobType = &v
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *BTPLMMessageBody) GetMessageId() string {
	if o == nil || o.MessageId == nil {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPLMMessageBody) GetMessageIdOk() (*string, bool) {
	if o == nil || o.MessageId == nil {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *BTPLMMessageBody) HasMessageId() bool {
	if o != nil && o.MessageId != nil {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *BTPLMMessageBody) SetMessageId(v string) {
	o.MessageId = &v
}

// GetSettingsDisabled returns the SettingsDisabled field value if set, zero value otherwise.
func (o *BTPLMMessageBody) GetSettingsDisabled() bool {
	if o == nil || o.SettingsDisabled == nil {
		var ret bool
		return ret
	}
	return *o.SettingsDisabled
}

// GetSettingsDisabledOk returns a tuple with the SettingsDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPLMMessageBody) GetSettingsDisabledOk() (*bool, bool) {
	if o == nil || o.SettingsDisabled == nil {
		return nil, false
	}
	return o.SettingsDisabled, true
}

// HasSettingsDisabled returns a boolean if a field has been set.
func (o *BTPLMMessageBody) HasSettingsDisabled() bool {
	if o != nil && o.SettingsDisabled != nil {
		return true
	}

	return false
}

// SetSettingsDisabled gets a reference to the given bool and assigns it to the SettingsDisabled field.
func (o *BTPLMMessageBody) SetSettingsDisabled(v bool) {
	o.SettingsDisabled = &v
}

// GetSettingsModified returns the SettingsModified field value if set, zero value otherwise.
func (o *BTPLMMessageBody) GetSettingsModified() bool {
	if o == nil || o.SettingsModified == nil {
		var ret bool
		return ret
	}
	return *o.SettingsModified
}

// GetSettingsModifiedOk returns a tuple with the SettingsModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPLMMessageBody) GetSettingsModifiedOk() (*bool, bool) {
	if o == nil || o.SettingsModified == nil {
		return nil, false
	}
	return o.SettingsModified, true
}

// HasSettingsModified returns a boolean if a field has been set.
func (o *BTPLMMessageBody) HasSettingsModified() bool {
	if o != nil && o.SettingsModified != nil {
		return true
	}

	return false
}

// SetSettingsModified gets a reference to the given bool and assigns it to the SettingsModified field.
func (o *BTPLMMessageBody) SetSettingsModified(v bool) {
	o.SettingsModified = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *BTPLMMessageBody) GetTimestamp() JSONTime {
	if o == nil || o.Timestamp == nil {
		var ret JSONTime
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPLMMessageBody) GetTimestampOk() (*JSONTime, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *BTPLMMessageBody) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given JSONTime and assigns it to the Timestamp field.
func (o *BTPLMMessageBody) SetTimestamp(v JSONTime) {
	o.Timestamp = &v
}

// GetWebhookId returns the WebhookId field value if set, zero value otherwise.
func (o *BTPLMMessageBody) GetWebhookId() string {
	if o == nil || o.WebhookId == nil {
		var ret string
		return ret
	}
	return *o.WebhookId
}

// GetWebhookIdOk returns a tuple with the WebhookId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPLMMessageBody) GetWebhookIdOk() (*string, bool) {
	if o == nil || o.WebhookId == nil {
		return nil, false
	}
	return o.WebhookId, true
}

// HasWebhookId returns a boolean if a field has been set.
func (o *BTPLMMessageBody) HasWebhookId() bool {
	if o != nil && o.WebhookId != nil {
		return true
	}

	return false
}

// SetWebhookId gets a reference to the given string and assigns it to the WebhookId field.
func (o *BTPLMMessageBody) SetWebhookId(v string) {
	o.WebhookId = &v
}

func (o BTPLMMessageBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppElementSessionId != nil {
		toSerialize["appElementSessionId"] = o.AppElementSessionId
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.DocumentId != nil {
		toSerialize["documentId"] = o.DocumentId
	}
	if o.Event != nil {
		toSerialize["event"] = o.Event
	}
	if o.JobId != nil {
		toSerialize["jobId"] = o.JobId
	}
	if o.JobType != nil {
		toSerialize["jobType"] = o.JobType
	}
	if o.MessageId != nil {
		toSerialize["messageId"] = o.MessageId
	}
	if o.SettingsDisabled != nil {
		toSerialize["settingsDisabled"] = o.SettingsDisabled
	}
	if o.SettingsModified != nil {
		toSerialize["settingsModified"] = o.SettingsModified
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.WebhookId != nil {
		toSerialize["webhookId"] = o.WebhookId
	}
	return json.Marshal(toSerialize)
}

type NullableBTPLMMessageBody struct {
	value *BTPLMMessageBody
	isSet bool
}

func (v NullableBTPLMMessageBody) Get() *BTPLMMessageBody {
	return v.value
}

func (v *NullableBTPLMMessageBody) Set(val *BTPLMMessageBody) {
	v.value = val
	v.isSet = true
}

func (v NullableBTPLMMessageBody) IsSet() bool {
	return v.isSet
}

func (v *NullableBTPLMMessageBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTPLMMessageBody(val *BTPLMMessageBody) *NullableBTPLMMessageBody {
	return &NullableBTPLMMessageBody{value: val, isSet: true}
}

func (v NullableBTPLMMessageBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTPLMMessageBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
