/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
	"fmt"
)

// BTUserInfo - struct for BTUserInfo
type BTUserInfo struct {
	implBTUserInfo interface{}
}

// BTUserAdminInfoAsBTUserInfo is a convenience function that returns BTUserAdminInfo wrapped in BTUserInfo
func (o *BTUserAdminInfo) AsBTUserInfo() *BTUserInfo {
	return &BTUserInfo{o}
}

// NewBTUserInfo instantiates a new BTUserInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTUserInfo() *BTUserInfo {
	this := BTUserInfo{Newbase_BTUserInfo()}
	return &this
}

// NewBTUserInfoWithDefaults instantiates a new BTUserInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTUserInfoWithDefaults() *BTUserInfo {
	this := BTUserInfo{Newbase_BTUserInfoWithDefaults()}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTUserInfo) GetHref() string {
	type getResult interface {
		GetHref() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetHref()
	} else {
		var de string
		return de
	}
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetHrefOk() (*string, bool) {
	type getResult interface {
		GetHrefOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetHrefOk()
	} else {
		return nil, false
	}
}

// HasHref returns a boolean if a field has been set.
func (o *BTUserInfo) HasHref() bool {
	type getResult interface {
		HasHref() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasHref()
	} else {
		return false
	}
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTUserInfo) SetHref(v string) {
	type getResult interface {
		SetHref(v string)
	}

	o.GetActualInstance().(getResult).SetHref(v)
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTUserInfo) GetId() string {
	type getResult interface {
		GetId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetId()
	} else {
		var de string
		return de
	}
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetIdOk() (*string, bool) {
	type getResult interface {
		GetIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIdOk()
	} else {
		return nil, false
	}
}

// HasId returns a boolean if a field has been set.
func (o *BTUserInfo) HasId() bool {
	type getResult interface {
		HasId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasId()
	} else {
		return false
	}
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTUserInfo) SetId(v string) {
	type getResult interface {
		SetId(v string)
	}

	o.GetActualInstance().(getResult).SetId(v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTUserInfo) GetName() string {
	type getResult interface {
		GetName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetName()
	} else {
		var de string
		return de
	}
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetNameOk() (*string, bool) {
	type getResult interface {
		GetNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNameOk()
	} else {
		return nil, false
	}
}

// HasName returns a boolean if a field has been set.
func (o *BTUserInfo) HasName() bool {
	type getResult interface {
		HasName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasName()
	} else {
		return false
	}
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTUserInfo) SetName(v string) {
	type getResult interface {
		SetName(v string)
	}

	o.GetActualInstance().(getResult).SetName(v)
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *BTUserInfo) GetViewRef() string {
	type getResult interface {
		GetViewRef() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetViewRef()
	} else {
		var de string
		return de
	}
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetViewRefOk() (*string, bool) {
	type getResult interface {
		GetViewRefOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetViewRefOk()
	} else {
		return nil, false
	}
}

// HasViewRef returns a boolean if a field has been set.
func (o *BTUserInfo) HasViewRef() bool {
	type getResult interface {
		HasViewRef() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasViewRef()
	} else {
		return false
	}
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *BTUserInfo) SetViewRef(v string) {
	type getResult interface {
		SetViewRef(v string)
	}

	o.GetActualInstance().(getResult).SetViewRef(v)
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *BTUserInfo) GetImage() string {
	type getResult interface {
		GetImage() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetImage()
	} else {
		var de string
		return de
	}
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetImageOk() (*string, bool) {
	type getResult interface {
		GetImageOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetImageOk()
	} else {
		return nil, false
	}
}

// HasImage returns a boolean if a field has been set.
func (o *BTUserInfo) HasImage() bool {
	type getResult interface {
		HasImage() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasImage()
	} else {
		return false
	}
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *BTUserInfo) SetImage(v string) {
	type getResult interface {
		SetImage(v string)
	}

	o.GetActualInstance().(getResult).SetImage(v)
}

// GetState returns the State field value if set, zero value otherwise.
func (o *BTUserInfo) GetState() int32 {
	type getResult interface {
		GetState() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetState()
	} else {
		var de int32
		return de
	}
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetStateOk() (*int32, bool) {
	type getResult interface {
		GetStateOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetStateOk()
	} else {
		return nil, false
	}
}

// HasState returns a boolean if a field has been set.
func (o *BTUserInfo) HasState() bool {
	type getResult interface {
		HasState() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasState()
	} else {
		return false
	}
}

// SetState gets a reference to the given int32 and assigns it to the State field.
func (o *BTUserInfo) SetState(v int32) {
	type getResult interface {
		SetState(v int32)
	}

	o.GetActualInstance().(getResult).SetState(v)
}

// GetDocumentationName returns the DocumentationName field value if set, zero value otherwise.
func (o *BTUserInfo) GetDocumentationName() string {
	type getResult interface {
		GetDocumentationName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDocumentationName()
	} else {
		var de string
		return de
	}
}

// GetDocumentationNameOk returns a tuple with the DocumentationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetDocumentationNameOk() (*string, bool) {
	type getResult interface {
		GetDocumentationNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDocumentationNameOk()
	} else {
		return nil, false
	}
}

// HasDocumentationName returns a boolean if a field has been set.
func (o *BTUserInfo) HasDocumentationName() bool {
	type getResult interface {
		HasDocumentationName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDocumentationName()
	} else {
		return false
	}
}

// SetDocumentationName gets a reference to the given string and assigns it to the DocumentationName field.
func (o *BTUserInfo) SetDocumentationName(v string) {
	type getResult interface {
		SetDocumentationName(v string)
	}

	o.GetActualInstance().(getResult).SetDocumentationName(v)
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *BTUserInfo) GetEmail() string {
	type getResult interface {
		GetEmail() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetEmail()
	} else {
		var de string
		return de
	}
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetEmailOk() (*string, bool) {
	type getResult interface {
		GetEmailOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetEmailOk()
	} else {
		return nil, false
	}
}

// HasEmail returns a boolean if a field has been set.
func (o *BTUserInfo) HasEmail() bool {
	type getResult interface {
		HasEmail() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasEmail()
	} else {
		return false
	}
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *BTUserInfo) SetEmail(v string) {
	type getResult interface {
		SetEmail(v string)
	}

	o.GetActualInstance().(getResult).SetEmail(v)
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *BTUserInfo) GetFirstName() string {
	type getResult interface {
		GetFirstName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFirstName()
	} else {
		var de string
		return de
	}
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetFirstNameOk() (*string, bool) {
	type getResult interface {
		GetFirstNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetFirstNameOk()
	} else {
		return nil, false
	}
}

// HasFirstName returns a boolean if a field has been set.
func (o *BTUserInfo) HasFirstName() bool {
	type getResult interface {
		HasFirstName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasFirstName()
	} else {
		return false
	}
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *BTUserInfo) SetFirstName(v string) {
	type getResult interface {
		SetFirstName(v string)
	}

	o.GetActualInstance().(getResult).SetFirstName(v)
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *BTUserInfo) GetLastName() string {
	type getResult interface {
		GetLastName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLastName()
	} else {
		var de string
		return de
	}
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetLastNameOk() (*string, bool) {
	type getResult interface {
		GetLastNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLastNameOk()
	} else {
		return nil, false
	}
}

// HasLastName returns a boolean if a field has been set.
func (o *BTUserInfo) HasLastName() bool {
	type getResult interface {
		HasLastName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasLastName()
	} else {
		return false
	}
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *BTUserInfo) SetLastName(v string) {
	type getResult interface {
		SetLastName(v string)
	}

	o.GetActualInstance().(getResult).SetLastName(v)
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *BTUserInfo) GetCompany() BTCompanySummaryInfo {
	type getResult interface {
		GetCompany() BTCompanySummaryInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCompany()
	} else {
		var de BTCompanySummaryInfo
		return de
	}
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetCompanyOk() (*BTCompanySummaryInfo, bool) {
	type getResult interface {
		GetCompanyOk() (*BTCompanySummaryInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCompanyOk()
	} else {
		return nil, false
	}
}

// HasCompany returns a boolean if a field has been set.
func (o *BTUserInfo) HasCompany() bool {
	type getResult interface {
		HasCompany() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasCompany()
	} else {
		return false
	}
}

// SetCompany gets a reference to the given BTCompanySummaryInfo and assigns it to the Company field.
func (o *BTUserInfo) SetCompany(v BTCompanySummaryInfo) {
	type getResult interface {
		SetCompany(v BTCompanySummaryInfo)
	}

	o.GetActualInstance().(getResult).SetCompany(v)
}

// GetDocumentationNameOverride returns the DocumentationNameOverride field value if set, zero value otherwise.
func (o *BTUserInfo) GetDocumentationNameOverride() string {
	type getResult interface {
		GetDocumentationNameOverride() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDocumentationNameOverride()
	} else {
		var de string
		return de
	}
}

// GetDocumentationNameOverrideOk returns a tuple with the DocumentationNameOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetDocumentationNameOverrideOk() (*string, bool) {
	type getResult interface {
		GetDocumentationNameOverrideOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDocumentationNameOverrideOk()
	} else {
		return nil, false
	}
}

// HasDocumentationNameOverride returns a boolean if a field has been set.
func (o *BTUserInfo) HasDocumentationNameOverride() bool {
	type getResult interface {
		HasDocumentationNameOverride() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDocumentationNameOverride()
	} else {
		return false
	}
}

// SetDocumentationNameOverride gets a reference to the given string and assigns it to the DocumentationNameOverride field.
func (o *BTUserInfo) SetDocumentationNameOverride(v string) {
	type getResult interface {
		SetDocumentationNameOverride(v string)
	}

	o.GetActualInstance().(getResult).SetDocumentationNameOverride(v)
}

// GetGlobalPermissions returns the GlobalPermissions field value if set, zero value otherwise.
func (o *BTUserInfo) GetGlobalPermissions() GlobalPermissionInfo {
	type getResult interface {
		GetGlobalPermissions() GlobalPermissionInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetGlobalPermissions()
	} else {
		var de GlobalPermissionInfo
		return de
	}
}

// GetGlobalPermissionsOk returns a tuple with the GlobalPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetGlobalPermissionsOk() (*GlobalPermissionInfo, bool) {
	type getResult interface {
		GetGlobalPermissionsOk() (*GlobalPermissionInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetGlobalPermissionsOk()
	} else {
		return nil, false
	}
}

// HasGlobalPermissions returns a boolean if a field has been set.
func (o *BTUserInfo) HasGlobalPermissions() bool {
	type getResult interface {
		HasGlobalPermissions() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasGlobalPermissions()
	} else {
		return false
	}
}

// SetGlobalPermissions gets a reference to the given GlobalPermissionInfo and assigns it to the GlobalPermissions field.
func (o *BTUserInfo) SetGlobalPermissions(v GlobalPermissionInfo) {
	type getResult interface {
		SetGlobalPermissions(v GlobalPermissionInfo)
	}

	o.GetActualInstance().(getResult).SetGlobalPermissions(v)
}

// GetInvitationState returns the InvitationState field value if set, zero value otherwise.
func (o *BTUserInfo) GetInvitationState() int32 {
	type getResult interface {
		GetInvitationState() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetInvitationState()
	} else {
		var de int32
		return de
	}
}

// GetInvitationStateOk returns a tuple with the InvitationState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetInvitationStateOk() (*int32, bool) {
	type getResult interface {
		GetInvitationStateOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetInvitationStateOk()
	} else {
		return nil, false
	}
}

// HasInvitationState returns a boolean if a field has been set.
func (o *BTUserInfo) HasInvitationState() bool {
	type getResult interface {
		HasInvitationState() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasInvitationState()
	} else {
		return false
	}
}

// SetInvitationState gets a reference to the given int32 and assigns it to the InvitationState field.
func (o *BTUserInfo) SetInvitationState(v int32) {
	type getResult interface {
		SetInvitationState(v int32)
	}

	o.GetActualInstance().(getResult).SetInvitationState(v)
}

// GetIsGuest returns the IsGuest field value if set, zero value otherwise.
func (o *BTUserInfo) GetIsGuest() bool {
	type getResult interface {
		GetIsGuest() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsGuest()
	} else {
		var de bool
		return de
	}
}

// GetIsGuestOk returns a tuple with the IsGuest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetIsGuestOk() (*bool, bool) {
	type getResult interface {
		GetIsGuestOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsGuestOk()
	} else {
		return nil, false
	}
}

// HasIsGuest returns a boolean if a field has been set.
func (o *BTUserInfo) HasIsGuest() bool {
	type getResult interface {
		HasIsGuest() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIsGuest()
	} else {
		return false
	}
}

// SetIsGuest gets a reference to the given bool and assigns it to the IsGuest field.
func (o *BTUserInfo) SetIsGuest(v bool) {
	type getResult interface {
		SetIsGuest(v bool)
	}

	o.GetActualInstance().(getResult).SetIsGuest(v)
}

// GetIsLight returns the IsLight field value if set, zero value otherwise.
func (o *BTUserInfo) GetIsLight() bool {
	type getResult interface {
		GetIsLight() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsLight()
	} else {
		var de bool
		return de
	}
}

// GetIsLightOk returns a tuple with the IsLight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetIsLightOk() (*bool, bool) {
	type getResult interface {
		GetIsLightOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsLightOk()
	} else {
		return nil, false
	}
}

// HasIsLight returns a boolean if a field has been set.
func (o *BTUserInfo) HasIsLight() bool {
	type getResult interface {
		HasIsLight() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIsLight()
	} else {
		return false
	}
}

// SetIsLight gets a reference to the given bool and assigns it to the IsLight field.
func (o *BTUserInfo) SetIsLight(v bool) {
	type getResult interface {
		SetIsLight(v bool)
	}

	o.GetActualInstance().(getResult).SetIsLight(v)
}

// GetLastLoginTime returns the LastLoginTime field value if set, zero value otherwise.
func (o *BTUserInfo) GetLastLoginTime() JSONTime {
	type getResult interface {
		GetLastLoginTime() JSONTime
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLastLoginTime()
	} else {
		var de JSONTime
		return de
	}
}

// GetLastLoginTimeOk returns a tuple with the LastLoginTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetLastLoginTimeOk() (*JSONTime, bool) {
	type getResult interface {
		GetLastLoginTimeOk() (*JSONTime, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLastLoginTimeOk()
	} else {
		return nil, false
	}
}

// HasLastLoginTime returns a boolean if a field has been set.
func (o *BTUserInfo) HasLastLoginTime() bool {
	type getResult interface {
		HasLastLoginTime() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasLastLoginTime()
	} else {
		return false
	}
}

// SetLastLoginTime gets a reference to the given JSONTime and assigns it to the LastLoginTime field.
func (o *BTUserInfo) SetLastLoginTime(v JSONTime) {
	type getResult interface {
		SetLastLoginTime(v JSONTime)
	}

	o.GetActualInstance().(getResult).SetLastLoginTime(v)
}

// GetPersonalMessageAllowed returns the PersonalMessageAllowed field value if set, zero value otherwise.
func (o *BTUserInfo) GetPersonalMessageAllowed() bool {
	type getResult interface {
		GetPersonalMessageAllowed() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPersonalMessageAllowed()
	} else {
		var de bool
		return de
	}
}

// GetPersonalMessageAllowedOk returns a tuple with the PersonalMessageAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetPersonalMessageAllowedOk() (*bool, bool) {
	type getResult interface {
		GetPersonalMessageAllowedOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPersonalMessageAllowedOk()
	} else {
		return nil, false
	}
}

// HasPersonalMessageAllowed returns a boolean if a field has been set.
func (o *BTUserInfo) HasPersonalMessageAllowed() bool {
	type getResult interface {
		HasPersonalMessageAllowed() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasPersonalMessageAllowed()
	} else {
		return false
	}
}

// SetPersonalMessageAllowed gets a reference to the given bool and assigns it to the PersonalMessageAllowed field.
func (o *BTUserInfo) SetPersonalMessageAllowed(v bool) {
	type getResult interface {
		SetPersonalMessageAllowed(v bool)
	}

	o.GetActualInstance().(getResult).SetPersonalMessageAllowed(v)
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *BTUserInfo) GetSource() int32 {
	type getResult interface {
		GetSource() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSource()
	} else {
		var de int32
		return de
	}
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetSourceOk() (*int32, bool) {
	type getResult interface {
		GetSourceOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSourceOk()
	} else {
		return nil, false
	}
}

// HasSource returns a boolean if a field has been set.
func (o *BTUserInfo) HasSource() bool {
	type getResult interface {
		HasSource() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSource()
	} else {
		return false
	}
}

// SetSource gets a reference to the given int32 and assigns it to the Source field.
func (o *BTUserInfo) SetSource(v int32) {
	type getResult interface {
		SetSource(v int32)
	}

	o.GetActualInstance().(getResult).SetSource(v)
}

// GetActivePlan returns the ActivePlan field value if set, zero value otherwise.
func (o *BTUserInfo) GetActivePlan() BTBillingPlanInfo {
	type getResult interface {
		GetActivePlan() BTBillingPlanInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetActivePlan()
	} else {
		var de BTBillingPlanInfo
		return de
	}
}

// GetActivePlanOk returns a tuple with the ActivePlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetActivePlanOk() (*BTBillingPlanInfo, bool) {
	type getResult interface {
		GetActivePlanOk() (*BTBillingPlanInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetActivePlanOk()
	} else {
		return nil, false
	}
}

// HasActivePlan returns a boolean if a field has been set.
func (o *BTUserInfo) HasActivePlan() bool {
	type getResult interface {
		HasActivePlan() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasActivePlan()
	} else {
		return false
	}
}

// SetActivePlan gets a reference to the given BTBillingPlanInfo and assigns it to the ActivePlan field.
func (o *BTUserInfo) SetActivePlan(v BTBillingPlanInfo) {
	type getResult interface {
		SetActivePlan(v BTBillingPlanInfo)
	}

	o.GetActualInstance().(getResult).SetActivePlan(v)
}

// GetActivePlanId returns the ActivePlanId field value if set, zero value otherwise.
func (o *BTUserInfo) GetActivePlanId() string {
	type getResult interface {
		GetActivePlanId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetActivePlanId()
	} else {
		var de string
		return de
	}
}

// GetActivePlanIdOk returns a tuple with the ActivePlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetActivePlanIdOk() (*string, bool) {
	type getResult interface {
		GetActivePlanIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetActivePlanIdOk()
	} else {
		return nil, false
	}
}

// HasActivePlanId returns a boolean if a field has been set.
func (o *BTUserInfo) HasActivePlanId() bool {
	type getResult interface {
		HasActivePlanId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasActivePlanId()
	} else {
		return false
	}
}

// SetActivePlanId gets a reference to the given string and assigns it to the ActivePlanId field.
func (o *BTUserInfo) SetActivePlanId(v string) {
	type getResult interface {
		SetActivePlanId(v string)
	}

	o.GetActualInstance().(getResult).SetActivePlanId(v)
}

// GetActivePurchases returns the ActivePurchases field value if set, zero value otherwise.
func (o *BTUserInfo) GetActivePurchases() []BTPurchaseInfo {
	type getResult interface {
		GetActivePurchases() []BTPurchaseInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetActivePurchases()
	} else {
		var de []BTPurchaseInfo
		return de
	}
}

// GetActivePurchasesOk returns a tuple with the ActivePurchases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetActivePurchasesOk() ([]BTPurchaseInfo, bool) {
	type getResult interface {
		GetActivePurchasesOk() ([]BTPurchaseInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetActivePurchasesOk()
	} else {
		return nil, false
	}
}

// HasActivePurchases returns a boolean if a field has been set.
func (o *BTUserInfo) HasActivePurchases() bool {
	type getResult interface {
		HasActivePurchases() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasActivePurchases()
	} else {
		return false
	}
}

// SetActivePurchases gets a reference to the given []BTPurchaseInfo and assigns it to the ActivePurchases field.
func (o *BTUserInfo) SetActivePurchases(v []BTPurchaseInfo) {
	type getResult interface {
		SetActivePurchases(v []BTPurchaseInfo)
	}

	o.GetActualInstance().(getResult).SetActivePurchases(v)
}

// GetActiveTrialInfo returns the ActiveTrialInfo field value if set, zero value otherwise.
func (o *BTUserInfo) GetActiveTrialInfo() BTTrialInfo {
	type getResult interface {
		GetActiveTrialInfo() BTTrialInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetActiveTrialInfo()
	} else {
		var de BTTrialInfo
		return de
	}
}

// GetActiveTrialInfoOk returns a tuple with the ActiveTrialInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetActiveTrialInfoOk() (*BTTrialInfo, bool) {
	type getResult interface {
		GetActiveTrialInfoOk() (*BTTrialInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetActiveTrialInfoOk()
	} else {
		return nil, false
	}
}

// HasActiveTrialInfo returns a boolean if a field has been set.
func (o *BTUserInfo) HasActiveTrialInfo() bool {
	type getResult interface {
		HasActiveTrialInfo() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasActiveTrialInfo()
	} else {
		return false
	}
}

// SetActiveTrialInfo gets a reference to the given BTTrialInfo and assigns it to the ActiveTrialInfo field.
func (o *BTUserInfo) SetActiveTrialInfo(v BTTrialInfo) {
	type getResult interface {
		SetActiveTrialInfo(v BTTrialInfo)
	}

	o.GetActualInstance().(getResult).SetActiveTrialInfo(v)
}

// GetB2cId returns the B2cId field value if set, zero value otherwise.
func (o *BTUserInfo) GetB2cId() string {
	type getResult interface {
		GetB2cId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetB2cId()
	} else {
		var de string
		return de
	}
}

// GetB2cIdOk returns a tuple with the B2cId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetB2cIdOk() (*string, bool) {
	type getResult interface {
		GetB2cIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetB2cIdOk()
	} else {
		return nil, false
	}
}

// HasB2cId returns a boolean if a field has been set.
func (o *BTUserInfo) HasB2cId() bool {
	type getResult interface {
		HasB2cId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasB2cId()
	} else {
		return false
	}
}

// SetB2cId gets a reference to the given string and assigns it to the B2cId field.
func (o *BTUserInfo) SetB2cId(v string) {
	type getResult interface {
		SetB2cId(v string)
	}

	o.GetActualInstance().(getResult).SetB2cId(v)
}

// GetBillingUpdateRequired returns the BillingUpdateRequired field value if set, zero value otherwise.
func (o *BTUserInfo) GetBillingUpdateRequired() bool {
	type getResult interface {
		GetBillingUpdateRequired() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBillingUpdateRequired()
	} else {
		var de bool
		return de
	}
}

// GetBillingUpdateRequiredOk returns a tuple with the BillingUpdateRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetBillingUpdateRequiredOk() (*bool, bool) {
	type getResult interface {
		GetBillingUpdateRequiredOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetBillingUpdateRequiredOk()
	} else {
		return nil, false
	}
}

// HasBillingUpdateRequired returns a boolean if a field has been set.
func (o *BTUserInfo) HasBillingUpdateRequired() bool {
	type getResult interface {
		HasBillingUpdateRequired() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasBillingUpdateRequired()
	} else {
		return false
	}
}

// SetBillingUpdateRequired gets a reference to the given bool and assigns it to the BillingUpdateRequired field.
func (o *BTUserInfo) SetBillingUpdateRequired(v bool) {
	type getResult interface {
		SetBillingUpdateRequired(v bool)
	}

	o.GetActualInstance().(getResult).SetBillingUpdateRequired(v)
}

// GetCadSystemAtSignup returns the CadSystemAtSignup field value if set, zero value otherwise.
func (o *BTUserInfo) GetCadSystemAtSignup() string {
	type getResult interface {
		GetCadSystemAtSignup() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCadSystemAtSignup()
	} else {
		var de string
		return de
	}
}

// GetCadSystemAtSignupOk returns a tuple with the CadSystemAtSignup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetCadSystemAtSignupOk() (*string, bool) {
	type getResult interface {
		GetCadSystemAtSignupOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCadSystemAtSignupOk()
	} else {
		return nil, false
	}
}

// HasCadSystemAtSignup returns a boolean if a field has been set.
func (o *BTUserInfo) HasCadSystemAtSignup() bool {
	type getResult interface {
		HasCadSystemAtSignup() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasCadSystemAtSignup()
	} else {
		return false
	}
}

// SetCadSystemAtSignup gets a reference to the given string and assigns it to the CadSystemAtSignup field.
func (o *BTUserInfo) SetCadSystemAtSignup(v string) {
	type getResult interface {
		SetCadSystemAtSignup(v string)
	}

	o.GetActualInstance().(getResult).SetCadSystemAtSignup(v)
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *BTUserInfo) GetCountryCode() string {
	type getResult interface {
		GetCountryCode() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCountryCode()
	} else {
		var de string
		return de
	}
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetCountryCodeOk() (*string, bool) {
	type getResult interface {
		GetCountryCodeOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCountryCodeOk()
	} else {
		return nil, false
	}
}

// HasCountryCode returns a boolean if a field has been set.
func (o *BTUserInfo) HasCountryCode() bool {
	type getResult interface {
		HasCountryCode() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasCountryCode()
	} else {
		return false
	}
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *BTUserInfo) SetCountryCode(v string) {
	type getResult interface {
		SetCountryCode(v string)
	}

	o.GetActualInstance().(getResult).SetCountryCode(v)
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BTUserInfo) GetCreatedAt() JSONTime {
	type getResult interface {
		GetCreatedAt() JSONTime
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCreatedAt()
	} else {
		var de JSONTime
		return de
	}
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetCreatedAtOk() (*JSONTime, bool) {
	type getResult interface {
		GetCreatedAtOk() (*JSONTime, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCreatedAtOk()
	} else {
		return nil, false
	}
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BTUserInfo) HasCreatedAt() bool {
	type getResult interface {
		HasCreatedAt() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasCreatedAt()
	} else {
		return false
	}
}

// SetCreatedAt gets a reference to the given JSONTime and assigns it to the CreatedAt field.
func (o *BTUserInfo) SetCreatedAt(v JSONTime) {
	type getResult interface {
		SetCreatedAt(v JSONTime)
	}

	o.GetActualInstance().(getResult).SetCreatedAt(v)
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *BTUserInfo) GetCredential() BTSessionCredentialInfo {
	type getResult interface {
		GetCredential() BTSessionCredentialInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCredential()
	} else {
		var de BTSessionCredentialInfo
		return de
	}
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetCredentialOk() (*BTSessionCredentialInfo, bool) {
	type getResult interface {
		GetCredentialOk() (*BTSessionCredentialInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCredentialOk()
	} else {
		return nil, false
	}
}

// HasCredential returns a boolean if a field has been set.
func (o *BTUserInfo) HasCredential() bool {
	type getResult interface {
		HasCredential() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasCredential()
	} else {
		return false
	}
}

// SetCredential gets a reference to the given BTSessionCredentialInfo and assigns it to the Credential field.
func (o *BTUserInfo) SetCredential(v BTSessionCredentialInfo) {
	type getResult interface {
		SetCredential(v BTSessionCredentialInfo)
	}

	o.GetActualInstance().(getResult).SetCredential(v)
}

// GetDefaultCompanyName returns the DefaultCompanyName field value if set, zero value otherwise.
func (o *BTUserInfo) GetDefaultCompanyName() string {
	type getResult interface {
		GetDefaultCompanyName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDefaultCompanyName()
	} else {
		var de string
		return de
	}
}

// GetDefaultCompanyNameOk returns a tuple with the DefaultCompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetDefaultCompanyNameOk() (*string, bool) {
	type getResult interface {
		GetDefaultCompanyNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDefaultCompanyNameOk()
	} else {
		return nil, false
	}
}

// HasDefaultCompanyName returns a boolean if a field has been set.
func (o *BTUserInfo) HasDefaultCompanyName() bool {
	type getResult interface {
		HasDefaultCompanyName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDefaultCompanyName()
	} else {
		return false
	}
}

// SetDefaultCompanyName gets a reference to the given string and assigns it to the DefaultCompanyName field.
func (o *BTUserInfo) SetDefaultCompanyName(v string) {
	type getResult interface {
		SetDefaultCompanyName(v string)
	}

	o.GetActualInstance().(getResult).SetDefaultCompanyName(v)
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BTUserInfo) GetDescription() string {
	type getResult interface {
		GetDescription() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDescription()
	} else {
		var de string
		return de
	}
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetDescriptionOk() (*string, bool) {
	type getResult interface {
		GetDescriptionOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDescriptionOk()
	} else {
		return nil, false
	}
}

// HasDescription returns a boolean if a field has been set.
func (o *BTUserInfo) HasDescription() bool {
	type getResult interface {
		HasDescription() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDescription()
	} else {
		return false
	}
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BTUserInfo) SetDescription(v string) {
	type getResult interface {
		SetDescription(v string)
	}

	o.GetActualInstance().(getResult).SetDescription(v)
}

// GetDeviceInfo returns the DeviceInfo field value if set, zero value otherwise.
func (o *BTUserInfo) GetDeviceInfo() BTDeviceLoginSecretInfo {
	type getResult interface {
		GetDeviceInfo() BTDeviceLoginSecretInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDeviceInfo()
	} else {
		var de BTDeviceLoginSecretInfo
		return de
	}
}

// GetDeviceInfoOk returns a tuple with the DeviceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetDeviceInfoOk() (*BTDeviceLoginSecretInfo, bool) {
	type getResult interface {
		GetDeviceInfoOk() (*BTDeviceLoginSecretInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDeviceInfoOk()
	} else {
		return nil, false
	}
}

// HasDeviceInfo returns a boolean if a field has been set.
func (o *BTUserInfo) HasDeviceInfo() bool {
	type getResult interface {
		HasDeviceInfo() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDeviceInfo()
	} else {
		return false
	}
}

// SetDeviceInfo gets a reference to the given BTDeviceLoginSecretInfo and assigns it to the DeviceInfo field.
func (o *BTUserInfo) SetDeviceInfo(v BTDeviceLoginSecretInfo) {
	type getResult interface {
		SetDeviceInfo(v BTDeviceLoginSecretInfo)
	}

	o.GetActualInstance().(getResult).SetDeviceInfo(v)
}

// GetDiscounts returns the Discounts field value if set, zero value otherwise.
func (o *BTUserInfo) GetDiscounts() []BTDiscountInfo {
	type getResult interface {
		GetDiscounts() []BTDiscountInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDiscounts()
	} else {
		var de []BTDiscountInfo
		return de
	}
}

// GetDiscountsOk returns a tuple with the Discounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetDiscountsOk() ([]BTDiscountInfo, bool) {
	type getResult interface {
		GetDiscountsOk() ([]BTDiscountInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDiscountsOk()
	} else {
		return nil, false
	}
}

// HasDiscounts returns a boolean if a field has been set.
func (o *BTUserInfo) HasDiscounts() bool {
	type getResult interface {
		HasDiscounts() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDiscounts()
	} else {
		return false
	}
}

// SetDiscounts gets a reference to the given []BTDiscountInfo and assigns it to the Discounts field.
func (o *BTUserInfo) SetDiscounts(v []BTDiscountInfo) {
	type getResult interface {
		SetDiscounts(v []BTDiscountInfo)
	}

	o.GetActualInstance().(getResult).SetDiscounts(v)
}

// GetEnterprise returns the Enterprise field value if set, zero value otherwise.
func (o *BTUserInfo) GetEnterprise() bool {
	type getResult interface {
		GetEnterprise() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetEnterprise()
	} else {
		var de bool
		return de
	}
}

// GetEnterpriseOk returns a tuple with the Enterprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetEnterpriseOk() (*bool, bool) {
	type getResult interface {
		GetEnterpriseOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetEnterpriseOk()
	} else {
		return nil, false
	}
}

// HasEnterprise returns a boolean if a field has been set.
func (o *BTUserInfo) HasEnterprise() bool {
	type getResult interface {
		HasEnterprise() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasEnterprise()
	} else {
		return false
	}
}

// SetEnterprise gets a reference to the given bool and assigns it to the Enterprise field.
func (o *BTUserInfo) SetEnterprise(v bool) {
	type getResult interface {
		SetEnterprise(v bool)
	}

	o.GetActualInstance().(getResult).SetEnterprise(v)
}

// GetEulaId returns the EulaId field value if set, zero value otherwise.
func (o *BTUserInfo) GetEulaId() string {
	type getResult interface {
		GetEulaId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetEulaId()
	} else {
		var de string
		return de
	}
}

// GetEulaIdOk returns a tuple with the EulaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetEulaIdOk() (*string, bool) {
	type getResult interface {
		GetEulaIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetEulaIdOk()
	} else {
		return nil, false
	}
}

// HasEulaId returns a boolean if a field has been set.
func (o *BTUserInfo) HasEulaId() bool {
	type getResult interface {
		HasEulaId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasEulaId()
	} else {
		return false
	}
}

// SetEulaId gets a reference to the given string and assigns it to the EulaId field.
func (o *BTUserInfo) SetEulaId(v string) {
	type getResult interface {
		SetEulaId(v string)
	}

	o.GetActualInstance().(getResult).SetEulaId(v)
}

// GetEulaRequired returns the EulaRequired field value if set, zero value otherwise.
func (o *BTUserInfo) GetEulaRequired() bool {
	type getResult interface {
		GetEulaRequired() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetEulaRequired()
	} else {
		var de bool
		return de
	}
}

// GetEulaRequiredOk returns a tuple with the EulaRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetEulaRequiredOk() (*bool, bool) {
	type getResult interface {
		GetEulaRequiredOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetEulaRequiredOk()
	} else {
		return nil, false
	}
}

// HasEulaRequired returns a boolean if a field has been set.
func (o *BTUserInfo) HasEulaRequired() bool {
	type getResult interface {
		HasEulaRequired() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasEulaRequired()
	} else {
		return false
	}
}

// SetEulaRequired gets a reference to the given bool and assigns it to the EulaRequired field.
func (o *BTUserInfo) SetEulaRequired(v bool) {
	type getResult interface {
		SetEulaRequired(v bool)
	}

	o.GetActualInstance().(getResult).SetEulaRequired(v)
}

// GetEvalCenter returns the EvalCenter field value if set, zero value otherwise.
func (o *BTUserInfo) GetEvalCenter() bool {
	type getResult interface {
		GetEvalCenter() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetEvalCenter()
	} else {
		var de bool
		return de
	}
}

// GetEvalCenterOk returns a tuple with the EvalCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetEvalCenterOk() (*bool, bool) {
	type getResult interface {
		GetEvalCenterOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetEvalCenterOk()
	} else {
		return nil, false
	}
}

// HasEvalCenter returns a boolean if a field has been set.
func (o *BTUserInfo) HasEvalCenter() bool {
	type getResult interface {
		HasEvalCenter() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasEvalCenter()
	} else {
		return false
	}
}

// SetEvalCenter gets a reference to the given bool and assigns it to the EvalCenter field.
func (o *BTUserInfo) SetEvalCenter(v bool) {
	type getResult interface {
		SetEvalCenter(v bool)
	}

	o.GetActualInstance().(getResult).SetEvalCenter(v)
}

// GetForumId returns the ForumId field value if set, zero value otherwise.
func (o *BTUserInfo) GetForumId() string {
	type getResult interface {
		GetForumId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetForumId()
	} else {
		var de string
		return de
	}
}

// GetForumIdOk returns a tuple with the ForumId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetForumIdOk() (*string, bool) {
	type getResult interface {
		GetForumIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetForumIdOk()
	} else {
		return nil, false
	}
}

// HasForumId returns a boolean if a field has been set.
func (o *BTUserInfo) HasForumId() bool {
	type getResult interface {
		HasForumId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasForumId()
	} else {
		return false
	}
}

// SetForumId gets a reference to the given string and assigns it to the ForumId field.
func (o *BTUserInfo) SetForumId(v string) {
	type getResult interface {
		SetForumId(v string)
	}

	o.GetActualInstance().(getResult).SetForumId(v)
}

// GetIntendedUse returns the IntendedUse field value if set, zero value otherwise.
func (o *BTUserInfo) GetIntendedUse() int32 {
	type getResult interface {
		GetIntendedUse() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIntendedUse()
	} else {
		var de int32
		return de
	}
}

// GetIntendedUseOk returns a tuple with the IntendedUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetIntendedUseOk() (*int32, bool) {
	type getResult interface {
		GetIntendedUseOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIntendedUseOk()
	} else {
		return nil, false
	}
}

// HasIntendedUse returns a boolean if a field has been set.
func (o *BTUserInfo) HasIntendedUse() bool {
	type getResult interface {
		HasIntendedUse() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIntendedUse()
	} else {
		return false
	}
}

// SetIntendedUse gets a reference to the given int32 and assigns it to the IntendedUse field.
func (o *BTUserInfo) SetIntendedUse(v int32) {
	type getResult interface {
		SetIntendedUse(v int32)
	}

	o.GetActualInstance().(getResult).SetIntendedUse(v)
}

// GetLastTrialInfo returns the LastTrialInfo field value if set, zero value otherwise.
func (o *BTUserInfo) GetLastTrialInfo() BTTrialInfo {
	type getResult interface {
		GetLastTrialInfo() BTTrialInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLastTrialInfo()
	} else {
		var de BTTrialInfo
		return de
	}
}

// GetLastTrialInfoOk returns a tuple with the LastTrialInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetLastTrialInfoOk() (*BTTrialInfo, bool) {
	type getResult interface {
		GetLastTrialInfoOk() (*BTTrialInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetLastTrialInfoOk()
	} else {
		return nil, false
	}
}

// HasLastTrialInfo returns a boolean if a field has been set.
func (o *BTUserInfo) HasLastTrialInfo() bool {
	type getResult interface {
		HasLastTrialInfo() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasLastTrialInfo()
	} else {
		return false
	}
}

// SetLastTrialInfo gets a reference to the given BTTrialInfo and assigns it to the LastTrialInfo field.
func (o *BTUserInfo) SetLastTrialInfo(v BTTrialInfo) {
	type getResult interface {
		SetLastTrialInfo(v BTTrialInfo)
	}

	o.GetActualInstance().(getResult).SetLastTrialInfo(v)
}

// GetNeedToShowNewWalkthrough returns the NeedToShowNewWalkthrough field value if set, zero value otherwise.
func (o *BTUserInfo) GetNeedToShowNewWalkthrough() bool {
	type getResult interface {
		GetNeedToShowNewWalkthrough() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNeedToShowNewWalkthrough()
	} else {
		var de bool
		return de
	}
}

// GetNeedToShowNewWalkthroughOk returns a tuple with the NeedToShowNewWalkthrough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetNeedToShowNewWalkthroughOk() (*bool, bool) {
	type getResult interface {
		GetNeedToShowNewWalkthroughOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNeedToShowNewWalkthroughOk()
	} else {
		return nil, false
	}
}

// HasNeedToShowNewWalkthrough returns a boolean if a field has been set.
func (o *BTUserInfo) HasNeedToShowNewWalkthrough() bool {
	type getResult interface {
		HasNeedToShowNewWalkthrough() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasNeedToShowNewWalkthrough()
	} else {
		return false
	}
}

// SetNeedToShowNewWalkthrough gets a reference to the given bool and assigns it to the NeedToShowNewWalkthrough field.
func (o *BTUserInfo) SetNeedToShowNewWalkthrough(v bool) {
	type getResult interface {
		SetNeedToShowNewWalkthrough(v bool)
	}

	o.GetActualInstance().(getResult).SetNeedToShowNewWalkthrough(v)
}

// GetOwnPurchase returns the OwnPurchase field value if set, zero value otherwise.
func (o *BTUserInfo) GetOwnPurchase() BTPurchaseInfo {
	type getResult interface {
		GetOwnPurchase() BTPurchaseInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetOwnPurchase()
	} else {
		var de BTPurchaseInfo
		return de
	}
}

// GetOwnPurchaseOk returns a tuple with the OwnPurchase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetOwnPurchaseOk() (*BTPurchaseInfo, bool) {
	type getResult interface {
		GetOwnPurchaseOk() (*BTPurchaseInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetOwnPurchaseOk()
	} else {
		return nil, false
	}
}

// HasOwnPurchase returns a boolean if a field has been set.
func (o *BTUserInfo) HasOwnPurchase() bool {
	type getResult interface {
		HasOwnPurchase() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasOwnPurchase()
	} else {
		return false
	}
}

// SetOwnPurchase gets a reference to the given BTPurchaseInfo and assigns it to the OwnPurchase field.
func (o *BTUserInfo) SetOwnPurchase(v BTPurchaseInfo) {
	type getResult interface {
		SetOwnPurchase(v BTPurchaseInfo)
	}

	o.GetActualInstance().(getResult).SetOwnPurchase(v)
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *BTUserInfo) GetPhoneNumber() string {
	type getResult interface {
		GetPhoneNumber() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPhoneNumber()
	} else {
		var de string
		return de
	}
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetPhoneNumberOk() (*string, bool) {
	type getResult interface {
		GetPhoneNumberOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetPhoneNumberOk()
	} else {
		return nil, false
	}
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *BTUserInfo) HasPhoneNumber() bool {
	type getResult interface {
		HasPhoneNumber() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasPhoneNumber()
	} else {
		return false
	}
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *BTUserInfo) SetPhoneNumber(v string) {
	type getResult interface {
		SetPhoneNumber(v string)
	}

	o.GetActualInstance().(getResult).SetPhoneNumber(v)
}

// GetProDiscoveryTrialRejected returns the ProDiscoveryTrialRejected field value if set, zero value otherwise.
func (o *BTUserInfo) GetProDiscoveryTrialRejected() bool {
	type getResult interface {
		GetProDiscoveryTrialRejected() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetProDiscoveryTrialRejected()
	} else {
		var de bool
		return de
	}
}

// GetProDiscoveryTrialRejectedOk returns a tuple with the ProDiscoveryTrialRejected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetProDiscoveryTrialRejectedOk() (*bool, bool) {
	type getResult interface {
		GetProDiscoveryTrialRejectedOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetProDiscoveryTrialRejectedOk()
	} else {
		return nil, false
	}
}

// HasProDiscoveryTrialRejected returns a boolean if a field has been set.
func (o *BTUserInfo) HasProDiscoveryTrialRejected() bool {
	type getResult interface {
		HasProDiscoveryTrialRejected() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasProDiscoveryTrialRejected()
	} else {
		return false
	}
}

// SetProDiscoveryTrialRejected gets a reference to the given bool and assigns it to the ProDiscoveryTrialRejected field.
func (o *BTUserInfo) SetProDiscoveryTrialRejected(v bool) {
	type getResult interface {
		SetProDiscoveryTrialRejected(v bool)
	}

	o.GetActualInstance().(getResult).SetProDiscoveryTrialRejected(v)
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *BTUserInfo) GetProductType() []string {
	type getResult interface {
		GetProductType() []string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetProductType()
	} else {
		var de []string
		return de
	}
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetProductTypeOk() ([]string, bool) {
	type getResult interface {
		GetProductTypeOk() ([]string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetProductTypeOk()
	} else {
		return nil, false
	}
}

// HasProductType returns a boolean if a field has been set.
func (o *BTUserInfo) HasProductType() bool {
	type getResult interface {
		HasProductType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasProductType()
	} else {
		return false
	}
}

// SetProductType gets a reference to the given []string and assigns it to the ProductType field.
func (o *BTUserInfo) SetProductType(v []string) {
	type getResult interface {
		SetProductType(v []string)
	}

	o.GetActualInstance().(getResult).SetProductType(v)
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *BTUserInfo) GetRedirectUrl() string {
	type getResult interface {
		GetRedirectUrl() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetRedirectUrl()
	} else {
		var de string
		return de
	}
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetRedirectUrlOk() (*string, bool) {
	type getResult interface {
		GetRedirectUrlOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetRedirectUrlOk()
	} else {
		return nil, false
	}
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *BTUserInfo) HasRedirectUrl() bool {
	type getResult interface {
		HasRedirectUrl() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasRedirectUrl()
	} else {
		return false
	}
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *BTUserInfo) SetRedirectUrl(v string) {
	type getResult interface {
		SetRedirectUrl(v string)
	}

	o.GetActualInstance().(getResult).SetRedirectUrl(v)
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *BTUserInfo) GetRole() int32 {
	type getResult interface {
		GetRole() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetRole()
	} else {
		var de int32
		return de
	}
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetRoleOk() (*int32, bool) {
	type getResult interface {
		GetRoleOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetRoleOk()
	} else {
		return nil, false
	}
}

// HasRole returns a boolean if a field has been set.
func (o *BTUserInfo) HasRole() bool {
	type getResult interface {
		HasRole() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasRole()
	} else {
		return false
	}
}

// SetRole gets a reference to the given int32 and assigns it to the Role field.
func (o *BTUserInfo) SetRole(v int32) {
	type getResult interface {
		SetRole(v int32)
	}

	o.GetActualInstance().(getResult).SetRole(v)
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *BTUserInfo) GetRoles() []BTRole {
	type getResult interface {
		GetRoles() []BTRole
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetRoles()
	} else {
		var de []BTRole
		return de
	}
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetRolesOk() ([]BTRole, bool) {
	type getResult interface {
		GetRolesOk() ([]BTRole, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetRolesOk()
	} else {
		return nil, false
	}
}

// HasRoles returns a boolean if a field has been set.
func (o *BTUserInfo) HasRoles() bool {
	type getResult interface {
		HasRoles() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasRoles()
	} else {
		return false
	}
}

// SetRoles gets a reference to the given []BTRole and assigns it to the Roles field.
func (o *BTUserInfo) SetRoles(v []BTRole) {
	type getResult interface {
		SetRoles(v []BTRole)
	}

	o.GetActualInstance().(getResult).SetRoles(v)
}

// GetRumEnabled returns the RumEnabled field value if set, zero value otherwise.
func (o *BTUserInfo) GetRumEnabled() bool {
	type getResult interface {
		GetRumEnabled() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetRumEnabled()
	} else {
		var de bool
		return de
	}
}

// GetRumEnabledOk returns a tuple with the RumEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetRumEnabledOk() (*bool, bool) {
	type getResult interface {
		GetRumEnabledOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetRumEnabledOk()
	} else {
		return nil, false
	}
}

// HasRumEnabled returns a boolean if a field has been set.
func (o *BTUserInfo) HasRumEnabled() bool {
	type getResult interface {
		HasRumEnabled() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasRumEnabled()
	} else {
		return false
	}
}

// SetRumEnabled gets a reference to the given bool and assigns it to the RumEnabled field.
func (o *BTUserInfo) SetRumEnabled(v bool) {
	type getResult interface {
		SetRumEnabled(v bool)
	}

	o.GetActualInstance().(getResult).SetRumEnabled(v)
}

// GetShowRenewStudentPages returns the ShowRenewStudentPages field value if set, zero value otherwise.
func (o *BTUserInfo) GetShowRenewStudentPages() bool {
	type getResult interface {
		GetShowRenewStudentPages() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetShowRenewStudentPages()
	} else {
		var de bool
		return de
	}
}

// GetShowRenewStudentPagesOk returns a tuple with the ShowRenewStudentPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetShowRenewStudentPagesOk() (*bool, bool) {
	type getResult interface {
		GetShowRenewStudentPagesOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetShowRenewStudentPagesOk()
	} else {
		return nil, false
	}
}

// HasShowRenewStudentPages returns a boolean if a field has been set.
func (o *BTUserInfo) HasShowRenewStudentPages() bool {
	type getResult interface {
		HasShowRenewStudentPages() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasShowRenewStudentPages()
	} else {
		return false
	}
}

// SetShowRenewStudentPages gets a reference to the given bool and assigns it to the ShowRenewStudentPages field.
func (o *BTUserInfo) SetShowRenewStudentPages(v bool) {
	type getResult interface {
		SetShowRenewStudentPages(v bool)
	}

	o.GetActualInstance().(getResult).SetShowRenewStudentPages(v)
}

// GetStartupPage returns the StartupPage field value if set, zero value otherwise.
func (o *BTUserInfo) GetStartupPage() int32 {
	type getResult interface {
		GetStartupPage() int32
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetStartupPage()
	} else {
		var de int32
		return de
	}
}

// GetStartupPageOk returns a tuple with the StartupPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetStartupPageOk() (*int32, bool) {
	type getResult interface {
		GetStartupPageOk() (*int32, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetStartupPageOk()
	} else {
		return nil, false
	}
}

// HasStartupPage returns a boolean if a field has been set.
func (o *BTUserInfo) HasStartupPage() bool {
	type getResult interface {
		HasStartupPage() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasStartupPage()
	} else {
		return false
	}
}

// SetStartupPage gets a reference to the given int32 and assigns it to the StartupPage field.
func (o *BTUserInfo) SetStartupPage(v int32) {
	type getResult interface {
		SetStartupPage(v int32)
	}

	o.GetActualInstance().(getResult).SetStartupPage(v)
}

// GetSystemUser returns the SystemUser field value if set, zero value otherwise.
func (o *BTUserInfo) GetSystemUser() bool {
	type getResult interface {
		GetSystemUser() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSystemUser()
	} else {
		var de bool
		return de
	}
}

// GetSystemUserOk returns a tuple with the SystemUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetSystemUserOk() (*bool, bool) {
	type getResult interface {
		GetSystemUserOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSystemUserOk()
	} else {
		return nil, false
	}
}

// HasSystemUser returns a boolean if a field has been set.
func (o *BTUserInfo) HasSystemUser() bool {
	type getResult interface {
		HasSystemUser() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSystemUser()
	} else {
		return false
	}
}

// SetSystemUser gets a reference to the given bool and assigns it to the SystemUser field.
func (o *BTUserInfo) SetSystemUser(v bool) {
	type getResult interface {
		SetSystemUser(v bool)
	}

	o.GetActualInstance().(getResult).SetSystemUser(v)
}

// GetTotpEnabled returns the TotpEnabled field value if set, zero value otherwise.
func (o *BTUserInfo) GetTotpEnabled() bool {
	type getResult interface {
		GetTotpEnabled() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetTotpEnabled()
	} else {
		var de bool
		return de
	}
}

// GetTotpEnabledOk returns a tuple with the TotpEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetTotpEnabledOk() (*bool, bool) {
	type getResult interface {
		GetTotpEnabledOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetTotpEnabledOk()
	} else {
		return nil, false
	}
}

// HasTotpEnabled returns a boolean if a field has been set.
func (o *BTUserInfo) HasTotpEnabled() bool {
	type getResult interface {
		HasTotpEnabled() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasTotpEnabled()
	} else {
		return false
	}
}

// SetTotpEnabled gets a reference to the given bool and assigns it to the TotpEnabled field.
func (o *BTUserInfo) SetTotpEnabled(v bool) {
	type getResult interface {
		SetTotpEnabled(v bool)
	}

	o.GetActualInstance().(getResult).SetTotpEnabled(v)
}

// GetTracingEnabled returns the TracingEnabled field value if set, zero value otherwise.
func (o *BTUserInfo) GetTracingEnabled() bool {
	type getResult interface {
		GetTracingEnabled() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetTracingEnabled()
	} else {
		var de bool
		return de
	}
}

// GetTracingEnabledOk returns a tuple with the TracingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetTracingEnabledOk() (*bool, bool) {
	type getResult interface {
		GetTracingEnabledOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetTracingEnabledOk()
	} else {
		return nil, false
	}
}

// HasTracingEnabled returns a boolean if a field has been set.
func (o *BTUserInfo) HasTracingEnabled() bool {
	type getResult interface {
		HasTracingEnabled() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasTracingEnabled()
	} else {
		return false
	}
}

// SetTracingEnabled gets a reference to the given bool and assigns it to the TracingEnabled field.
func (o *BTUserInfo) SetTracingEnabled(v bool) {
	type getResult interface {
		SetTracingEnabled(v bool)
	}

	o.GetActualInstance().(getResult).SetTracingEnabled(v)
}

// GetTrialInfos returns the TrialInfos field value if set, zero value otherwise.
func (o *BTUserInfo) GetTrialInfos() []BTTrialInfo {
	type getResult interface {
		GetTrialInfos() []BTTrialInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetTrialInfos()
	} else {
		var de []BTTrialInfo
		return de
	}
}

// GetTrialInfosOk returns a tuple with the TrialInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUserInfo) GetTrialInfosOk() ([]BTTrialInfo, bool) {
	type getResult interface {
		GetTrialInfosOk() ([]BTTrialInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetTrialInfosOk()
	} else {
		return nil, false
	}
}

// HasTrialInfos returns a boolean if a field has been set.
func (o *BTUserInfo) HasTrialInfos() bool {
	type getResult interface {
		HasTrialInfos() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasTrialInfos()
	} else {
		return false
	}
}

// SetTrialInfos gets a reference to the given []BTTrialInfo and assigns it to the TrialInfos field.
func (o *BTUserInfo) SetTrialInfos(v []BTTrialInfo) {
	type getResult interface {
		SetTrialInfos(v []BTTrialInfo)
	}

	o.GetActualInstance().(getResult).SetTrialInfos(v)
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *BTUserInfo) UnmarshalJSON(data []byte) error {
	var err error
	// use discriminator value to speed up the lookup
	var jsonDict map[string]interface{}
	err = newStrictDecoder(data).Decode(&jsonDict)
	if err != nil {
		return fmt.Errorf("Failed to unmarshal JSON into map for the discriminator lookup.")
	}

	// check if the discriminator value is 'BTUserAdminInfo'
	if jsonDict["jsonType"] == "BTUserAdminInfo" {
		// try to unmarshal JSON data into BTUserAdminInfo
		var qr *BTUserAdminInfo
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTUserInfo = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTUserInfo = nil
			return fmt.Errorf("Failed to unmarshal BTUserInfo as BTUserAdminInfo: %s", err.Error())
		}
	}

	var qtx *base_BTUserInfo
	err = json.Unmarshal(data, &qtx)
	if err == nil {
		dst.implBTUserInfo = qtx
		return nil // data stored in dst.base_BTUserInfo, return on the first match
	} else {
		dst.implBTUserInfo = nil
		return fmt.Errorf("Failed to unmarshal BTUserInfo as base_BTUserInfo: %s", err.Error())
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BTUserInfo) MarshalJSON() ([]byte, error) {
	ret := src.GetActualInstance()
	if ret == nil {
		return nil, nil // no data in oneOf schemas
	} else {
		return json.Marshal(&ret)
	}
}

// Get the actual instance
func (obj *BTUserInfo) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	return obj.implBTUserInfo
}

type NullableBTUserInfo struct {
	value *BTUserInfo
	isSet bool
}

func (v NullableBTUserInfo) Get() *BTUserInfo {
	return v.value
}

func (v *NullableBTUserInfo) Set(val *BTUserInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTUserInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTUserInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTUserInfo(val *BTUserInfo) *NullableBTUserInfo {
	return &NullableBTUserInfo{value: val, isSet: true}
}

func (v NullableBTUserInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTUserInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type base_BTUserInfo struct {
	// URI to fetch complete information of the resource.
	Href *string `json:"href,omitempty"`
	// Id of the resource.
	Id *string `json:"id,omitempty"`
	// Name of the resource.
	Name *string `json:"name,omitempty"`
	// URI to visualize the resource in a webclient if applicable.
	ViewRef                   *string                  `json:"viewRef,omitempty"`
	Image                     *string                  `json:"image,omitempty"`
	State                     *int32                   `json:"state,omitempty"`
	DocumentationName         *string                  `json:"documentationName,omitempty"`
	Email                     *string                  `json:"email,omitempty"`
	FirstName                 *string                  `json:"firstName,omitempty"`
	LastName                  *string                  `json:"lastName,omitempty"`
	Company                   *BTCompanySummaryInfo    `json:"company,omitempty"`
	DocumentationNameOverride *string                  `json:"documentationNameOverride,omitempty"`
	GlobalPermissions         *GlobalPermissionInfo    `json:"globalPermissions,omitempty"`
	InvitationState           *int32                   `json:"invitationState,omitempty"`
	IsGuest                   *bool                    `json:"isGuest,omitempty"`
	IsLight                   *bool                    `json:"isLight,omitempty"`
	LastLoginTime             *JSONTime                `json:"lastLoginTime,omitempty"`
	PersonalMessageAllowed    *bool                    `json:"personalMessageAllowed,omitempty"`
	Source                    *int32                   `json:"source,omitempty"`
	ActivePlan                *BTBillingPlanInfo       `json:"activePlan,omitempty"`
	ActivePlanId              *string                  `json:"activePlanId,omitempty"`
	ActivePurchases           []BTPurchaseInfo         `json:"activePurchases,omitempty"`
	ActiveTrialInfo           *BTTrialInfo             `json:"activeTrialInfo,omitempty"`
	B2cId                     *string                  `json:"b2cId,omitempty"`
	BillingUpdateRequired     *bool                    `json:"billingUpdateRequired,omitempty"`
	CadSystemAtSignup         *string                  `json:"cadSystemAtSignup,omitempty"`
	CountryCode               *string                  `json:"countryCode,omitempty"`
	CreatedAt                 *JSONTime                `json:"createdAt,omitempty"`
	Credential                *BTSessionCredentialInfo `json:"credential,omitempty"`
	DefaultCompanyName        *string                  `json:"defaultCompanyName,omitempty"`
	Description               *string                  `json:"description,omitempty"`
	DeviceInfo                *BTDeviceLoginSecretInfo `json:"deviceInfo,omitempty"`
	Discounts                 []BTDiscountInfo         `json:"discounts,omitempty"`
	Enterprise                *bool                    `json:"enterprise,omitempty"`
	EulaId                    *string                  `json:"eulaId,omitempty"`
	EulaRequired              *bool                    `json:"eulaRequired,omitempty"`
	EvalCenter                *bool                    `json:"evalCenter,omitempty"`
	ForumId                   *string                  `json:"forumId,omitempty"`
	IntendedUse               *int32                   `json:"intendedUse,omitempty"`
	LastTrialInfo             *BTTrialInfo             `json:"lastTrialInfo,omitempty"`
	NeedToShowNewWalkthrough  *bool                    `json:"needToShowNewWalkthrough,omitempty"`
	OwnPurchase               *BTPurchaseInfo          `json:"ownPurchase,omitempty"`
	PhoneNumber               *string                  `json:"phoneNumber,omitempty"`
	ProDiscoveryTrialRejected *bool                    `json:"proDiscoveryTrialRejected,omitempty"`
	ProductType               []string                 `json:"productType,omitempty"`
	RedirectUrl               *string                  `json:"redirectUrl,omitempty"`
	Role                      *int32                   `json:"role,omitempty"`
	Roles                     []BTRole                 `json:"roles,omitempty"`
	RumEnabled                *bool                    `json:"rumEnabled,omitempty"`
	ShowRenewStudentPages     *bool                    `json:"showRenewStudentPages,omitempty"`
	StartupPage               *int32                   `json:"startupPage,omitempty"`
	SystemUser                *bool                    `json:"systemUser,omitempty"`
	TotpEnabled               *bool                    `json:"totpEnabled,omitempty"`
	TracingEnabled            *bool                    `json:"tracingEnabled,omitempty"`
	TrialInfos                []BTTrialInfo            `json:"trialInfos,omitempty"`
}

// Newbase_BTUserInfo instantiates a new base_BTUserInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func Newbase_BTUserInfo() *base_BTUserInfo {
	this := base_BTUserInfo{}
	return &this
}

// Newbase_BTUserInfoWithDefaults instantiates a new base_BTUserInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func Newbase_BTUserInfoWithDefaults() *base_BTUserInfo {
	this := base_BTUserInfo{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *base_BTUserInfo) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *base_BTUserInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *base_BTUserInfo) SetName(v string) {
	o.Name = &v
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetViewRef() string {
	if o == nil || o.ViewRef == nil {
		var ret string
		return ret
	}
	return *o.ViewRef
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetViewRefOk() (*string, bool) {
	if o == nil || o.ViewRef == nil {
		return nil, false
	}
	return o.ViewRef, true
}

// HasViewRef returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasViewRef() bool {
	if o != nil && o.ViewRef != nil {
		return true
	}

	return false
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *base_BTUserInfo) SetViewRef(v string) {
	o.ViewRef = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *base_BTUserInfo) SetImage(v string) {
	o.Image = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetState() int32 {
	if o == nil || o.State == nil {
		var ret int32
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetStateOk() (*int32, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given int32 and assigns it to the State field.
func (o *base_BTUserInfo) SetState(v int32) {
	o.State = &v
}

// GetDocumentationName returns the DocumentationName field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetDocumentationName() string {
	if o == nil || o.DocumentationName == nil {
		var ret string
		return ret
	}
	return *o.DocumentationName
}

// GetDocumentationNameOk returns a tuple with the DocumentationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetDocumentationNameOk() (*string, bool) {
	if o == nil || o.DocumentationName == nil {
		return nil, false
	}
	return o.DocumentationName, true
}

// HasDocumentationName returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasDocumentationName() bool {
	if o != nil && o.DocumentationName != nil {
		return true
	}

	return false
}

// SetDocumentationName gets a reference to the given string and assigns it to the DocumentationName field.
func (o *base_BTUserInfo) SetDocumentationName(v string) {
	o.DocumentationName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *base_BTUserInfo) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *base_BTUserInfo) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *base_BTUserInfo) SetLastName(v string) {
	o.LastName = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetCompany() BTCompanySummaryInfo {
	if o == nil || o.Company == nil {
		var ret BTCompanySummaryInfo
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetCompanyOk() (*BTCompanySummaryInfo, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given BTCompanySummaryInfo and assigns it to the Company field.
func (o *base_BTUserInfo) SetCompany(v BTCompanySummaryInfo) {
	o.Company = &v
}

// GetDocumentationNameOverride returns the DocumentationNameOverride field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetDocumentationNameOverride() string {
	if o == nil || o.DocumentationNameOverride == nil {
		var ret string
		return ret
	}
	return *o.DocumentationNameOverride
}

// GetDocumentationNameOverrideOk returns a tuple with the DocumentationNameOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetDocumentationNameOverrideOk() (*string, bool) {
	if o == nil || o.DocumentationNameOverride == nil {
		return nil, false
	}
	return o.DocumentationNameOverride, true
}

// HasDocumentationNameOverride returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasDocumentationNameOverride() bool {
	if o != nil && o.DocumentationNameOverride != nil {
		return true
	}

	return false
}

// SetDocumentationNameOverride gets a reference to the given string and assigns it to the DocumentationNameOverride field.
func (o *base_BTUserInfo) SetDocumentationNameOverride(v string) {
	o.DocumentationNameOverride = &v
}

// GetGlobalPermissions returns the GlobalPermissions field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetGlobalPermissions() GlobalPermissionInfo {
	if o == nil || o.GlobalPermissions == nil {
		var ret GlobalPermissionInfo
		return ret
	}
	return *o.GlobalPermissions
}

// GetGlobalPermissionsOk returns a tuple with the GlobalPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetGlobalPermissionsOk() (*GlobalPermissionInfo, bool) {
	if o == nil || o.GlobalPermissions == nil {
		return nil, false
	}
	return o.GlobalPermissions, true
}

// HasGlobalPermissions returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasGlobalPermissions() bool {
	if o != nil && o.GlobalPermissions != nil {
		return true
	}

	return false
}

// SetGlobalPermissions gets a reference to the given GlobalPermissionInfo and assigns it to the GlobalPermissions field.
func (o *base_BTUserInfo) SetGlobalPermissions(v GlobalPermissionInfo) {
	o.GlobalPermissions = &v
}

// GetInvitationState returns the InvitationState field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetInvitationState() int32 {
	if o == nil || o.InvitationState == nil {
		var ret int32
		return ret
	}
	return *o.InvitationState
}

// GetInvitationStateOk returns a tuple with the InvitationState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetInvitationStateOk() (*int32, bool) {
	if o == nil || o.InvitationState == nil {
		return nil, false
	}
	return o.InvitationState, true
}

// HasInvitationState returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasInvitationState() bool {
	if o != nil && o.InvitationState != nil {
		return true
	}

	return false
}

// SetInvitationState gets a reference to the given int32 and assigns it to the InvitationState field.
func (o *base_BTUserInfo) SetInvitationState(v int32) {
	o.InvitationState = &v
}

// GetIsGuest returns the IsGuest field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetIsGuest() bool {
	if o == nil || o.IsGuest == nil {
		var ret bool
		return ret
	}
	return *o.IsGuest
}

// GetIsGuestOk returns a tuple with the IsGuest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetIsGuestOk() (*bool, bool) {
	if o == nil || o.IsGuest == nil {
		return nil, false
	}
	return o.IsGuest, true
}

// HasIsGuest returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasIsGuest() bool {
	if o != nil && o.IsGuest != nil {
		return true
	}

	return false
}

// SetIsGuest gets a reference to the given bool and assigns it to the IsGuest field.
func (o *base_BTUserInfo) SetIsGuest(v bool) {
	o.IsGuest = &v
}

// GetIsLight returns the IsLight field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetIsLight() bool {
	if o == nil || o.IsLight == nil {
		var ret bool
		return ret
	}
	return *o.IsLight
}

// GetIsLightOk returns a tuple with the IsLight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetIsLightOk() (*bool, bool) {
	if o == nil || o.IsLight == nil {
		return nil, false
	}
	return o.IsLight, true
}

// HasIsLight returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasIsLight() bool {
	if o != nil && o.IsLight != nil {
		return true
	}

	return false
}

// SetIsLight gets a reference to the given bool and assigns it to the IsLight field.
func (o *base_BTUserInfo) SetIsLight(v bool) {
	o.IsLight = &v
}

// GetLastLoginTime returns the LastLoginTime field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetLastLoginTime() JSONTime {
	if o == nil || o.LastLoginTime == nil {
		var ret JSONTime
		return ret
	}
	return *o.LastLoginTime
}

// GetLastLoginTimeOk returns a tuple with the LastLoginTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetLastLoginTimeOk() (*JSONTime, bool) {
	if o == nil || o.LastLoginTime == nil {
		return nil, false
	}
	return o.LastLoginTime, true
}

// HasLastLoginTime returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasLastLoginTime() bool {
	if o != nil && o.LastLoginTime != nil {
		return true
	}

	return false
}

// SetLastLoginTime gets a reference to the given JSONTime and assigns it to the LastLoginTime field.
func (o *base_BTUserInfo) SetLastLoginTime(v JSONTime) {
	o.LastLoginTime = &v
}

// GetPersonalMessageAllowed returns the PersonalMessageAllowed field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetPersonalMessageAllowed() bool {
	if o == nil || o.PersonalMessageAllowed == nil {
		var ret bool
		return ret
	}
	return *o.PersonalMessageAllowed
}

// GetPersonalMessageAllowedOk returns a tuple with the PersonalMessageAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetPersonalMessageAllowedOk() (*bool, bool) {
	if o == nil || o.PersonalMessageAllowed == nil {
		return nil, false
	}
	return o.PersonalMessageAllowed, true
}

// HasPersonalMessageAllowed returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasPersonalMessageAllowed() bool {
	if o != nil && o.PersonalMessageAllowed != nil {
		return true
	}

	return false
}

// SetPersonalMessageAllowed gets a reference to the given bool and assigns it to the PersonalMessageAllowed field.
func (o *base_BTUserInfo) SetPersonalMessageAllowed(v bool) {
	o.PersonalMessageAllowed = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetSource() int32 {
	if o == nil || o.Source == nil {
		var ret int32
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetSourceOk() (*int32, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given int32 and assigns it to the Source field.
func (o *base_BTUserInfo) SetSource(v int32) {
	o.Source = &v
}

// GetActivePlan returns the ActivePlan field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetActivePlan() BTBillingPlanInfo {
	if o == nil || o.ActivePlan == nil {
		var ret BTBillingPlanInfo
		return ret
	}
	return *o.ActivePlan
}

// GetActivePlanOk returns a tuple with the ActivePlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetActivePlanOk() (*BTBillingPlanInfo, bool) {
	if o == nil || o.ActivePlan == nil {
		return nil, false
	}
	return o.ActivePlan, true
}

// HasActivePlan returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasActivePlan() bool {
	if o != nil && o.ActivePlan != nil {
		return true
	}

	return false
}

// SetActivePlan gets a reference to the given BTBillingPlanInfo and assigns it to the ActivePlan field.
func (o *base_BTUserInfo) SetActivePlan(v BTBillingPlanInfo) {
	o.ActivePlan = &v
}

// GetActivePlanId returns the ActivePlanId field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetActivePlanId() string {
	if o == nil || o.ActivePlanId == nil {
		var ret string
		return ret
	}
	return *o.ActivePlanId
}

// GetActivePlanIdOk returns a tuple with the ActivePlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetActivePlanIdOk() (*string, bool) {
	if o == nil || o.ActivePlanId == nil {
		return nil, false
	}
	return o.ActivePlanId, true
}

// HasActivePlanId returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasActivePlanId() bool {
	if o != nil && o.ActivePlanId != nil {
		return true
	}

	return false
}

// SetActivePlanId gets a reference to the given string and assigns it to the ActivePlanId field.
func (o *base_BTUserInfo) SetActivePlanId(v string) {
	o.ActivePlanId = &v
}

// GetActivePurchases returns the ActivePurchases field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetActivePurchases() []BTPurchaseInfo {
	if o == nil || o.ActivePurchases == nil {
		var ret []BTPurchaseInfo
		return ret
	}
	return o.ActivePurchases
}

// GetActivePurchasesOk returns a tuple with the ActivePurchases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetActivePurchasesOk() ([]BTPurchaseInfo, bool) {
	if o == nil || o.ActivePurchases == nil {
		return nil, false
	}
	return o.ActivePurchases, true
}

// HasActivePurchases returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasActivePurchases() bool {
	if o != nil && o.ActivePurchases != nil {
		return true
	}

	return false
}

// SetActivePurchases gets a reference to the given []BTPurchaseInfo and assigns it to the ActivePurchases field.
func (o *base_BTUserInfo) SetActivePurchases(v []BTPurchaseInfo) {
	o.ActivePurchases = v
}

// GetActiveTrialInfo returns the ActiveTrialInfo field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetActiveTrialInfo() BTTrialInfo {
	if o == nil || o.ActiveTrialInfo == nil {
		var ret BTTrialInfo
		return ret
	}
	return *o.ActiveTrialInfo
}

// GetActiveTrialInfoOk returns a tuple with the ActiveTrialInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetActiveTrialInfoOk() (*BTTrialInfo, bool) {
	if o == nil || o.ActiveTrialInfo == nil {
		return nil, false
	}
	return o.ActiveTrialInfo, true
}

// HasActiveTrialInfo returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasActiveTrialInfo() bool {
	if o != nil && o.ActiveTrialInfo != nil {
		return true
	}

	return false
}

// SetActiveTrialInfo gets a reference to the given BTTrialInfo and assigns it to the ActiveTrialInfo field.
func (o *base_BTUserInfo) SetActiveTrialInfo(v BTTrialInfo) {
	o.ActiveTrialInfo = &v
}

// GetB2cId returns the B2cId field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetB2cId() string {
	if o == nil || o.B2cId == nil {
		var ret string
		return ret
	}
	return *o.B2cId
}

// GetB2cIdOk returns a tuple with the B2cId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetB2cIdOk() (*string, bool) {
	if o == nil || o.B2cId == nil {
		return nil, false
	}
	return o.B2cId, true
}

// HasB2cId returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasB2cId() bool {
	if o != nil && o.B2cId != nil {
		return true
	}

	return false
}

// SetB2cId gets a reference to the given string and assigns it to the B2cId field.
func (o *base_BTUserInfo) SetB2cId(v string) {
	o.B2cId = &v
}

// GetBillingUpdateRequired returns the BillingUpdateRequired field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetBillingUpdateRequired() bool {
	if o == nil || o.BillingUpdateRequired == nil {
		var ret bool
		return ret
	}
	return *o.BillingUpdateRequired
}

// GetBillingUpdateRequiredOk returns a tuple with the BillingUpdateRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetBillingUpdateRequiredOk() (*bool, bool) {
	if o == nil || o.BillingUpdateRequired == nil {
		return nil, false
	}
	return o.BillingUpdateRequired, true
}

// HasBillingUpdateRequired returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasBillingUpdateRequired() bool {
	if o != nil && o.BillingUpdateRequired != nil {
		return true
	}

	return false
}

// SetBillingUpdateRequired gets a reference to the given bool and assigns it to the BillingUpdateRequired field.
func (o *base_BTUserInfo) SetBillingUpdateRequired(v bool) {
	o.BillingUpdateRequired = &v
}

// GetCadSystemAtSignup returns the CadSystemAtSignup field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetCadSystemAtSignup() string {
	if o == nil || o.CadSystemAtSignup == nil {
		var ret string
		return ret
	}
	return *o.CadSystemAtSignup
}

// GetCadSystemAtSignupOk returns a tuple with the CadSystemAtSignup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetCadSystemAtSignupOk() (*string, bool) {
	if o == nil || o.CadSystemAtSignup == nil {
		return nil, false
	}
	return o.CadSystemAtSignup, true
}

// HasCadSystemAtSignup returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasCadSystemAtSignup() bool {
	if o != nil && o.CadSystemAtSignup != nil {
		return true
	}

	return false
}

// SetCadSystemAtSignup gets a reference to the given string and assigns it to the CadSystemAtSignup field.
func (o *base_BTUserInfo) SetCadSystemAtSignup(v string) {
	o.CadSystemAtSignup = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *base_BTUserInfo) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetCreatedAt() JSONTime {
	if o == nil || o.CreatedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetCreatedAtOk() (*JSONTime, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given JSONTime and assigns it to the CreatedAt field.
func (o *base_BTUserInfo) SetCreatedAt(v JSONTime) {
	o.CreatedAt = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetCredential() BTSessionCredentialInfo {
	if o == nil || o.Credential == nil {
		var ret BTSessionCredentialInfo
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetCredentialOk() (*BTSessionCredentialInfo, bool) {
	if o == nil || o.Credential == nil {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasCredential() bool {
	if o != nil && o.Credential != nil {
		return true
	}

	return false
}

// SetCredential gets a reference to the given BTSessionCredentialInfo and assigns it to the Credential field.
func (o *base_BTUserInfo) SetCredential(v BTSessionCredentialInfo) {
	o.Credential = &v
}

// GetDefaultCompanyName returns the DefaultCompanyName field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetDefaultCompanyName() string {
	if o == nil || o.DefaultCompanyName == nil {
		var ret string
		return ret
	}
	return *o.DefaultCompanyName
}

// GetDefaultCompanyNameOk returns a tuple with the DefaultCompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetDefaultCompanyNameOk() (*string, bool) {
	if o == nil || o.DefaultCompanyName == nil {
		return nil, false
	}
	return o.DefaultCompanyName, true
}

// HasDefaultCompanyName returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasDefaultCompanyName() bool {
	if o != nil && o.DefaultCompanyName != nil {
		return true
	}

	return false
}

// SetDefaultCompanyName gets a reference to the given string and assigns it to the DefaultCompanyName field.
func (o *base_BTUserInfo) SetDefaultCompanyName(v string) {
	o.DefaultCompanyName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *base_BTUserInfo) SetDescription(v string) {
	o.Description = &v
}

// GetDeviceInfo returns the DeviceInfo field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetDeviceInfo() BTDeviceLoginSecretInfo {
	if o == nil || o.DeviceInfo == nil {
		var ret BTDeviceLoginSecretInfo
		return ret
	}
	return *o.DeviceInfo
}

// GetDeviceInfoOk returns a tuple with the DeviceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetDeviceInfoOk() (*BTDeviceLoginSecretInfo, bool) {
	if o == nil || o.DeviceInfo == nil {
		return nil, false
	}
	return o.DeviceInfo, true
}

// HasDeviceInfo returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasDeviceInfo() bool {
	if o != nil && o.DeviceInfo != nil {
		return true
	}

	return false
}

// SetDeviceInfo gets a reference to the given BTDeviceLoginSecretInfo and assigns it to the DeviceInfo field.
func (o *base_BTUserInfo) SetDeviceInfo(v BTDeviceLoginSecretInfo) {
	o.DeviceInfo = &v
}

// GetDiscounts returns the Discounts field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetDiscounts() []BTDiscountInfo {
	if o == nil || o.Discounts == nil {
		var ret []BTDiscountInfo
		return ret
	}
	return o.Discounts
}

// GetDiscountsOk returns a tuple with the Discounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetDiscountsOk() ([]BTDiscountInfo, bool) {
	if o == nil || o.Discounts == nil {
		return nil, false
	}
	return o.Discounts, true
}

// HasDiscounts returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasDiscounts() bool {
	if o != nil && o.Discounts != nil {
		return true
	}

	return false
}

// SetDiscounts gets a reference to the given []BTDiscountInfo and assigns it to the Discounts field.
func (o *base_BTUserInfo) SetDiscounts(v []BTDiscountInfo) {
	o.Discounts = v
}

// GetEnterprise returns the Enterprise field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetEnterprise() bool {
	if o == nil || o.Enterprise == nil {
		var ret bool
		return ret
	}
	return *o.Enterprise
}

// GetEnterpriseOk returns a tuple with the Enterprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetEnterpriseOk() (*bool, bool) {
	if o == nil || o.Enterprise == nil {
		return nil, false
	}
	return o.Enterprise, true
}

// HasEnterprise returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasEnterprise() bool {
	if o != nil && o.Enterprise != nil {
		return true
	}

	return false
}

// SetEnterprise gets a reference to the given bool and assigns it to the Enterprise field.
func (o *base_BTUserInfo) SetEnterprise(v bool) {
	o.Enterprise = &v
}

// GetEulaId returns the EulaId field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetEulaId() string {
	if o == nil || o.EulaId == nil {
		var ret string
		return ret
	}
	return *o.EulaId
}

// GetEulaIdOk returns a tuple with the EulaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetEulaIdOk() (*string, bool) {
	if o == nil || o.EulaId == nil {
		return nil, false
	}
	return o.EulaId, true
}

// HasEulaId returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasEulaId() bool {
	if o != nil && o.EulaId != nil {
		return true
	}

	return false
}

// SetEulaId gets a reference to the given string and assigns it to the EulaId field.
func (o *base_BTUserInfo) SetEulaId(v string) {
	o.EulaId = &v
}

// GetEulaRequired returns the EulaRequired field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetEulaRequired() bool {
	if o == nil || o.EulaRequired == nil {
		var ret bool
		return ret
	}
	return *o.EulaRequired
}

// GetEulaRequiredOk returns a tuple with the EulaRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetEulaRequiredOk() (*bool, bool) {
	if o == nil || o.EulaRequired == nil {
		return nil, false
	}
	return o.EulaRequired, true
}

// HasEulaRequired returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasEulaRequired() bool {
	if o != nil && o.EulaRequired != nil {
		return true
	}

	return false
}

// SetEulaRequired gets a reference to the given bool and assigns it to the EulaRequired field.
func (o *base_BTUserInfo) SetEulaRequired(v bool) {
	o.EulaRequired = &v
}

// GetEvalCenter returns the EvalCenter field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetEvalCenter() bool {
	if o == nil || o.EvalCenter == nil {
		var ret bool
		return ret
	}
	return *o.EvalCenter
}

// GetEvalCenterOk returns a tuple with the EvalCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetEvalCenterOk() (*bool, bool) {
	if o == nil || o.EvalCenter == nil {
		return nil, false
	}
	return o.EvalCenter, true
}

// HasEvalCenter returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasEvalCenter() bool {
	if o != nil && o.EvalCenter != nil {
		return true
	}

	return false
}

// SetEvalCenter gets a reference to the given bool and assigns it to the EvalCenter field.
func (o *base_BTUserInfo) SetEvalCenter(v bool) {
	o.EvalCenter = &v
}

// GetForumId returns the ForumId field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetForumId() string {
	if o == nil || o.ForumId == nil {
		var ret string
		return ret
	}
	return *o.ForumId
}

// GetForumIdOk returns a tuple with the ForumId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetForumIdOk() (*string, bool) {
	if o == nil || o.ForumId == nil {
		return nil, false
	}
	return o.ForumId, true
}

// HasForumId returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasForumId() bool {
	if o != nil && o.ForumId != nil {
		return true
	}

	return false
}

// SetForumId gets a reference to the given string and assigns it to the ForumId field.
func (o *base_BTUserInfo) SetForumId(v string) {
	o.ForumId = &v
}

// GetIntendedUse returns the IntendedUse field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetIntendedUse() int32 {
	if o == nil || o.IntendedUse == nil {
		var ret int32
		return ret
	}
	return *o.IntendedUse
}

// GetIntendedUseOk returns a tuple with the IntendedUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetIntendedUseOk() (*int32, bool) {
	if o == nil || o.IntendedUse == nil {
		return nil, false
	}
	return o.IntendedUse, true
}

// HasIntendedUse returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasIntendedUse() bool {
	if o != nil && o.IntendedUse != nil {
		return true
	}

	return false
}

// SetIntendedUse gets a reference to the given int32 and assigns it to the IntendedUse field.
func (o *base_BTUserInfo) SetIntendedUse(v int32) {
	o.IntendedUse = &v
}

// GetLastTrialInfo returns the LastTrialInfo field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetLastTrialInfo() BTTrialInfo {
	if o == nil || o.LastTrialInfo == nil {
		var ret BTTrialInfo
		return ret
	}
	return *o.LastTrialInfo
}

// GetLastTrialInfoOk returns a tuple with the LastTrialInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetLastTrialInfoOk() (*BTTrialInfo, bool) {
	if o == nil || o.LastTrialInfo == nil {
		return nil, false
	}
	return o.LastTrialInfo, true
}

// HasLastTrialInfo returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasLastTrialInfo() bool {
	if o != nil && o.LastTrialInfo != nil {
		return true
	}

	return false
}

// SetLastTrialInfo gets a reference to the given BTTrialInfo and assigns it to the LastTrialInfo field.
func (o *base_BTUserInfo) SetLastTrialInfo(v BTTrialInfo) {
	o.LastTrialInfo = &v
}

// GetNeedToShowNewWalkthrough returns the NeedToShowNewWalkthrough field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetNeedToShowNewWalkthrough() bool {
	if o == nil || o.NeedToShowNewWalkthrough == nil {
		var ret bool
		return ret
	}
	return *o.NeedToShowNewWalkthrough
}

// GetNeedToShowNewWalkthroughOk returns a tuple with the NeedToShowNewWalkthrough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetNeedToShowNewWalkthroughOk() (*bool, bool) {
	if o == nil || o.NeedToShowNewWalkthrough == nil {
		return nil, false
	}
	return o.NeedToShowNewWalkthrough, true
}

// HasNeedToShowNewWalkthrough returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasNeedToShowNewWalkthrough() bool {
	if o != nil && o.NeedToShowNewWalkthrough != nil {
		return true
	}

	return false
}

// SetNeedToShowNewWalkthrough gets a reference to the given bool and assigns it to the NeedToShowNewWalkthrough field.
func (o *base_BTUserInfo) SetNeedToShowNewWalkthrough(v bool) {
	o.NeedToShowNewWalkthrough = &v
}

// GetOwnPurchase returns the OwnPurchase field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetOwnPurchase() BTPurchaseInfo {
	if o == nil || o.OwnPurchase == nil {
		var ret BTPurchaseInfo
		return ret
	}
	return *o.OwnPurchase
}

// GetOwnPurchaseOk returns a tuple with the OwnPurchase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetOwnPurchaseOk() (*BTPurchaseInfo, bool) {
	if o == nil || o.OwnPurchase == nil {
		return nil, false
	}
	return o.OwnPurchase, true
}

// HasOwnPurchase returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasOwnPurchase() bool {
	if o != nil && o.OwnPurchase != nil {
		return true
	}

	return false
}

// SetOwnPurchase gets a reference to the given BTPurchaseInfo and assigns it to the OwnPurchase field.
func (o *base_BTUserInfo) SetOwnPurchase(v BTPurchaseInfo) {
	o.OwnPurchase = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *base_BTUserInfo) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetProDiscoveryTrialRejected returns the ProDiscoveryTrialRejected field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetProDiscoveryTrialRejected() bool {
	if o == nil || o.ProDiscoveryTrialRejected == nil {
		var ret bool
		return ret
	}
	return *o.ProDiscoveryTrialRejected
}

// GetProDiscoveryTrialRejectedOk returns a tuple with the ProDiscoveryTrialRejected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetProDiscoveryTrialRejectedOk() (*bool, bool) {
	if o == nil || o.ProDiscoveryTrialRejected == nil {
		return nil, false
	}
	return o.ProDiscoveryTrialRejected, true
}

// HasProDiscoveryTrialRejected returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasProDiscoveryTrialRejected() bool {
	if o != nil && o.ProDiscoveryTrialRejected != nil {
		return true
	}

	return false
}

// SetProDiscoveryTrialRejected gets a reference to the given bool and assigns it to the ProDiscoveryTrialRejected field.
func (o *base_BTUserInfo) SetProDiscoveryTrialRejected(v bool) {
	o.ProDiscoveryTrialRejected = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetProductType() []string {
	if o == nil || o.ProductType == nil {
		var ret []string
		return ret
	}
	return o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetProductTypeOk() ([]string, bool) {
	if o == nil || o.ProductType == nil {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasProductType() bool {
	if o != nil && o.ProductType != nil {
		return true
	}

	return false
}

// SetProductType gets a reference to the given []string and assigns it to the ProductType field.
func (o *base_BTUserInfo) SetProductType(v []string) {
	o.ProductType = v
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetRedirectUrl() string {
	if o == nil || o.RedirectUrl == nil {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetRedirectUrlOk() (*string, bool) {
	if o == nil || o.RedirectUrl == nil {
		return nil, false
	}
	return o.RedirectUrl, true
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasRedirectUrl() bool {
	if o != nil && o.RedirectUrl != nil {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *base_BTUserInfo) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetRole() int32 {
	if o == nil || o.Role == nil {
		var ret int32
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetRoleOk() (*int32, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given int32 and assigns it to the Role field.
func (o *base_BTUserInfo) SetRole(v int32) {
	o.Role = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetRoles() []BTRole {
	if o == nil || o.Roles == nil {
		var ret []BTRole
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetRolesOk() ([]BTRole, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []BTRole and assigns it to the Roles field.
func (o *base_BTUserInfo) SetRoles(v []BTRole) {
	o.Roles = v
}

// GetRumEnabled returns the RumEnabled field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetRumEnabled() bool {
	if o == nil || o.RumEnabled == nil {
		var ret bool
		return ret
	}
	return *o.RumEnabled
}

// GetRumEnabledOk returns a tuple with the RumEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetRumEnabledOk() (*bool, bool) {
	if o == nil || o.RumEnabled == nil {
		return nil, false
	}
	return o.RumEnabled, true
}

// HasRumEnabled returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasRumEnabled() bool {
	if o != nil && o.RumEnabled != nil {
		return true
	}

	return false
}

// SetRumEnabled gets a reference to the given bool and assigns it to the RumEnabled field.
func (o *base_BTUserInfo) SetRumEnabled(v bool) {
	o.RumEnabled = &v
}

// GetShowRenewStudentPages returns the ShowRenewStudentPages field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetShowRenewStudentPages() bool {
	if o == nil || o.ShowRenewStudentPages == nil {
		var ret bool
		return ret
	}
	return *o.ShowRenewStudentPages
}

// GetShowRenewStudentPagesOk returns a tuple with the ShowRenewStudentPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetShowRenewStudentPagesOk() (*bool, bool) {
	if o == nil || o.ShowRenewStudentPages == nil {
		return nil, false
	}
	return o.ShowRenewStudentPages, true
}

// HasShowRenewStudentPages returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasShowRenewStudentPages() bool {
	if o != nil && o.ShowRenewStudentPages != nil {
		return true
	}

	return false
}

// SetShowRenewStudentPages gets a reference to the given bool and assigns it to the ShowRenewStudentPages field.
func (o *base_BTUserInfo) SetShowRenewStudentPages(v bool) {
	o.ShowRenewStudentPages = &v
}

// GetStartupPage returns the StartupPage field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetStartupPage() int32 {
	if o == nil || o.StartupPage == nil {
		var ret int32
		return ret
	}
	return *o.StartupPage
}

// GetStartupPageOk returns a tuple with the StartupPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetStartupPageOk() (*int32, bool) {
	if o == nil || o.StartupPage == nil {
		return nil, false
	}
	return o.StartupPage, true
}

// HasStartupPage returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasStartupPage() bool {
	if o != nil && o.StartupPage != nil {
		return true
	}

	return false
}

// SetStartupPage gets a reference to the given int32 and assigns it to the StartupPage field.
func (o *base_BTUserInfo) SetStartupPage(v int32) {
	o.StartupPage = &v
}

// GetSystemUser returns the SystemUser field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetSystemUser() bool {
	if o == nil || o.SystemUser == nil {
		var ret bool
		return ret
	}
	return *o.SystemUser
}

// GetSystemUserOk returns a tuple with the SystemUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetSystemUserOk() (*bool, bool) {
	if o == nil || o.SystemUser == nil {
		return nil, false
	}
	return o.SystemUser, true
}

// HasSystemUser returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasSystemUser() bool {
	if o != nil && o.SystemUser != nil {
		return true
	}

	return false
}

// SetSystemUser gets a reference to the given bool and assigns it to the SystemUser field.
func (o *base_BTUserInfo) SetSystemUser(v bool) {
	o.SystemUser = &v
}

// GetTotpEnabled returns the TotpEnabled field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetTotpEnabled() bool {
	if o == nil || o.TotpEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TotpEnabled
}

// GetTotpEnabledOk returns a tuple with the TotpEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetTotpEnabledOk() (*bool, bool) {
	if o == nil || o.TotpEnabled == nil {
		return nil, false
	}
	return o.TotpEnabled, true
}

// HasTotpEnabled returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasTotpEnabled() bool {
	if o != nil && o.TotpEnabled != nil {
		return true
	}

	return false
}

// SetTotpEnabled gets a reference to the given bool and assigns it to the TotpEnabled field.
func (o *base_BTUserInfo) SetTotpEnabled(v bool) {
	o.TotpEnabled = &v
}

// GetTracingEnabled returns the TracingEnabled field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetTracingEnabled() bool {
	if o == nil || o.TracingEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TracingEnabled
}

// GetTracingEnabledOk returns a tuple with the TracingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetTracingEnabledOk() (*bool, bool) {
	if o == nil || o.TracingEnabled == nil {
		return nil, false
	}
	return o.TracingEnabled, true
}

// HasTracingEnabled returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasTracingEnabled() bool {
	if o != nil && o.TracingEnabled != nil {
		return true
	}

	return false
}

// SetTracingEnabled gets a reference to the given bool and assigns it to the TracingEnabled field.
func (o *base_BTUserInfo) SetTracingEnabled(v bool) {
	o.TracingEnabled = &v
}

// GetTrialInfos returns the TrialInfos field value if set, zero value otherwise.
func (o *base_BTUserInfo) GetTrialInfos() []BTTrialInfo {
	if o == nil || o.TrialInfos == nil {
		var ret []BTTrialInfo
		return ret
	}
	return o.TrialInfos
}

// GetTrialInfosOk returns a tuple with the TrialInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTUserInfo) GetTrialInfosOk() ([]BTTrialInfo, bool) {
	if o == nil || o.TrialInfos == nil {
		return nil, false
	}
	return o.TrialInfos, true
}

// HasTrialInfos returns a boolean if a field has been set.
func (o *base_BTUserInfo) HasTrialInfos() bool {
	if o != nil && o.TrialInfos != nil {
		return true
	}

	return false
}

// SetTrialInfos gets a reference to the given []BTTrialInfo and assigns it to the TrialInfos field.
func (o *base_BTUserInfo) SetTrialInfos(v []BTTrialInfo) {
	o.TrialInfos = v
}

func (o base_BTUserInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ViewRef != nil {
		toSerialize["viewRef"] = o.ViewRef
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.DocumentationName != nil {
		toSerialize["documentationName"] = o.DocumentationName
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.FirstName != nil {
		toSerialize["firstName"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["lastName"] = o.LastName
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.DocumentationNameOverride != nil {
		toSerialize["documentationNameOverride"] = o.DocumentationNameOverride
	}
	if o.GlobalPermissions != nil {
		toSerialize["globalPermissions"] = o.GlobalPermissions
	}
	if o.InvitationState != nil {
		toSerialize["invitationState"] = o.InvitationState
	}
	if o.IsGuest != nil {
		toSerialize["isGuest"] = o.IsGuest
	}
	if o.IsLight != nil {
		toSerialize["isLight"] = o.IsLight
	}
	if o.LastLoginTime != nil {
		toSerialize["lastLoginTime"] = o.LastLoginTime
	}
	if o.PersonalMessageAllowed != nil {
		toSerialize["personalMessageAllowed"] = o.PersonalMessageAllowed
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.ActivePlan != nil {
		toSerialize["activePlan"] = o.ActivePlan
	}
	if o.ActivePlanId != nil {
		toSerialize["activePlanId"] = o.ActivePlanId
	}
	if o.ActivePurchases != nil {
		toSerialize["activePurchases"] = o.ActivePurchases
	}
	if o.ActiveTrialInfo != nil {
		toSerialize["activeTrialInfo"] = o.ActiveTrialInfo
	}
	if o.B2cId != nil {
		toSerialize["b2cId"] = o.B2cId
	}
	if o.BillingUpdateRequired != nil {
		toSerialize["billingUpdateRequired"] = o.BillingUpdateRequired
	}
	if o.CadSystemAtSignup != nil {
		toSerialize["cadSystemAtSignup"] = o.CadSystemAtSignup
	}
	if o.CountryCode != nil {
		toSerialize["countryCode"] = o.CountryCode
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Credential != nil {
		toSerialize["credential"] = o.Credential
	}
	if o.DefaultCompanyName != nil {
		toSerialize["defaultCompanyName"] = o.DefaultCompanyName
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DeviceInfo != nil {
		toSerialize["deviceInfo"] = o.DeviceInfo
	}
	if o.Discounts != nil {
		toSerialize["discounts"] = o.Discounts
	}
	if o.Enterprise != nil {
		toSerialize["enterprise"] = o.Enterprise
	}
	if o.EulaId != nil {
		toSerialize["eulaId"] = o.EulaId
	}
	if o.EulaRequired != nil {
		toSerialize["eulaRequired"] = o.EulaRequired
	}
	if o.EvalCenter != nil {
		toSerialize["evalCenter"] = o.EvalCenter
	}
	if o.ForumId != nil {
		toSerialize["forumId"] = o.ForumId
	}
	if o.IntendedUse != nil {
		toSerialize["intendedUse"] = o.IntendedUse
	}
	if o.LastTrialInfo != nil {
		toSerialize["lastTrialInfo"] = o.LastTrialInfo
	}
	if o.NeedToShowNewWalkthrough != nil {
		toSerialize["needToShowNewWalkthrough"] = o.NeedToShowNewWalkthrough
	}
	if o.OwnPurchase != nil {
		toSerialize["ownPurchase"] = o.OwnPurchase
	}
	if o.PhoneNumber != nil {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if o.ProDiscoveryTrialRejected != nil {
		toSerialize["proDiscoveryTrialRejected"] = o.ProDiscoveryTrialRejected
	}
	if o.ProductType != nil {
		toSerialize["productType"] = o.ProductType
	}
	if o.RedirectUrl != nil {
		toSerialize["redirectUrl"] = o.RedirectUrl
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	if o.RumEnabled != nil {
		toSerialize["rumEnabled"] = o.RumEnabled
	}
	if o.ShowRenewStudentPages != nil {
		toSerialize["showRenewStudentPages"] = o.ShowRenewStudentPages
	}
	if o.StartupPage != nil {
		toSerialize["startupPage"] = o.StartupPage
	}
	if o.SystemUser != nil {
		toSerialize["systemUser"] = o.SystemUser
	}
	if o.TotpEnabled != nil {
		toSerialize["totpEnabled"] = o.TotpEnabled
	}
	if o.TracingEnabled != nil {
		toSerialize["tracingEnabled"] = o.TracingEnabled
	}
	if o.TrialInfos != nil {
		toSerialize["trialInfos"] = o.TrialInfos
	}
	return json.Marshal(toSerialize)
}
