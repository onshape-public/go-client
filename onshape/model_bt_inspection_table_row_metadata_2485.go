/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTInspectionTableRowMetadata2485 struct for BTInspectionTableRowMetadata2485
type BTInspectionTableRowMetadata2485 struct {
	BTTableBaseRowMetadata3181
	BtType                  *string                        `json:"btType,omitempty"`
	CrossHighlightDataIfAny *BTTableCrossHighlightData1753 `json:"crossHighlightDataIfAny,omitempty"`
	AnnotationId            *string                        `json:"annotationId,omitempty"`
	ConstraintId            *string                        `json:"constraintId,omitempty"`
	CrossHighlightData      *BTTableCrossHighlightData1753 `json:"crossHighlightData,omitempty"`
	FeatureId               *string                        `json:"featureId,omitempty"`
	ParameterId             *string                        `json:"parameterId,omitempty"`
	PartId                  *string                        `json:"partId,omitempty"`
	Precision               *GBTTolerancePrecision         `json:"precision,omitempty"`
}

// NewBTInspectionTableRowMetadata2485 instantiates a new BTInspectionTableRowMetadata2485 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTInspectionTableRowMetadata2485() *BTInspectionTableRowMetadata2485 {
	this := BTInspectionTableRowMetadata2485{}
	return &this
}

// NewBTInspectionTableRowMetadata2485WithDefaults instantiates a new BTInspectionTableRowMetadata2485 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTInspectionTableRowMetadata2485WithDefaults() *BTInspectionTableRowMetadata2485 {
	this := BTInspectionTableRowMetadata2485{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTInspectionTableRowMetadata2485) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInspectionTableRowMetadata2485) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTInspectionTableRowMetadata2485) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTInspectionTableRowMetadata2485) SetBtType(v string) {
	o.BtType = &v
}

// GetCrossHighlightDataIfAny returns the CrossHighlightDataIfAny field value if set, zero value otherwise.
func (o *BTInspectionTableRowMetadata2485) GetCrossHighlightDataIfAny() BTTableCrossHighlightData1753 {
	if o == nil || o.CrossHighlightDataIfAny == nil {
		var ret BTTableCrossHighlightData1753
		return ret
	}
	return *o.CrossHighlightDataIfAny
}

// GetCrossHighlightDataIfAnyOk returns a tuple with the CrossHighlightDataIfAny field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInspectionTableRowMetadata2485) GetCrossHighlightDataIfAnyOk() (*BTTableCrossHighlightData1753, bool) {
	if o == nil || o.CrossHighlightDataIfAny == nil {
		return nil, false
	}
	return o.CrossHighlightDataIfAny, true
}

// HasCrossHighlightDataIfAny returns a boolean if a field has been set.
func (o *BTInspectionTableRowMetadata2485) HasCrossHighlightDataIfAny() bool {
	if o != nil && o.CrossHighlightDataIfAny != nil {
		return true
	}

	return false
}

// SetCrossHighlightDataIfAny gets a reference to the given BTTableCrossHighlightData1753 and assigns it to the CrossHighlightDataIfAny field.
func (o *BTInspectionTableRowMetadata2485) SetCrossHighlightDataIfAny(v BTTableCrossHighlightData1753) {
	o.CrossHighlightDataIfAny = &v
}

// GetAnnotationId returns the AnnotationId field value if set, zero value otherwise.
func (o *BTInspectionTableRowMetadata2485) GetAnnotationId() string {
	if o == nil || o.AnnotationId == nil {
		var ret string
		return ret
	}
	return *o.AnnotationId
}

// GetAnnotationIdOk returns a tuple with the AnnotationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInspectionTableRowMetadata2485) GetAnnotationIdOk() (*string, bool) {
	if o == nil || o.AnnotationId == nil {
		return nil, false
	}
	return o.AnnotationId, true
}

// HasAnnotationId returns a boolean if a field has been set.
func (o *BTInspectionTableRowMetadata2485) HasAnnotationId() bool {
	if o != nil && o.AnnotationId != nil {
		return true
	}

	return false
}

// SetAnnotationId gets a reference to the given string and assigns it to the AnnotationId field.
func (o *BTInspectionTableRowMetadata2485) SetAnnotationId(v string) {
	o.AnnotationId = &v
}

// GetConstraintId returns the ConstraintId field value if set, zero value otherwise.
func (o *BTInspectionTableRowMetadata2485) GetConstraintId() string {
	if o == nil || o.ConstraintId == nil {
		var ret string
		return ret
	}
	return *o.ConstraintId
}

// GetConstraintIdOk returns a tuple with the ConstraintId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInspectionTableRowMetadata2485) GetConstraintIdOk() (*string, bool) {
	if o == nil || o.ConstraintId == nil {
		return nil, false
	}
	return o.ConstraintId, true
}

// HasConstraintId returns a boolean if a field has been set.
func (o *BTInspectionTableRowMetadata2485) HasConstraintId() bool {
	if o != nil && o.ConstraintId != nil {
		return true
	}

	return false
}

// SetConstraintId gets a reference to the given string and assigns it to the ConstraintId field.
func (o *BTInspectionTableRowMetadata2485) SetConstraintId(v string) {
	o.ConstraintId = &v
}

// GetCrossHighlightData returns the CrossHighlightData field value if set, zero value otherwise.
func (o *BTInspectionTableRowMetadata2485) GetCrossHighlightData() BTTableCrossHighlightData1753 {
	if o == nil || o.CrossHighlightData == nil {
		var ret BTTableCrossHighlightData1753
		return ret
	}
	return *o.CrossHighlightData
}

// GetCrossHighlightDataOk returns a tuple with the CrossHighlightData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInspectionTableRowMetadata2485) GetCrossHighlightDataOk() (*BTTableCrossHighlightData1753, bool) {
	if o == nil || o.CrossHighlightData == nil {
		return nil, false
	}
	return o.CrossHighlightData, true
}

// HasCrossHighlightData returns a boolean if a field has been set.
func (o *BTInspectionTableRowMetadata2485) HasCrossHighlightData() bool {
	if o != nil && o.CrossHighlightData != nil {
		return true
	}

	return false
}

// SetCrossHighlightData gets a reference to the given BTTableCrossHighlightData1753 and assigns it to the CrossHighlightData field.
func (o *BTInspectionTableRowMetadata2485) SetCrossHighlightData(v BTTableCrossHighlightData1753) {
	o.CrossHighlightData = &v
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise.
func (o *BTInspectionTableRowMetadata2485) GetFeatureId() string {
	if o == nil || o.FeatureId == nil {
		var ret string
		return ret
	}
	return *o.FeatureId
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInspectionTableRowMetadata2485) GetFeatureIdOk() (*string, bool) {
	if o == nil || o.FeatureId == nil {
		return nil, false
	}
	return o.FeatureId, true
}

// HasFeatureId returns a boolean if a field has been set.
func (o *BTInspectionTableRowMetadata2485) HasFeatureId() bool {
	if o != nil && o.FeatureId != nil {
		return true
	}

	return false
}

// SetFeatureId gets a reference to the given string and assigns it to the FeatureId field.
func (o *BTInspectionTableRowMetadata2485) SetFeatureId(v string) {
	o.FeatureId = &v
}

// GetParameterId returns the ParameterId field value if set, zero value otherwise.
func (o *BTInspectionTableRowMetadata2485) GetParameterId() string {
	if o == nil || o.ParameterId == nil {
		var ret string
		return ret
	}
	return *o.ParameterId
}

// GetParameterIdOk returns a tuple with the ParameterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInspectionTableRowMetadata2485) GetParameterIdOk() (*string, bool) {
	if o == nil || o.ParameterId == nil {
		return nil, false
	}
	return o.ParameterId, true
}

// HasParameterId returns a boolean if a field has been set.
func (o *BTInspectionTableRowMetadata2485) HasParameterId() bool {
	if o != nil && o.ParameterId != nil {
		return true
	}

	return false
}

// SetParameterId gets a reference to the given string and assigns it to the ParameterId field.
func (o *BTInspectionTableRowMetadata2485) SetParameterId(v string) {
	o.ParameterId = &v
}

// GetPartId returns the PartId field value if set, zero value otherwise.
func (o *BTInspectionTableRowMetadata2485) GetPartId() string {
	if o == nil || o.PartId == nil {
		var ret string
		return ret
	}
	return *o.PartId
}

// GetPartIdOk returns a tuple with the PartId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInspectionTableRowMetadata2485) GetPartIdOk() (*string, bool) {
	if o == nil || o.PartId == nil {
		return nil, false
	}
	return o.PartId, true
}

// HasPartId returns a boolean if a field has been set.
func (o *BTInspectionTableRowMetadata2485) HasPartId() bool {
	if o != nil && o.PartId != nil {
		return true
	}

	return false
}

// SetPartId gets a reference to the given string and assigns it to the PartId field.
func (o *BTInspectionTableRowMetadata2485) SetPartId(v string) {
	o.PartId = &v
}

// GetPrecision returns the Precision field value if set, zero value otherwise.
func (o *BTInspectionTableRowMetadata2485) GetPrecision() GBTTolerancePrecision {
	if o == nil || o.Precision == nil {
		var ret GBTTolerancePrecision
		return ret
	}
	return *o.Precision
}

// GetPrecisionOk returns a tuple with the Precision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTInspectionTableRowMetadata2485) GetPrecisionOk() (*GBTTolerancePrecision, bool) {
	if o == nil || o.Precision == nil {
		return nil, false
	}
	return o.Precision, true
}

// HasPrecision returns a boolean if a field has been set.
func (o *BTInspectionTableRowMetadata2485) HasPrecision() bool {
	if o != nil && o.Precision != nil {
		return true
	}

	return false
}

// SetPrecision gets a reference to the given GBTTolerancePrecision and assigns it to the Precision field.
func (o *BTInspectionTableRowMetadata2485) SetPrecision(v GBTTolerancePrecision) {
	o.Precision = &v
}

func (o BTInspectionTableRowMetadata2485) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTTableBaseRowMetadata3181, errBTTableBaseRowMetadata3181 := json.Marshal(o.BTTableBaseRowMetadata3181)
	if errBTTableBaseRowMetadata3181 != nil {
		return []byte{}, errBTTableBaseRowMetadata3181
	}
	errBTTableBaseRowMetadata3181 = json.Unmarshal([]byte(serializedBTTableBaseRowMetadata3181), &toSerialize)
	if errBTTableBaseRowMetadata3181 != nil {
		return []byte{}, errBTTableBaseRowMetadata3181
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.CrossHighlightDataIfAny != nil {
		toSerialize["crossHighlightDataIfAny"] = o.CrossHighlightDataIfAny
	}
	if o.AnnotationId != nil {
		toSerialize["annotationId"] = o.AnnotationId
	}
	if o.ConstraintId != nil {
		toSerialize["constraintId"] = o.ConstraintId
	}
	if o.CrossHighlightData != nil {
		toSerialize["crossHighlightData"] = o.CrossHighlightData
	}
	if o.FeatureId != nil {
		toSerialize["featureId"] = o.FeatureId
	}
	if o.ParameterId != nil {
		toSerialize["parameterId"] = o.ParameterId
	}
	if o.PartId != nil {
		toSerialize["partId"] = o.PartId
	}
	if o.Precision != nil {
		toSerialize["precision"] = o.Precision
	}
	return json.Marshal(toSerialize)
}

type NullableBTInspectionTableRowMetadata2485 struct {
	value *BTInspectionTableRowMetadata2485
	isSet bool
}

func (v NullableBTInspectionTableRowMetadata2485) Get() *BTInspectionTableRowMetadata2485 {
	return v.value
}

func (v *NullableBTInspectionTableRowMetadata2485) Set(val *BTInspectionTableRowMetadata2485) {
	v.value = val
	v.isSet = true
}

func (v NullableBTInspectionTableRowMetadata2485) IsSet() bool {
	return v.isSet
}

func (v *NullableBTInspectionTableRowMetadata2485) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTInspectionTableRowMetadata2485(val *BTInspectionTableRowMetadata2485) *NullableBTInspectionTableRowMetadata2485 {
	return &NullableBTInspectionTableRowMetadata2485{value: val, isSet: true}
}

func (v NullableBTInspectionTableRowMetadata2485) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTInspectionTableRowMetadata2485) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
