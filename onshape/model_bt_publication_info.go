/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
	"fmt"
)

// BTPublicationInfo - struct for BTPublicationInfo
type BTPublicationInfo struct {
	implBTPublicationInfo interface{}
}

// BTClassroomInfoAsBTPublicationInfo is a convenience function that returns BTClassroomInfo wrapped in BTPublicationInfo
func (o *BTClassroomInfo) AsBTPublicationInfo() *BTPublicationInfo {
	return &BTPublicationInfo{o}
}

// BTExternalConnectionInfoAsBTPublicationInfo is a convenience function that returns BTExternalConnectionInfo wrapped in BTPublicationInfo
func (o *BTExternalConnectionInfo) AsBTPublicationInfo() *BTPublicationInfo {
	return &BTPublicationInfo{o}
}

// BTProjectInfoAsBTPublicationInfo is a convenience function that returns BTProjectInfo wrapped in BTPublicationInfo
func (o *BTProjectInfo) AsBTPublicationInfo() *BTPublicationInfo {
	return &BTPublicationInfo{o}
}

// BTDocumentLabelInfoAsBTPublicationInfo is a convenience function that returns BTDocumentLabelInfo wrapped in BTPublicationInfo
func (o *BTDocumentLabelInfo) AsBTPublicationInfo() *BTPublicationInfo {
	return &BTPublicationInfo{o}
}

// BTGlobalTreeMagicNodeInfoAsBTPublicationInfo is a convenience function that returns BTGlobalTreeMagicNodeInfo wrapped in BTPublicationInfo
func (o *BTGlobalTreeMagicNodeInfo) AsBTPublicationInfo() *BTPublicationInfo {
	return &BTPublicationInfo{o}
}

// BTFolderInfoAsBTPublicationInfo is a convenience function that returns BTFolderInfo wrapped in BTPublicationInfo
func (o *BTFolderInfo) AsBTPublicationInfo() *BTPublicationInfo {
	return &BTPublicationInfo{o}
}

// BTCloudStorageAccountInfoAsBTPublicationInfo is a convenience function that returns BTCloudStorageAccountInfo wrapped in BTPublicationInfo
func (o *BTCloudStorageAccountInfo) AsBTPublicationInfo() *BTPublicationInfo {
	return &BTPublicationInfo{o}
}

// BTGlobalTreeNodeSummaryInfoAsBTPublicationInfo is a convenience function that returns BTGlobalTreeNodeSummaryInfo wrapped in BTPublicationInfo
func (o *BTGlobalTreeNodeSummaryInfo) AsBTPublicationInfo() *BTPublicationInfo {
	return &BTPublicationInfo{o}
}

// BTTeamSummaryInfoAsBTPublicationInfo is a convenience function that returns BTTeamSummaryInfo wrapped in BTPublicationInfo
func (o *BTTeamSummaryInfo) AsBTPublicationInfo() *BTPublicationInfo {
	return &BTPublicationInfo{o}
}

// BTResourceOwnerInfoAsBTPublicationInfo is a convenience function that returns BTResourceOwnerInfo wrapped in BTPublicationInfo
func (o *BTResourceOwnerInfo) AsBTPublicationInfo() *BTPublicationInfo {
	return &BTPublicationInfo{o}
}

// NewBTPublicationInfo instantiates a new BTPublicationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTPublicationInfo(jsonType string) *BTPublicationInfo {
	this := BTPublicationInfo{Newbase_BTPublicationInfo(jsonType)}
	return &this
}

// NewBTPublicationInfoWithDefaults instantiates a new BTPublicationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTPublicationInfoWithDefaults() *BTPublicationInfo {
	this := BTPublicationInfo{Newbase_BTPublicationInfoWithDefaults()}
	return &this
}

// GetCanMove returns the CanMove field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetCanMove() bool {
	type getResult interface {
		GetCanMove() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCanMove()
	} else {
		var de bool
		return de
	}
}

// GetCanMoveOk returns a tuple with the CanMove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetCanMoveOk() (*bool, bool) {
	type getResult interface {
		GetCanMoveOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCanMoveOk()
	} else {
		return nil, false
	}
}

// HasCanMove returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasCanMove() bool {
	type getResult interface {
		HasCanMove() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasCanMove()
	} else {
		return false
	}
}

// SetCanMove gets a reference to the given bool and assigns it to the CanMove field.
func (o *BTPublicationInfo) SetCanMove(v bool) {
	type getResult interface {
		SetCanMove(v bool)
	}

	o.GetActualInstance().(getResult).SetCanMove(v)
}

// GetConnectionName returns the ConnectionName field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetConnectionName() string {
	type getResult interface {
		GetConnectionName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetConnectionName()
	} else {
		var de string
		return de
	}
}

// GetConnectionNameOk returns a tuple with the ConnectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetConnectionNameOk() (*string, bool) {
	type getResult interface {
		GetConnectionNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetConnectionNameOk()
	} else {
		return nil, false
	}
}

// HasConnectionName returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasConnectionName() bool {
	type getResult interface {
		HasConnectionName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasConnectionName()
	} else {
		return false
	}
}

// SetConnectionName gets a reference to the given string and assigns it to the ConnectionName field.
func (o *BTPublicationInfo) SetConnectionName(v string) {
	type getResult interface {
		SetConnectionName(v string)
	}

	o.GetActualInstance().(getResult).SetConnectionName(v)
}

// GetConnectionNames returns the ConnectionNames field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetConnectionNames() []string {
	type getResult interface {
		GetConnectionNames() []string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetConnectionNames()
	} else {
		var de []string
		return de
	}
}

// GetConnectionNamesOk returns a tuple with the ConnectionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetConnectionNamesOk() ([]string, bool) {
	type getResult interface {
		GetConnectionNamesOk() ([]string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetConnectionNamesOk()
	} else {
		return nil, false
	}
}

// HasConnectionNames returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasConnectionNames() bool {
	type getResult interface {
		HasConnectionNames() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasConnectionNames()
	} else {
		return false
	}
}

// SetConnectionNames gets a reference to the given []string and assigns it to the ConnectionNames field.
func (o *BTPublicationInfo) SetConnectionNames(v []string) {
	type getResult interface {
		SetConnectionNames(v []string)
	}

	o.GetActualInstance().(getResult).SetConnectionNames(v)
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetCreatedAt() JSONTime {
	type getResult interface {
		GetCreatedAt() JSONTime
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCreatedAt()
	} else {
		var de JSONTime
		return de
	}
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetCreatedAtOk() (*JSONTime, bool) {
	type getResult interface {
		GetCreatedAtOk() (*JSONTime, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCreatedAtOk()
	} else {
		return nil, false
	}
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasCreatedAt() bool {
	type getResult interface {
		HasCreatedAt() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasCreatedAt()
	} else {
		return false
	}
}

// SetCreatedAt gets a reference to the given JSONTime and assigns it to the CreatedAt field.
func (o *BTPublicationInfo) SetCreatedAt(v JSONTime) {
	type getResult interface {
		SetCreatedAt(v JSONTime)
	}

	o.GetActualInstance().(getResult).SetCreatedAt(v)
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetCreatedBy() BTUserBasicSummaryInfo {
	type getResult interface {
		GetCreatedBy() BTUserBasicSummaryInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCreatedBy()
	} else {
		var de BTUserBasicSummaryInfo
		return de
	}
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetCreatedByOk() (*BTUserBasicSummaryInfo, bool) {
	type getResult interface {
		GetCreatedByOk() (*BTUserBasicSummaryInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetCreatedByOk()
	} else {
		return nil, false
	}
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasCreatedBy() bool {
	type getResult interface {
		HasCreatedBy() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasCreatedBy()
	} else {
		return false
	}
}

// SetCreatedBy gets a reference to the given BTUserBasicSummaryInfo and assigns it to the CreatedBy field.
func (o *BTPublicationInfo) SetCreatedBy(v BTUserBasicSummaryInfo) {
	type getResult interface {
		SetCreatedBy(v BTUserBasicSummaryInfo)
	}

	o.GetActualInstance().(getResult).SetCreatedBy(v)
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetDescription() string {
	type getResult interface {
		GetDescription() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDescription()
	} else {
		var de string
		return de
	}
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetDescriptionOk() (*string, bool) {
	type getResult interface {
		GetDescriptionOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDescriptionOk()
	} else {
		return nil, false
	}
}

// HasDescription returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasDescription() bool {
	type getResult interface {
		HasDescription() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDescription()
	} else {
		return false
	}
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BTPublicationInfo) SetDescription(v string) {
	type getResult interface {
		SetDescription(v string)
	}

	o.GetActualInstance().(getResult).SetDescription(v)
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetHref() string {
	type getResult interface {
		GetHref() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetHref()
	} else {
		var de string
		return de
	}
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetHrefOk() (*string, bool) {
	type getResult interface {
		GetHrefOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetHrefOk()
	} else {
		return nil, false
	}
}

// HasHref returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasHref() bool {
	type getResult interface {
		HasHref() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasHref()
	} else {
		return false
	}
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTPublicationInfo) SetHref(v string) {
	type getResult interface {
		SetHref(v string)
	}

	o.GetActualInstance().(getResult).SetHref(v)
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetId() string {
	type getResult interface {
		GetId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetId()
	} else {
		var de string
		return de
	}
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetIdOk() (*string, bool) {
	type getResult interface {
		GetIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIdOk()
	} else {
		return nil, false
	}
}

// HasId returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasId() bool {
	type getResult interface {
		HasId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasId()
	} else {
		return false
	}
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTPublicationInfo) SetId(v string) {
	type getResult interface {
		SetId(v string)
	}

	o.GetActualInstance().(getResult).SetId(v)
}

// GetIsContainer returns the IsContainer field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetIsContainer() bool {
	type getResult interface {
		GetIsContainer() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsContainer()
	} else {
		var de bool
		return de
	}
}

// GetIsContainerOk returns a tuple with the IsContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetIsContainerOk() (*bool, bool) {
	type getResult interface {
		GetIsContainerOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsContainerOk()
	} else {
		return nil, false
	}
}

// HasIsContainer returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasIsContainer() bool {
	type getResult interface {
		HasIsContainer() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIsContainer()
	} else {
		return false
	}
}

// SetIsContainer gets a reference to the given bool and assigns it to the IsContainer field.
func (o *BTPublicationInfo) SetIsContainer(v bool) {
	type getResult interface {
		SetIsContainer(v bool)
	}

	o.GetActualInstance().(getResult).SetIsContainer(v)
}

// GetIsEnterpriseOwned returns the IsEnterpriseOwned field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetIsEnterpriseOwned() bool {
	type getResult interface {
		GetIsEnterpriseOwned() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsEnterpriseOwned()
	} else {
		var de bool
		return de
	}
}

// GetIsEnterpriseOwnedOk returns a tuple with the IsEnterpriseOwned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetIsEnterpriseOwnedOk() (*bool, bool) {
	type getResult interface {
		GetIsEnterpriseOwnedOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsEnterpriseOwnedOk()
	} else {
		return nil, false
	}
}

// HasIsEnterpriseOwned returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasIsEnterpriseOwned() bool {
	type getResult interface {
		HasIsEnterpriseOwned() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIsEnterpriseOwned()
	} else {
		return false
	}
}

// SetIsEnterpriseOwned gets a reference to the given bool and assigns it to the IsEnterpriseOwned field.
func (o *BTPublicationInfo) SetIsEnterpriseOwned(v bool) {
	type getResult interface {
		SetIsEnterpriseOwned(v bool)
	}

	o.GetActualInstance().(getResult).SetIsEnterpriseOwned(v)
}

// GetIsExternalConnectionResource returns the IsExternalConnectionResource field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetIsExternalConnectionResource() bool {
	type getResult interface {
		GetIsExternalConnectionResource() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsExternalConnectionResource()
	} else {
		var de bool
		return de
	}
}

// GetIsExternalConnectionResourceOk returns a tuple with the IsExternalConnectionResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetIsExternalConnectionResourceOk() (*bool, bool) {
	type getResult interface {
		GetIsExternalConnectionResourceOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsExternalConnectionResourceOk()
	} else {
		return nil, false
	}
}

// HasIsExternalConnectionResource returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasIsExternalConnectionResource() bool {
	type getResult interface {
		HasIsExternalConnectionResource() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIsExternalConnectionResource()
	} else {
		return false
	}
}

// SetIsExternalConnectionResource gets a reference to the given bool and assigns it to the IsExternalConnectionResource field.
func (o *BTPublicationInfo) SetIsExternalConnectionResource(v bool) {
	type getResult interface {
		SetIsExternalConnectionResource(v bool)
	}

	o.GetActualInstance().(getResult).SetIsExternalConnectionResource(v)
}

// GetIsMutable returns the IsMutable field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetIsMutable() bool {
	type getResult interface {
		GetIsMutable() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsMutable()
	} else {
		var de bool
		return de
	}
}

// GetIsMutableOk returns a tuple with the IsMutable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetIsMutableOk() (*bool, bool) {
	type getResult interface {
		GetIsMutableOk() (*bool, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetIsMutableOk()
	} else {
		return nil, false
	}
}

// HasIsMutable returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasIsMutable() bool {
	type getResult interface {
		HasIsMutable() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasIsMutable()
	} else {
		return false
	}
}

// SetIsMutable gets a reference to the given bool and assigns it to the IsMutable field.
func (o *BTPublicationInfo) SetIsMutable(v bool) {
	type getResult interface {
		SetIsMutable(v bool)
	}

	o.GetActualInstance().(getResult).SetIsMutable(v)
}

// GetJsonType returns the JsonType field value
func (o *BTPublicationInfo) GetJsonType() string {
	type getResult interface {
		GetJsonType() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetJsonType()
	} else {
		var de string
		return de
	}
}

// GetJsonTypeOk returns a tuple with the JsonType field value
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetJsonTypeOk() (*string, bool) {
	type getResult interface {
		GetJsonTypeOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetJsonTypeOk()
	} else {
		return nil, false
	}
}

// SetJsonType sets field value
func (o *BTPublicationInfo) SetJsonType(v string) {
	type getResult interface {
		SetJsonType(v string)
	}

	o.GetActualInstance().(getResult).SetJsonType(v)
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetModifiedAt() JSONTime {
	type getResult interface {
		GetModifiedAt() JSONTime
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetModifiedAt()
	} else {
		var de JSONTime
		return de
	}
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetModifiedAtOk() (*JSONTime, bool) {
	type getResult interface {
		GetModifiedAtOk() (*JSONTime, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetModifiedAtOk()
	} else {
		return nil, false
	}
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasModifiedAt() bool {
	type getResult interface {
		HasModifiedAt() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasModifiedAt()
	} else {
		return false
	}
}

// SetModifiedAt gets a reference to the given JSONTime and assigns it to the ModifiedAt field.
func (o *BTPublicationInfo) SetModifiedAt(v JSONTime) {
	type getResult interface {
		SetModifiedAt(v JSONTime)
	}

	o.GetActualInstance().(getResult).SetModifiedAt(v)
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetModifiedBy() BTUserBasicSummaryInfo {
	type getResult interface {
		GetModifiedBy() BTUserBasicSummaryInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetModifiedBy()
	} else {
		var de BTUserBasicSummaryInfo
		return de
	}
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetModifiedByOk() (*BTUserBasicSummaryInfo, bool) {
	type getResult interface {
		GetModifiedByOk() (*BTUserBasicSummaryInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetModifiedByOk()
	} else {
		return nil, false
	}
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasModifiedBy() bool {
	type getResult interface {
		HasModifiedBy() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasModifiedBy()
	} else {
		return false
	}
}

// SetModifiedBy gets a reference to the given BTUserBasicSummaryInfo and assigns it to the ModifiedBy field.
func (o *BTPublicationInfo) SetModifiedBy(v BTUserBasicSummaryInfo) {
	type getResult interface {
		SetModifiedBy(v BTUserBasicSummaryInfo)
	}

	o.GetActualInstance().(getResult).SetModifiedBy(v)
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetName() string {
	type getResult interface {
		GetName() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetName()
	} else {
		var de string
		return de
	}
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetNameOk() (*string, bool) {
	type getResult interface {
		GetNameOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNameOk()
	} else {
		return nil, false
	}
}

// HasName returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasName() bool {
	type getResult interface {
		HasName() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasName()
	} else {
		return false
	}
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTPublicationInfo) SetName(v string) {
	type getResult interface {
		SetName(v string)
	}

	o.GetActualInstance().(getResult).SetName(v)
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetOwner() BTOwnerInfo {
	type getResult interface {
		GetOwner() BTOwnerInfo
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetOwner()
	} else {
		var de BTOwnerInfo
		return de
	}
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetOwnerOk() (*BTOwnerInfo, bool) {
	type getResult interface {
		GetOwnerOk() (*BTOwnerInfo, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetOwnerOk()
	} else {
		return nil, false
	}
}

// HasOwner returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasOwner() bool {
	type getResult interface {
		HasOwner() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasOwner()
	} else {
		return false
	}
}

// SetOwner gets a reference to the given BTOwnerInfo and assigns it to the Owner field.
func (o *BTPublicationInfo) SetOwner(v BTOwnerInfo) {
	type getResult interface {
		SetOwner(v BTOwnerInfo)
	}

	o.GetActualInstance().(getResult).SetOwner(v)
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetParentId() string {
	type getResult interface {
		GetParentId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParentId()
	} else {
		var de string
		return de
	}
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetParentIdOk() (*string, bool) {
	type getResult interface {
		GetParentIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetParentIdOk()
	} else {
		return nil, false
	}
}

// HasParentId returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasParentId() bool {
	type getResult interface {
		HasParentId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasParentId()
	} else {
		return false
	}
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *BTPublicationInfo) SetParentId(v string) {
	type getResult interface {
		SetParentId(v string)
	}

	o.GetActualInstance().(getResult).SetParentId(v)
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetProjectId() string {
	type getResult interface {
		GetProjectId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetProjectId()
	} else {
		var de string
		return de
	}
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetProjectIdOk() (*string, bool) {
	type getResult interface {
		GetProjectIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetProjectIdOk()
	} else {
		return nil, false
	}
}

// HasProjectId returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasProjectId() bool {
	type getResult interface {
		HasProjectId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasProjectId()
	} else {
		return false
	}
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *BTPublicationInfo) SetProjectId(v string) {
	type getResult interface {
		SetProjectId(v string)
	}

	o.GetActualInstance().(getResult).SetProjectId(v)
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetResourceType() string {
	type getResult interface {
		GetResourceType() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetResourceType()
	} else {
		var de string
		return de
	}
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetResourceTypeOk() (*string, bool) {
	type getResult interface {
		GetResourceTypeOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetResourceTypeOk()
	} else {
		return nil, false
	}
}

// HasResourceType returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasResourceType() bool {
	type getResult interface {
		HasResourceType() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasResourceType()
	} else {
		return false
	}
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *BTPublicationInfo) SetResourceType(v string) {
	type getResult interface {
		SetResourceType(v string)
	}

	o.GetActualInstance().(getResult).SetResourceType(v)
}

// GetTreeHref returns the TreeHref field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetTreeHref() string {
	type getResult interface {
		GetTreeHref() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetTreeHref()
	} else {
		var de string
		return de
	}
}

// GetTreeHrefOk returns a tuple with the TreeHref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetTreeHrefOk() (*string, bool) {
	type getResult interface {
		GetTreeHrefOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetTreeHrefOk()
	} else {
		return nil, false
	}
}

// HasTreeHref returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasTreeHref() bool {
	type getResult interface {
		HasTreeHref() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasTreeHref()
	} else {
		return false
	}
}

// SetTreeHref gets a reference to the given string and assigns it to the TreeHref field.
func (o *BTPublicationInfo) SetTreeHref(v string) {
	type getResult interface {
		SetTreeHref(v string)
	}

	o.GetActualInstance().(getResult).SetTreeHref(v)
}

// GetUnparentHref returns the UnparentHref field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetUnparentHref() string {
	type getResult interface {
		GetUnparentHref() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetUnparentHref()
	} else {
		var de string
		return de
	}
}

// GetUnparentHrefOk returns a tuple with the UnparentHref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetUnparentHrefOk() (*string, bool) {
	type getResult interface {
		GetUnparentHrefOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetUnparentHrefOk()
	} else {
		return nil, false
	}
}

// HasUnparentHref returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasUnparentHref() bool {
	type getResult interface {
		HasUnparentHref() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasUnparentHref()
	} else {
		return false
	}
}

// SetUnparentHref gets a reference to the given string and assigns it to the UnparentHref field.
func (o *BTPublicationInfo) SetUnparentHref(v string) {
	type getResult interface {
		SetUnparentHref(v string)
	}

	o.GetActualInstance().(getResult).SetUnparentHref(v)
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetViewRef() string {
	type getResult interface {
		GetViewRef() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetViewRef()
	} else {
		var de string
		return de
	}
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetViewRefOk() (*string, bool) {
	type getResult interface {
		GetViewRefOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetViewRefOk()
	} else {
		return nil, false
	}
}

// HasViewRef returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasViewRef() bool {
	type getResult interface {
		HasViewRef() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasViewRef()
	} else {
		return false
	}
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *BTPublicationInfo) SetViewRef(v string) {
	type getResult interface {
		SetViewRef(v string)
	}

	o.GetActualInstance().(getResult).SetViewRef(v)
}

// GetDefaultWorkspaceId returns the DefaultWorkspaceId field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetDefaultWorkspaceId() string {
	type getResult interface {
		GetDefaultWorkspaceId() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDefaultWorkspaceId()
	} else {
		var de string
		return de
	}
}

// GetDefaultWorkspaceIdOk returns a tuple with the DefaultWorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetDefaultWorkspaceIdOk() (*string, bool) {
	type getResult interface {
		GetDefaultWorkspaceIdOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetDefaultWorkspaceIdOk()
	} else {
		return nil, false
	}
}

// HasDefaultWorkspaceId returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasDefaultWorkspaceId() bool {
	type getResult interface {
		HasDefaultWorkspaceId() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasDefaultWorkspaceId()
	} else {
		return false
	}
}

// SetDefaultWorkspaceId gets a reference to the given string and assigns it to the DefaultWorkspaceId field.
func (o *BTPublicationInfo) SetDefaultWorkspaceId(v string) {
	type getResult interface {
		SetDefaultWorkspaceId(v string)
	}

	o.GetActualInstance().(getResult).SetDefaultWorkspaceId(v)
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetItems() []BTPublicationInfoItem {
	type getResult interface {
		GetItems() []BTPublicationInfoItem
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetItems()
	} else {
		var de []BTPublicationInfoItem
		return de
	}
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetItemsOk() ([]BTPublicationInfoItem, bool) {
	type getResult interface {
		GetItemsOk() ([]BTPublicationInfoItem, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetItemsOk()
	} else {
		return nil, false
	}
}

// HasItems returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasItems() bool {
	type getResult interface {
		HasItems() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasItems()
	} else {
		return false
	}
}

// SetItems gets a reference to the given []BTPublicationInfoItem and assigns it to the Items field.
func (o *BTPublicationInfo) SetItems(v []BTPublicationInfoItem) {
	type getResult interface {
		SetItems(v []BTPublicationInfoItem)
	}

	o.GetActualInstance().(getResult).SetItems(v)
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetNotes() string {
	type getResult interface {
		GetNotes() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNotes()
	} else {
		var de string
		return de
	}
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetNotesOk() (*string, bool) {
	type getResult interface {
		GetNotesOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetNotesOk()
	} else {
		return nil, false
	}
}

// HasNotes returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasNotes() bool {
	type getResult interface {
		HasNotes() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasNotes()
	} else {
		return false
	}
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *BTPublicationInfo) SetNotes(v string) {
	type getResult interface {
		SetNotes(v string)
	}

	o.GetActualInstance().(getResult).SetNotes(v)
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *BTPublicationInfo) GetSequence() string {
	type getResult interface {
		GetSequence() string
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSequence()
	} else {
		var de string
		return de
	}
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationInfo) GetSequenceOk() (*string, bool) {
	type getResult interface {
		GetSequenceOk() (*string, bool)
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.GetSequenceOk()
	} else {
		return nil, false
	}
}

// HasSequence returns a boolean if a field has been set.
func (o *BTPublicationInfo) HasSequence() bool {
	type getResult interface {
		HasSequence() bool
	}

	if tx, ok := o.GetActualInstance().(getResult); ok {
		return tx.HasSequence()
	} else {
		return false
	}
}

// SetSequence gets a reference to the given string and assigns it to the Sequence field.
func (o *BTPublicationInfo) SetSequence(v string) {
	type getResult interface {
		SetSequence(v string)
	}

	o.GetActualInstance().(getResult).SetSequence(v)
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *BTPublicationInfo) UnmarshalJSON(data []byte) error {
	var err error
	// use discriminator value to speed up the lookup
	var jsonDict map[string]interface{}
	err = newStrictDecoder(data).Decode(&jsonDict)
	if err != nil {
		return fmt.Errorf("failed to unmarshal JSON into map for the discriminator lookup")
	}

	// check if the discriminator value is 'classroom'
	if jsonDict["jsonType"] == "classroom" {
		// try to unmarshal JSON data into BTClassroomInfo
		var qr *BTClassroomInfo
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPublicationInfo = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPublicationInfo = nil
			return fmt.Errorf("failed to unmarshal BTPublicationInfo as BTClassroomInfo: %s", err.Error())
		}
	}

	// check if the discriminator value is 'cloudstorageaccount'
	if jsonDict["jsonType"] == "cloudstorageaccount" {
		// try to unmarshal JSON data into BTCloudStorageAccountInfo
		var qr *BTCloudStorageAccountInfo
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPublicationInfo = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPublicationInfo = nil
			return fmt.Errorf("failed to unmarshal BTPublicationInfo as BTCloudStorageAccountInfo: %s", err.Error())
		}
	}

	// check if the discriminator value is 'document-summary'
	if jsonDict["jsonType"] == "document-summary" {
		// try to unmarshal JSON data into BTGlobalTreeNodeSummaryInfo
		var qr *BTGlobalTreeNodeSummaryInfo
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPublicationInfo = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPublicationInfo = nil
			return fmt.Errorf("failed to unmarshal BTPublicationInfo as BTGlobalTreeNodeSummaryInfo: %s", err.Error())
		}
	}

	// check if the discriminator value is 'external-connection'
	if jsonDict["jsonType"] == "external-connection" {
		// try to unmarshal JSON data into BTExternalConnectionInfo
		var qr *BTExternalConnectionInfo
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPublicationInfo = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPublicationInfo = nil
			return fmt.Errorf("failed to unmarshal BTPublicationInfo as BTExternalConnectionInfo: %s", err.Error())
		}
	}

	// check if the discriminator value is 'folder'
	if jsonDict["jsonType"] == "folder" {
		// try to unmarshal JSON data into BTFolderInfo
		var qr *BTFolderInfo
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPublicationInfo = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPublicationInfo = nil
			return fmt.Errorf("failed to unmarshal BTPublicationInfo as BTFolderInfo: %s", err.Error())
		}
	}

	// check if the discriminator value is 'label'
	if jsonDict["jsonType"] == "label" {
		// try to unmarshal JSON data into BTDocumentLabelInfo
		var qr *BTDocumentLabelInfo
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPublicationInfo = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPublicationInfo = nil
			return fmt.Errorf("failed to unmarshal BTPublicationInfo as BTDocumentLabelInfo: %s", err.Error())
		}
	}

	// check if the discriminator value is 'magic'
	if jsonDict["jsonType"] == "magic" {
		// try to unmarshal JSON data into BTGlobalTreeMagicNodeInfo
		var qr *BTGlobalTreeMagicNodeInfo
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPublicationInfo = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPublicationInfo = nil
			return fmt.Errorf("failed to unmarshal BTPublicationInfo as BTGlobalTreeMagicNodeInfo: %s", err.Error())
		}
	}

	// check if the discriminator value is 'project'
	if jsonDict["jsonType"] == "project" {
		// try to unmarshal JSON data into BTProjectInfo
		var qr *BTProjectInfo
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPublicationInfo = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPublicationInfo = nil
			return fmt.Errorf("failed to unmarshal BTPublicationInfo as BTProjectInfo: %s", err.Error())
		}
	}

	// check if the discriminator value is 'resource-owner'
	if jsonDict["jsonType"] == "resource-owner" {
		// try to unmarshal JSON data into BTResourceOwnerInfo
		var qr *BTResourceOwnerInfo
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPublicationInfo = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPublicationInfo = nil
			return fmt.Errorf("failed to unmarshal BTPublicationInfo as BTResourceOwnerInfo: %s", err.Error())
		}
	}

	// check if the discriminator value is 'team-summary'
	if jsonDict["jsonType"] == "team-summary" {
		// try to unmarshal JSON data into BTTeamSummaryInfo
		var qr *BTTeamSummaryInfo
		err = json.Unmarshal(data, &qr)
		if err == nil {
			dst.implBTPublicationInfo = qr
			return nil // data stored, return on the first match
		} else {
			dst.implBTPublicationInfo = nil
			return fmt.Errorf("failed to unmarshal BTPublicationInfo as BTTeamSummaryInfo: %s", err.Error())
		}
	}

	var qtx *base_BTPublicationInfo
	err = json.Unmarshal(data, &qtx)
	if err == nil {
		dst.implBTPublicationInfo = qtx
		return nil // data stored in dst.base_BTPublicationInfo, return on the first match
	} else {
		dst.implBTPublicationInfo = nil
		return fmt.Errorf("failed to unmarshal BTPublicationInfo as base_BTPublicationInfo: %s", err.Error())
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BTPublicationInfo) MarshalJSON() ([]byte, error) {
	ret := src.GetActualInstance()
	if ret == nil {
		return nil, nil // no data in oneOf schemas
	} else {
		return json.Marshal(&ret)
	}
}

// Get the actual instance
func (obj *BTPublicationInfo) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	return obj.implBTPublicationInfo
}

type NullableBTPublicationInfo struct {
	value *BTPublicationInfo
	isSet bool
}

func (v NullableBTPublicationInfo) Get() *BTPublicationInfo {
	return v.value
}

func (v *NullableBTPublicationInfo) Set(val *BTPublicationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTPublicationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTPublicationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTPublicationInfo(val *BTPublicationInfo) *NullableBTPublicationInfo {
	return &NullableBTPublicationInfo{value: val, isSet: true}
}

func (v NullableBTPublicationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTPublicationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

type base_BTPublicationInfo struct {
	CanMove         *bool                   `json:"canMove,omitempty"`
	ConnectionName  *string                 `json:"connectionName,omitempty"`
	ConnectionNames []string                `json:"connectionNames,omitempty"`
	CreatedAt       *JSONTime               `json:"createdAt,omitempty"`
	CreatedBy       *BTUserBasicSummaryInfo `json:"createdBy,omitempty"`
	Description     *string                 `json:"description,omitempty"`
	// URI to fetch complete information of the resource.
	Href *string `json:"href,omitempty"`
	// Id of the resource.
	Id                           *string                 `json:"id,omitempty"`
	IsContainer                  *bool                   `json:"isContainer,omitempty"`
	IsEnterpriseOwned            *bool                   `json:"isEnterpriseOwned,omitempty"`
	IsExternalConnectionResource *bool                   `json:"isExternalConnectionResource,omitempty"`
	IsMutable                    *bool                   `json:"isMutable,omitempty"`
	JsonType                     string                  `json:"jsonType"`
	ModifiedAt                   *JSONTime               `json:"modifiedAt,omitempty"`
	ModifiedBy                   *BTUserBasicSummaryInfo `json:"modifiedBy,omitempty"`
	// Name of the resource.
	Name         *string      `json:"name,omitempty"`
	Owner        *BTOwnerInfo `json:"owner,omitempty"`
	ParentId     *string      `json:"parentId,omitempty"`
	ProjectId    *string      `json:"projectId,omitempty"`
	ResourceType *string      `json:"resourceType,omitempty"`
	TreeHref     *string      `json:"treeHref,omitempty"`
	UnparentHref *string      `json:"unparentHref,omitempty"`
	// URI to visualize the resource in a webclient if applicable.
	ViewRef            *string                 `json:"viewRef,omitempty"`
	DefaultWorkspaceId *string                 `json:"defaultWorkspaceId,omitempty"`
	Items              []BTPublicationInfoItem `json:"items,omitempty"`
	Notes              *string                 `json:"notes,omitempty"`
	Sequence           *string                 `json:"sequence,omitempty"`
}

// Newbase_BTPublicationInfo instantiates a new base_BTPublicationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func Newbase_BTPublicationInfo(jsonType string) *base_BTPublicationInfo {
	this := base_BTPublicationInfo{}
	this.JsonType = jsonType
	return &this
}

// Newbase_BTPublicationInfoWithDefaults instantiates a new base_BTPublicationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func Newbase_BTPublicationInfoWithDefaults() *base_BTPublicationInfo {
	this := base_BTPublicationInfo{}
	return &this
}

// GetCanMove returns the CanMove field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetCanMove() bool {
	if o == nil || o.CanMove == nil {
		var ret bool
		return ret
	}
	return *o.CanMove
}

// GetCanMoveOk returns a tuple with the CanMove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetCanMoveOk() (*bool, bool) {
	if o == nil || o.CanMove == nil {
		return nil, false
	}
	return o.CanMove, true
}

// HasCanMove returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasCanMove() bool {
	if o != nil && o.CanMove != nil {
		return true
	}

	return false
}

// SetCanMove gets a reference to the given bool and assigns it to the CanMove field.
func (o *base_BTPublicationInfo) SetCanMove(v bool) {
	o.CanMove = &v
}

// GetConnectionName returns the ConnectionName field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetConnectionName() string {
	if o == nil || o.ConnectionName == nil {
		var ret string
		return ret
	}
	return *o.ConnectionName
}

// GetConnectionNameOk returns a tuple with the ConnectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetConnectionNameOk() (*string, bool) {
	if o == nil || o.ConnectionName == nil {
		return nil, false
	}
	return o.ConnectionName, true
}

// HasConnectionName returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasConnectionName() bool {
	if o != nil && o.ConnectionName != nil {
		return true
	}

	return false
}

// SetConnectionName gets a reference to the given string and assigns it to the ConnectionName field.
func (o *base_BTPublicationInfo) SetConnectionName(v string) {
	o.ConnectionName = &v
}

// GetConnectionNames returns the ConnectionNames field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetConnectionNames() []string {
	if o == nil || o.ConnectionNames == nil {
		var ret []string
		return ret
	}
	return o.ConnectionNames
}

// GetConnectionNamesOk returns a tuple with the ConnectionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetConnectionNamesOk() ([]string, bool) {
	if o == nil || o.ConnectionNames == nil {
		return nil, false
	}
	return o.ConnectionNames, true
}

// HasConnectionNames returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasConnectionNames() bool {
	if o != nil && o.ConnectionNames != nil {
		return true
	}

	return false
}

// SetConnectionNames gets a reference to the given []string and assigns it to the ConnectionNames field.
func (o *base_BTPublicationInfo) SetConnectionNames(v []string) {
	o.ConnectionNames = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetCreatedAt() JSONTime {
	if o == nil || o.CreatedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetCreatedAtOk() (*JSONTime, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given JSONTime and assigns it to the CreatedAt field.
func (o *base_BTPublicationInfo) SetCreatedAt(v JSONTime) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetCreatedBy() BTUserBasicSummaryInfo {
	if o == nil || o.CreatedBy == nil {
		var ret BTUserBasicSummaryInfo
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetCreatedByOk() (*BTUserBasicSummaryInfo, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given BTUserBasicSummaryInfo and assigns it to the CreatedBy field.
func (o *base_BTPublicationInfo) SetCreatedBy(v BTUserBasicSummaryInfo) {
	o.CreatedBy = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *base_BTPublicationInfo) SetDescription(v string) {
	o.Description = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *base_BTPublicationInfo) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *base_BTPublicationInfo) SetId(v string) {
	o.Id = &v
}

// GetIsContainer returns the IsContainer field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetIsContainer() bool {
	if o == nil || o.IsContainer == nil {
		var ret bool
		return ret
	}
	return *o.IsContainer
}

// GetIsContainerOk returns a tuple with the IsContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetIsContainerOk() (*bool, bool) {
	if o == nil || o.IsContainer == nil {
		return nil, false
	}
	return o.IsContainer, true
}

// HasIsContainer returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasIsContainer() bool {
	if o != nil && o.IsContainer != nil {
		return true
	}

	return false
}

// SetIsContainer gets a reference to the given bool and assigns it to the IsContainer field.
func (o *base_BTPublicationInfo) SetIsContainer(v bool) {
	o.IsContainer = &v
}

// GetIsEnterpriseOwned returns the IsEnterpriseOwned field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetIsEnterpriseOwned() bool {
	if o == nil || o.IsEnterpriseOwned == nil {
		var ret bool
		return ret
	}
	return *o.IsEnterpriseOwned
}

// GetIsEnterpriseOwnedOk returns a tuple with the IsEnterpriseOwned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetIsEnterpriseOwnedOk() (*bool, bool) {
	if o == nil || o.IsEnterpriseOwned == nil {
		return nil, false
	}
	return o.IsEnterpriseOwned, true
}

// HasIsEnterpriseOwned returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasIsEnterpriseOwned() bool {
	if o != nil && o.IsEnterpriseOwned != nil {
		return true
	}

	return false
}

// SetIsEnterpriseOwned gets a reference to the given bool and assigns it to the IsEnterpriseOwned field.
func (o *base_BTPublicationInfo) SetIsEnterpriseOwned(v bool) {
	o.IsEnterpriseOwned = &v
}

// GetIsExternalConnectionResource returns the IsExternalConnectionResource field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetIsExternalConnectionResource() bool {
	if o == nil || o.IsExternalConnectionResource == nil {
		var ret bool
		return ret
	}
	return *o.IsExternalConnectionResource
}

// GetIsExternalConnectionResourceOk returns a tuple with the IsExternalConnectionResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetIsExternalConnectionResourceOk() (*bool, bool) {
	if o == nil || o.IsExternalConnectionResource == nil {
		return nil, false
	}
	return o.IsExternalConnectionResource, true
}

// HasIsExternalConnectionResource returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasIsExternalConnectionResource() bool {
	if o != nil && o.IsExternalConnectionResource != nil {
		return true
	}

	return false
}

// SetIsExternalConnectionResource gets a reference to the given bool and assigns it to the IsExternalConnectionResource field.
func (o *base_BTPublicationInfo) SetIsExternalConnectionResource(v bool) {
	o.IsExternalConnectionResource = &v
}

// GetIsMutable returns the IsMutable field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetIsMutable() bool {
	if o == nil || o.IsMutable == nil {
		var ret bool
		return ret
	}
	return *o.IsMutable
}

// GetIsMutableOk returns a tuple with the IsMutable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetIsMutableOk() (*bool, bool) {
	if o == nil || o.IsMutable == nil {
		return nil, false
	}
	return o.IsMutable, true
}

// HasIsMutable returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasIsMutable() bool {
	if o != nil && o.IsMutable != nil {
		return true
	}

	return false
}

// SetIsMutable gets a reference to the given bool and assigns it to the IsMutable field.
func (o *base_BTPublicationInfo) SetIsMutable(v bool) {
	o.IsMutable = &v
}

// GetJsonType returns the JsonType field value
func (o *base_BTPublicationInfo) GetJsonType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JsonType
}

// GetJsonTypeOk returns a tuple with the JsonType field value
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetJsonTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JsonType, true
}

// SetJsonType sets field value
func (o *base_BTPublicationInfo) SetJsonType(v string) {
	o.JsonType = v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetModifiedAt() JSONTime {
	if o == nil || o.ModifiedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetModifiedAtOk() (*JSONTime, bool) {
	if o == nil || o.ModifiedAt == nil {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasModifiedAt() bool {
	if o != nil && o.ModifiedAt != nil {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given JSONTime and assigns it to the ModifiedAt field.
func (o *base_BTPublicationInfo) SetModifiedAt(v JSONTime) {
	o.ModifiedAt = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetModifiedBy() BTUserBasicSummaryInfo {
	if o == nil || o.ModifiedBy == nil {
		var ret BTUserBasicSummaryInfo
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetModifiedByOk() (*BTUserBasicSummaryInfo, bool) {
	if o == nil || o.ModifiedBy == nil {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasModifiedBy() bool {
	if o != nil && o.ModifiedBy != nil {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given BTUserBasicSummaryInfo and assigns it to the ModifiedBy field.
func (o *base_BTPublicationInfo) SetModifiedBy(v BTUserBasicSummaryInfo) {
	o.ModifiedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *base_BTPublicationInfo) SetName(v string) {
	o.Name = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetOwner() BTOwnerInfo {
	if o == nil || o.Owner == nil {
		var ret BTOwnerInfo
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetOwnerOk() (*BTOwnerInfo, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given BTOwnerInfo and assigns it to the Owner field.
func (o *base_BTPublicationInfo) SetOwner(v BTOwnerInfo) {
	o.Owner = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetParentIdOk() (*string, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *base_BTPublicationInfo) SetParentId(v string) {
	o.ParentId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *base_BTPublicationInfo) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetResourceType() string {
	if o == nil || o.ResourceType == nil {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetResourceTypeOk() (*string, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *base_BTPublicationInfo) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetTreeHref returns the TreeHref field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetTreeHref() string {
	if o == nil || o.TreeHref == nil {
		var ret string
		return ret
	}
	return *o.TreeHref
}

// GetTreeHrefOk returns a tuple with the TreeHref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetTreeHrefOk() (*string, bool) {
	if o == nil || o.TreeHref == nil {
		return nil, false
	}
	return o.TreeHref, true
}

// HasTreeHref returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasTreeHref() bool {
	if o != nil && o.TreeHref != nil {
		return true
	}

	return false
}

// SetTreeHref gets a reference to the given string and assigns it to the TreeHref field.
func (o *base_BTPublicationInfo) SetTreeHref(v string) {
	o.TreeHref = &v
}

// GetUnparentHref returns the UnparentHref field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetUnparentHref() string {
	if o == nil || o.UnparentHref == nil {
		var ret string
		return ret
	}
	return *o.UnparentHref
}

// GetUnparentHrefOk returns a tuple with the UnparentHref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetUnparentHrefOk() (*string, bool) {
	if o == nil || o.UnparentHref == nil {
		return nil, false
	}
	return o.UnparentHref, true
}

// HasUnparentHref returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasUnparentHref() bool {
	if o != nil && o.UnparentHref != nil {
		return true
	}

	return false
}

// SetUnparentHref gets a reference to the given string and assigns it to the UnparentHref field.
func (o *base_BTPublicationInfo) SetUnparentHref(v string) {
	o.UnparentHref = &v
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetViewRef() string {
	if o == nil || o.ViewRef == nil {
		var ret string
		return ret
	}
	return *o.ViewRef
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetViewRefOk() (*string, bool) {
	if o == nil || o.ViewRef == nil {
		return nil, false
	}
	return o.ViewRef, true
}

// HasViewRef returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasViewRef() bool {
	if o != nil && o.ViewRef != nil {
		return true
	}

	return false
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *base_BTPublicationInfo) SetViewRef(v string) {
	o.ViewRef = &v
}

// GetDefaultWorkspaceId returns the DefaultWorkspaceId field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetDefaultWorkspaceId() string {
	if o == nil || o.DefaultWorkspaceId == nil {
		var ret string
		return ret
	}
	return *o.DefaultWorkspaceId
}

// GetDefaultWorkspaceIdOk returns a tuple with the DefaultWorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetDefaultWorkspaceIdOk() (*string, bool) {
	if o == nil || o.DefaultWorkspaceId == nil {
		return nil, false
	}
	return o.DefaultWorkspaceId, true
}

// HasDefaultWorkspaceId returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasDefaultWorkspaceId() bool {
	if o != nil && o.DefaultWorkspaceId != nil {
		return true
	}

	return false
}

// SetDefaultWorkspaceId gets a reference to the given string and assigns it to the DefaultWorkspaceId field.
func (o *base_BTPublicationInfo) SetDefaultWorkspaceId(v string) {
	o.DefaultWorkspaceId = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetItems() []BTPublicationInfoItem {
	if o == nil || o.Items == nil {
		var ret []BTPublicationInfoItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetItemsOk() ([]BTPublicationInfoItem, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []BTPublicationInfoItem and assigns it to the Items field.
func (o *base_BTPublicationInfo) SetItems(v []BTPublicationInfoItem) {
	o.Items = v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetNotes() string {
	if o == nil || o.Notes == nil {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetNotesOk() (*string, bool) {
	if o == nil || o.Notes == nil {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *base_BTPublicationInfo) SetNotes(v string) {
	o.Notes = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *base_BTPublicationInfo) GetSequence() string {
	if o == nil || o.Sequence == nil {
		var ret string
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *base_BTPublicationInfo) GetSequenceOk() (*string, bool) {
	if o == nil || o.Sequence == nil {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *base_BTPublicationInfo) HasSequence() bool {
	if o != nil && o.Sequence != nil {
		return true
	}

	return false
}

// SetSequence gets a reference to the given string and assigns it to the Sequence field.
func (o *base_BTPublicationInfo) SetSequence(v string) {
	o.Sequence = &v
}

func (o base_BTPublicationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanMove != nil {
		toSerialize["canMove"] = o.CanMove
	}
	if o.ConnectionName != nil {
		toSerialize["connectionName"] = o.ConnectionName
	}
	if o.ConnectionNames != nil {
		toSerialize["connectionNames"] = o.ConnectionNames
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsContainer != nil {
		toSerialize["isContainer"] = o.IsContainer
	}
	if o.IsEnterpriseOwned != nil {
		toSerialize["isEnterpriseOwned"] = o.IsEnterpriseOwned
	}
	if o.IsExternalConnectionResource != nil {
		toSerialize["isExternalConnectionResource"] = o.IsExternalConnectionResource
	}
	if o.IsMutable != nil {
		toSerialize["isMutable"] = o.IsMutable
	}
	if true {
		toSerialize["jsonType"] = o.JsonType
	}
	if o.ModifiedAt != nil {
		toSerialize["modifiedAt"] = o.ModifiedAt
	}
	if o.ModifiedBy != nil {
		toSerialize["modifiedBy"] = o.ModifiedBy
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.ParentId != nil {
		toSerialize["parentId"] = o.ParentId
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.ResourceType != nil {
		toSerialize["resourceType"] = o.ResourceType
	}
	if o.TreeHref != nil {
		toSerialize["treeHref"] = o.TreeHref
	}
	if o.UnparentHref != nil {
		toSerialize["unparentHref"] = o.UnparentHref
	}
	if o.ViewRef != nil {
		toSerialize["viewRef"] = o.ViewRef
	}
	if o.DefaultWorkspaceId != nil {
		toSerialize["defaultWorkspaceId"] = o.DefaultWorkspaceId
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Notes != nil {
		toSerialize["notes"] = o.Notes
	}
	if o.Sequence != nil {
		toSerialize["sequence"] = o.Sequence
	}
	return json.Marshal(toSerialize)
}
