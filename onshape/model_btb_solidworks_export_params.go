/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTBSolidworksExportParams Options for exporting elements to Solidworks.
type BTBSolidworksExportParams struct {
	AdvancedParams      *BTBExportAdvancedParams `json:"advancedParams,omitempty"`
	CloudStorageOptions *BTBCloudStorageOptions  `json:"cloudStorageOptions,omitempty"`
	// The name of the exported file.
	DestinationName    *string                `json:"destinationName,omitempty"`
	EmailExportOptions *BTBEmailExportOptions `json:"emailExportOptions,omitempty"`
	// Whether or not to exclude hidden parts from export.
	ExcludeHiddenEntities *bool `json:"excludeHiddenEntities,omitempty"`
	// Whether parts should be exported as a group or individually in a .zip file.
	Grouping *bool `json:"grouping,omitempty"`
	// Whether topology ids should be exported as parasolid attributes.
	IncludeExportIds *bool `json:"includeExportIds,omitempty"`
	// Rotate model from Z-axis-up orientation to Y-axis-up.
	IsYAxisUp *bool `json:"isYAxisUp,omitempty"`
	// Send notification to the user client.
	NotifyUser *bool `json:"notifyUser,omitempty"`
	// Create a blob with exported file in the source document.
	StoreInDocument *bool `json:"storeInDocument,omitempty"`
	// Automatically download a translated file.
	TriggerAutoDownload *bool `json:"triggerAutoDownload,omitempty"`
}

// NewBTBSolidworksExportParams instantiates a new BTBSolidworksExportParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTBSolidworksExportParams() *BTBSolidworksExportParams {
	this := BTBSolidworksExportParams{}
	var destinationName string = "Untitled"
	this.DestinationName = &destinationName
	var excludeHiddenEntities bool = false
	this.ExcludeHiddenEntities = &excludeHiddenEntities
	var grouping bool = true
	this.Grouping = &grouping
	var includeExportIds bool = false
	this.IncludeExportIds = &includeExportIds
	var isYAxisUp bool = false
	this.IsYAxisUp = &isYAxisUp
	var notifyUser bool = true
	this.NotifyUser = &notifyUser
	var storeInDocument bool = true
	this.StoreInDocument = &storeInDocument
	var triggerAutoDownload bool = false
	this.TriggerAutoDownload = &triggerAutoDownload
	return &this
}

// NewBTBSolidworksExportParamsWithDefaults instantiates a new BTBSolidworksExportParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTBSolidworksExportParamsWithDefaults() *BTBSolidworksExportParams {
	this := BTBSolidworksExportParams{}
	var destinationName string = "Untitled"
	this.DestinationName = &destinationName
	var excludeHiddenEntities bool = false
	this.ExcludeHiddenEntities = &excludeHiddenEntities
	var grouping bool = true
	this.Grouping = &grouping
	var includeExportIds bool = false
	this.IncludeExportIds = &includeExportIds
	var isYAxisUp bool = false
	this.IsYAxisUp = &isYAxisUp
	var notifyUser bool = true
	this.NotifyUser = &notifyUser
	var storeInDocument bool = true
	this.StoreInDocument = &storeInDocument
	var triggerAutoDownload bool = false
	this.TriggerAutoDownload = &triggerAutoDownload
	return &this
}

// GetAdvancedParams returns the AdvancedParams field value if set, zero value otherwise.
func (o *BTBSolidworksExportParams) GetAdvancedParams() BTBExportAdvancedParams {
	if o == nil || o.AdvancedParams == nil {
		var ret BTBExportAdvancedParams
		return ret
	}
	return *o.AdvancedParams
}

// GetAdvancedParamsOk returns a tuple with the AdvancedParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBSolidworksExportParams) GetAdvancedParamsOk() (*BTBExportAdvancedParams, bool) {
	if o == nil || o.AdvancedParams == nil {
		return nil, false
	}
	return o.AdvancedParams, true
}

// HasAdvancedParams returns a boolean if a field has been set.
func (o *BTBSolidworksExportParams) HasAdvancedParams() bool {
	if o != nil && o.AdvancedParams != nil {
		return true
	}

	return false
}

// SetAdvancedParams gets a reference to the given BTBExportAdvancedParams and assigns it to the AdvancedParams field.
func (o *BTBSolidworksExportParams) SetAdvancedParams(v BTBExportAdvancedParams) {
	o.AdvancedParams = &v
}

// GetCloudStorageOptions returns the CloudStorageOptions field value if set, zero value otherwise.
func (o *BTBSolidworksExportParams) GetCloudStorageOptions() BTBCloudStorageOptions {
	if o == nil || o.CloudStorageOptions == nil {
		var ret BTBCloudStorageOptions
		return ret
	}
	return *o.CloudStorageOptions
}

// GetCloudStorageOptionsOk returns a tuple with the CloudStorageOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBSolidworksExportParams) GetCloudStorageOptionsOk() (*BTBCloudStorageOptions, bool) {
	if o == nil || o.CloudStorageOptions == nil {
		return nil, false
	}
	return o.CloudStorageOptions, true
}

// HasCloudStorageOptions returns a boolean if a field has been set.
func (o *BTBSolidworksExportParams) HasCloudStorageOptions() bool {
	if o != nil && o.CloudStorageOptions != nil {
		return true
	}

	return false
}

// SetCloudStorageOptions gets a reference to the given BTBCloudStorageOptions and assigns it to the CloudStorageOptions field.
func (o *BTBSolidworksExportParams) SetCloudStorageOptions(v BTBCloudStorageOptions) {
	o.CloudStorageOptions = &v
}

// GetDestinationName returns the DestinationName field value if set, zero value otherwise.
func (o *BTBSolidworksExportParams) GetDestinationName() string {
	if o == nil || o.DestinationName == nil {
		var ret string
		return ret
	}
	return *o.DestinationName
}

// GetDestinationNameOk returns a tuple with the DestinationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBSolidworksExportParams) GetDestinationNameOk() (*string, bool) {
	if o == nil || o.DestinationName == nil {
		return nil, false
	}
	return o.DestinationName, true
}

// HasDestinationName returns a boolean if a field has been set.
func (o *BTBSolidworksExportParams) HasDestinationName() bool {
	if o != nil && o.DestinationName != nil {
		return true
	}

	return false
}

// SetDestinationName gets a reference to the given string and assigns it to the DestinationName field.
func (o *BTBSolidworksExportParams) SetDestinationName(v string) {
	o.DestinationName = &v
}

// GetEmailExportOptions returns the EmailExportOptions field value if set, zero value otherwise.
func (o *BTBSolidworksExportParams) GetEmailExportOptions() BTBEmailExportOptions {
	if o == nil || o.EmailExportOptions == nil {
		var ret BTBEmailExportOptions
		return ret
	}
	return *o.EmailExportOptions
}

// GetEmailExportOptionsOk returns a tuple with the EmailExportOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBSolidworksExportParams) GetEmailExportOptionsOk() (*BTBEmailExportOptions, bool) {
	if o == nil || o.EmailExportOptions == nil {
		return nil, false
	}
	return o.EmailExportOptions, true
}

// HasEmailExportOptions returns a boolean if a field has been set.
func (o *BTBSolidworksExportParams) HasEmailExportOptions() bool {
	if o != nil && o.EmailExportOptions != nil {
		return true
	}

	return false
}

// SetEmailExportOptions gets a reference to the given BTBEmailExportOptions and assigns it to the EmailExportOptions field.
func (o *BTBSolidworksExportParams) SetEmailExportOptions(v BTBEmailExportOptions) {
	o.EmailExportOptions = &v
}

// GetExcludeHiddenEntities returns the ExcludeHiddenEntities field value if set, zero value otherwise.
func (o *BTBSolidworksExportParams) GetExcludeHiddenEntities() bool {
	if o == nil || o.ExcludeHiddenEntities == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeHiddenEntities
}

// GetExcludeHiddenEntitiesOk returns a tuple with the ExcludeHiddenEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBSolidworksExportParams) GetExcludeHiddenEntitiesOk() (*bool, bool) {
	if o == nil || o.ExcludeHiddenEntities == nil {
		return nil, false
	}
	return o.ExcludeHiddenEntities, true
}

// HasExcludeHiddenEntities returns a boolean if a field has been set.
func (o *BTBSolidworksExportParams) HasExcludeHiddenEntities() bool {
	if o != nil && o.ExcludeHiddenEntities != nil {
		return true
	}

	return false
}

// SetExcludeHiddenEntities gets a reference to the given bool and assigns it to the ExcludeHiddenEntities field.
func (o *BTBSolidworksExportParams) SetExcludeHiddenEntities(v bool) {
	o.ExcludeHiddenEntities = &v
}

// GetGrouping returns the Grouping field value if set, zero value otherwise.
func (o *BTBSolidworksExportParams) GetGrouping() bool {
	if o == nil || o.Grouping == nil {
		var ret bool
		return ret
	}
	return *o.Grouping
}

// GetGroupingOk returns a tuple with the Grouping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBSolidworksExportParams) GetGroupingOk() (*bool, bool) {
	if o == nil || o.Grouping == nil {
		return nil, false
	}
	return o.Grouping, true
}

// HasGrouping returns a boolean if a field has been set.
func (o *BTBSolidworksExportParams) HasGrouping() bool {
	if o != nil && o.Grouping != nil {
		return true
	}

	return false
}

// SetGrouping gets a reference to the given bool and assigns it to the Grouping field.
func (o *BTBSolidworksExportParams) SetGrouping(v bool) {
	o.Grouping = &v
}

// GetIncludeExportIds returns the IncludeExportIds field value if set, zero value otherwise.
func (o *BTBSolidworksExportParams) GetIncludeExportIds() bool {
	if o == nil || o.IncludeExportIds == nil {
		var ret bool
		return ret
	}
	return *o.IncludeExportIds
}

// GetIncludeExportIdsOk returns a tuple with the IncludeExportIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBSolidworksExportParams) GetIncludeExportIdsOk() (*bool, bool) {
	if o == nil || o.IncludeExportIds == nil {
		return nil, false
	}
	return o.IncludeExportIds, true
}

// HasIncludeExportIds returns a boolean if a field has been set.
func (o *BTBSolidworksExportParams) HasIncludeExportIds() bool {
	if o != nil && o.IncludeExportIds != nil {
		return true
	}

	return false
}

// SetIncludeExportIds gets a reference to the given bool and assigns it to the IncludeExportIds field.
func (o *BTBSolidworksExportParams) SetIncludeExportIds(v bool) {
	o.IncludeExportIds = &v
}

// GetIsYAxisUp returns the IsYAxisUp field value if set, zero value otherwise.
func (o *BTBSolidworksExportParams) GetIsYAxisUp() bool {
	if o == nil || o.IsYAxisUp == nil {
		var ret bool
		return ret
	}
	return *o.IsYAxisUp
}

// GetIsYAxisUpOk returns a tuple with the IsYAxisUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBSolidworksExportParams) GetIsYAxisUpOk() (*bool, bool) {
	if o == nil || o.IsYAxisUp == nil {
		return nil, false
	}
	return o.IsYAxisUp, true
}

// HasIsYAxisUp returns a boolean if a field has been set.
func (o *BTBSolidworksExportParams) HasIsYAxisUp() bool {
	if o != nil && o.IsYAxisUp != nil {
		return true
	}

	return false
}

// SetIsYAxisUp gets a reference to the given bool and assigns it to the IsYAxisUp field.
func (o *BTBSolidworksExportParams) SetIsYAxisUp(v bool) {
	o.IsYAxisUp = &v
}

// GetNotifyUser returns the NotifyUser field value if set, zero value otherwise.
func (o *BTBSolidworksExportParams) GetNotifyUser() bool {
	if o == nil || o.NotifyUser == nil {
		var ret bool
		return ret
	}
	return *o.NotifyUser
}

// GetNotifyUserOk returns a tuple with the NotifyUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBSolidworksExportParams) GetNotifyUserOk() (*bool, bool) {
	if o == nil || o.NotifyUser == nil {
		return nil, false
	}
	return o.NotifyUser, true
}

// HasNotifyUser returns a boolean if a field has been set.
func (o *BTBSolidworksExportParams) HasNotifyUser() bool {
	if o != nil && o.NotifyUser != nil {
		return true
	}

	return false
}

// SetNotifyUser gets a reference to the given bool and assigns it to the NotifyUser field.
func (o *BTBSolidworksExportParams) SetNotifyUser(v bool) {
	o.NotifyUser = &v
}

// GetStoreInDocument returns the StoreInDocument field value if set, zero value otherwise.
func (o *BTBSolidworksExportParams) GetStoreInDocument() bool {
	if o == nil || o.StoreInDocument == nil {
		var ret bool
		return ret
	}
	return *o.StoreInDocument
}

// GetStoreInDocumentOk returns a tuple with the StoreInDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBSolidworksExportParams) GetStoreInDocumentOk() (*bool, bool) {
	if o == nil || o.StoreInDocument == nil {
		return nil, false
	}
	return o.StoreInDocument, true
}

// HasStoreInDocument returns a boolean if a field has been set.
func (o *BTBSolidworksExportParams) HasStoreInDocument() bool {
	if o != nil && o.StoreInDocument != nil {
		return true
	}

	return false
}

// SetStoreInDocument gets a reference to the given bool and assigns it to the StoreInDocument field.
func (o *BTBSolidworksExportParams) SetStoreInDocument(v bool) {
	o.StoreInDocument = &v
}

// GetTriggerAutoDownload returns the TriggerAutoDownload field value if set, zero value otherwise.
func (o *BTBSolidworksExportParams) GetTriggerAutoDownload() bool {
	if o == nil || o.TriggerAutoDownload == nil {
		var ret bool
		return ret
	}
	return *o.TriggerAutoDownload
}

// GetTriggerAutoDownloadOk returns a tuple with the TriggerAutoDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBSolidworksExportParams) GetTriggerAutoDownloadOk() (*bool, bool) {
	if o == nil || o.TriggerAutoDownload == nil {
		return nil, false
	}
	return o.TriggerAutoDownload, true
}

// HasTriggerAutoDownload returns a boolean if a field has been set.
func (o *BTBSolidworksExportParams) HasTriggerAutoDownload() bool {
	if o != nil && o.TriggerAutoDownload != nil {
		return true
	}

	return false
}

// SetTriggerAutoDownload gets a reference to the given bool and assigns it to the TriggerAutoDownload field.
func (o *BTBSolidworksExportParams) SetTriggerAutoDownload(v bool) {
	o.TriggerAutoDownload = &v
}

func (o BTBSolidworksExportParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdvancedParams != nil {
		toSerialize["advancedParams"] = o.AdvancedParams
	}
	if o.CloudStorageOptions != nil {
		toSerialize["cloudStorageOptions"] = o.CloudStorageOptions
	}
	if o.DestinationName != nil {
		toSerialize["destinationName"] = o.DestinationName
	}
	if o.EmailExportOptions != nil {
		toSerialize["emailExportOptions"] = o.EmailExportOptions
	}
	if o.ExcludeHiddenEntities != nil {
		toSerialize["excludeHiddenEntities"] = o.ExcludeHiddenEntities
	}
	if o.Grouping != nil {
		toSerialize["grouping"] = o.Grouping
	}
	if o.IncludeExportIds != nil {
		toSerialize["includeExportIds"] = o.IncludeExportIds
	}
	if o.IsYAxisUp != nil {
		toSerialize["isYAxisUp"] = o.IsYAxisUp
	}
	if o.NotifyUser != nil {
		toSerialize["notifyUser"] = o.NotifyUser
	}
	if o.StoreInDocument != nil {
		toSerialize["storeInDocument"] = o.StoreInDocument
	}
	if o.TriggerAutoDownload != nil {
		toSerialize["triggerAutoDownload"] = o.TriggerAutoDownload
	}
	return json.Marshal(toSerialize)
}

type NullableBTBSolidworksExportParams struct {
	value *BTBSolidworksExportParams
	isSet bool
}

func (v NullableBTBSolidworksExportParams) Get() *BTBSolidworksExportParams {
	return v.value
}

func (v *NullableBTBSolidworksExportParams) Set(val *BTBSolidworksExportParams) {
	v.value = val
	v.isSet = true
}

func (v NullableBTBSolidworksExportParams) IsSet() bool {
	return v.isSet
}

func (v *NullableBTBSolidworksExportParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTBSolidworksExportParams(val *BTBSolidworksExportParams) *NullableBTBSolidworksExportParams {
	return &NullableBTBSolidworksExportParams{value: val, isSet: true}
}

func (v NullableBTBSolidworksExportParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTBSolidworksExportParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
