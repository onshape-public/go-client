/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTBrokenOutEndCondition1107 struct for BTBrokenOutEndCondition1107
type BTBrokenOutEndCondition1107 struct {
	// Type of JSON object.
	BtType                  *string        `json:"btType,omitempty"`
	HasOffset               *bool          `json:"hasOffset,omitempty"`
	HasUptoPoint_           *bool          `json:"hasUptoPoint,omitempty"`
	OffsetDistance          *float64       `json:"offsetDistance,omitempty"`
	OffsetOppositeDirection *bool          `json:"offsetOppositeDirection,omitempty"`
	UptoPoint               []float64      `json:"uptoPoint,omitempty"`
	UptoPoint3d             *BTVector3d389 `json:"uptoPoint3d,omitempty"`
}

// NewBTBrokenOutEndCondition1107 instantiates a new BTBrokenOutEndCondition1107 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTBrokenOutEndCondition1107() *BTBrokenOutEndCondition1107 {
	this := BTBrokenOutEndCondition1107{}
	return &this
}

// NewBTBrokenOutEndCondition1107WithDefaults instantiates a new BTBrokenOutEndCondition1107 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTBrokenOutEndCondition1107WithDefaults() *BTBrokenOutEndCondition1107 {
	this := BTBrokenOutEndCondition1107{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTBrokenOutEndCondition1107) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBrokenOutEndCondition1107) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTBrokenOutEndCondition1107) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTBrokenOutEndCondition1107) SetBtType(v string) {
	o.BtType = &v
}

// GetHasOffset returns the HasOffset field value if set, zero value otherwise.
func (o *BTBrokenOutEndCondition1107) GetHasOffset() bool {
	if o == nil || o.HasOffset == nil {
		var ret bool
		return ret
	}
	return *o.HasOffset
}

// GetHasOffsetOk returns a tuple with the HasOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBrokenOutEndCondition1107) GetHasOffsetOk() (*bool, bool) {
	if o == nil || o.HasOffset == nil {
		return nil, false
	}
	return o.HasOffset, true
}

// HasHasOffset returns a boolean if a field has been set.
func (o *BTBrokenOutEndCondition1107) HasHasOffset() bool {
	if o != nil && o.HasOffset != nil {
		return true
	}

	return false
}

// SetHasOffset gets a reference to the given bool and assigns it to the HasOffset field.
func (o *BTBrokenOutEndCondition1107) SetHasOffset(v bool) {
	o.HasOffset = &v
}

// GetHasUptoPoint_ returns the HasUptoPoint_ field value if set, zero value otherwise.
func (o *BTBrokenOutEndCondition1107) GetHasUptoPoint_() bool {
	if o == nil || o.HasUptoPoint_ == nil {
		var ret bool
		return ret
	}
	return *o.HasUptoPoint_
}

// GetHasUptoPoint_Ok returns a tuple with the HasUptoPoint_ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBrokenOutEndCondition1107) GetHasUptoPoint_Ok() (*bool, bool) {
	if o == nil || o.HasUptoPoint_ == nil {
		return nil, false
	}
	return o.HasUptoPoint_, true
}

// HasHasUptoPoint_ returns a boolean if a field has been set.
func (o *BTBrokenOutEndCondition1107) HasHasUptoPoint_() bool {
	if o != nil && o.HasUptoPoint_ != nil {
		return true
	}

	return false
}

// SetHasUptoPoint_ gets a reference to the given bool and assigns it to the HasUptoPoint_ field.
func (o *BTBrokenOutEndCondition1107) SetHasUptoPoint_(v bool) {
	o.HasUptoPoint_ = &v
}

// GetOffsetDistance returns the OffsetDistance field value if set, zero value otherwise.
func (o *BTBrokenOutEndCondition1107) GetOffsetDistance() float64 {
	if o == nil || o.OffsetDistance == nil {
		var ret float64
		return ret
	}
	return *o.OffsetDistance
}

// GetOffsetDistanceOk returns a tuple with the OffsetDistance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBrokenOutEndCondition1107) GetOffsetDistanceOk() (*float64, bool) {
	if o == nil || o.OffsetDistance == nil {
		return nil, false
	}
	return o.OffsetDistance, true
}

// HasOffsetDistance returns a boolean if a field has been set.
func (o *BTBrokenOutEndCondition1107) HasOffsetDistance() bool {
	if o != nil && o.OffsetDistance != nil {
		return true
	}

	return false
}

// SetOffsetDistance gets a reference to the given float64 and assigns it to the OffsetDistance field.
func (o *BTBrokenOutEndCondition1107) SetOffsetDistance(v float64) {
	o.OffsetDistance = &v
}

// GetOffsetOppositeDirection returns the OffsetOppositeDirection field value if set, zero value otherwise.
func (o *BTBrokenOutEndCondition1107) GetOffsetOppositeDirection() bool {
	if o == nil || o.OffsetOppositeDirection == nil {
		var ret bool
		return ret
	}
	return *o.OffsetOppositeDirection
}

// GetOffsetOppositeDirectionOk returns a tuple with the OffsetOppositeDirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBrokenOutEndCondition1107) GetOffsetOppositeDirectionOk() (*bool, bool) {
	if o == nil || o.OffsetOppositeDirection == nil {
		return nil, false
	}
	return o.OffsetOppositeDirection, true
}

// HasOffsetOppositeDirection returns a boolean if a field has been set.
func (o *BTBrokenOutEndCondition1107) HasOffsetOppositeDirection() bool {
	if o != nil && o.OffsetOppositeDirection != nil {
		return true
	}

	return false
}

// SetOffsetOppositeDirection gets a reference to the given bool and assigns it to the OffsetOppositeDirection field.
func (o *BTBrokenOutEndCondition1107) SetOffsetOppositeDirection(v bool) {
	o.OffsetOppositeDirection = &v
}

// GetUptoPoint returns the UptoPoint field value if set, zero value otherwise.
func (o *BTBrokenOutEndCondition1107) GetUptoPoint() []float64 {
	if o == nil || o.UptoPoint == nil {
		var ret []float64
		return ret
	}
	return o.UptoPoint
}

// GetUptoPointOk returns a tuple with the UptoPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBrokenOutEndCondition1107) GetUptoPointOk() ([]float64, bool) {
	if o == nil || o.UptoPoint == nil {
		return nil, false
	}
	return o.UptoPoint, true
}

// HasUptoPoint returns a boolean if a field has been set.
func (o *BTBrokenOutEndCondition1107) HasUptoPoint() bool {
	if o != nil && o.UptoPoint != nil {
		return true
	}

	return false
}

// SetUptoPoint gets a reference to the given []float64 and assigns it to the UptoPoint field.
func (o *BTBrokenOutEndCondition1107) SetUptoPoint(v []float64) {
	o.UptoPoint = v
}

// GetUptoPoint3d returns the UptoPoint3d field value if set, zero value otherwise.
func (o *BTBrokenOutEndCondition1107) GetUptoPoint3d() BTVector3d389 {
	if o == nil || o.UptoPoint3d == nil {
		var ret BTVector3d389
		return ret
	}
	return *o.UptoPoint3d
}

// GetUptoPoint3dOk returns a tuple with the UptoPoint3d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBrokenOutEndCondition1107) GetUptoPoint3dOk() (*BTVector3d389, bool) {
	if o == nil || o.UptoPoint3d == nil {
		return nil, false
	}
	return o.UptoPoint3d, true
}

// HasUptoPoint3d returns a boolean if a field has been set.
func (o *BTBrokenOutEndCondition1107) HasUptoPoint3d() bool {
	if o != nil && o.UptoPoint3d != nil {
		return true
	}

	return false
}

// SetUptoPoint3d gets a reference to the given BTVector3d389 and assigns it to the UptoPoint3d field.
func (o *BTBrokenOutEndCondition1107) SetUptoPoint3d(v BTVector3d389) {
	o.UptoPoint3d = &v
}

func (o BTBrokenOutEndCondition1107) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.HasOffset != nil {
		toSerialize["hasOffset"] = o.HasOffset
	}
	if o.HasUptoPoint_ != nil {
		toSerialize["hasUptoPoint"] = o.HasUptoPoint_
	}
	if o.OffsetDistance != nil {
		toSerialize["offsetDistance"] = o.OffsetDistance
	}
	if o.OffsetOppositeDirection != nil {
		toSerialize["offsetOppositeDirection"] = o.OffsetOppositeDirection
	}
	if o.UptoPoint != nil {
		toSerialize["uptoPoint"] = o.UptoPoint
	}
	if o.UptoPoint3d != nil {
		toSerialize["uptoPoint3d"] = o.UptoPoint3d
	}
	return json.Marshal(toSerialize)
}

type NullableBTBrokenOutEndCondition1107 struct {
	value *BTBrokenOutEndCondition1107
	isSet bool
}

func (v NullableBTBrokenOutEndCondition1107) Get() *BTBrokenOutEndCondition1107 {
	return v.value
}

func (v *NullableBTBrokenOutEndCondition1107) Set(val *BTBrokenOutEndCondition1107) {
	v.value = val
	v.isSet = true
}

func (v NullableBTBrokenOutEndCondition1107) IsSet() bool {
	return v.isSet
}

func (v *NullableBTBrokenOutEndCondition1107) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTBrokenOutEndCondition1107(val *BTBrokenOutEndCondition1107) *NullableBTBrokenOutEndCondition1107 {
	return &NullableBTBrokenOutEndCondition1107{value: val, isSet: true}
}

func (v NullableBTBrokenOutEndCondition1107) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTBrokenOutEndCondition1107) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
