/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTDrawingParams JSON schema for creating or updating a drawing.
type BTDrawingParams struct {
	// Set to `true` to include a border in the drawing.
	Border *bool `json:"border,omitempty"`
	// Set to `true` to compute and display virtual edges (curves drawn where parts intersect). Leave as `false` to improve performance.
	ComputeIntersection *bool `json:"computeIntersection,omitempty"`
	// `PERIOD` | `COMMA`
	DecimalSeparator *string `json:"decimalSeparator,omitempty"`
	// Apply this display state's properties to the drawing.
	DisplayStateId *string `json:"displayStateId,omitempty"`
	// The document in which to create the drawing. If used, this value must match the document ID (`did`) value provided in the URL.
	DocumentId *string `json:"documentId,omitempty"`
	// Create a drawing of a part or assembly from this microversion.
	DocumentMicroversionId *string `json:"documentMicroversionId,omitempty"`
	// Provide a name for the drawing.
	DrawingName *string `json:"drawingName,omitempty"`
	// Apply this configuration from the source element to the drawing.
	ElementConfiguration *string `json:"elementConfiguration,omitempty"`
	// The id of the element in which to perform the operation.
	ElementId *string `json:"elementId,omitempty"`
	// The id of the element microversion in which to perform the operation.
	ElementMicroversionId *string `json:"elementMicroversionId,omitempty"`
	// Apply this exploded view to the drawing.
	ExplosionId *string `json:"explosionId,omitempty"`
	// Create a drawing of an element from this external document.
	ExternalDocumentId *string `json:"externalDocumentId,omitempty"`
	// Create a drawing of an element from this external document version.
	ExternalDocumentVersionId *string                    `json:"externalDocumentVersionId,omitempty"`
	HiddenLines               *BTDrawingHiddenLineOption `json:"hiddenLines,omitempty"`
	// Set to `true` to include surfaces in the drawing.
	IncludeSurfaces *bool `json:"includeSurfaces,omitempty"`
	// Set to `true` to include wires in the drawing.
	IncludeWires *bool `json:"includeWires,omitempty"`
	// Set to `true` if creating a drawing from a flattened part.
	IsFlattenedPart *bool `json:"isFlattenedPart,omitempty"`
	// Set to `true` if creating a drawing of a sketch.
	IsSketchOnly *bool `json:"isSketchOnly,omitempty"`
	// Set to `true` if creating a drawing from a surface.
	IsSurface *bool `json:"isSurface,omitempty"`
	// Set the language for the drawing. Accepts any ISO 639-1 standard language code.
	Language *string                  `json:"language,omitempty"`
	Location *BTElementLocationParams `json:"location,omitempty"`
	// The type of model to include in the drawing: `partstudio` | `assembly`
	ModelType *string `json:"modelType,omitempty"`
	// Apply this named view to the drawing.
	NamedPositionId *string `json:"namedPositionId,omitempty"`
	// The number of horizontal zones to include in the drawing's graphics area.
	NumberHorizontalZones *int32 `json:"numberHorizontalZones,omitempty"`
	// The number of vertical zones to include in the drawing's graphics area.
	NumberVerticalZones *int32 `json:"numberVerticalZones,omitempty"`
	// Include this part in the drawing.
	PartId *string `json:"partId,omitempty"`
	// Include this part in the drawing.
	PartNumber *string `json:"partNumber,omitempty"`
	// Include all parts found by the query in the drawing.
	PartQuery *string `json:"partQuery,omitempty"`
	// Apply this projection to the drawing.
	Projection *string `json:"projection,omitempty"`
	// Set to `true` if creating the drawing of an empty sketch.
	PureSketch *bool `json:"pureSketch,omitempty"`
	// `BEST_PERFORMANCE` | `BEST_QUALITY` | `BALANCED` | `ADAPTIVE`
	QualityOption *string `json:"qualityOption,omitempty"`
	// Specify the type of element to create the drawing from. `0: UNKNOWN` | `1: PARTSTUDIO` | `2: ASSEMBLY` | `3: PART` | `4: FLATTENED_PART` | `5: COMPOSITE_PART` | `6: MESH_PART` | `7: SURFACE` | `8: SKETCH` | `9: CURVE`
	ReferenceType     *int32                      `json:"referenceType,omitempty"`
	ReferenceTypeEnum *GBTAppElementReferenceType `json:"referenceTypeEnum,omitempty"`
	// Create the drawing from this specific revision.
	Revision *string `json:"revision,omitempty"`
	// Set to `true` to show only cut geometry in the drawing.
	ShowCutGeomOnly *bool `json:"showCutGeomOnly,omitempty"`
	// `NONE` | `ABSOLUTE` | `RATIO_TO_MODEL` | `RATIO_TO_BODY` | `AUTOMATIC`
	SimplificationOption *string `json:"simplificationOption,omitempty"`
	// `NONE` | `UNKNOWN` | `SMOOTH` | `DRAFTING`
	SimplificationThreshold *float64 `json:"simplificationThreshold,omitempty"`
	// Provide a size for the drawing.
	Size *string `json:"size,omitempty"`
	// Include these sketches in the drawing.
	SketchIds []string `json:"sketchIds,omitempty"`
	// Provide the Standard to use in the drawing.
	Standard *string `json:"standard,omitempty"`
	// The zone in which to start the drawing.
	StartZones *string `json:"startZones,omitempty"`
	// Provide any additional arguments for the template being used for this drawing.
	TemplateArgs []string `json:"templateArgs,omitempty"`
	// Apply the template from this document to the drawing.
	TemplateDocumentId *string `json:"templateDocumentId,omitempty"`
	// Apply the template from this element to the drawing.
	TemplateElementId *string `json:"templateElementId,omitempty"`
	// Apply this template to the drawing.
	TemplateName *string `json:"templateName,omitempty"`
	// Apply the template from this version to the drawing.
	TemplateVersionId *string `json:"templateVersionId,omitempty"`
	// Apply the template from this workspace to the drawing.
	TemplateWorkspaceId *string `json:"templateWorkspaceId,omitempty"`
	// Set to `true` to include a title block in the drawing.
	Titleblock *bool `json:"titleblock,omitempty"`
	// Units for the element: `METER` | `CENTIMETER` | `MILLIMETER` | `INCH` | `FOOT` | `YARD`
	Units *string `json:"units,omitempty"`
	// Add these views to the drawing.
	Views *string `json:"views,omitempty"`
	// Create a drawing of a part or assembly from this workspace.
	WorkspaceId *string `json:"workspaceId,omitempty"`
}

// NewBTDrawingParams instantiates a new BTDrawingParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTDrawingParams() *BTDrawingParams {
	this := BTDrawingParams{}
	return &this
}

// NewBTDrawingParamsWithDefaults instantiates a new BTDrawingParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTDrawingParamsWithDefaults() *BTDrawingParams {
	this := BTDrawingParams{}
	return &this
}

// GetBorder returns the Border field value if set, zero value otherwise.
func (o *BTDrawingParams) GetBorder() bool {
	if o == nil || o.Border == nil {
		var ret bool
		return ret
	}
	return *o.Border
}

// GetBorderOk returns a tuple with the Border field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetBorderOk() (*bool, bool) {
	if o == nil || o.Border == nil {
		return nil, false
	}
	return o.Border, true
}

// HasBorder returns a boolean if a field has been set.
func (o *BTDrawingParams) HasBorder() bool {
	if o != nil && o.Border != nil {
		return true
	}

	return false
}

// SetBorder gets a reference to the given bool and assigns it to the Border field.
func (o *BTDrawingParams) SetBorder(v bool) {
	o.Border = &v
}

// GetComputeIntersection returns the ComputeIntersection field value if set, zero value otherwise.
func (o *BTDrawingParams) GetComputeIntersection() bool {
	if o == nil || o.ComputeIntersection == nil {
		var ret bool
		return ret
	}
	return *o.ComputeIntersection
}

// GetComputeIntersectionOk returns a tuple with the ComputeIntersection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetComputeIntersectionOk() (*bool, bool) {
	if o == nil || o.ComputeIntersection == nil {
		return nil, false
	}
	return o.ComputeIntersection, true
}

// HasComputeIntersection returns a boolean if a field has been set.
func (o *BTDrawingParams) HasComputeIntersection() bool {
	if o != nil && o.ComputeIntersection != nil {
		return true
	}

	return false
}

// SetComputeIntersection gets a reference to the given bool and assigns it to the ComputeIntersection field.
func (o *BTDrawingParams) SetComputeIntersection(v bool) {
	o.ComputeIntersection = &v
}

// GetDecimalSeparator returns the DecimalSeparator field value if set, zero value otherwise.
func (o *BTDrawingParams) GetDecimalSeparator() string {
	if o == nil || o.DecimalSeparator == nil {
		var ret string
		return ret
	}
	return *o.DecimalSeparator
}

// GetDecimalSeparatorOk returns a tuple with the DecimalSeparator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetDecimalSeparatorOk() (*string, bool) {
	if o == nil || o.DecimalSeparator == nil {
		return nil, false
	}
	return o.DecimalSeparator, true
}

// HasDecimalSeparator returns a boolean if a field has been set.
func (o *BTDrawingParams) HasDecimalSeparator() bool {
	if o != nil && o.DecimalSeparator != nil {
		return true
	}

	return false
}

// SetDecimalSeparator gets a reference to the given string and assigns it to the DecimalSeparator field.
func (o *BTDrawingParams) SetDecimalSeparator(v string) {
	o.DecimalSeparator = &v
}

// GetDisplayStateId returns the DisplayStateId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetDisplayStateId() string {
	if o == nil || o.DisplayStateId == nil {
		var ret string
		return ret
	}
	return *o.DisplayStateId
}

// GetDisplayStateIdOk returns a tuple with the DisplayStateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetDisplayStateIdOk() (*string, bool) {
	if o == nil || o.DisplayStateId == nil {
		return nil, false
	}
	return o.DisplayStateId, true
}

// HasDisplayStateId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasDisplayStateId() bool {
	if o != nil && o.DisplayStateId != nil {
		return true
	}

	return false
}

// SetDisplayStateId gets a reference to the given string and assigns it to the DisplayStateId field.
func (o *BTDrawingParams) SetDisplayStateId(v string) {
	o.DisplayStateId = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetDocumentId() string {
	if o == nil || o.DocumentId == nil {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetDocumentIdOk() (*string, bool) {
	if o == nil || o.DocumentId == nil {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasDocumentId() bool {
	if o != nil && o.DocumentId != nil {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *BTDrawingParams) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetDocumentMicroversionId returns the DocumentMicroversionId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetDocumentMicroversionId() string {
	if o == nil || o.DocumentMicroversionId == nil {
		var ret string
		return ret
	}
	return *o.DocumentMicroversionId
}

// GetDocumentMicroversionIdOk returns a tuple with the DocumentMicroversionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetDocumentMicroversionIdOk() (*string, bool) {
	if o == nil || o.DocumentMicroversionId == nil {
		return nil, false
	}
	return o.DocumentMicroversionId, true
}

// HasDocumentMicroversionId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasDocumentMicroversionId() bool {
	if o != nil && o.DocumentMicroversionId != nil {
		return true
	}

	return false
}

// SetDocumentMicroversionId gets a reference to the given string and assigns it to the DocumentMicroversionId field.
func (o *BTDrawingParams) SetDocumentMicroversionId(v string) {
	o.DocumentMicroversionId = &v
}

// GetDrawingName returns the DrawingName field value if set, zero value otherwise.
func (o *BTDrawingParams) GetDrawingName() string {
	if o == nil || o.DrawingName == nil {
		var ret string
		return ret
	}
	return *o.DrawingName
}

// GetDrawingNameOk returns a tuple with the DrawingName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetDrawingNameOk() (*string, bool) {
	if o == nil || o.DrawingName == nil {
		return nil, false
	}
	return o.DrawingName, true
}

// HasDrawingName returns a boolean if a field has been set.
func (o *BTDrawingParams) HasDrawingName() bool {
	if o != nil && o.DrawingName != nil {
		return true
	}

	return false
}

// SetDrawingName gets a reference to the given string and assigns it to the DrawingName field.
func (o *BTDrawingParams) SetDrawingName(v string) {
	o.DrawingName = &v
}

// GetElementConfiguration returns the ElementConfiguration field value if set, zero value otherwise.
func (o *BTDrawingParams) GetElementConfiguration() string {
	if o == nil || o.ElementConfiguration == nil {
		var ret string
		return ret
	}
	return *o.ElementConfiguration
}

// GetElementConfigurationOk returns a tuple with the ElementConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetElementConfigurationOk() (*string, bool) {
	if o == nil || o.ElementConfiguration == nil {
		return nil, false
	}
	return o.ElementConfiguration, true
}

// HasElementConfiguration returns a boolean if a field has been set.
func (o *BTDrawingParams) HasElementConfiguration() bool {
	if o != nil && o.ElementConfiguration != nil {
		return true
	}

	return false
}

// SetElementConfiguration gets a reference to the given string and assigns it to the ElementConfiguration field.
func (o *BTDrawingParams) SetElementConfiguration(v string) {
	o.ElementConfiguration = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetElementId() string {
	if o == nil || o.ElementId == nil {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetElementIdOk() (*string, bool) {
	if o == nil || o.ElementId == nil {
		return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasElementId() bool {
	if o != nil && o.ElementId != nil {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *BTDrawingParams) SetElementId(v string) {
	o.ElementId = &v
}

// GetElementMicroversionId returns the ElementMicroversionId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetElementMicroversionId() string {
	if o == nil || o.ElementMicroversionId == nil {
		var ret string
		return ret
	}
	return *o.ElementMicroversionId
}

// GetElementMicroversionIdOk returns a tuple with the ElementMicroversionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetElementMicroversionIdOk() (*string, bool) {
	if o == nil || o.ElementMicroversionId == nil {
		return nil, false
	}
	return o.ElementMicroversionId, true
}

// HasElementMicroversionId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasElementMicroversionId() bool {
	if o != nil && o.ElementMicroversionId != nil {
		return true
	}

	return false
}

// SetElementMicroversionId gets a reference to the given string and assigns it to the ElementMicroversionId field.
func (o *BTDrawingParams) SetElementMicroversionId(v string) {
	o.ElementMicroversionId = &v
}

// GetExplosionId returns the ExplosionId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetExplosionId() string {
	if o == nil || o.ExplosionId == nil {
		var ret string
		return ret
	}
	return *o.ExplosionId
}

// GetExplosionIdOk returns a tuple with the ExplosionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetExplosionIdOk() (*string, bool) {
	if o == nil || o.ExplosionId == nil {
		return nil, false
	}
	return o.ExplosionId, true
}

// HasExplosionId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasExplosionId() bool {
	if o != nil && o.ExplosionId != nil {
		return true
	}

	return false
}

// SetExplosionId gets a reference to the given string and assigns it to the ExplosionId field.
func (o *BTDrawingParams) SetExplosionId(v string) {
	o.ExplosionId = &v
}

// GetExternalDocumentId returns the ExternalDocumentId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetExternalDocumentId() string {
	if o == nil || o.ExternalDocumentId == nil {
		var ret string
		return ret
	}
	return *o.ExternalDocumentId
}

// GetExternalDocumentIdOk returns a tuple with the ExternalDocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetExternalDocumentIdOk() (*string, bool) {
	if o == nil || o.ExternalDocumentId == nil {
		return nil, false
	}
	return o.ExternalDocumentId, true
}

// HasExternalDocumentId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasExternalDocumentId() bool {
	if o != nil && o.ExternalDocumentId != nil {
		return true
	}

	return false
}

// SetExternalDocumentId gets a reference to the given string and assigns it to the ExternalDocumentId field.
func (o *BTDrawingParams) SetExternalDocumentId(v string) {
	o.ExternalDocumentId = &v
}

// GetExternalDocumentVersionId returns the ExternalDocumentVersionId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetExternalDocumentVersionId() string {
	if o == nil || o.ExternalDocumentVersionId == nil {
		var ret string
		return ret
	}
	return *o.ExternalDocumentVersionId
}

// GetExternalDocumentVersionIdOk returns a tuple with the ExternalDocumentVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetExternalDocumentVersionIdOk() (*string, bool) {
	if o == nil || o.ExternalDocumentVersionId == nil {
		return nil, false
	}
	return o.ExternalDocumentVersionId, true
}

// HasExternalDocumentVersionId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasExternalDocumentVersionId() bool {
	if o != nil && o.ExternalDocumentVersionId != nil {
		return true
	}

	return false
}

// SetExternalDocumentVersionId gets a reference to the given string and assigns it to the ExternalDocumentVersionId field.
func (o *BTDrawingParams) SetExternalDocumentVersionId(v string) {
	o.ExternalDocumentVersionId = &v
}

// GetHiddenLines returns the HiddenLines field value if set, zero value otherwise.
func (o *BTDrawingParams) GetHiddenLines() BTDrawingHiddenLineOption {
	if o == nil || o.HiddenLines == nil {
		var ret BTDrawingHiddenLineOption
		return ret
	}
	return *o.HiddenLines
}

// GetHiddenLinesOk returns a tuple with the HiddenLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetHiddenLinesOk() (*BTDrawingHiddenLineOption, bool) {
	if o == nil || o.HiddenLines == nil {
		return nil, false
	}
	return o.HiddenLines, true
}

// HasHiddenLines returns a boolean if a field has been set.
func (o *BTDrawingParams) HasHiddenLines() bool {
	if o != nil && o.HiddenLines != nil {
		return true
	}

	return false
}

// SetHiddenLines gets a reference to the given BTDrawingHiddenLineOption and assigns it to the HiddenLines field.
func (o *BTDrawingParams) SetHiddenLines(v BTDrawingHiddenLineOption) {
	o.HiddenLines = &v
}

// GetIncludeSurfaces returns the IncludeSurfaces field value if set, zero value otherwise.
func (o *BTDrawingParams) GetIncludeSurfaces() bool {
	if o == nil || o.IncludeSurfaces == nil {
		var ret bool
		return ret
	}
	return *o.IncludeSurfaces
}

// GetIncludeSurfacesOk returns a tuple with the IncludeSurfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetIncludeSurfacesOk() (*bool, bool) {
	if o == nil || o.IncludeSurfaces == nil {
		return nil, false
	}
	return o.IncludeSurfaces, true
}

// HasIncludeSurfaces returns a boolean if a field has been set.
func (o *BTDrawingParams) HasIncludeSurfaces() bool {
	if o != nil && o.IncludeSurfaces != nil {
		return true
	}

	return false
}

// SetIncludeSurfaces gets a reference to the given bool and assigns it to the IncludeSurfaces field.
func (o *BTDrawingParams) SetIncludeSurfaces(v bool) {
	o.IncludeSurfaces = &v
}

// GetIncludeWires returns the IncludeWires field value if set, zero value otherwise.
func (o *BTDrawingParams) GetIncludeWires() bool {
	if o == nil || o.IncludeWires == nil {
		var ret bool
		return ret
	}
	return *o.IncludeWires
}

// GetIncludeWiresOk returns a tuple with the IncludeWires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetIncludeWiresOk() (*bool, bool) {
	if o == nil || o.IncludeWires == nil {
		return nil, false
	}
	return o.IncludeWires, true
}

// HasIncludeWires returns a boolean if a field has been set.
func (o *BTDrawingParams) HasIncludeWires() bool {
	if o != nil && o.IncludeWires != nil {
		return true
	}

	return false
}

// SetIncludeWires gets a reference to the given bool and assigns it to the IncludeWires field.
func (o *BTDrawingParams) SetIncludeWires(v bool) {
	o.IncludeWires = &v
}

// GetIsFlattenedPart returns the IsFlattenedPart field value if set, zero value otherwise.
func (o *BTDrawingParams) GetIsFlattenedPart() bool {
	if o == nil || o.IsFlattenedPart == nil {
		var ret bool
		return ret
	}
	return *o.IsFlattenedPart
}

// GetIsFlattenedPartOk returns a tuple with the IsFlattenedPart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetIsFlattenedPartOk() (*bool, bool) {
	if o == nil || o.IsFlattenedPart == nil {
		return nil, false
	}
	return o.IsFlattenedPart, true
}

// HasIsFlattenedPart returns a boolean if a field has been set.
func (o *BTDrawingParams) HasIsFlattenedPart() bool {
	if o != nil && o.IsFlattenedPart != nil {
		return true
	}

	return false
}

// SetIsFlattenedPart gets a reference to the given bool and assigns it to the IsFlattenedPart field.
func (o *BTDrawingParams) SetIsFlattenedPart(v bool) {
	o.IsFlattenedPart = &v
}

// GetIsSketchOnly returns the IsSketchOnly field value if set, zero value otherwise.
func (o *BTDrawingParams) GetIsSketchOnly() bool {
	if o == nil || o.IsSketchOnly == nil {
		var ret bool
		return ret
	}
	return *o.IsSketchOnly
}

// GetIsSketchOnlyOk returns a tuple with the IsSketchOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetIsSketchOnlyOk() (*bool, bool) {
	if o == nil || o.IsSketchOnly == nil {
		return nil, false
	}
	return o.IsSketchOnly, true
}

// HasIsSketchOnly returns a boolean if a field has been set.
func (o *BTDrawingParams) HasIsSketchOnly() bool {
	if o != nil && o.IsSketchOnly != nil {
		return true
	}

	return false
}

// SetIsSketchOnly gets a reference to the given bool and assigns it to the IsSketchOnly field.
func (o *BTDrawingParams) SetIsSketchOnly(v bool) {
	o.IsSketchOnly = &v
}

// GetIsSurface returns the IsSurface field value if set, zero value otherwise.
func (o *BTDrawingParams) GetIsSurface() bool {
	if o == nil || o.IsSurface == nil {
		var ret bool
		return ret
	}
	return *o.IsSurface
}

// GetIsSurfaceOk returns a tuple with the IsSurface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetIsSurfaceOk() (*bool, bool) {
	if o == nil || o.IsSurface == nil {
		return nil, false
	}
	return o.IsSurface, true
}

// HasIsSurface returns a boolean if a field has been set.
func (o *BTDrawingParams) HasIsSurface() bool {
	if o != nil && o.IsSurface != nil {
		return true
	}

	return false
}

// SetIsSurface gets a reference to the given bool and assigns it to the IsSurface field.
func (o *BTDrawingParams) SetIsSurface(v bool) {
	o.IsSurface = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *BTDrawingParams) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *BTDrawingParams) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *BTDrawingParams) SetLanguage(v string) {
	o.Language = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *BTDrawingParams) GetLocation() BTElementLocationParams {
	if o == nil || o.Location == nil {
		var ret BTElementLocationParams
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetLocationOk() (*BTElementLocationParams, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *BTDrawingParams) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given BTElementLocationParams and assigns it to the Location field.
func (o *BTDrawingParams) SetLocation(v BTElementLocationParams) {
	o.Location = &v
}

// GetModelType returns the ModelType field value if set, zero value otherwise.
func (o *BTDrawingParams) GetModelType() string {
	if o == nil || o.ModelType == nil {
		var ret string
		return ret
	}
	return *o.ModelType
}

// GetModelTypeOk returns a tuple with the ModelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetModelTypeOk() (*string, bool) {
	if o == nil || o.ModelType == nil {
		return nil, false
	}
	return o.ModelType, true
}

// HasModelType returns a boolean if a field has been set.
func (o *BTDrawingParams) HasModelType() bool {
	if o != nil && o.ModelType != nil {
		return true
	}

	return false
}

// SetModelType gets a reference to the given string and assigns it to the ModelType field.
func (o *BTDrawingParams) SetModelType(v string) {
	o.ModelType = &v
}

// GetNamedPositionId returns the NamedPositionId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetNamedPositionId() string {
	if o == nil || o.NamedPositionId == nil {
		var ret string
		return ret
	}
	return *o.NamedPositionId
}

// GetNamedPositionIdOk returns a tuple with the NamedPositionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetNamedPositionIdOk() (*string, bool) {
	if o == nil || o.NamedPositionId == nil {
		return nil, false
	}
	return o.NamedPositionId, true
}

// HasNamedPositionId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasNamedPositionId() bool {
	if o != nil && o.NamedPositionId != nil {
		return true
	}

	return false
}

// SetNamedPositionId gets a reference to the given string and assigns it to the NamedPositionId field.
func (o *BTDrawingParams) SetNamedPositionId(v string) {
	o.NamedPositionId = &v
}

// GetNumberHorizontalZones returns the NumberHorizontalZones field value if set, zero value otherwise.
func (o *BTDrawingParams) GetNumberHorizontalZones() int32 {
	if o == nil || o.NumberHorizontalZones == nil {
		var ret int32
		return ret
	}
	return *o.NumberHorizontalZones
}

// GetNumberHorizontalZonesOk returns a tuple with the NumberHorizontalZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetNumberHorizontalZonesOk() (*int32, bool) {
	if o == nil || o.NumberHorizontalZones == nil {
		return nil, false
	}
	return o.NumberHorizontalZones, true
}

// HasNumberHorizontalZones returns a boolean if a field has been set.
func (o *BTDrawingParams) HasNumberHorizontalZones() bool {
	if o != nil && o.NumberHorizontalZones != nil {
		return true
	}

	return false
}

// SetNumberHorizontalZones gets a reference to the given int32 and assigns it to the NumberHorizontalZones field.
func (o *BTDrawingParams) SetNumberHorizontalZones(v int32) {
	o.NumberHorizontalZones = &v
}

// GetNumberVerticalZones returns the NumberVerticalZones field value if set, zero value otherwise.
func (o *BTDrawingParams) GetNumberVerticalZones() int32 {
	if o == nil || o.NumberVerticalZones == nil {
		var ret int32
		return ret
	}
	return *o.NumberVerticalZones
}

// GetNumberVerticalZonesOk returns a tuple with the NumberVerticalZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetNumberVerticalZonesOk() (*int32, bool) {
	if o == nil || o.NumberVerticalZones == nil {
		return nil, false
	}
	return o.NumberVerticalZones, true
}

// HasNumberVerticalZones returns a boolean if a field has been set.
func (o *BTDrawingParams) HasNumberVerticalZones() bool {
	if o != nil && o.NumberVerticalZones != nil {
		return true
	}

	return false
}

// SetNumberVerticalZones gets a reference to the given int32 and assigns it to the NumberVerticalZones field.
func (o *BTDrawingParams) SetNumberVerticalZones(v int32) {
	o.NumberVerticalZones = &v
}

// GetPartId returns the PartId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetPartId() string {
	if o == nil || o.PartId == nil {
		var ret string
		return ret
	}
	return *o.PartId
}

// GetPartIdOk returns a tuple with the PartId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetPartIdOk() (*string, bool) {
	if o == nil || o.PartId == nil {
		return nil, false
	}
	return o.PartId, true
}

// HasPartId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasPartId() bool {
	if o != nil && o.PartId != nil {
		return true
	}

	return false
}

// SetPartId gets a reference to the given string and assigns it to the PartId field.
func (o *BTDrawingParams) SetPartId(v string) {
	o.PartId = &v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *BTDrawingParams) GetPartNumber() string {
	if o == nil || o.PartNumber == nil {
		var ret string
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetPartNumberOk() (*string, bool) {
	if o == nil || o.PartNumber == nil {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *BTDrawingParams) HasPartNumber() bool {
	if o != nil && o.PartNumber != nil {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *BTDrawingParams) SetPartNumber(v string) {
	o.PartNumber = &v
}

// GetPartQuery returns the PartQuery field value if set, zero value otherwise.
func (o *BTDrawingParams) GetPartQuery() string {
	if o == nil || o.PartQuery == nil {
		var ret string
		return ret
	}
	return *o.PartQuery
}

// GetPartQueryOk returns a tuple with the PartQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetPartQueryOk() (*string, bool) {
	if o == nil || o.PartQuery == nil {
		return nil, false
	}
	return o.PartQuery, true
}

// HasPartQuery returns a boolean if a field has been set.
func (o *BTDrawingParams) HasPartQuery() bool {
	if o != nil && o.PartQuery != nil {
		return true
	}

	return false
}

// SetPartQuery gets a reference to the given string and assigns it to the PartQuery field.
func (o *BTDrawingParams) SetPartQuery(v string) {
	o.PartQuery = &v
}

// GetProjection returns the Projection field value if set, zero value otherwise.
func (o *BTDrawingParams) GetProjection() string {
	if o == nil || o.Projection == nil {
		var ret string
		return ret
	}
	return *o.Projection
}

// GetProjectionOk returns a tuple with the Projection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetProjectionOk() (*string, bool) {
	if o == nil || o.Projection == nil {
		return nil, false
	}
	return o.Projection, true
}

// HasProjection returns a boolean if a field has been set.
func (o *BTDrawingParams) HasProjection() bool {
	if o != nil && o.Projection != nil {
		return true
	}

	return false
}

// SetProjection gets a reference to the given string and assigns it to the Projection field.
func (o *BTDrawingParams) SetProjection(v string) {
	o.Projection = &v
}

// GetPureSketch returns the PureSketch field value if set, zero value otherwise.
func (o *BTDrawingParams) GetPureSketch() bool {
	if o == nil || o.PureSketch == nil {
		var ret bool
		return ret
	}
	return *o.PureSketch
}

// GetPureSketchOk returns a tuple with the PureSketch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetPureSketchOk() (*bool, bool) {
	if o == nil || o.PureSketch == nil {
		return nil, false
	}
	return o.PureSketch, true
}

// HasPureSketch returns a boolean if a field has been set.
func (o *BTDrawingParams) HasPureSketch() bool {
	if o != nil && o.PureSketch != nil {
		return true
	}

	return false
}

// SetPureSketch gets a reference to the given bool and assigns it to the PureSketch field.
func (o *BTDrawingParams) SetPureSketch(v bool) {
	o.PureSketch = &v
}

// GetQualityOption returns the QualityOption field value if set, zero value otherwise.
func (o *BTDrawingParams) GetQualityOption() string {
	if o == nil || o.QualityOption == nil {
		var ret string
		return ret
	}
	return *o.QualityOption
}

// GetQualityOptionOk returns a tuple with the QualityOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetQualityOptionOk() (*string, bool) {
	if o == nil || o.QualityOption == nil {
		return nil, false
	}
	return o.QualityOption, true
}

// HasQualityOption returns a boolean if a field has been set.
func (o *BTDrawingParams) HasQualityOption() bool {
	if o != nil && o.QualityOption != nil {
		return true
	}

	return false
}

// SetQualityOption gets a reference to the given string and assigns it to the QualityOption field.
func (o *BTDrawingParams) SetQualityOption(v string) {
	o.QualityOption = &v
}

// GetReferenceType returns the ReferenceType field value if set, zero value otherwise.
func (o *BTDrawingParams) GetReferenceType() int32 {
	if o == nil || o.ReferenceType == nil {
		var ret int32
		return ret
	}
	return *o.ReferenceType
}

// GetReferenceTypeOk returns a tuple with the ReferenceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetReferenceTypeOk() (*int32, bool) {
	if o == nil || o.ReferenceType == nil {
		return nil, false
	}
	return o.ReferenceType, true
}

// HasReferenceType returns a boolean if a field has been set.
func (o *BTDrawingParams) HasReferenceType() bool {
	if o != nil && o.ReferenceType != nil {
		return true
	}

	return false
}

// SetReferenceType gets a reference to the given int32 and assigns it to the ReferenceType field.
func (o *BTDrawingParams) SetReferenceType(v int32) {
	o.ReferenceType = &v
}

// GetReferenceTypeEnum returns the ReferenceTypeEnum field value if set, zero value otherwise.
func (o *BTDrawingParams) GetReferenceTypeEnum() GBTAppElementReferenceType {
	if o == nil || o.ReferenceTypeEnum == nil {
		var ret GBTAppElementReferenceType
		return ret
	}
	return *o.ReferenceTypeEnum
}

// GetReferenceTypeEnumOk returns a tuple with the ReferenceTypeEnum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetReferenceTypeEnumOk() (*GBTAppElementReferenceType, bool) {
	if o == nil || o.ReferenceTypeEnum == nil {
		return nil, false
	}
	return o.ReferenceTypeEnum, true
}

// HasReferenceTypeEnum returns a boolean if a field has been set.
func (o *BTDrawingParams) HasReferenceTypeEnum() bool {
	if o != nil && o.ReferenceTypeEnum != nil {
		return true
	}

	return false
}

// SetReferenceTypeEnum gets a reference to the given GBTAppElementReferenceType and assigns it to the ReferenceTypeEnum field.
func (o *BTDrawingParams) SetReferenceTypeEnum(v GBTAppElementReferenceType) {
	o.ReferenceTypeEnum = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *BTDrawingParams) GetRevision() string {
	if o == nil || o.Revision == nil {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetRevisionOk() (*string, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *BTDrawingParams) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *BTDrawingParams) SetRevision(v string) {
	o.Revision = &v
}

// GetShowCutGeomOnly returns the ShowCutGeomOnly field value if set, zero value otherwise.
func (o *BTDrawingParams) GetShowCutGeomOnly() bool {
	if o == nil || o.ShowCutGeomOnly == nil {
		var ret bool
		return ret
	}
	return *o.ShowCutGeomOnly
}

// GetShowCutGeomOnlyOk returns a tuple with the ShowCutGeomOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetShowCutGeomOnlyOk() (*bool, bool) {
	if o == nil || o.ShowCutGeomOnly == nil {
		return nil, false
	}
	return o.ShowCutGeomOnly, true
}

// HasShowCutGeomOnly returns a boolean if a field has been set.
func (o *BTDrawingParams) HasShowCutGeomOnly() bool {
	if o != nil && o.ShowCutGeomOnly != nil {
		return true
	}

	return false
}

// SetShowCutGeomOnly gets a reference to the given bool and assigns it to the ShowCutGeomOnly field.
func (o *BTDrawingParams) SetShowCutGeomOnly(v bool) {
	o.ShowCutGeomOnly = &v
}

// GetSimplificationOption returns the SimplificationOption field value if set, zero value otherwise.
func (o *BTDrawingParams) GetSimplificationOption() string {
	if o == nil || o.SimplificationOption == nil {
		var ret string
		return ret
	}
	return *o.SimplificationOption
}

// GetSimplificationOptionOk returns a tuple with the SimplificationOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetSimplificationOptionOk() (*string, bool) {
	if o == nil || o.SimplificationOption == nil {
		return nil, false
	}
	return o.SimplificationOption, true
}

// HasSimplificationOption returns a boolean if a field has been set.
func (o *BTDrawingParams) HasSimplificationOption() bool {
	if o != nil && o.SimplificationOption != nil {
		return true
	}

	return false
}

// SetSimplificationOption gets a reference to the given string and assigns it to the SimplificationOption field.
func (o *BTDrawingParams) SetSimplificationOption(v string) {
	o.SimplificationOption = &v
}

// GetSimplificationThreshold returns the SimplificationThreshold field value if set, zero value otherwise.
func (o *BTDrawingParams) GetSimplificationThreshold() float64 {
	if o == nil || o.SimplificationThreshold == nil {
		var ret float64
		return ret
	}
	return *o.SimplificationThreshold
}

// GetSimplificationThresholdOk returns a tuple with the SimplificationThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetSimplificationThresholdOk() (*float64, bool) {
	if o == nil || o.SimplificationThreshold == nil {
		return nil, false
	}
	return o.SimplificationThreshold, true
}

// HasSimplificationThreshold returns a boolean if a field has been set.
func (o *BTDrawingParams) HasSimplificationThreshold() bool {
	if o != nil && o.SimplificationThreshold != nil {
		return true
	}

	return false
}

// SetSimplificationThreshold gets a reference to the given float64 and assigns it to the SimplificationThreshold field.
func (o *BTDrawingParams) SetSimplificationThreshold(v float64) {
	o.SimplificationThreshold = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *BTDrawingParams) GetSize() string {
	if o == nil || o.Size == nil {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetSizeOk() (*string, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *BTDrawingParams) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *BTDrawingParams) SetSize(v string) {
	o.Size = &v
}

// GetSketchIds returns the SketchIds field value if set, zero value otherwise.
func (o *BTDrawingParams) GetSketchIds() []string {
	if o == nil || o.SketchIds == nil {
		var ret []string
		return ret
	}
	return o.SketchIds
}

// GetSketchIdsOk returns a tuple with the SketchIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetSketchIdsOk() ([]string, bool) {
	if o == nil || o.SketchIds == nil {
		return nil, false
	}
	return o.SketchIds, true
}

// HasSketchIds returns a boolean if a field has been set.
func (o *BTDrawingParams) HasSketchIds() bool {
	if o != nil && o.SketchIds != nil {
		return true
	}

	return false
}

// SetSketchIds gets a reference to the given []string and assigns it to the SketchIds field.
func (o *BTDrawingParams) SetSketchIds(v []string) {
	o.SketchIds = v
}

// GetStandard returns the Standard field value if set, zero value otherwise.
func (o *BTDrawingParams) GetStandard() string {
	if o == nil || o.Standard == nil {
		var ret string
		return ret
	}
	return *o.Standard
}

// GetStandardOk returns a tuple with the Standard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetStandardOk() (*string, bool) {
	if o == nil || o.Standard == nil {
		return nil, false
	}
	return o.Standard, true
}

// HasStandard returns a boolean if a field has been set.
func (o *BTDrawingParams) HasStandard() bool {
	if o != nil && o.Standard != nil {
		return true
	}

	return false
}

// SetStandard gets a reference to the given string and assigns it to the Standard field.
func (o *BTDrawingParams) SetStandard(v string) {
	o.Standard = &v
}

// GetStartZones returns the StartZones field value if set, zero value otherwise.
func (o *BTDrawingParams) GetStartZones() string {
	if o == nil || o.StartZones == nil {
		var ret string
		return ret
	}
	return *o.StartZones
}

// GetStartZonesOk returns a tuple with the StartZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetStartZonesOk() (*string, bool) {
	if o == nil || o.StartZones == nil {
		return nil, false
	}
	return o.StartZones, true
}

// HasStartZones returns a boolean if a field has been set.
func (o *BTDrawingParams) HasStartZones() bool {
	if o != nil && o.StartZones != nil {
		return true
	}

	return false
}

// SetStartZones gets a reference to the given string and assigns it to the StartZones field.
func (o *BTDrawingParams) SetStartZones(v string) {
	o.StartZones = &v
}

// GetTemplateArgs returns the TemplateArgs field value if set, zero value otherwise.
func (o *BTDrawingParams) GetTemplateArgs() []string {
	if o == nil || o.TemplateArgs == nil {
		var ret []string
		return ret
	}
	return o.TemplateArgs
}

// GetTemplateArgsOk returns a tuple with the TemplateArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetTemplateArgsOk() ([]string, bool) {
	if o == nil || o.TemplateArgs == nil {
		return nil, false
	}
	return o.TemplateArgs, true
}

// HasTemplateArgs returns a boolean if a field has been set.
func (o *BTDrawingParams) HasTemplateArgs() bool {
	if o != nil && o.TemplateArgs != nil {
		return true
	}

	return false
}

// SetTemplateArgs gets a reference to the given []string and assigns it to the TemplateArgs field.
func (o *BTDrawingParams) SetTemplateArgs(v []string) {
	o.TemplateArgs = v
}

// GetTemplateDocumentId returns the TemplateDocumentId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetTemplateDocumentId() string {
	if o == nil || o.TemplateDocumentId == nil {
		var ret string
		return ret
	}
	return *o.TemplateDocumentId
}

// GetTemplateDocumentIdOk returns a tuple with the TemplateDocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetTemplateDocumentIdOk() (*string, bool) {
	if o == nil || o.TemplateDocumentId == nil {
		return nil, false
	}
	return o.TemplateDocumentId, true
}

// HasTemplateDocumentId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasTemplateDocumentId() bool {
	if o != nil && o.TemplateDocumentId != nil {
		return true
	}

	return false
}

// SetTemplateDocumentId gets a reference to the given string and assigns it to the TemplateDocumentId field.
func (o *BTDrawingParams) SetTemplateDocumentId(v string) {
	o.TemplateDocumentId = &v
}

// GetTemplateElementId returns the TemplateElementId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetTemplateElementId() string {
	if o == nil || o.TemplateElementId == nil {
		var ret string
		return ret
	}
	return *o.TemplateElementId
}

// GetTemplateElementIdOk returns a tuple with the TemplateElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetTemplateElementIdOk() (*string, bool) {
	if o == nil || o.TemplateElementId == nil {
		return nil, false
	}
	return o.TemplateElementId, true
}

// HasTemplateElementId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasTemplateElementId() bool {
	if o != nil && o.TemplateElementId != nil {
		return true
	}

	return false
}

// SetTemplateElementId gets a reference to the given string and assigns it to the TemplateElementId field.
func (o *BTDrawingParams) SetTemplateElementId(v string) {
	o.TemplateElementId = &v
}

// GetTemplateName returns the TemplateName field value if set, zero value otherwise.
func (o *BTDrawingParams) GetTemplateName() string {
	if o == nil || o.TemplateName == nil {
		var ret string
		return ret
	}
	return *o.TemplateName
}

// GetTemplateNameOk returns a tuple with the TemplateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetTemplateNameOk() (*string, bool) {
	if o == nil || o.TemplateName == nil {
		return nil, false
	}
	return o.TemplateName, true
}

// HasTemplateName returns a boolean if a field has been set.
func (o *BTDrawingParams) HasTemplateName() bool {
	if o != nil && o.TemplateName != nil {
		return true
	}

	return false
}

// SetTemplateName gets a reference to the given string and assigns it to the TemplateName field.
func (o *BTDrawingParams) SetTemplateName(v string) {
	o.TemplateName = &v
}

// GetTemplateVersionId returns the TemplateVersionId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetTemplateVersionId() string {
	if o == nil || o.TemplateVersionId == nil {
		var ret string
		return ret
	}
	return *o.TemplateVersionId
}

// GetTemplateVersionIdOk returns a tuple with the TemplateVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetTemplateVersionIdOk() (*string, bool) {
	if o == nil || o.TemplateVersionId == nil {
		return nil, false
	}
	return o.TemplateVersionId, true
}

// HasTemplateVersionId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasTemplateVersionId() bool {
	if o != nil && o.TemplateVersionId != nil {
		return true
	}

	return false
}

// SetTemplateVersionId gets a reference to the given string and assigns it to the TemplateVersionId field.
func (o *BTDrawingParams) SetTemplateVersionId(v string) {
	o.TemplateVersionId = &v
}

// GetTemplateWorkspaceId returns the TemplateWorkspaceId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetTemplateWorkspaceId() string {
	if o == nil || o.TemplateWorkspaceId == nil {
		var ret string
		return ret
	}
	return *o.TemplateWorkspaceId
}

// GetTemplateWorkspaceIdOk returns a tuple with the TemplateWorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetTemplateWorkspaceIdOk() (*string, bool) {
	if o == nil || o.TemplateWorkspaceId == nil {
		return nil, false
	}
	return o.TemplateWorkspaceId, true
}

// HasTemplateWorkspaceId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasTemplateWorkspaceId() bool {
	if o != nil && o.TemplateWorkspaceId != nil {
		return true
	}

	return false
}

// SetTemplateWorkspaceId gets a reference to the given string and assigns it to the TemplateWorkspaceId field.
func (o *BTDrawingParams) SetTemplateWorkspaceId(v string) {
	o.TemplateWorkspaceId = &v
}

// GetTitleblock returns the Titleblock field value if set, zero value otherwise.
func (o *BTDrawingParams) GetTitleblock() bool {
	if o == nil || o.Titleblock == nil {
		var ret bool
		return ret
	}
	return *o.Titleblock
}

// GetTitleblockOk returns a tuple with the Titleblock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetTitleblockOk() (*bool, bool) {
	if o == nil || o.Titleblock == nil {
		return nil, false
	}
	return o.Titleblock, true
}

// HasTitleblock returns a boolean if a field has been set.
func (o *BTDrawingParams) HasTitleblock() bool {
	if o != nil && o.Titleblock != nil {
		return true
	}

	return false
}

// SetTitleblock gets a reference to the given bool and assigns it to the Titleblock field.
func (o *BTDrawingParams) SetTitleblock(v bool) {
	o.Titleblock = &v
}

// GetUnits returns the Units field value if set, zero value otherwise.
func (o *BTDrawingParams) GetUnits() string {
	if o == nil || o.Units == nil {
		var ret string
		return ret
	}
	return *o.Units
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetUnitsOk() (*string, bool) {
	if o == nil || o.Units == nil {
		return nil, false
	}
	return o.Units, true
}

// HasUnits returns a boolean if a field has been set.
func (o *BTDrawingParams) HasUnits() bool {
	if o != nil && o.Units != nil {
		return true
	}

	return false
}

// SetUnits gets a reference to the given string and assigns it to the Units field.
func (o *BTDrawingParams) SetUnits(v string) {
	o.Units = &v
}

// GetViews returns the Views field value if set, zero value otherwise.
func (o *BTDrawingParams) GetViews() string {
	if o == nil || o.Views == nil {
		var ret string
		return ret
	}
	return *o.Views
}

// GetViewsOk returns a tuple with the Views field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetViewsOk() (*string, bool) {
	if o == nil || o.Views == nil {
		return nil, false
	}
	return o.Views, true
}

// HasViews returns a boolean if a field has been set.
func (o *BTDrawingParams) HasViews() bool {
	if o != nil && o.Views != nil {
		return true
	}

	return false
}

// SetViews gets a reference to the given string and assigns it to the Views field.
func (o *BTDrawingParams) SetViews(v string) {
	o.Views = &v
}

// GetWorkspaceId returns the WorkspaceId field value if set, zero value otherwise.
func (o *BTDrawingParams) GetWorkspaceId() string {
	if o == nil || o.WorkspaceId == nil {
		var ret string
		return ret
	}
	return *o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDrawingParams) GetWorkspaceIdOk() (*string, bool) {
	if o == nil || o.WorkspaceId == nil {
		return nil, false
	}
	return o.WorkspaceId, true
}

// HasWorkspaceId returns a boolean if a field has been set.
func (o *BTDrawingParams) HasWorkspaceId() bool {
	if o != nil && o.WorkspaceId != nil {
		return true
	}

	return false
}

// SetWorkspaceId gets a reference to the given string and assigns it to the WorkspaceId field.
func (o *BTDrawingParams) SetWorkspaceId(v string) {
	o.WorkspaceId = &v
}

func (o BTDrawingParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Border != nil {
		toSerialize["border"] = o.Border
	}
	if o.ComputeIntersection != nil {
		toSerialize["computeIntersection"] = o.ComputeIntersection
	}
	if o.DecimalSeparator != nil {
		toSerialize["decimalSeparator"] = o.DecimalSeparator
	}
	if o.DisplayStateId != nil {
		toSerialize["displayStateId"] = o.DisplayStateId
	}
	if o.DocumentId != nil {
		toSerialize["documentId"] = o.DocumentId
	}
	if o.DocumentMicroversionId != nil {
		toSerialize["documentMicroversionId"] = o.DocumentMicroversionId
	}
	if o.DrawingName != nil {
		toSerialize["drawingName"] = o.DrawingName
	}
	if o.ElementConfiguration != nil {
		toSerialize["elementConfiguration"] = o.ElementConfiguration
	}
	if o.ElementId != nil {
		toSerialize["elementId"] = o.ElementId
	}
	if o.ElementMicroversionId != nil {
		toSerialize["elementMicroversionId"] = o.ElementMicroversionId
	}
	if o.ExplosionId != nil {
		toSerialize["explosionId"] = o.ExplosionId
	}
	if o.ExternalDocumentId != nil {
		toSerialize["externalDocumentId"] = o.ExternalDocumentId
	}
	if o.ExternalDocumentVersionId != nil {
		toSerialize["externalDocumentVersionId"] = o.ExternalDocumentVersionId
	}
	if o.HiddenLines != nil {
		toSerialize["hiddenLines"] = o.HiddenLines
	}
	if o.IncludeSurfaces != nil {
		toSerialize["includeSurfaces"] = o.IncludeSurfaces
	}
	if o.IncludeWires != nil {
		toSerialize["includeWires"] = o.IncludeWires
	}
	if o.IsFlattenedPart != nil {
		toSerialize["isFlattenedPart"] = o.IsFlattenedPart
	}
	if o.IsSketchOnly != nil {
		toSerialize["isSketchOnly"] = o.IsSketchOnly
	}
	if o.IsSurface != nil {
		toSerialize["isSurface"] = o.IsSurface
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.ModelType != nil {
		toSerialize["modelType"] = o.ModelType
	}
	if o.NamedPositionId != nil {
		toSerialize["namedPositionId"] = o.NamedPositionId
	}
	if o.NumberHorizontalZones != nil {
		toSerialize["numberHorizontalZones"] = o.NumberHorizontalZones
	}
	if o.NumberVerticalZones != nil {
		toSerialize["numberVerticalZones"] = o.NumberVerticalZones
	}
	if o.PartId != nil {
		toSerialize["partId"] = o.PartId
	}
	if o.PartNumber != nil {
		toSerialize["partNumber"] = o.PartNumber
	}
	if o.PartQuery != nil {
		toSerialize["partQuery"] = o.PartQuery
	}
	if o.Projection != nil {
		toSerialize["projection"] = o.Projection
	}
	if o.PureSketch != nil {
		toSerialize["pureSketch"] = o.PureSketch
	}
	if o.QualityOption != nil {
		toSerialize["qualityOption"] = o.QualityOption
	}
	if o.ReferenceType != nil {
		toSerialize["referenceType"] = o.ReferenceType
	}
	if o.ReferenceTypeEnum != nil {
		toSerialize["referenceTypeEnum"] = o.ReferenceTypeEnum
	}
	if o.Revision != nil {
		toSerialize["revision"] = o.Revision
	}
	if o.ShowCutGeomOnly != nil {
		toSerialize["showCutGeomOnly"] = o.ShowCutGeomOnly
	}
	if o.SimplificationOption != nil {
		toSerialize["simplificationOption"] = o.SimplificationOption
	}
	if o.SimplificationThreshold != nil {
		toSerialize["simplificationThreshold"] = o.SimplificationThreshold
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.SketchIds != nil {
		toSerialize["sketchIds"] = o.SketchIds
	}
	if o.Standard != nil {
		toSerialize["standard"] = o.Standard
	}
	if o.StartZones != nil {
		toSerialize["startZones"] = o.StartZones
	}
	if o.TemplateArgs != nil {
		toSerialize["templateArgs"] = o.TemplateArgs
	}
	if o.TemplateDocumentId != nil {
		toSerialize["templateDocumentId"] = o.TemplateDocumentId
	}
	if o.TemplateElementId != nil {
		toSerialize["templateElementId"] = o.TemplateElementId
	}
	if o.TemplateName != nil {
		toSerialize["templateName"] = o.TemplateName
	}
	if o.TemplateVersionId != nil {
		toSerialize["templateVersionId"] = o.TemplateVersionId
	}
	if o.TemplateWorkspaceId != nil {
		toSerialize["templateWorkspaceId"] = o.TemplateWorkspaceId
	}
	if o.Titleblock != nil {
		toSerialize["titleblock"] = o.Titleblock
	}
	if o.Units != nil {
		toSerialize["units"] = o.Units
	}
	if o.Views != nil {
		toSerialize["views"] = o.Views
	}
	if o.WorkspaceId != nil {
		toSerialize["workspaceId"] = o.WorkspaceId
	}
	return json.Marshal(toSerialize)
}

type NullableBTDrawingParams struct {
	value *BTDrawingParams
	isSet bool
}

func (v NullableBTDrawingParams) Get() *BTDrawingParams {
	return v.value
}

func (v *NullableBTDrawingParams) Set(val *BTDrawingParams) {
	v.value = val
	v.isSet = true
}

func (v NullableBTDrawingParams) IsSet() bool {
	return v.isSet
}

func (v *NullableBTDrawingParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTDrawingParams(val *BTDrawingParams) *NullableBTDrawingParams {
	return &NullableBTDrawingParams{value: val, isSet: true}
}

func (v NullableBTDrawingParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTDrawingParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
