/*
Onshape REST API

The Onshape REST API consumed by all client. # Authorization The simplest way to authorize and enable the **Try it out** functionality is to sign in to Onshape and use the current session. The **Authorize** button enables other authorization techniques. To ensure the current session isn't used when trying other authentication techniques, make sure to remove the Onshape cookie as per the instructions for your particular browser. Alternatively, a private or incognito window may be used. Here's [how to remove a specific cookie on Chrome](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site). - **Current Session** authorization is enabled by default if the browser is already signed in to [Onshape](/). - **OAuth2** authorization uses an Onshape OAuth2 app created on the [Onshape Developer Portal](https://dev-portal.onshape.com/oauthApps). The redirect URL field should include `https://cad.onshape.com/glassworks/explorer/oauth2-redirect.html`. - **API Key** authorization using basic authentication is also available. The keys can be generated in the [Onshape Developer Portal](https://dev-portal.onshape.com/keys). In the authentication dialog, enter the access key in the `Username` field, and enter the secret key in the `Password` field. Basic authentication should only be used during the development process since sharing API Keys provides the same level of access as a username and password.

API version: 1.171.24257-687de06de652
Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTRevisionInfo A revision of PART/ASSEMBLY etc created by release management.
type BTRevisionInfo struct {
	// The users who approved the release package that created this revision.
	Approvers                 []BTRevisionApproverInfo `json:"approvers,omitempty"`
	AutoObsoletionReleaseId   *string                  `json:"autoObsoletionReleaseId,omitempty"`
	AutoObsoletionReleaseName *string                  `json:"autoObsoletionReleaseName,omitempty"`
	CanExport                 *bool                    `json:"canExport,omitempty"`
	// The company or enterprise ID that owns the resource.
	CompanyId     *string   `json:"companyId,omitempty"`
	Configuration *string   `json:"configuration,omitempty"`
	CreatedAt     *JSONTime `json:"createdAt,omitempty"`
	// The Revision Description metadata property if revision is of a drawing.
	Description *string `json:"description,omitempty"`
	// The document that contains the item.
	DocumentId *string `json:"documentId,omitempty"`
	// The name of the document that contains the item.
	DocumentName *string `json:"documentName,omitempty"`
	// The element that contains the item.
	ElementId *string `json:"elementId,omitempty"`
	// The type of item 0: Part Studio, 1: Assembly, 2: Drawing. 4: Blob
	ElementType          *int32  `json:"elementType,omitempty"`
	ErrorMessage         *string `json:"errorMessage,omitempty"`
	FlatPartInsertableId *string `json:"flatPartInsertableId,omitempty"`
	// URI to fetch complete information of the resource.
	Href *string `json:"href,omitempty"`
	// Id of the resource.
	Id           *string `json:"id,omitempty"`
	InsertableId *string `json:"insertableId,omitempty"`
	// Whether the revision has been obsoleted.
	IsObsolete *bool `json:"isObsolete,omitempty"`
	// If true, the revision can be created again.
	IsRereleasable *bool   `json:"isRereleasable,omitempty"`
	IsTranslatable *bool   `json:"isTranslatable,omitempty"`
	MimeType       *string `json:"mimeType,omitempty"`
	// Name of the resource.
	Name *string `json:"name,omitempty"`
	// The next revision if applicable. null for the latest revision.
	NextRevisionId *string `json:"nextRevisionId,omitempty"`
	// The OBSOLETION release package that obsoleted this revision if applicable.
	ObsoletionPackageId *string `json:"obsoletionPackageId,omitempty"`
	PartId              *string `json:"partId,omitempty"`
	// The Part Number with which the item was revised.
	PartNumber *string `json:"partNumber,omitempty"`
	// The previous revision if applicable. null for first revision.
	PreviousRevisionId *string   `json:"previousRevisionId,omitempty"`
	ReleaseCreatedDate *JSONTime `json:"releaseCreatedDate,omitempty"`
	// The release package that created this revision.
	ReleaseId *string `json:"releaseId,omitempty"`
	// The name of the release package that created this item.
	ReleaseName *string            `json:"releaseName,omitempty"`
	ReleasedBy  *BTUserSummaryInfo `json:"releasedBy,omitempty"`
	// The id of the revision.
	Revision       *string `json:"revision,omitempty"`
	RevisionRuleId *string `json:"revisionRuleId,omitempty"`
	// The version of the document that contains this revision.
	VersionId *string `json:"versionId,omitempty"`
	// The name of the version of the document that contains this revision.
	VersionName *string `json:"versionName,omitempty"`
	// URI to visualize the resource in a webclient if applicable.
	ViewRef *string `json:"viewRef,omitempty"`
}

// NewBTRevisionInfo instantiates a new BTRevisionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTRevisionInfo() *BTRevisionInfo {
	this := BTRevisionInfo{}
	return &this
}

// NewBTRevisionInfoWithDefaults instantiates a new BTRevisionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTRevisionInfoWithDefaults() *BTRevisionInfo {
	this := BTRevisionInfo{}
	return &this
}

// GetApprovers returns the Approvers field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetApprovers() []BTRevisionApproverInfo {
	if o == nil || o.Approvers == nil {
		var ret []BTRevisionApproverInfo
		return ret
	}
	return o.Approvers
}

// GetApproversOk returns a tuple with the Approvers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetApproversOk() ([]BTRevisionApproverInfo, bool) {
	if o == nil || o.Approvers == nil {
		return nil, false
	}
	return o.Approvers, true
}

// HasApprovers returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasApprovers() bool {
	if o != nil && o.Approvers != nil {
		return true
	}

	return false
}

// SetApprovers gets a reference to the given []BTRevisionApproverInfo and assigns it to the Approvers field.
func (o *BTRevisionInfo) SetApprovers(v []BTRevisionApproverInfo) {
	o.Approvers = v
}

// GetAutoObsoletionReleaseId returns the AutoObsoletionReleaseId field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetAutoObsoletionReleaseId() string {
	if o == nil || o.AutoObsoletionReleaseId == nil {
		var ret string
		return ret
	}
	return *o.AutoObsoletionReleaseId
}

// GetAutoObsoletionReleaseIdOk returns a tuple with the AutoObsoletionReleaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetAutoObsoletionReleaseIdOk() (*string, bool) {
	if o == nil || o.AutoObsoletionReleaseId == nil {
		return nil, false
	}
	return o.AutoObsoletionReleaseId, true
}

// HasAutoObsoletionReleaseId returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasAutoObsoletionReleaseId() bool {
	if o != nil && o.AutoObsoletionReleaseId != nil {
		return true
	}

	return false
}

// SetAutoObsoletionReleaseId gets a reference to the given string and assigns it to the AutoObsoletionReleaseId field.
func (o *BTRevisionInfo) SetAutoObsoletionReleaseId(v string) {
	o.AutoObsoletionReleaseId = &v
}

// GetAutoObsoletionReleaseName returns the AutoObsoletionReleaseName field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetAutoObsoletionReleaseName() string {
	if o == nil || o.AutoObsoletionReleaseName == nil {
		var ret string
		return ret
	}
	return *o.AutoObsoletionReleaseName
}

// GetAutoObsoletionReleaseNameOk returns a tuple with the AutoObsoletionReleaseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetAutoObsoletionReleaseNameOk() (*string, bool) {
	if o == nil || o.AutoObsoletionReleaseName == nil {
		return nil, false
	}
	return o.AutoObsoletionReleaseName, true
}

// HasAutoObsoletionReleaseName returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasAutoObsoletionReleaseName() bool {
	if o != nil && o.AutoObsoletionReleaseName != nil {
		return true
	}

	return false
}

// SetAutoObsoletionReleaseName gets a reference to the given string and assigns it to the AutoObsoletionReleaseName field.
func (o *BTRevisionInfo) SetAutoObsoletionReleaseName(v string) {
	o.AutoObsoletionReleaseName = &v
}

// GetCanExport returns the CanExport field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetCanExport() bool {
	if o == nil || o.CanExport == nil {
		var ret bool
		return ret
	}
	return *o.CanExport
}

// GetCanExportOk returns a tuple with the CanExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetCanExportOk() (*bool, bool) {
	if o == nil || o.CanExport == nil {
		return nil, false
	}
	return o.CanExport, true
}

// HasCanExport returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasCanExport() bool {
	if o != nil && o.CanExport != nil {
		return true
	}

	return false
}

// SetCanExport gets a reference to the given bool and assigns it to the CanExport field.
func (o *BTRevisionInfo) SetCanExport(v bool) {
	o.CanExport = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetCompanyId() string {
	if o == nil || o.CompanyId == nil {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetCompanyIdOk() (*string, bool) {
	if o == nil || o.CompanyId == nil {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasCompanyId() bool {
	if o != nil && o.CompanyId != nil {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *BTRevisionInfo) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetConfiguration() string {
	if o == nil || o.Configuration == nil {
		var ret string
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetConfigurationOk() (*string, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given string and assigns it to the Configuration field.
func (o *BTRevisionInfo) SetConfiguration(v string) {
	o.Configuration = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetCreatedAt() JSONTime {
	if o == nil || o.CreatedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetCreatedAtOk() (*JSONTime, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given JSONTime and assigns it to the CreatedAt field.
func (o *BTRevisionInfo) SetCreatedAt(v JSONTime) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BTRevisionInfo) SetDescription(v string) {
	o.Description = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetDocumentId() string {
	if o == nil || o.DocumentId == nil {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetDocumentIdOk() (*string, bool) {
	if o == nil || o.DocumentId == nil {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasDocumentId() bool {
	if o != nil && o.DocumentId != nil {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *BTRevisionInfo) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetDocumentName returns the DocumentName field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetDocumentName() string {
	if o == nil || o.DocumentName == nil {
		var ret string
		return ret
	}
	return *o.DocumentName
}

// GetDocumentNameOk returns a tuple with the DocumentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetDocumentNameOk() (*string, bool) {
	if o == nil || o.DocumentName == nil {
		return nil, false
	}
	return o.DocumentName, true
}

// HasDocumentName returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasDocumentName() bool {
	if o != nil && o.DocumentName != nil {
		return true
	}

	return false
}

// SetDocumentName gets a reference to the given string and assigns it to the DocumentName field.
func (o *BTRevisionInfo) SetDocumentName(v string) {
	o.DocumentName = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetElementId() string {
	if o == nil || o.ElementId == nil {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetElementIdOk() (*string, bool) {
	if o == nil || o.ElementId == nil {
		return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasElementId() bool {
	if o != nil && o.ElementId != nil {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *BTRevisionInfo) SetElementId(v string) {
	o.ElementId = &v
}

// GetElementType returns the ElementType field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetElementType() int32 {
	if o == nil || o.ElementType == nil {
		var ret int32
		return ret
	}
	return *o.ElementType
}

// GetElementTypeOk returns a tuple with the ElementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetElementTypeOk() (*int32, bool) {
	if o == nil || o.ElementType == nil {
		return nil, false
	}
	return o.ElementType, true
}

// HasElementType returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasElementType() bool {
	if o != nil && o.ElementType != nil {
		return true
	}

	return false
}

// SetElementType gets a reference to the given int32 and assigns it to the ElementType field.
func (o *BTRevisionInfo) SetElementType(v int32) {
	o.ElementType = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetErrorMessage() string {
	if o == nil || o.ErrorMessage == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetErrorMessageOk() (*string, bool) {
	if o == nil || o.ErrorMessage == nil {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage != nil {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *BTRevisionInfo) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetFlatPartInsertableId returns the FlatPartInsertableId field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetFlatPartInsertableId() string {
	if o == nil || o.FlatPartInsertableId == nil {
		var ret string
		return ret
	}
	return *o.FlatPartInsertableId
}

// GetFlatPartInsertableIdOk returns a tuple with the FlatPartInsertableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetFlatPartInsertableIdOk() (*string, bool) {
	if o == nil || o.FlatPartInsertableId == nil {
		return nil, false
	}
	return o.FlatPartInsertableId, true
}

// HasFlatPartInsertableId returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasFlatPartInsertableId() bool {
	if o != nil && o.FlatPartInsertableId != nil {
		return true
	}

	return false
}

// SetFlatPartInsertableId gets a reference to the given string and assigns it to the FlatPartInsertableId field.
func (o *BTRevisionInfo) SetFlatPartInsertableId(v string) {
	o.FlatPartInsertableId = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTRevisionInfo) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTRevisionInfo) SetId(v string) {
	o.Id = &v
}

// GetInsertableId returns the InsertableId field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetInsertableId() string {
	if o == nil || o.InsertableId == nil {
		var ret string
		return ret
	}
	return *o.InsertableId
}

// GetInsertableIdOk returns a tuple with the InsertableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetInsertableIdOk() (*string, bool) {
	if o == nil || o.InsertableId == nil {
		return nil, false
	}
	return o.InsertableId, true
}

// HasInsertableId returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasInsertableId() bool {
	if o != nil && o.InsertableId != nil {
		return true
	}

	return false
}

// SetInsertableId gets a reference to the given string and assigns it to the InsertableId field.
func (o *BTRevisionInfo) SetInsertableId(v string) {
	o.InsertableId = &v
}

// GetIsObsolete returns the IsObsolete field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetIsObsolete() bool {
	if o == nil || o.IsObsolete == nil {
		var ret bool
		return ret
	}
	return *o.IsObsolete
}

// GetIsObsoleteOk returns a tuple with the IsObsolete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetIsObsoleteOk() (*bool, bool) {
	if o == nil || o.IsObsolete == nil {
		return nil, false
	}
	return o.IsObsolete, true
}

// HasIsObsolete returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasIsObsolete() bool {
	if o != nil && o.IsObsolete != nil {
		return true
	}

	return false
}

// SetIsObsolete gets a reference to the given bool and assigns it to the IsObsolete field.
func (o *BTRevisionInfo) SetIsObsolete(v bool) {
	o.IsObsolete = &v
}

// GetIsRereleasable returns the IsRereleasable field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetIsRereleasable() bool {
	if o == nil || o.IsRereleasable == nil {
		var ret bool
		return ret
	}
	return *o.IsRereleasable
}

// GetIsRereleasableOk returns a tuple with the IsRereleasable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetIsRereleasableOk() (*bool, bool) {
	if o == nil || o.IsRereleasable == nil {
		return nil, false
	}
	return o.IsRereleasable, true
}

// HasIsRereleasable returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasIsRereleasable() bool {
	if o != nil && o.IsRereleasable != nil {
		return true
	}

	return false
}

// SetIsRereleasable gets a reference to the given bool and assigns it to the IsRereleasable field.
func (o *BTRevisionInfo) SetIsRereleasable(v bool) {
	o.IsRereleasable = &v
}

// GetIsTranslatable returns the IsTranslatable field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetIsTranslatable() bool {
	if o == nil || o.IsTranslatable == nil {
		var ret bool
		return ret
	}
	return *o.IsTranslatable
}

// GetIsTranslatableOk returns a tuple with the IsTranslatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetIsTranslatableOk() (*bool, bool) {
	if o == nil || o.IsTranslatable == nil {
		return nil, false
	}
	return o.IsTranslatable, true
}

// HasIsTranslatable returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasIsTranslatable() bool {
	if o != nil && o.IsTranslatable != nil {
		return true
	}

	return false
}

// SetIsTranslatable gets a reference to the given bool and assigns it to the IsTranslatable field.
func (o *BTRevisionInfo) SetIsTranslatable(v bool) {
	o.IsTranslatable = &v
}

// GetMimeType returns the MimeType field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetMimeType() string {
	if o == nil || o.MimeType == nil {
		var ret string
		return ret
	}
	return *o.MimeType
}

// GetMimeTypeOk returns a tuple with the MimeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetMimeTypeOk() (*string, bool) {
	if o == nil || o.MimeType == nil {
		return nil, false
	}
	return o.MimeType, true
}

// HasMimeType returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasMimeType() bool {
	if o != nil && o.MimeType != nil {
		return true
	}

	return false
}

// SetMimeType gets a reference to the given string and assigns it to the MimeType field.
func (o *BTRevisionInfo) SetMimeType(v string) {
	o.MimeType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTRevisionInfo) SetName(v string) {
	o.Name = &v
}

// GetNextRevisionId returns the NextRevisionId field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetNextRevisionId() string {
	if o == nil || o.NextRevisionId == nil {
		var ret string
		return ret
	}
	return *o.NextRevisionId
}

// GetNextRevisionIdOk returns a tuple with the NextRevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetNextRevisionIdOk() (*string, bool) {
	if o == nil || o.NextRevisionId == nil {
		return nil, false
	}
	return o.NextRevisionId, true
}

// HasNextRevisionId returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasNextRevisionId() bool {
	if o != nil && o.NextRevisionId != nil {
		return true
	}

	return false
}

// SetNextRevisionId gets a reference to the given string and assigns it to the NextRevisionId field.
func (o *BTRevisionInfo) SetNextRevisionId(v string) {
	o.NextRevisionId = &v
}

// GetObsoletionPackageId returns the ObsoletionPackageId field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetObsoletionPackageId() string {
	if o == nil || o.ObsoletionPackageId == nil {
		var ret string
		return ret
	}
	return *o.ObsoletionPackageId
}

// GetObsoletionPackageIdOk returns a tuple with the ObsoletionPackageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetObsoletionPackageIdOk() (*string, bool) {
	if o == nil || o.ObsoletionPackageId == nil {
		return nil, false
	}
	return o.ObsoletionPackageId, true
}

// HasObsoletionPackageId returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasObsoletionPackageId() bool {
	if o != nil && o.ObsoletionPackageId != nil {
		return true
	}

	return false
}

// SetObsoletionPackageId gets a reference to the given string and assigns it to the ObsoletionPackageId field.
func (o *BTRevisionInfo) SetObsoletionPackageId(v string) {
	o.ObsoletionPackageId = &v
}

// GetPartId returns the PartId field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetPartId() string {
	if o == nil || o.PartId == nil {
		var ret string
		return ret
	}
	return *o.PartId
}

// GetPartIdOk returns a tuple with the PartId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetPartIdOk() (*string, bool) {
	if o == nil || o.PartId == nil {
		return nil, false
	}
	return o.PartId, true
}

// HasPartId returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasPartId() bool {
	if o != nil && o.PartId != nil {
		return true
	}

	return false
}

// SetPartId gets a reference to the given string and assigns it to the PartId field.
func (o *BTRevisionInfo) SetPartId(v string) {
	o.PartId = &v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetPartNumber() string {
	if o == nil || o.PartNumber == nil {
		var ret string
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetPartNumberOk() (*string, bool) {
	if o == nil || o.PartNumber == nil {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasPartNumber() bool {
	if o != nil && o.PartNumber != nil {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *BTRevisionInfo) SetPartNumber(v string) {
	o.PartNumber = &v
}

// GetPreviousRevisionId returns the PreviousRevisionId field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetPreviousRevisionId() string {
	if o == nil || o.PreviousRevisionId == nil {
		var ret string
		return ret
	}
	return *o.PreviousRevisionId
}

// GetPreviousRevisionIdOk returns a tuple with the PreviousRevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetPreviousRevisionIdOk() (*string, bool) {
	if o == nil || o.PreviousRevisionId == nil {
		return nil, false
	}
	return o.PreviousRevisionId, true
}

// HasPreviousRevisionId returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasPreviousRevisionId() bool {
	if o != nil && o.PreviousRevisionId != nil {
		return true
	}

	return false
}

// SetPreviousRevisionId gets a reference to the given string and assigns it to the PreviousRevisionId field.
func (o *BTRevisionInfo) SetPreviousRevisionId(v string) {
	o.PreviousRevisionId = &v
}

// GetReleaseCreatedDate returns the ReleaseCreatedDate field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetReleaseCreatedDate() JSONTime {
	if o == nil || o.ReleaseCreatedDate == nil {
		var ret JSONTime
		return ret
	}
	return *o.ReleaseCreatedDate
}

// GetReleaseCreatedDateOk returns a tuple with the ReleaseCreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetReleaseCreatedDateOk() (*JSONTime, bool) {
	if o == nil || o.ReleaseCreatedDate == nil {
		return nil, false
	}
	return o.ReleaseCreatedDate, true
}

// HasReleaseCreatedDate returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasReleaseCreatedDate() bool {
	if o != nil && o.ReleaseCreatedDate != nil {
		return true
	}

	return false
}

// SetReleaseCreatedDate gets a reference to the given JSONTime and assigns it to the ReleaseCreatedDate field.
func (o *BTRevisionInfo) SetReleaseCreatedDate(v JSONTime) {
	o.ReleaseCreatedDate = &v
}

// GetReleaseId returns the ReleaseId field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetReleaseId() string {
	if o == nil || o.ReleaseId == nil {
		var ret string
		return ret
	}
	return *o.ReleaseId
}

// GetReleaseIdOk returns a tuple with the ReleaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetReleaseIdOk() (*string, bool) {
	if o == nil || o.ReleaseId == nil {
		return nil, false
	}
	return o.ReleaseId, true
}

// HasReleaseId returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasReleaseId() bool {
	if o != nil && o.ReleaseId != nil {
		return true
	}

	return false
}

// SetReleaseId gets a reference to the given string and assigns it to the ReleaseId field.
func (o *BTRevisionInfo) SetReleaseId(v string) {
	o.ReleaseId = &v
}

// GetReleaseName returns the ReleaseName field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetReleaseName() string {
	if o == nil || o.ReleaseName == nil {
		var ret string
		return ret
	}
	return *o.ReleaseName
}

// GetReleaseNameOk returns a tuple with the ReleaseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetReleaseNameOk() (*string, bool) {
	if o == nil || o.ReleaseName == nil {
		return nil, false
	}
	return o.ReleaseName, true
}

// HasReleaseName returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasReleaseName() bool {
	if o != nil && o.ReleaseName != nil {
		return true
	}

	return false
}

// SetReleaseName gets a reference to the given string and assigns it to the ReleaseName field.
func (o *BTRevisionInfo) SetReleaseName(v string) {
	o.ReleaseName = &v
}

// GetReleasedBy returns the ReleasedBy field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetReleasedBy() BTUserSummaryInfo {
	if o == nil || o.ReleasedBy == nil {
		var ret BTUserSummaryInfo
		return ret
	}
	return *o.ReleasedBy
}

// GetReleasedByOk returns a tuple with the ReleasedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetReleasedByOk() (*BTUserSummaryInfo, bool) {
	if o == nil || o.ReleasedBy == nil {
		return nil, false
	}
	return o.ReleasedBy, true
}

// HasReleasedBy returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasReleasedBy() bool {
	if o != nil && o.ReleasedBy != nil {
		return true
	}

	return false
}

// SetReleasedBy gets a reference to the given BTUserSummaryInfo and assigns it to the ReleasedBy field.
func (o *BTRevisionInfo) SetReleasedBy(v BTUserSummaryInfo) {
	o.ReleasedBy = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetRevision() string {
	if o == nil || o.Revision == nil {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetRevisionOk() (*string, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *BTRevisionInfo) SetRevision(v string) {
	o.Revision = &v
}

// GetRevisionRuleId returns the RevisionRuleId field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetRevisionRuleId() string {
	if o == nil || o.RevisionRuleId == nil {
		var ret string
		return ret
	}
	return *o.RevisionRuleId
}

// GetRevisionRuleIdOk returns a tuple with the RevisionRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetRevisionRuleIdOk() (*string, bool) {
	if o == nil || o.RevisionRuleId == nil {
		return nil, false
	}
	return o.RevisionRuleId, true
}

// HasRevisionRuleId returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasRevisionRuleId() bool {
	if o != nil && o.RevisionRuleId != nil {
		return true
	}

	return false
}

// SetRevisionRuleId gets a reference to the given string and assigns it to the RevisionRuleId field.
func (o *BTRevisionInfo) SetRevisionRuleId(v string) {
	o.RevisionRuleId = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetVersionId() string {
	if o == nil || o.VersionId == nil {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetVersionIdOk() (*string, bool) {
	if o == nil || o.VersionId == nil {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasVersionId() bool {
	if o != nil && o.VersionId != nil {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *BTRevisionInfo) SetVersionId(v string) {
	o.VersionId = &v
}

// GetVersionName returns the VersionName field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetVersionName() string {
	if o == nil || o.VersionName == nil {
		var ret string
		return ret
	}
	return *o.VersionName
}

// GetVersionNameOk returns a tuple with the VersionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetVersionNameOk() (*string, bool) {
	if o == nil || o.VersionName == nil {
		return nil, false
	}
	return o.VersionName, true
}

// HasVersionName returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasVersionName() bool {
	if o != nil && o.VersionName != nil {
		return true
	}

	return false
}

// SetVersionName gets a reference to the given string and assigns it to the VersionName field.
func (o *BTRevisionInfo) SetVersionName(v string) {
	o.VersionName = &v
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *BTRevisionInfo) GetViewRef() string {
	if o == nil || o.ViewRef == nil {
		var ret string
		return ret
	}
	return *o.ViewRef
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTRevisionInfo) GetViewRefOk() (*string, bool) {
	if o == nil || o.ViewRef == nil {
		return nil, false
	}
	return o.ViewRef, true
}

// HasViewRef returns a boolean if a field has been set.
func (o *BTRevisionInfo) HasViewRef() bool {
	if o != nil && o.ViewRef != nil {
		return true
	}

	return false
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *BTRevisionInfo) SetViewRef(v string) {
	o.ViewRef = &v
}

func (o BTRevisionInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Approvers != nil {
		toSerialize["approvers"] = o.Approvers
	}
	if o.AutoObsoletionReleaseId != nil {
		toSerialize["autoObsoletionReleaseId"] = o.AutoObsoletionReleaseId
	}
	if o.AutoObsoletionReleaseName != nil {
		toSerialize["autoObsoletionReleaseName"] = o.AutoObsoletionReleaseName
	}
	if o.CanExport != nil {
		toSerialize["canExport"] = o.CanExport
	}
	if o.CompanyId != nil {
		toSerialize["companyId"] = o.CompanyId
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DocumentId != nil {
		toSerialize["documentId"] = o.DocumentId
	}
	if o.DocumentName != nil {
		toSerialize["documentName"] = o.DocumentName
	}
	if o.ElementId != nil {
		toSerialize["elementId"] = o.ElementId
	}
	if o.ElementType != nil {
		toSerialize["elementType"] = o.ElementType
	}
	if o.ErrorMessage != nil {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if o.FlatPartInsertableId != nil {
		toSerialize["flatPartInsertableId"] = o.FlatPartInsertableId
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InsertableId != nil {
		toSerialize["insertableId"] = o.InsertableId
	}
	if o.IsObsolete != nil {
		toSerialize["isObsolete"] = o.IsObsolete
	}
	if o.IsRereleasable != nil {
		toSerialize["isRereleasable"] = o.IsRereleasable
	}
	if o.IsTranslatable != nil {
		toSerialize["isTranslatable"] = o.IsTranslatable
	}
	if o.MimeType != nil {
		toSerialize["mimeType"] = o.MimeType
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NextRevisionId != nil {
		toSerialize["nextRevisionId"] = o.NextRevisionId
	}
	if o.ObsoletionPackageId != nil {
		toSerialize["obsoletionPackageId"] = o.ObsoletionPackageId
	}
	if o.PartId != nil {
		toSerialize["partId"] = o.PartId
	}
	if o.PartNumber != nil {
		toSerialize["partNumber"] = o.PartNumber
	}
	if o.PreviousRevisionId != nil {
		toSerialize["previousRevisionId"] = o.PreviousRevisionId
	}
	if o.ReleaseCreatedDate != nil {
		toSerialize["releaseCreatedDate"] = o.ReleaseCreatedDate
	}
	if o.ReleaseId != nil {
		toSerialize["releaseId"] = o.ReleaseId
	}
	if o.ReleaseName != nil {
		toSerialize["releaseName"] = o.ReleaseName
	}
	if o.ReleasedBy != nil {
		toSerialize["releasedBy"] = o.ReleasedBy
	}
	if o.Revision != nil {
		toSerialize["revision"] = o.Revision
	}
	if o.RevisionRuleId != nil {
		toSerialize["revisionRuleId"] = o.RevisionRuleId
	}
	if o.VersionId != nil {
		toSerialize["versionId"] = o.VersionId
	}
	if o.VersionName != nil {
		toSerialize["versionName"] = o.VersionName
	}
	if o.ViewRef != nil {
		toSerialize["viewRef"] = o.ViewRef
	}
	return json.Marshal(toSerialize)
}

type NullableBTRevisionInfo struct {
	value *BTRevisionInfo
	isSet bool
}

func (v NullableBTRevisionInfo) Get() *BTRevisionInfo {
	return v.value
}

func (v *NullableBTRevisionInfo) Set(val *BTRevisionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTRevisionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTRevisionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTRevisionInfo(val *BTRevisionInfo) *NullableBTRevisionInfo {
	return &NullableBTRevisionInfo{value: val, isSet: true}
}

func (v NullableBTRevisionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTRevisionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
