/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTGlobalPermissionInfoItem struct for BTGlobalPermissionInfoItem
type BTGlobalPermissionInfoItem struct {
	Code       *int32           `json:"code,omitempty"`
	Identities []BTIdentityInfo `json:"identities,omitempty"`
}

// NewBTGlobalPermissionInfoItem instantiates a new BTGlobalPermissionInfoItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTGlobalPermissionInfoItem() *BTGlobalPermissionInfoItem {
	this := BTGlobalPermissionInfoItem{}
	return &this
}

// NewBTGlobalPermissionInfoItemWithDefaults instantiates a new BTGlobalPermissionInfoItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTGlobalPermissionInfoItemWithDefaults() *BTGlobalPermissionInfoItem {
	this := BTGlobalPermissionInfoItem{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *BTGlobalPermissionInfoItem) GetCode() int32 {
	if o == nil || o.Code == nil {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalPermissionInfoItem) GetCodeOk() (*int32, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *BTGlobalPermissionInfoItem) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *BTGlobalPermissionInfoItem) SetCode(v int32) {
	o.Code = &v
}

// GetIdentities returns the Identities field value if set, zero value otherwise.
func (o *BTGlobalPermissionInfoItem) GetIdentities() []BTIdentityInfo {
	if o == nil || o.Identities == nil {
		var ret []BTIdentityInfo
		return ret
	}
	return o.Identities
}

// GetIdentitiesOk returns a tuple with the Identities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalPermissionInfoItem) GetIdentitiesOk() ([]BTIdentityInfo, bool) {
	if o == nil || o.Identities == nil {
		return nil, false
	}
	return o.Identities, true
}

// HasIdentities returns a boolean if a field has been set.
func (o *BTGlobalPermissionInfoItem) HasIdentities() bool {
	if o != nil && o.Identities != nil {
		return true
	}

	return false
}

// SetIdentities gets a reference to the given []BTIdentityInfo and assigns it to the Identities field.
func (o *BTGlobalPermissionInfoItem) SetIdentities(v []BTIdentityInfo) {
	o.Identities = v
}

func (o BTGlobalPermissionInfoItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Identities != nil {
		toSerialize["identities"] = o.Identities
	}
	return json.Marshal(toSerialize)
}

type NullableBTGlobalPermissionInfoItem struct {
	value *BTGlobalPermissionInfoItem
	isSet bool
}

func (v NullableBTGlobalPermissionInfoItem) Get() *BTGlobalPermissionInfoItem {
	return v.value
}

func (v *NullableBTGlobalPermissionInfoItem) Set(val *BTGlobalPermissionInfoItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBTGlobalPermissionInfoItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBTGlobalPermissionInfoItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTGlobalPermissionInfoItem(val *BTGlobalPermissionInfoItem) *NullableBTGlobalPermissionInfoItem {
	return &NullableBTGlobalPermissionInfoItem{value: val, isSet: true}
}

func (v NullableBTGlobalPermissionInfoItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTGlobalPermissionInfoItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
