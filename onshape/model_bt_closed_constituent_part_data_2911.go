/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTClosedConstituentPartData2911 struct for BTClosedConstituentPartData2911
type BTClosedConstituentPartData2911 struct {
	BodyType           *GBTBodyType  `json:"bodyType,omitempty"`
	BtType             *string       `json:"btType,omitempty"`
	IsActiveSheetMetal *bool         `json:"isActiveSheetMetal,omitempty"`
	IsMesh             *bool         `json:"isMesh,omitempty"`
	MeshState          *GBTMeshState `json:"meshState,omitempty"`
}

// NewBTClosedConstituentPartData2911 instantiates a new BTClosedConstituentPartData2911 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTClosedConstituentPartData2911() *BTClosedConstituentPartData2911 {
	this := BTClosedConstituentPartData2911{}
	return &this
}

// NewBTClosedConstituentPartData2911WithDefaults instantiates a new BTClosedConstituentPartData2911 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTClosedConstituentPartData2911WithDefaults() *BTClosedConstituentPartData2911 {
	this := BTClosedConstituentPartData2911{}
	return &this
}

// GetBodyType returns the BodyType field value if set, zero value otherwise.
func (o *BTClosedConstituentPartData2911) GetBodyType() GBTBodyType {
	if o == nil || o.BodyType == nil {
		var ret GBTBodyType
		return ret
	}
	return *o.BodyType
}

// GetBodyTypeOk returns a tuple with the BodyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTClosedConstituentPartData2911) GetBodyTypeOk() (*GBTBodyType, bool) {
	if o == nil || o.BodyType == nil {
		return nil, false
	}
	return o.BodyType, true
}

// HasBodyType returns a boolean if a field has been set.
func (o *BTClosedConstituentPartData2911) HasBodyType() bool {
	if o != nil && o.BodyType != nil {
		return true
	}

	return false
}

// SetBodyType gets a reference to the given GBTBodyType and assigns it to the BodyType field.
func (o *BTClosedConstituentPartData2911) SetBodyType(v GBTBodyType) {
	o.BodyType = &v
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTClosedConstituentPartData2911) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTClosedConstituentPartData2911) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTClosedConstituentPartData2911) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTClosedConstituentPartData2911) SetBtType(v string) {
	o.BtType = &v
}

// GetIsActiveSheetMetal returns the IsActiveSheetMetal field value if set, zero value otherwise.
func (o *BTClosedConstituentPartData2911) GetIsActiveSheetMetal() bool {
	if o == nil || o.IsActiveSheetMetal == nil {
		var ret bool
		return ret
	}
	return *o.IsActiveSheetMetal
}

// GetIsActiveSheetMetalOk returns a tuple with the IsActiveSheetMetal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTClosedConstituentPartData2911) GetIsActiveSheetMetalOk() (*bool, bool) {
	if o == nil || o.IsActiveSheetMetal == nil {
		return nil, false
	}
	return o.IsActiveSheetMetal, true
}

// HasIsActiveSheetMetal returns a boolean if a field has been set.
func (o *BTClosedConstituentPartData2911) HasIsActiveSheetMetal() bool {
	if o != nil && o.IsActiveSheetMetal != nil {
		return true
	}

	return false
}

// SetIsActiveSheetMetal gets a reference to the given bool and assigns it to the IsActiveSheetMetal field.
func (o *BTClosedConstituentPartData2911) SetIsActiveSheetMetal(v bool) {
	o.IsActiveSheetMetal = &v
}

// GetIsMesh returns the IsMesh field value if set, zero value otherwise.
func (o *BTClosedConstituentPartData2911) GetIsMesh() bool {
	if o == nil || o.IsMesh == nil {
		var ret bool
		return ret
	}
	return *o.IsMesh
}

// GetIsMeshOk returns a tuple with the IsMesh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTClosedConstituentPartData2911) GetIsMeshOk() (*bool, bool) {
	if o == nil || o.IsMesh == nil {
		return nil, false
	}
	return o.IsMesh, true
}

// HasIsMesh returns a boolean if a field has been set.
func (o *BTClosedConstituentPartData2911) HasIsMesh() bool {
	if o != nil && o.IsMesh != nil {
		return true
	}

	return false
}

// SetIsMesh gets a reference to the given bool and assigns it to the IsMesh field.
func (o *BTClosedConstituentPartData2911) SetIsMesh(v bool) {
	o.IsMesh = &v
}

// GetMeshState returns the MeshState field value if set, zero value otherwise.
func (o *BTClosedConstituentPartData2911) GetMeshState() GBTMeshState {
	if o == nil || o.MeshState == nil {
		var ret GBTMeshState
		return ret
	}
	return *o.MeshState
}

// GetMeshStateOk returns a tuple with the MeshState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTClosedConstituentPartData2911) GetMeshStateOk() (*GBTMeshState, bool) {
	if o == nil || o.MeshState == nil {
		return nil, false
	}
	return o.MeshState, true
}

// HasMeshState returns a boolean if a field has been set.
func (o *BTClosedConstituentPartData2911) HasMeshState() bool {
	if o != nil && o.MeshState != nil {
		return true
	}

	return false
}

// SetMeshState gets a reference to the given GBTMeshState and assigns it to the MeshState field.
func (o *BTClosedConstituentPartData2911) SetMeshState(v GBTMeshState) {
	o.MeshState = &v
}

func (o BTClosedConstituentPartData2911) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BodyType != nil {
		toSerialize["bodyType"] = o.BodyType
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.IsActiveSheetMetal != nil {
		toSerialize["isActiveSheetMetal"] = o.IsActiveSheetMetal
	}
	if o.IsMesh != nil {
		toSerialize["isMesh"] = o.IsMesh
	}
	if o.MeshState != nil {
		toSerialize["meshState"] = o.MeshState
	}
	return json.Marshal(toSerialize)
}

type NullableBTClosedConstituentPartData2911 struct {
	value *BTClosedConstituentPartData2911
	isSet bool
}

func (v NullableBTClosedConstituentPartData2911) Get() *BTClosedConstituentPartData2911 {
	return v.value
}

func (v *NullableBTClosedConstituentPartData2911) Set(val *BTClosedConstituentPartData2911) {
	v.value = val
	v.isSet = true
}

func (v NullableBTClosedConstituentPartData2911) IsSet() bool {
	return v.isSet
}

func (v *NullableBTClosedConstituentPartData2911) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTClosedConstituentPartData2911(val *BTClosedConstituentPartData2911) *NullableBTClosedConstituentPartData2911 {
	return &NullableBTClosedConstituentPartData2911{value: val, isSet: true}
}

func (v NullableBTClosedConstituentPartData2911) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTClosedConstituentPartData2911) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
