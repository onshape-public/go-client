/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://cad.onshape.com/appstore/dev-portal): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTActiveWorkflowInfo struct for BTActiveWorkflowInfo
type BTActiveWorkflowInfo struct {
	AllowReleaseItemsFromOtherDocuments *bool `json:"allowReleaseItemsFromOtherDocuments,omitempty"`
	CanCurrentUserCreateReleases        *bool `json:"canCurrentUserCreateReleases,omitempty"`
	CanCurrentUserEditStandardContent   *bool `json:"canCurrentUserEditStandardContent,omitempty"`
	CanCurrentUserManageWorkflows       *bool `json:"canCurrentUserManageWorkflows,omitempty"`
	// Deprecated, use canCurrentUserSeePLMItemLink
	CanCurrentUserSeeArenaItemLink *bool `json:"canCurrentUserSeeArenaItemLink,omitempty"`
	CanCurrentUserSeePLMItemLink   *bool `json:"canCurrentUserSeePLMItemLink,omitempty"`
	// Deprecated, use canCurrentUserSyncBomToPLM
	CanCurrentUserSyncBomToArena *bool `json:"canCurrentUserSyncBomToArena,omitempty"`
	CanCurrentUserSyncBomToPLM   *bool `json:"canCurrentUserSyncBomToPLM,omitempty"`
	// Deprecated, use canCurrentUserSyncRevisionsToPLM
	CanCurrentUserSyncRevisionsToArena *bool `json:"canCurrentUserSyncRevisionsToArena,omitempty"`
	CanCurrentUserSyncRevisionsToPLM   *bool `json:"canCurrentUserSyncRevisionsToPLM,omitempty"`
	// Deprecated, use canCurrentUserSyncStandardContentToPLM
	CanCurrentUserSyncStandardContentToArena *bool `json:"canCurrentUserSyncStandardContentToArena,omitempty"`
	CanCurrentUserSyncStandardContentToPLM   *bool `json:"canCurrentUserSyncStandardContentToPLM,omitempty"`
	// Deprecated, use canCurrentUserSyncToPLM
	CanCurrentUserSyncToArena     *bool   `json:"canCurrentUserSyncToArena,omitempty"`
	CanCurrentUserSyncToPLM       *bool   `json:"canCurrentUserSyncToPLM,omitempty"`
	CompanyId                     *string `json:"companyId,omitempty"`
	DocumentId                    *string `json:"documentId,omitempty"`
	DrawingCanDuplicatePartNumber *bool   `json:"drawingCanDuplicatePartNumber,omitempty"`
	// Deprecated, can be determined by checking if the length of releaseWorkflowInfo.pickableWorkflows > 1
	EnabledActiveMultipleWorkflows *bool `json:"enabledActiveMultipleWorkflows,omitempty"`
	// Deprecated, use hasInactiveCustomWorkflows field on the workflowInfo object
	HasInactiveCustomWorkflows *bool                    `json:"hasInactiveCustomWorkflows,omitempty"`
	ObsoletionWorkflow         *BTPublishedWorkflowInfo `json:"obsoletionWorkflow,omitempty"`
	// Deprecated, use obsoletionWorkflowInfo.workflow.id instead
	ObsoletionWorkflowId   *string                   `json:"obsoletionWorkflowId,omitempty"`
	ObsoletionWorkflowInfo *BTActiveWorkflowTypeInfo `json:"obsoletionWorkflowInfo,omitempty"`
	// Deprecated, no current alternative
	OsCategoryIdToArenaNumberFormatId *map[string]string `json:"osCategoryIdToArenaNumberFormatId,omitempty"`
	PLMIntegrationType                *int32             `json:"pLMIntegrationType,omitempty"`
	PLMName                           *string            `json:"pLMName,omitempty"`
	PartNumberingSchemeId             *string            `json:"partNumberingSchemeId,omitempty"`
	// Deprecated, use the pickableWorkflows field on the workflowInfo object
	PickableWorkflows []BTPublishedWorkflowInfo `json:"pickableWorkflows,omitempty"`
	ReleaseWorkflow   *BTPublishedWorkflowInfo  `json:"releaseWorkflow,omitempty"`
	// Deprecated, use releaseWorkflowInfo.workflow.id instead
	ReleaseWorkflowId   *string                   `json:"releaseWorkflowId,omitempty"`
	ReleaseWorkflowInfo *BTActiveWorkflowTypeInfo `json:"releaseWorkflowInfo,omitempty"`
	// Deprecated, no current alternative
	ReleaseableApplications                     []string                  `json:"releaseableApplications,omitempty"`
	StandardContentNumberingSchemeId            *string                   `json:"standardContentNumberingSchemeId,omitempty"`
	StandardContentUsingAutoNumbering           *bool                     `json:"standardContentUsingAutoNumbering,omitempty"`
	StandardContentUsingThirdPartyPartNumbering *bool                     `json:"standardContentUsingThirdPartyPartNumbering,omitempty"`
	TaskWorkflow                                *BTPublishedWorkflowInfo  `json:"taskWorkflow,omitempty"`
	TaskWorkflowInfo                            *BTActiveWorkflowTypeInfo `json:"taskWorkflowInfo,omitempty"`
	UsingAutoPartNumbering                      *bool                     `json:"usingAutoPartNumbering,omitempty"`
	UsingManagedWorkflow                        *bool                     `json:"usingManagedWorkflow,omitempty"`
	UsingThirdPartyPartNumbering                *bool                     `json:"usingThirdPartyPartNumbering,omitempty"`
}

// NewBTActiveWorkflowInfo instantiates a new BTActiveWorkflowInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTActiveWorkflowInfo() *BTActiveWorkflowInfo {
	this := BTActiveWorkflowInfo{}
	return &this
}

// NewBTActiveWorkflowInfoWithDefaults instantiates a new BTActiveWorkflowInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTActiveWorkflowInfoWithDefaults() *BTActiveWorkflowInfo {
	this := BTActiveWorkflowInfo{}
	return &this
}

// GetAllowReleaseItemsFromOtherDocuments returns the AllowReleaseItemsFromOtherDocuments field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetAllowReleaseItemsFromOtherDocuments() bool {
	if o == nil || o.AllowReleaseItemsFromOtherDocuments == nil {
		var ret bool
		return ret
	}
	return *o.AllowReleaseItemsFromOtherDocuments
}

// GetAllowReleaseItemsFromOtherDocumentsOk returns a tuple with the AllowReleaseItemsFromOtherDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetAllowReleaseItemsFromOtherDocumentsOk() (*bool, bool) {
	if o == nil || o.AllowReleaseItemsFromOtherDocuments == nil {
		return nil, false
	}
	return o.AllowReleaseItemsFromOtherDocuments, true
}

// HasAllowReleaseItemsFromOtherDocuments returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasAllowReleaseItemsFromOtherDocuments() bool {
	if o != nil && o.AllowReleaseItemsFromOtherDocuments != nil {
		return true
	}

	return false
}

// SetAllowReleaseItemsFromOtherDocuments gets a reference to the given bool and assigns it to the AllowReleaseItemsFromOtherDocuments field.
func (o *BTActiveWorkflowInfo) SetAllowReleaseItemsFromOtherDocuments(v bool) {
	o.AllowReleaseItemsFromOtherDocuments = &v
}

// GetCanCurrentUserCreateReleases returns the CanCurrentUserCreateReleases field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserCreateReleases() bool {
	if o == nil || o.CanCurrentUserCreateReleases == nil {
		var ret bool
		return ret
	}
	return *o.CanCurrentUserCreateReleases
}

// GetCanCurrentUserCreateReleasesOk returns a tuple with the CanCurrentUserCreateReleases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserCreateReleasesOk() (*bool, bool) {
	if o == nil || o.CanCurrentUserCreateReleases == nil {
		return nil, false
	}
	return o.CanCurrentUserCreateReleases, true
}

// HasCanCurrentUserCreateReleases returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasCanCurrentUserCreateReleases() bool {
	if o != nil && o.CanCurrentUserCreateReleases != nil {
		return true
	}

	return false
}

// SetCanCurrentUserCreateReleases gets a reference to the given bool and assigns it to the CanCurrentUserCreateReleases field.
func (o *BTActiveWorkflowInfo) SetCanCurrentUserCreateReleases(v bool) {
	o.CanCurrentUserCreateReleases = &v
}

// GetCanCurrentUserEditStandardContent returns the CanCurrentUserEditStandardContent field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserEditStandardContent() bool {
	if o == nil || o.CanCurrentUserEditStandardContent == nil {
		var ret bool
		return ret
	}
	return *o.CanCurrentUserEditStandardContent
}

// GetCanCurrentUserEditStandardContentOk returns a tuple with the CanCurrentUserEditStandardContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserEditStandardContentOk() (*bool, bool) {
	if o == nil || o.CanCurrentUserEditStandardContent == nil {
		return nil, false
	}
	return o.CanCurrentUserEditStandardContent, true
}

// HasCanCurrentUserEditStandardContent returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasCanCurrentUserEditStandardContent() bool {
	if o != nil && o.CanCurrentUserEditStandardContent != nil {
		return true
	}

	return false
}

// SetCanCurrentUserEditStandardContent gets a reference to the given bool and assigns it to the CanCurrentUserEditStandardContent field.
func (o *BTActiveWorkflowInfo) SetCanCurrentUserEditStandardContent(v bool) {
	o.CanCurrentUserEditStandardContent = &v
}

// GetCanCurrentUserManageWorkflows returns the CanCurrentUserManageWorkflows field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserManageWorkflows() bool {
	if o == nil || o.CanCurrentUserManageWorkflows == nil {
		var ret bool
		return ret
	}
	return *o.CanCurrentUserManageWorkflows
}

// GetCanCurrentUserManageWorkflowsOk returns a tuple with the CanCurrentUserManageWorkflows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserManageWorkflowsOk() (*bool, bool) {
	if o == nil || o.CanCurrentUserManageWorkflows == nil {
		return nil, false
	}
	return o.CanCurrentUserManageWorkflows, true
}

// HasCanCurrentUserManageWorkflows returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasCanCurrentUserManageWorkflows() bool {
	if o != nil && o.CanCurrentUserManageWorkflows != nil {
		return true
	}

	return false
}

// SetCanCurrentUserManageWorkflows gets a reference to the given bool and assigns it to the CanCurrentUserManageWorkflows field.
func (o *BTActiveWorkflowInfo) SetCanCurrentUserManageWorkflows(v bool) {
	o.CanCurrentUserManageWorkflows = &v
}

// GetCanCurrentUserSeeArenaItemLink returns the CanCurrentUserSeeArenaItemLink field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSeeArenaItemLink() bool {
	if o == nil || o.CanCurrentUserSeeArenaItemLink == nil {
		var ret bool
		return ret
	}
	return *o.CanCurrentUserSeeArenaItemLink
}

// GetCanCurrentUserSeeArenaItemLinkOk returns a tuple with the CanCurrentUserSeeArenaItemLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSeeArenaItemLinkOk() (*bool, bool) {
	if o == nil || o.CanCurrentUserSeeArenaItemLink == nil {
		return nil, false
	}
	return o.CanCurrentUserSeeArenaItemLink, true
}

// HasCanCurrentUserSeeArenaItemLink returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasCanCurrentUserSeeArenaItemLink() bool {
	if o != nil && o.CanCurrentUserSeeArenaItemLink != nil {
		return true
	}

	return false
}

// SetCanCurrentUserSeeArenaItemLink gets a reference to the given bool and assigns it to the CanCurrentUserSeeArenaItemLink field.
func (o *BTActiveWorkflowInfo) SetCanCurrentUserSeeArenaItemLink(v bool) {
	o.CanCurrentUserSeeArenaItemLink = &v
}

// GetCanCurrentUserSeePLMItemLink returns the CanCurrentUserSeePLMItemLink field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSeePLMItemLink() bool {
	if o == nil || o.CanCurrentUserSeePLMItemLink == nil {
		var ret bool
		return ret
	}
	return *o.CanCurrentUserSeePLMItemLink
}

// GetCanCurrentUserSeePLMItemLinkOk returns a tuple with the CanCurrentUserSeePLMItemLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSeePLMItemLinkOk() (*bool, bool) {
	if o == nil || o.CanCurrentUserSeePLMItemLink == nil {
		return nil, false
	}
	return o.CanCurrentUserSeePLMItemLink, true
}

// HasCanCurrentUserSeePLMItemLink returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasCanCurrentUserSeePLMItemLink() bool {
	if o != nil && o.CanCurrentUserSeePLMItemLink != nil {
		return true
	}

	return false
}

// SetCanCurrentUserSeePLMItemLink gets a reference to the given bool and assigns it to the CanCurrentUserSeePLMItemLink field.
func (o *BTActiveWorkflowInfo) SetCanCurrentUserSeePLMItemLink(v bool) {
	o.CanCurrentUserSeePLMItemLink = &v
}

// GetCanCurrentUserSyncBomToArena returns the CanCurrentUserSyncBomToArena field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncBomToArena() bool {
	if o == nil || o.CanCurrentUserSyncBomToArena == nil {
		var ret bool
		return ret
	}
	return *o.CanCurrentUserSyncBomToArena
}

// GetCanCurrentUserSyncBomToArenaOk returns a tuple with the CanCurrentUserSyncBomToArena field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncBomToArenaOk() (*bool, bool) {
	if o == nil || o.CanCurrentUserSyncBomToArena == nil {
		return nil, false
	}
	return o.CanCurrentUserSyncBomToArena, true
}

// HasCanCurrentUserSyncBomToArena returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasCanCurrentUserSyncBomToArena() bool {
	if o != nil && o.CanCurrentUserSyncBomToArena != nil {
		return true
	}

	return false
}

// SetCanCurrentUserSyncBomToArena gets a reference to the given bool and assigns it to the CanCurrentUserSyncBomToArena field.
func (o *BTActiveWorkflowInfo) SetCanCurrentUserSyncBomToArena(v bool) {
	o.CanCurrentUserSyncBomToArena = &v
}

// GetCanCurrentUserSyncBomToPLM returns the CanCurrentUserSyncBomToPLM field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncBomToPLM() bool {
	if o == nil || o.CanCurrentUserSyncBomToPLM == nil {
		var ret bool
		return ret
	}
	return *o.CanCurrentUserSyncBomToPLM
}

// GetCanCurrentUserSyncBomToPLMOk returns a tuple with the CanCurrentUserSyncBomToPLM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncBomToPLMOk() (*bool, bool) {
	if o == nil || o.CanCurrentUserSyncBomToPLM == nil {
		return nil, false
	}
	return o.CanCurrentUserSyncBomToPLM, true
}

// HasCanCurrentUserSyncBomToPLM returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasCanCurrentUserSyncBomToPLM() bool {
	if o != nil && o.CanCurrentUserSyncBomToPLM != nil {
		return true
	}

	return false
}

// SetCanCurrentUserSyncBomToPLM gets a reference to the given bool and assigns it to the CanCurrentUserSyncBomToPLM field.
func (o *BTActiveWorkflowInfo) SetCanCurrentUserSyncBomToPLM(v bool) {
	o.CanCurrentUserSyncBomToPLM = &v
}

// GetCanCurrentUserSyncRevisionsToArena returns the CanCurrentUserSyncRevisionsToArena field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncRevisionsToArena() bool {
	if o == nil || o.CanCurrentUserSyncRevisionsToArena == nil {
		var ret bool
		return ret
	}
	return *o.CanCurrentUserSyncRevisionsToArena
}

// GetCanCurrentUserSyncRevisionsToArenaOk returns a tuple with the CanCurrentUserSyncRevisionsToArena field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncRevisionsToArenaOk() (*bool, bool) {
	if o == nil || o.CanCurrentUserSyncRevisionsToArena == nil {
		return nil, false
	}
	return o.CanCurrentUserSyncRevisionsToArena, true
}

// HasCanCurrentUserSyncRevisionsToArena returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasCanCurrentUserSyncRevisionsToArena() bool {
	if o != nil && o.CanCurrentUserSyncRevisionsToArena != nil {
		return true
	}

	return false
}

// SetCanCurrentUserSyncRevisionsToArena gets a reference to the given bool and assigns it to the CanCurrentUserSyncRevisionsToArena field.
func (o *BTActiveWorkflowInfo) SetCanCurrentUserSyncRevisionsToArena(v bool) {
	o.CanCurrentUserSyncRevisionsToArena = &v
}

// GetCanCurrentUserSyncRevisionsToPLM returns the CanCurrentUserSyncRevisionsToPLM field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncRevisionsToPLM() bool {
	if o == nil || o.CanCurrentUserSyncRevisionsToPLM == nil {
		var ret bool
		return ret
	}
	return *o.CanCurrentUserSyncRevisionsToPLM
}

// GetCanCurrentUserSyncRevisionsToPLMOk returns a tuple with the CanCurrentUserSyncRevisionsToPLM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncRevisionsToPLMOk() (*bool, bool) {
	if o == nil || o.CanCurrentUserSyncRevisionsToPLM == nil {
		return nil, false
	}
	return o.CanCurrentUserSyncRevisionsToPLM, true
}

// HasCanCurrentUserSyncRevisionsToPLM returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasCanCurrentUserSyncRevisionsToPLM() bool {
	if o != nil && o.CanCurrentUserSyncRevisionsToPLM != nil {
		return true
	}

	return false
}

// SetCanCurrentUserSyncRevisionsToPLM gets a reference to the given bool and assigns it to the CanCurrentUserSyncRevisionsToPLM field.
func (o *BTActiveWorkflowInfo) SetCanCurrentUserSyncRevisionsToPLM(v bool) {
	o.CanCurrentUserSyncRevisionsToPLM = &v
}

// GetCanCurrentUserSyncStandardContentToArena returns the CanCurrentUserSyncStandardContentToArena field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncStandardContentToArena() bool {
	if o == nil || o.CanCurrentUserSyncStandardContentToArena == nil {
		var ret bool
		return ret
	}
	return *o.CanCurrentUserSyncStandardContentToArena
}

// GetCanCurrentUserSyncStandardContentToArenaOk returns a tuple with the CanCurrentUserSyncStandardContentToArena field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncStandardContentToArenaOk() (*bool, bool) {
	if o == nil || o.CanCurrentUserSyncStandardContentToArena == nil {
		return nil, false
	}
	return o.CanCurrentUserSyncStandardContentToArena, true
}

// HasCanCurrentUserSyncStandardContentToArena returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasCanCurrentUserSyncStandardContentToArena() bool {
	if o != nil && o.CanCurrentUserSyncStandardContentToArena != nil {
		return true
	}

	return false
}

// SetCanCurrentUserSyncStandardContentToArena gets a reference to the given bool and assigns it to the CanCurrentUserSyncStandardContentToArena field.
func (o *BTActiveWorkflowInfo) SetCanCurrentUserSyncStandardContentToArena(v bool) {
	o.CanCurrentUserSyncStandardContentToArena = &v
}

// GetCanCurrentUserSyncStandardContentToPLM returns the CanCurrentUserSyncStandardContentToPLM field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncStandardContentToPLM() bool {
	if o == nil || o.CanCurrentUserSyncStandardContentToPLM == nil {
		var ret bool
		return ret
	}
	return *o.CanCurrentUserSyncStandardContentToPLM
}

// GetCanCurrentUserSyncStandardContentToPLMOk returns a tuple with the CanCurrentUserSyncStandardContentToPLM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncStandardContentToPLMOk() (*bool, bool) {
	if o == nil || o.CanCurrentUserSyncStandardContentToPLM == nil {
		return nil, false
	}
	return o.CanCurrentUserSyncStandardContentToPLM, true
}

// HasCanCurrentUserSyncStandardContentToPLM returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasCanCurrentUserSyncStandardContentToPLM() bool {
	if o != nil && o.CanCurrentUserSyncStandardContentToPLM != nil {
		return true
	}

	return false
}

// SetCanCurrentUserSyncStandardContentToPLM gets a reference to the given bool and assigns it to the CanCurrentUserSyncStandardContentToPLM field.
func (o *BTActiveWorkflowInfo) SetCanCurrentUserSyncStandardContentToPLM(v bool) {
	o.CanCurrentUserSyncStandardContentToPLM = &v
}

// GetCanCurrentUserSyncToArena returns the CanCurrentUserSyncToArena field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncToArena() bool {
	if o == nil || o.CanCurrentUserSyncToArena == nil {
		var ret bool
		return ret
	}
	return *o.CanCurrentUserSyncToArena
}

// GetCanCurrentUserSyncToArenaOk returns a tuple with the CanCurrentUserSyncToArena field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncToArenaOk() (*bool, bool) {
	if o == nil || o.CanCurrentUserSyncToArena == nil {
		return nil, false
	}
	return o.CanCurrentUserSyncToArena, true
}

// HasCanCurrentUserSyncToArena returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasCanCurrentUserSyncToArena() bool {
	if o != nil && o.CanCurrentUserSyncToArena != nil {
		return true
	}

	return false
}

// SetCanCurrentUserSyncToArena gets a reference to the given bool and assigns it to the CanCurrentUserSyncToArena field.
func (o *BTActiveWorkflowInfo) SetCanCurrentUserSyncToArena(v bool) {
	o.CanCurrentUserSyncToArena = &v
}

// GetCanCurrentUserSyncToPLM returns the CanCurrentUserSyncToPLM field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncToPLM() bool {
	if o == nil || o.CanCurrentUserSyncToPLM == nil {
		var ret bool
		return ret
	}
	return *o.CanCurrentUserSyncToPLM
}

// GetCanCurrentUserSyncToPLMOk returns a tuple with the CanCurrentUserSyncToPLM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetCanCurrentUserSyncToPLMOk() (*bool, bool) {
	if o == nil || o.CanCurrentUserSyncToPLM == nil {
		return nil, false
	}
	return o.CanCurrentUserSyncToPLM, true
}

// HasCanCurrentUserSyncToPLM returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasCanCurrentUserSyncToPLM() bool {
	if o != nil && o.CanCurrentUserSyncToPLM != nil {
		return true
	}

	return false
}

// SetCanCurrentUserSyncToPLM gets a reference to the given bool and assigns it to the CanCurrentUserSyncToPLM field.
func (o *BTActiveWorkflowInfo) SetCanCurrentUserSyncToPLM(v bool) {
	o.CanCurrentUserSyncToPLM = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetCompanyId() string {
	if o == nil || o.CompanyId == nil {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetCompanyIdOk() (*string, bool) {
	if o == nil || o.CompanyId == nil {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasCompanyId() bool {
	if o != nil && o.CompanyId != nil {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *BTActiveWorkflowInfo) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetDocumentId() string {
	if o == nil || o.DocumentId == nil {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetDocumentIdOk() (*string, bool) {
	if o == nil || o.DocumentId == nil {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasDocumentId() bool {
	if o != nil && o.DocumentId != nil {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *BTActiveWorkflowInfo) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetDrawingCanDuplicatePartNumber returns the DrawingCanDuplicatePartNumber field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetDrawingCanDuplicatePartNumber() bool {
	if o == nil || o.DrawingCanDuplicatePartNumber == nil {
		var ret bool
		return ret
	}
	return *o.DrawingCanDuplicatePartNumber
}

// GetDrawingCanDuplicatePartNumberOk returns a tuple with the DrawingCanDuplicatePartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetDrawingCanDuplicatePartNumberOk() (*bool, bool) {
	if o == nil || o.DrawingCanDuplicatePartNumber == nil {
		return nil, false
	}
	return o.DrawingCanDuplicatePartNumber, true
}

// HasDrawingCanDuplicatePartNumber returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasDrawingCanDuplicatePartNumber() bool {
	if o != nil && o.DrawingCanDuplicatePartNumber != nil {
		return true
	}

	return false
}

// SetDrawingCanDuplicatePartNumber gets a reference to the given bool and assigns it to the DrawingCanDuplicatePartNumber field.
func (o *BTActiveWorkflowInfo) SetDrawingCanDuplicatePartNumber(v bool) {
	o.DrawingCanDuplicatePartNumber = &v
}

// GetEnabledActiveMultipleWorkflows returns the EnabledActiveMultipleWorkflows field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetEnabledActiveMultipleWorkflows() bool {
	if o == nil || o.EnabledActiveMultipleWorkflows == nil {
		var ret bool
		return ret
	}
	return *o.EnabledActiveMultipleWorkflows
}

// GetEnabledActiveMultipleWorkflowsOk returns a tuple with the EnabledActiveMultipleWorkflows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetEnabledActiveMultipleWorkflowsOk() (*bool, bool) {
	if o == nil || o.EnabledActiveMultipleWorkflows == nil {
		return nil, false
	}
	return o.EnabledActiveMultipleWorkflows, true
}

// HasEnabledActiveMultipleWorkflows returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasEnabledActiveMultipleWorkflows() bool {
	if o != nil && o.EnabledActiveMultipleWorkflows != nil {
		return true
	}

	return false
}

// SetEnabledActiveMultipleWorkflows gets a reference to the given bool and assigns it to the EnabledActiveMultipleWorkflows field.
func (o *BTActiveWorkflowInfo) SetEnabledActiveMultipleWorkflows(v bool) {
	o.EnabledActiveMultipleWorkflows = &v
}

// GetHasInactiveCustomWorkflows returns the HasInactiveCustomWorkflows field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetHasInactiveCustomWorkflows() bool {
	if o == nil || o.HasInactiveCustomWorkflows == nil {
		var ret bool
		return ret
	}
	return *o.HasInactiveCustomWorkflows
}

// GetHasInactiveCustomWorkflowsOk returns a tuple with the HasInactiveCustomWorkflows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetHasInactiveCustomWorkflowsOk() (*bool, bool) {
	if o == nil || o.HasInactiveCustomWorkflows == nil {
		return nil, false
	}
	return o.HasInactiveCustomWorkflows, true
}

// HasHasInactiveCustomWorkflows returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasHasInactiveCustomWorkflows() bool {
	if o != nil && o.HasInactiveCustomWorkflows != nil {
		return true
	}

	return false
}

// SetHasInactiveCustomWorkflows gets a reference to the given bool and assigns it to the HasInactiveCustomWorkflows field.
func (o *BTActiveWorkflowInfo) SetHasInactiveCustomWorkflows(v bool) {
	o.HasInactiveCustomWorkflows = &v
}

// GetObsoletionWorkflow returns the ObsoletionWorkflow field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetObsoletionWorkflow() BTPublishedWorkflowInfo {
	if o == nil || o.ObsoletionWorkflow == nil {
		var ret BTPublishedWorkflowInfo
		return ret
	}
	return *o.ObsoletionWorkflow
}

// GetObsoletionWorkflowOk returns a tuple with the ObsoletionWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetObsoletionWorkflowOk() (*BTPublishedWorkflowInfo, bool) {
	if o == nil || o.ObsoletionWorkflow == nil {
		return nil, false
	}
	return o.ObsoletionWorkflow, true
}

// HasObsoletionWorkflow returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasObsoletionWorkflow() bool {
	if o != nil && o.ObsoletionWorkflow != nil {
		return true
	}

	return false
}

// SetObsoletionWorkflow gets a reference to the given BTPublishedWorkflowInfo and assigns it to the ObsoletionWorkflow field.
func (o *BTActiveWorkflowInfo) SetObsoletionWorkflow(v BTPublishedWorkflowInfo) {
	o.ObsoletionWorkflow = &v
}

// GetObsoletionWorkflowId returns the ObsoletionWorkflowId field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetObsoletionWorkflowId() string {
	if o == nil || o.ObsoletionWorkflowId == nil {
		var ret string
		return ret
	}
	return *o.ObsoletionWorkflowId
}

// GetObsoletionWorkflowIdOk returns a tuple with the ObsoletionWorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetObsoletionWorkflowIdOk() (*string, bool) {
	if o == nil || o.ObsoletionWorkflowId == nil {
		return nil, false
	}
	return o.ObsoletionWorkflowId, true
}

// HasObsoletionWorkflowId returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasObsoletionWorkflowId() bool {
	if o != nil && o.ObsoletionWorkflowId != nil {
		return true
	}

	return false
}

// SetObsoletionWorkflowId gets a reference to the given string and assigns it to the ObsoletionWorkflowId field.
func (o *BTActiveWorkflowInfo) SetObsoletionWorkflowId(v string) {
	o.ObsoletionWorkflowId = &v
}

// GetObsoletionWorkflowInfo returns the ObsoletionWorkflowInfo field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetObsoletionWorkflowInfo() BTActiveWorkflowTypeInfo {
	if o == nil || o.ObsoletionWorkflowInfo == nil {
		var ret BTActiveWorkflowTypeInfo
		return ret
	}
	return *o.ObsoletionWorkflowInfo
}

// GetObsoletionWorkflowInfoOk returns a tuple with the ObsoletionWorkflowInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetObsoletionWorkflowInfoOk() (*BTActiveWorkflowTypeInfo, bool) {
	if o == nil || o.ObsoletionWorkflowInfo == nil {
		return nil, false
	}
	return o.ObsoletionWorkflowInfo, true
}

// HasObsoletionWorkflowInfo returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasObsoletionWorkflowInfo() bool {
	if o != nil && o.ObsoletionWorkflowInfo != nil {
		return true
	}

	return false
}

// SetObsoletionWorkflowInfo gets a reference to the given BTActiveWorkflowTypeInfo and assigns it to the ObsoletionWorkflowInfo field.
func (o *BTActiveWorkflowInfo) SetObsoletionWorkflowInfo(v BTActiveWorkflowTypeInfo) {
	o.ObsoletionWorkflowInfo = &v
}

// GetOsCategoryIdToArenaNumberFormatId returns the OsCategoryIdToArenaNumberFormatId field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetOsCategoryIdToArenaNumberFormatId() map[string]string {
	if o == nil || o.OsCategoryIdToArenaNumberFormatId == nil {
		var ret map[string]string
		return ret
	}
	return *o.OsCategoryIdToArenaNumberFormatId
}

// GetOsCategoryIdToArenaNumberFormatIdOk returns a tuple with the OsCategoryIdToArenaNumberFormatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetOsCategoryIdToArenaNumberFormatIdOk() (*map[string]string, bool) {
	if o == nil || o.OsCategoryIdToArenaNumberFormatId == nil {
		return nil, false
	}
	return o.OsCategoryIdToArenaNumberFormatId, true
}

// HasOsCategoryIdToArenaNumberFormatId returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasOsCategoryIdToArenaNumberFormatId() bool {
	if o != nil && o.OsCategoryIdToArenaNumberFormatId != nil {
		return true
	}

	return false
}

// SetOsCategoryIdToArenaNumberFormatId gets a reference to the given map[string]string and assigns it to the OsCategoryIdToArenaNumberFormatId field.
func (o *BTActiveWorkflowInfo) SetOsCategoryIdToArenaNumberFormatId(v map[string]string) {
	o.OsCategoryIdToArenaNumberFormatId = &v
}

// GetPLMIntegrationType returns the PLMIntegrationType field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetPLMIntegrationType() int32 {
	if o == nil || o.PLMIntegrationType == nil {
		var ret int32
		return ret
	}
	return *o.PLMIntegrationType
}

// GetPLMIntegrationTypeOk returns a tuple with the PLMIntegrationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetPLMIntegrationTypeOk() (*int32, bool) {
	if o == nil || o.PLMIntegrationType == nil {
		return nil, false
	}
	return o.PLMIntegrationType, true
}

// HasPLMIntegrationType returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasPLMIntegrationType() bool {
	if o != nil && o.PLMIntegrationType != nil {
		return true
	}

	return false
}

// SetPLMIntegrationType gets a reference to the given int32 and assigns it to the PLMIntegrationType field.
func (o *BTActiveWorkflowInfo) SetPLMIntegrationType(v int32) {
	o.PLMIntegrationType = &v
}

// GetPLMName returns the PLMName field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetPLMName() string {
	if o == nil || o.PLMName == nil {
		var ret string
		return ret
	}
	return *o.PLMName
}

// GetPLMNameOk returns a tuple with the PLMName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetPLMNameOk() (*string, bool) {
	if o == nil || o.PLMName == nil {
		return nil, false
	}
	return o.PLMName, true
}

// HasPLMName returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasPLMName() bool {
	if o != nil && o.PLMName != nil {
		return true
	}

	return false
}

// SetPLMName gets a reference to the given string and assigns it to the PLMName field.
func (o *BTActiveWorkflowInfo) SetPLMName(v string) {
	o.PLMName = &v
}

// GetPartNumberingSchemeId returns the PartNumberingSchemeId field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetPartNumberingSchemeId() string {
	if o == nil || o.PartNumberingSchemeId == nil {
		var ret string
		return ret
	}
	return *o.PartNumberingSchemeId
}

// GetPartNumberingSchemeIdOk returns a tuple with the PartNumberingSchemeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetPartNumberingSchemeIdOk() (*string, bool) {
	if o == nil || o.PartNumberingSchemeId == nil {
		return nil, false
	}
	return o.PartNumberingSchemeId, true
}

// HasPartNumberingSchemeId returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasPartNumberingSchemeId() bool {
	if o != nil && o.PartNumberingSchemeId != nil {
		return true
	}

	return false
}

// SetPartNumberingSchemeId gets a reference to the given string and assigns it to the PartNumberingSchemeId field.
func (o *BTActiveWorkflowInfo) SetPartNumberingSchemeId(v string) {
	o.PartNumberingSchemeId = &v
}

// GetPickableWorkflows returns the PickableWorkflows field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetPickableWorkflows() []BTPublishedWorkflowInfo {
	if o == nil || o.PickableWorkflows == nil {
		var ret []BTPublishedWorkflowInfo
		return ret
	}
	return o.PickableWorkflows
}

// GetPickableWorkflowsOk returns a tuple with the PickableWorkflows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetPickableWorkflowsOk() ([]BTPublishedWorkflowInfo, bool) {
	if o == nil || o.PickableWorkflows == nil {
		return nil, false
	}
	return o.PickableWorkflows, true
}

// HasPickableWorkflows returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasPickableWorkflows() bool {
	if o != nil && o.PickableWorkflows != nil {
		return true
	}

	return false
}

// SetPickableWorkflows gets a reference to the given []BTPublishedWorkflowInfo and assigns it to the PickableWorkflows field.
func (o *BTActiveWorkflowInfo) SetPickableWorkflows(v []BTPublishedWorkflowInfo) {
	o.PickableWorkflows = v
}

// GetReleaseWorkflow returns the ReleaseWorkflow field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetReleaseWorkflow() BTPublishedWorkflowInfo {
	if o == nil || o.ReleaseWorkflow == nil {
		var ret BTPublishedWorkflowInfo
		return ret
	}
	return *o.ReleaseWorkflow
}

// GetReleaseWorkflowOk returns a tuple with the ReleaseWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetReleaseWorkflowOk() (*BTPublishedWorkflowInfo, bool) {
	if o == nil || o.ReleaseWorkflow == nil {
		return nil, false
	}
	return o.ReleaseWorkflow, true
}

// HasReleaseWorkflow returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasReleaseWorkflow() bool {
	if o != nil && o.ReleaseWorkflow != nil {
		return true
	}

	return false
}

// SetReleaseWorkflow gets a reference to the given BTPublishedWorkflowInfo and assigns it to the ReleaseWorkflow field.
func (o *BTActiveWorkflowInfo) SetReleaseWorkflow(v BTPublishedWorkflowInfo) {
	o.ReleaseWorkflow = &v
}

// GetReleaseWorkflowId returns the ReleaseWorkflowId field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetReleaseWorkflowId() string {
	if o == nil || o.ReleaseWorkflowId == nil {
		var ret string
		return ret
	}
	return *o.ReleaseWorkflowId
}

// GetReleaseWorkflowIdOk returns a tuple with the ReleaseWorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetReleaseWorkflowIdOk() (*string, bool) {
	if o == nil || o.ReleaseWorkflowId == nil {
		return nil, false
	}
	return o.ReleaseWorkflowId, true
}

// HasReleaseWorkflowId returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasReleaseWorkflowId() bool {
	if o != nil && o.ReleaseWorkflowId != nil {
		return true
	}

	return false
}

// SetReleaseWorkflowId gets a reference to the given string and assigns it to the ReleaseWorkflowId field.
func (o *BTActiveWorkflowInfo) SetReleaseWorkflowId(v string) {
	o.ReleaseWorkflowId = &v
}

// GetReleaseWorkflowInfo returns the ReleaseWorkflowInfo field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetReleaseWorkflowInfo() BTActiveWorkflowTypeInfo {
	if o == nil || o.ReleaseWorkflowInfo == nil {
		var ret BTActiveWorkflowTypeInfo
		return ret
	}
	return *o.ReleaseWorkflowInfo
}

// GetReleaseWorkflowInfoOk returns a tuple with the ReleaseWorkflowInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetReleaseWorkflowInfoOk() (*BTActiveWorkflowTypeInfo, bool) {
	if o == nil || o.ReleaseWorkflowInfo == nil {
		return nil, false
	}
	return o.ReleaseWorkflowInfo, true
}

// HasReleaseWorkflowInfo returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasReleaseWorkflowInfo() bool {
	if o != nil && o.ReleaseWorkflowInfo != nil {
		return true
	}

	return false
}

// SetReleaseWorkflowInfo gets a reference to the given BTActiveWorkflowTypeInfo and assigns it to the ReleaseWorkflowInfo field.
func (o *BTActiveWorkflowInfo) SetReleaseWorkflowInfo(v BTActiveWorkflowTypeInfo) {
	o.ReleaseWorkflowInfo = &v
}

// GetReleaseableApplications returns the ReleaseableApplications field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetReleaseableApplications() []string {
	if o == nil || o.ReleaseableApplications == nil {
		var ret []string
		return ret
	}
	return o.ReleaseableApplications
}

// GetReleaseableApplicationsOk returns a tuple with the ReleaseableApplications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetReleaseableApplicationsOk() ([]string, bool) {
	if o == nil || o.ReleaseableApplications == nil {
		return nil, false
	}
	return o.ReleaseableApplications, true
}

// HasReleaseableApplications returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasReleaseableApplications() bool {
	if o != nil && o.ReleaseableApplications != nil {
		return true
	}

	return false
}

// SetReleaseableApplications gets a reference to the given []string and assigns it to the ReleaseableApplications field.
func (o *BTActiveWorkflowInfo) SetReleaseableApplications(v []string) {
	o.ReleaseableApplications = v
}

// GetStandardContentNumberingSchemeId returns the StandardContentNumberingSchemeId field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetStandardContentNumberingSchemeId() string {
	if o == nil || o.StandardContentNumberingSchemeId == nil {
		var ret string
		return ret
	}
	return *o.StandardContentNumberingSchemeId
}

// GetStandardContentNumberingSchemeIdOk returns a tuple with the StandardContentNumberingSchemeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetStandardContentNumberingSchemeIdOk() (*string, bool) {
	if o == nil || o.StandardContentNumberingSchemeId == nil {
		return nil, false
	}
	return o.StandardContentNumberingSchemeId, true
}

// HasStandardContentNumberingSchemeId returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasStandardContentNumberingSchemeId() bool {
	if o != nil && o.StandardContentNumberingSchemeId != nil {
		return true
	}

	return false
}

// SetStandardContentNumberingSchemeId gets a reference to the given string and assigns it to the StandardContentNumberingSchemeId field.
func (o *BTActiveWorkflowInfo) SetStandardContentNumberingSchemeId(v string) {
	o.StandardContentNumberingSchemeId = &v
}

// GetStandardContentUsingAutoNumbering returns the StandardContentUsingAutoNumbering field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetStandardContentUsingAutoNumbering() bool {
	if o == nil || o.StandardContentUsingAutoNumbering == nil {
		var ret bool
		return ret
	}
	return *o.StandardContentUsingAutoNumbering
}

// GetStandardContentUsingAutoNumberingOk returns a tuple with the StandardContentUsingAutoNumbering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetStandardContentUsingAutoNumberingOk() (*bool, bool) {
	if o == nil || o.StandardContentUsingAutoNumbering == nil {
		return nil, false
	}
	return o.StandardContentUsingAutoNumbering, true
}

// HasStandardContentUsingAutoNumbering returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasStandardContentUsingAutoNumbering() bool {
	if o != nil && o.StandardContentUsingAutoNumbering != nil {
		return true
	}

	return false
}

// SetStandardContentUsingAutoNumbering gets a reference to the given bool and assigns it to the StandardContentUsingAutoNumbering field.
func (o *BTActiveWorkflowInfo) SetStandardContentUsingAutoNumbering(v bool) {
	o.StandardContentUsingAutoNumbering = &v
}

// GetStandardContentUsingThirdPartyPartNumbering returns the StandardContentUsingThirdPartyPartNumbering field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetStandardContentUsingThirdPartyPartNumbering() bool {
	if o == nil || o.StandardContentUsingThirdPartyPartNumbering == nil {
		var ret bool
		return ret
	}
	return *o.StandardContentUsingThirdPartyPartNumbering
}

// GetStandardContentUsingThirdPartyPartNumberingOk returns a tuple with the StandardContentUsingThirdPartyPartNumbering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetStandardContentUsingThirdPartyPartNumberingOk() (*bool, bool) {
	if o == nil || o.StandardContentUsingThirdPartyPartNumbering == nil {
		return nil, false
	}
	return o.StandardContentUsingThirdPartyPartNumbering, true
}

// HasStandardContentUsingThirdPartyPartNumbering returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasStandardContentUsingThirdPartyPartNumbering() bool {
	if o != nil && o.StandardContentUsingThirdPartyPartNumbering != nil {
		return true
	}

	return false
}

// SetStandardContentUsingThirdPartyPartNumbering gets a reference to the given bool and assigns it to the StandardContentUsingThirdPartyPartNumbering field.
func (o *BTActiveWorkflowInfo) SetStandardContentUsingThirdPartyPartNumbering(v bool) {
	o.StandardContentUsingThirdPartyPartNumbering = &v
}

// GetTaskWorkflow returns the TaskWorkflow field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetTaskWorkflow() BTPublishedWorkflowInfo {
	if o == nil || o.TaskWorkflow == nil {
		var ret BTPublishedWorkflowInfo
		return ret
	}
	return *o.TaskWorkflow
}

// GetTaskWorkflowOk returns a tuple with the TaskWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetTaskWorkflowOk() (*BTPublishedWorkflowInfo, bool) {
	if o == nil || o.TaskWorkflow == nil {
		return nil, false
	}
	return o.TaskWorkflow, true
}

// HasTaskWorkflow returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasTaskWorkflow() bool {
	if o != nil && o.TaskWorkflow != nil {
		return true
	}

	return false
}

// SetTaskWorkflow gets a reference to the given BTPublishedWorkflowInfo and assigns it to the TaskWorkflow field.
func (o *BTActiveWorkflowInfo) SetTaskWorkflow(v BTPublishedWorkflowInfo) {
	o.TaskWorkflow = &v
}

// GetTaskWorkflowInfo returns the TaskWorkflowInfo field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetTaskWorkflowInfo() BTActiveWorkflowTypeInfo {
	if o == nil || o.TaskWorkflowInfo == nil {
		var ret BTActiveWorkflowTypeInfo
		return ret
	}
	return *o.TaskWorkflowInfo
}

// GetTaskWorkflowInfoOk returns a tuple with the TaskWorkflowInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetTaskWorkflowInfoOk() (*BTActiveWorkflowTypeInfo, bool) {
	if o == nil || o.TaskWorkflowInfo == nil {
		return nil, false
	}
	return o.TaskWorkflowInfo, true
}

// HasTaskWorkflowInfo returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasTaskWorkflowInfo() bool {
	if o != nil && o.TaskWorkflowInfo != nil {
		return true
	}

	return false
}

// SetTaskWorkflowInfo gets a reference to the given BTActiveWorkflowTypeInfo and assigns it to the TaskWorkflowInfo field.
func (o *BTActiveWorkflowInfo) SetTaskWorkflowInfo(v BTActiveWorkflowTypeInfo) {
	o.TaskWorkflowInfo = &v
}

// GetUsingAutoPartNumbering returns the UsingAutoPartNumbering field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetUsingAutoPartNumbering() bool {
	if o == nil || o.UsingAutoPartNumbering == nil {
		var ret bool
		return ret
	}
	return *o.UsingAutoPartNumbering
}

// GetUsingAutoPartNumberingOk returns a tuple with the UsingAutoPartNumbering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetUsingAutoPartNumberingOk() (*bool, bool) {
	if o == nil || o.UsingAutoPartNumbering == nil {
		return nil, false
	}
	return o.UsingAutoPartNumbering, true
}

// HasUsingAutoPartNumbering returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasUsingAutoPartNumbering() bool {
	if o != nil && o.UsingAutoPartNumbering != nil {
		return true
	}

	return false
}

// SetUsingAutoPartNumbering gets a reference to the given bool and assigns it to the UsingAutoPartNumbering field.
func (o *BTActiveWorkflowInfo) SetUsingAutoPartNumbering(v bool) {
	o.UsingAutoPartNumbering = &v
}

// GetUsingManagedWorkflow returns the UsingManagedWorkflow field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetUsingManagedWorkflow() bool {
	if o == nil || o.UsingManagedWorkflow == nil {
		var ret bool
		return ret
	}
	return *o.UsingManagedWorkflow
}

// GetUsingManagedWorkflowOk returns a tuple with the UsingManagedWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetUsingManagedWorkflowOk() (*bool, bool) {
	if o == nil || o.UsingManagedWorkflow == nil {
		return nil, false
	}
	return o.UsingManagedWorkflow, true
}

// HasUsingManagedWorkflow returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasUsingManagedWorkflow() bool {
	if o != nil && o.UsingManagedWorkflow != nil {
		return true
	}

	return false
}

// SetUsingManagedWorkflow gets a reference to the given bool and assigns it to the UsingManagedWorkflow field.
func (o *BTActiveWorkflowInfo) SetUsingManagedWorkflow(v bool) {
	o.UsingManagedWorkflow = &v
}

// GetUsingThirdPartyPartNumbering returns the UsingThirdPartyPartNumbering field value if set, zero value otherwise.
func (o *BTActiveWorkflowInfo) GetUsingThirdPartyPartNumbering() bool {
	if o == nil || o.UsingThirdPartyPartNumbering == nil {
		var ret bool
		return ret
	}
	return *o.UsingThirdPartyPartNumbering
}

// GetUsingThirdPartyPartNumberingOk returns a tuple with the UsingThirdPartyPartNumbering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTActiveWorkflowInfo) GetUsingThirdPartyPartNumberingOk() (*bool, bool) {
	if o == nil || o.UsingThirdPartyPartNumbering == nil {
		return nil, false
	}
	return o.UsingThirdPartyPartNumbering, true
}

// HasUsingThirdPartyPartNumbering returns a boolean if a field has been set.
func (o *BTActiveWorkflowInfo) HasUsingThirdPartyPartNumbering() bool {
	if o != nil && o.UsingThirdPartyPartNumbering != nil {
		return true
	}

	return false
}

// SetUsingThirdPartyPartNumbering gets a reference to the given bool and assigns it to the UsingThirdPartyPartNumbering field.
func (o *BTActiveWorkflowInfo) SetUsingThirdPartyPartNumbering(v bool) {
	o.UsingThirdPartyPartNumbering = &v
}

func (o BTActiveWorkflowInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowReleaseItemsFromOtherDocuments != nil {
		toSerialize["allowReleaseItemsFromOtherDocuments"] = o.AllowReleaseItemsFromOtherDocuments
	}
	if o.CanCurrentUserCreateReleases != nil {
		toSerialize["canCurrentUserCreateReleases"] = o.CanCurrentUserCreateReleases
	}
	if o.CanCurrentUserEditStandardContent != nil {
		toSerialize["canCurrentUserEditStandardContent"] = o.CanCurrentUserEditStandardContent
	}
	if o.CanCurrentUserManageWorkflows != nil {
		toSerialize["canCurrentUserManageWorkflows"] = o.CanCurrentUserManageWorkflows
	}
	if o.CanCurrentUserSeeArenaItemLink != nil {
		toSerialize["canCurrentUserSeeArenaItemLink"] = o.CanCurrentUserSeeArenaItemLink
	}
	if o.CanCurrentUserSeePLMItemLink != nil {
		toSerialize["canCurrentUserSeePLMItemLink"] = o.CanCurrentUserSeePLMItemLink
	}
	if o.CanCurrentUserSyncBomToArena != nil {
		toSerialize["canCurrentUserSyncBomToArena"] = o.CanCurrentUserSyncBomToArena
	}
	if o.CanCurrentUserSyncBomToPLM != nil {
		toSerialize["canCurrentUserSyncBomToPLM"] = o.CanCurrentUserSyncBomToPLM
	}
	if o.CanCurrentUserSyncRevisionsToArena != nil {
		toSerialize["canCurrentUserSyncRevisionsToArena"] = o.CanCurrentUserSyncRevisionsToArena
	}
	if o.CanCurrentUserSyncRevisionsToPLM != nil {
		toSerialize["canCurrentUserSyncRevisionsToPLM"] = o.CanCurrentUserSyncRevisionsToPLM
	}
	if o.CanCurrentUserSyncStandardContentToArena != nil {
		toSerialize["canCurrentUserSyncStandardContentToArena"] = o.CanCurrentUserSyncStandardContentToArena
	}
	if o.CanCurrentUserSyncStandardContentToPLM != nil {
		toSerialize["canCurrentUserSyncStandardContentToPLM"] = o.CanCurrentUserSyncStandardContentToPLM
	}
	if o.CanCurrentUserSyncToArena != nil {
		toSerialize["canCurrentUserSyncToArena"] = o.CanCurrentUserSyncToArena
	}
	if o.CanCurrentUserSyncToPLM != nil {
		toSerialize["canCurrentUserSyncToPLM"] = o.CanCurrentUserSyncToPLM
	}
	if o.CompanyId != nil {
		toSerialize["companyId"] = o.CompanyId
	}
	if o.DocumentId != nil {
		toSerialize["documentId"] = o.DocumentId
	}
	if o.DrawingCanDuplicatePartNumber != nil {
		toSerialize["drawingCanDuplicatePartNumber"] = o.DrawingCanDuplicatePartNumber
	}
	if o.EnabledActiveMultipleWorkflows != nil {
		toSerialize["enabledActiveMultipleWorkflows"] = o.EnabledActiveMultipleWorkflows
	}
	if o.HasInactiveCustomWorkflows != nil {
		toSerialize["hasInactiveCustomWorkflows"] = o.HasInactiveCustomWorkflows
	}
	if o.ObsoletionWorkflow != nil {
		toSerialize["obsoletionWorkflow"] = o.ObsoletionWorkflow
	}
	if o.ObsoletionWorkflowId != nil {
		toSerialize["obsoletionWorkflowId"] = o.ObsoletionWorkflowId
	}
	if o.ObsoletionWorkflowInfo != nil {
		toSerialize["obsoletionWorkflowInfo"] = o.ObsoletionWorkflowInfo
	}
	if o.OsCategoryIdToArenaNumberFormatId != nil {
		toSerialize["osCategoryIdToArenaNumberFormatId"] = o.OsCategoryIdToArenaNumberFormatId
	}
	if o.PLMIntegrationType != nil {
		toSerialize["pLMIntegrationType"] = o.PLMIntegrationType
	}
	if o.PLMName != nil {
		toSerialize["pLMName"] = o.PLMName
	}
	if o.PartNumberingSchemeId != nil {
		toSerialize["partNumberingSchemeId"] = o.PartNumberingSchemeId
	}
	if o.PickableWorkflows != nil {
		toSerialize["pickableWorkflows"] = o.PickableWorkflows
	}
	if o.ReleaseWorkflow != nil {
		toSerialize["releaseWorkflow"] = o.ReleaseWorkflow
	}
	if o.ReleaseWorkflowId != nil {
		toSerialize["releaseWorkflowId"] = o.ReleaseWorkflowId
	}
	if o.ReleaseWorkflowInfo != nil {
		toSerialize["releaseWorkflowInfo"] = o.ReleaseWorkflowInfo
	}
	if o.ReleaseableApplications != nil {
		toSerialize["releaseableApplications"] = o.ReleaseableApplications
	}
	if o.StandardContentNumberingSchemeId != nil {
		toSerialize["standardContentNumberingSchemeId"] = o.StandardContentNumberingSchemeId
	}
	if o.StandardContentUsingAutoNumbering != nil {
		toSerialize["standardContentUsingAutoNumbering"] = o.StandardContentUsingAutoNumbering
	}
	if o.StandardContentUsingThirdPartyPartNumbering != nil {
		toSerialize["standardContentUsingThirdPartyPartNumbering"] = o.StandardContentUsingThirdPartyPartNumbering
	}
	if o.TaskWorkflow != nil {
		toSerialize["taskWorkflow"] = o.TaskWorkflow
	}
	if o.TaskWorkflowInfo != nil {
		toSerialize["taskWorkflowInfo"] = o.TaskWorkflowInfo
	}
	if o.UsingAutoPartNumbering != nil {
		toSerialize["usingAutoPartNumbering"] = o.UsingAutoPartNumbering
	}
	if o.UsingManagedWorkflow != nil {
		toSerialize["usingManagedWorkflow"] = o.UsingManagedWorkflow
	}
	if o.UsingThirdPartyPartNumbering != nil {
		toSerialize["usingThirdPartyPartNumbering"] = o.UsingThirdPartyPartNumbering
	}
	return json.Marshal(toSerialize)
}

type NullableBTActiveWorkflowInfo struct {
	value *BTActiveWorkflowInfo
	isSet bool
}

func (v NullableBTActiveWorkflowInfo) Get() *BTActiveWorkflowInfo {
	return v.value
}

func (v *NullableBTActiveWorkflowInfo) Set(val *BTActiveWorkflowInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTActiveWorkflowInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTActiveWorkflowInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTActiveWorkflowInfo(val *BTActiveWorkflowInfo) *NullableBTActiveWorkflowInfo {
	return &NullableBTActiveWorkflowInfo{value: val, isSet: true}
}

func (v NullableBTActiveWorkflowInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTActiveWorkflowInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
