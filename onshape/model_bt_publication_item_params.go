/*
Onshape REST API

## Welcome to the Onshape REST API Explorer  To use this API explorer, sign in to your [Onshape](https://cad.onshape.com) account in another tab, then click the **Try it out** button below (it toggles to a **Cancel** button when selected).  See the **[API Explorer Guide](https://onshape-public.github.io/docs/api-intro/explorer/)** for help navigating this API Explorer, including **[authentication](https://onshape-public.github.io/docs/api-intro/explorer/#authentication)**.  **Tip:** To ensure the current session isn't used when trying other authentication techniques, make sure to [remove the Onshape cookie](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site) as per the instructions for your browser. Alternatively, you can use a private or incognito window.  ## See Also  * [Onshape API Guide](https://onshape-public.github.io/docs/): Our full suite of developer guides, to be used as an accompaniment to this API Explorer. * [Onshape Developer Portal](https://dev-portal.onshape.com/): The Onshape portal for managing your API keys, OAuth2 credentials, your Onshape applications, and your Onshape App Store entries. * [Authentication Guide](https://onshape-public.github.io/docs/auth/): Our guide to using API keys, request signatures, and OAuth2 in  your Onshape applications.

Contact: api-support@onshape.zendesk.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onshape

import (
	"encoding/json"
)

// BTPublicationItemParams struct for BTPublicationItemParams
type BTPublicationItemParams struct {
	DataType             *string `json:"dataType,omitempty"`
	DocumentId           *string `json:"documentId,omitempty"`
	ElementId            *string `json:"elementId,omitempty"`
	EncodedConfiguration *string `json:"encodedConfiguration,omitempty"`
	IsApplication        *bool   `json:"isApplication,omitempty"`
	IsAssembly           *bool   `json:"isAssembly,omitempty"`
	IsBlob               *bool   `json:"isBlob,omitempty"`
	IsWholePartStudio    *bool   `json:"isWholePartStudio,omitempty"`
	MimeType             *string `json:"mimeType,omitempty"`
	PartId               *string `json:"partId,omitempty"`
	PartName             *string `json:"partName,omitempty"`
	PartNumber           *string `json:"partNumber,omitempty"`
	Revision             *string `json:"revision,omitempty"`
	RevisionId           *string `json:"revisionId,omitempty"`
	VersionId            *string `json:"versionId,omitempty"`
}

// NewBTPublicationItemParams instantiates a new BTPublicationItemParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTPublicationItemParams() *BTPublicationItemParams {
	this := BTPublicationItemParams{}
	return &this
}

// NewBTPublicationItemParamsWithDefaults instantiates a new BTPublicationItemParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTPublicationItemParamsWithDefaults() *BTPublicationItemParams {
	this := BTPublicationItemParams{}
	return &this
}

// GetDataType returns the DataType field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetDataType() string {
	if o == nil || o.DataType == nil {
		var ret string
		return ret
	}
	return *o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetDataTypeOk() (*string, bool) {
	if o == nil || o.DataType == nil {
		return nil, false
	}
	return o.DataType, true
}

// HasDataType returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasDataType() bool {
	if o != nil && o.DataType != nil {
		return true
	}

	return false
}

// SetDataType gets a reference to the given string and assigns it to the DataType field.
func (o *BTPublicationItemParams) SetDataType(v string) {
	o.DataType = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetDocumentId() string {
	if o == nil || o.DocumentId == nil {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetDocumentIdOk() (*string, bool) {
	if o == nil || o.DocumentId == nil {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasDocumentId() bool {
	if o != nil && o.DocumentId != nil {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *BTPublicationItemParams) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetElementId() string {
	if o == nil || o.ElementId == nil {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetElementIdOk() (*string, bool) {
	if o == nil || o.ElementId == nil {
		return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasElementId() bool {
	if o != nil && o.ElementId != nil {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *BTPublicationItemParams) SetElementId(v string) {
	o.ElementId = &v
}

// GetEncodedConfiguration returns the EncodedConfiguration field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetEncodedConfiguration() string {
	if o == nil || o.EncodedConfiguration == nil {
		var ret string
		return ret
	}
	return *o.EncodedConfiguration
}

// GetEncodedConfigurationOk returns a tuple with the EncodedConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetEncodedConfigurationOk() (*string, bool) {
	if o == nil || o.EncodedConfiguration == nil {
		return nil, false
	}
	return o.EncodedConfiguration, true
}

// HasEncodedConfiguration returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasEncodedConfiguration() bool {
	if o != nil && o.EncodedConfiguration != nil {
		return true
	}

	return false
}

// SetEncodedConfiguration gets a reference to the given string and assigns it to the EncodedConfiguration field.
func (o *BTPublicationItemParams) SetEncodedConfiguration(v string) {
	o.EncodedConfiguration = &v
}

// GetIsApplication returns the IsApplication field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetIsApplication() bool {
	if o == nil || o.IsApplication == nil {
		var ret bool
		return ret
	}
	return *o.IsApplication
}

// GetIsApplicationOk returns a tuple with the IsApplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetIsApplicationOk() (*bool, bool) {
	if o == nil || o.IsApplication == nil {
		return nil, false
	}
	return o.IsApplication, true
}

// HasIsApplication returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasIsApplication() bool {
	if o != nil && o.IsApplication != nil {
		return true
	}

	return false
}

// SetIsApplication gets a reference to the given bool and assigns it to the IsApplication field.
func (o *BTPublicationItemParams) SetIsApplication(v bool) {
	o.IsApplication = &v
}

// GetIsAssembly returns the IsAssembly field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetIsAssembly() bool {
	if o == nil || o.IsAssembly == nil {
		var ret bool
		return ret
	}
	return *o.IsAssembly
}

// GetIsAssemblyOk returns a tuple with the IsAssembly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetIsAssemblyOk() (*bool, bool) {
	if o == nil || o.IsAssembly == nil {
		return nil, false
	}
	return o.IsAssembly, true
}

// HasIsAssembly returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasIsAssembly() bool {
	if o != nil && o.IsAssembly != nil {
		return true
	}

	return false
}

// SetIsAssembly gets a reference to the given bool and assigns it to the IsAssembly field.
func (o *BTPublicationItemParams) SetIsAssembly(v bool) {
	o.IsAssembly = &v
}

// GetIsBlob returns the IsBlob field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetIsBlob() bool {
	if o == nil || o.IsBlob == nil {
		var ret bool
		return ret
	}
	return *o.IsBlob
}

// GetIsBlobOk returns a tuple with the IsBlob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetIsBlobOk() (*bool, bool) {
	if o == nil || o.IsBlob == nil {
		return nil, false
	}
	return o.IsBlob, true
}

// HasIsBlob returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasIsBlob() bool {
	if o != nil && o.IsBlob != nil {
		return true
	}

	return false
}

// SetIsBlob gets a reference to the given bool and assigns it to the IsBlob field.
func (o *BTPublicationItemParams) SetIsBlob(v bool) {
	o.IsBlob = &v
}

// GetIsWholePartStudio returns the IsWholePartStudio field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetIsWholePartStudio() bool {
	if o == nil || o.IsWholePartStudio == nil {
		var ret bool
		return ret
	}
	return *o.IsWholePartStudio
}

// GetIsWholePartStudioOk returns a tuple with the IsWholePartStudio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetIsWholePartStudioOk() (*bool, bool) {
	if o == nil || o.IsWholePartStudio == nil {
		return nil, false
	}
	return o.IsWholePartStudio, true
}

// HasIsWholePartStudio returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasIsWholePartStudio() bool {
	if o != nil && o.IsWholePartStudio != nil {
		return true
	}

	return false
}

// SetIsWholePartStudio gets a reference to the given bool and assigns it to the IsWholePartStudio field.
func (o *BTPublicationItemParams) SetIsWholePartStudio(v bool) {
	o.IsWholePartStudio = &v
}

// GetMimeType returns the MimeType field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetMimeType() string {
	if o == nil || o.MimeType == nil {
		var ret string
		return ret
	}
	return *o.MimeType
}

// GetMimeTypeOk returns a tuple with the MimeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetMimeTypeOk() (*string, bool) {
	if o == nil || o.MimeType == nil {
		return nil, false
	}
	return o.MimeType, true
}

// HasMimeType returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasMimeType() bool {
	if o != nil && o.MimeType != nil {
		return true
	}

	return false
}

// SetMimeType gets a reference to the given string and assigns it to the MimeType field.
func (o *BTPublicationItemParams) SetMimeType(v string) {
	o.MimeType = &v
}

// GetPartId returns the PartId field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetPartId() string {
	if o == nil || o.PartId == nil {
		var ret string
		return ret
	}
	return *o.PartId
}

// GetPartIdOk returns a tuple with the PartId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetPartIdOk() (*string, bool) {
	if o == nil || o.PartId == nil {
		return nil, false
	}
	return o.PartId, true
}

// HasPartId returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasPartId() bool {
	if o != nil && o.PartId != nil {
		return true
	}

	return false
}

// SetPartId gets a reference to the given string and assigns it to the PartId field.
func (o *BTPublicationItemParams) SetPartId(v string) {
	o.PartId = &v
}

// GetPartName returns the PartName field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetPartName() string {
	if o == nil || o.PartName == nil {
		var ret string
		return ret
	}
	return *o.PartName
}

// GetPartNameOk returns a tuple with the PartName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetPartNameOk() (*string, bool) {
	if o == nil || o.PartName == nil {
		return nil, false
	}
	return o.PartName, true
}

// HasPartName returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasPartName() bool {
	if o != nil && o.PartName != nil {
		return true
	}

	return false
}

// SetPartName gets a reference to the given string and assigns it to the PartName field.
func (o *BTPublicationItemParams) SetPartName(v string) {
	o.PartName = &v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetPartNumber() string {
	if o == nil || o.PartNumber == nil {
		var ret string
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetPartNumberOk() (*string, bool) {
	if o == nil || o.PartNumber == nil {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasPartNumber() bool {
	if o != nil && o.PartNumber != nil {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *BTPublicationItemParams) SetPartNumber(v string) {
	o.PartNumber = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetRevision() string {
	if o == nil || o.Revision == nil {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetRevisionOk() (*string, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *BTPublicationItemParams) SetRevision(v string) {
	o.Revision = &v
}

// GetRevisionId returns the RevisionId field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetRevisionId() string {
	if o == nil || o.RevisionId == nil {
		var ret string
		return ret
	}
	return *o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetRevisionIdOk() (*string, bool) {
	if o == nil || o.RevisionId == nil {
		return nil, false
	}
	return o.RevisionId, true
}

// HasRevisionId returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasRevisionId() bool {
	if o != nil && o.RevisionId != nil {
		return true
	}

	return false
}

// SetRevisionId gets a reference to the given string and assigns it to the RevisionId field.
func (o *BTPublicationItemParams) SetRevisionId(v string) {
	o.RevisionId = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *BTPublicationItemParams) GetVersionId() string {
	if o == nil || o.VersionId == nil {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPublicationItemParams) GetVersionIdOk() (*string, bool) {
	if o == nil || o.VersionId == nil {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *BTPublicationItemParams) HasVersionId() bool {
	if o != nil && o.VersionId != nil {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *BTPublicationItemParams) SetVersionId(v string) {
	o.VersionId = &v
}

func (o BTPublicationItemParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DataType != nil {
		toSerialize["dataType"] = o.DataType
	}
	if o.DocumentId != nil {
		toSerialize["documentId"] = o.DocumentId
	}
	if o.ElementId != nil {
		toSerialize["elementId"] = o.ElementId
	}
	if o.EncodedConfiguration != nil {
		toSerialize["encodedConfiguration"] = o.EncodedConfiguration
	}
	if o.IsApplication != nil {
		toSerialize["isApplication"] = o.IsApplication
	}
	if o.IsAssembly != nil {
		toSerialize["isAssembly"] = o.IsAssembly
	}
	if o.IsBlob != nil {
		toSerialize["isBlob"] = o.IsBlob
	}
	if o.IsWholePartStudio != nil {
		toSerialize["isWholePartStudio"] = o.IsWholePartStudio
	}
	if o.MimeType != nil {
		toSerialize["mimeType"] = o.MimeType
	}
	if o.PartId != nil {
		toSerialize["partId"] = o.PartId
	}
	if o.PartName != nil {
		toSerialize["partName"] = o.PartName
	}
	if o.PartNumber != nil {
		toSerialize["partNumber"] = o.PartNumber
	}
	if o.Revision != nil {
		toSerialize["revision"] = o.Revision
	}
	if o.RevisionId != nil {
		toSerialize["revisionId"] = o.RevisionId
	}
	if o.VersionId != nil {
		toSerialize["versionId"] = o.VersionId
	}
	return json.Marshal(toSerialize)
}

type NullableBTPublicationItemParams struct {
	value *BTPublicationItemParams
	isSet bool
}

func (v NullableBTPublicationItemParams) Get() *BTPublicationItemParams {
	return v.value
}

func (v *NullableBTPublicationItemParams) Set(val *BTPublicationItemParams) {
	v.value = val
	v.isSet = true
}

func (v NullableBTPublicationItemParams) IsSet() bool {
	return v.isSet
}

func (v *NullableBTPublicationItemParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTPublicationItemParams(val *BTPublicationItemParams) *NullableBTPublicationItemParams {
	return &NullableBTPublicationItemParams{value: val, isSet: true}
}

func (v NullableBTPublicationItemParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTPublicationItemParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
